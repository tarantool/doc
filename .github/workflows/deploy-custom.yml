name: Custom-deploy-branch

on:
  workflow_dispatch:
    inputs:
      env_name:
        description: 'Enter unique name (version) of deployment'
        required: True
      cartridge:
        description: 'Cartridge branch or commit'
        required: false
      cartridge_cli:
        description: "Cartridge-cli branch or commit"
        required: false
      grafana:
        description: "Grafana branch or commit"
        required: false
      luatest:
        description: "Luatest branch or commit"
        required: false
      metrics:
        description: "Metrics branch or commit"
        required: false
      k8s_operator:
        description: "Kubernetes branch or commit"
        required: false
      cpp_driver:
        description: "Cpp driver branch or commit"
        required: false

jobs:
  custom-deploy-branch:
    runs-on: ubuntu-latest
    container: tarantool/doc-builder:fat-4.1
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION}}
      S3_ENDPOINT_URL: ${{secrets.S3_ENDPOINT_URL}}
      S3_UPLOAD_PATH: ${{secrets.S3_UPLOAD_PATH}}
      TARANTOOL_UPDATE_KEY: ${{secrets.TARANTOOL_UPDATE_KEY}}
      TARANTOOL_UPDATE_URL: ${{secrets.TARANTOOL_DEVELOP_UPDATE_URL}}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Pull submodules
        run: |
          git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
          git fetch --recurse-submodules

      - name: Update inputs
        run: |
          echo "BRANCH_NAME=${{github.event.inputs.env_name}}" >> $GITHUB_ENV
          echo "workaround until actions/runner#655 is fixed"
          echo "INPUT_CARTRIDGE=${{github.event.inputs.cartridge}}" >> $GITHUB_ENV
          echo "INPUT_CARTRIDGE_CLI=${{github.event.inputs.cartridge_cli}}" >> $GITHUB_ENV
          echo "INPUT_GRAFANA=${{github.event.inputs.grafana}}" >> $GITHUB_ENV
          echo "INPUT_LUATEST=${{github.event.inputs.luatest}}" >> $GITHUB_ENV
          echo "INPUT_METRICS=${{github.event.inputs.metrics}}" >> $GITHUB_ENV
          echo "INPUT_K8S_OPERATOR=${{github.event.inputs.k8s_operator}}" >> $GITHUB_ENV
          echo "INPUT_CPP_DRIVER=${{github.event.inputs.cpp_driver}}" >> $GITHUB_ENV

      - name: Start dev server deployment
        uses: bobheadxi/deployments@v1.3.0
        id: deployment
        with:
          step: start
          token: ${{secrets.GITHUB_TOKEN}}
          env: ${{env.BRANCH_NAME}}
          ref: ${{github.head_ref}}

      - run: cmake .
      - run: make pull-modules
      - run: make build-modules
      - run: make json
      - run: make json-ru
      - run: curl ${{secrets.WAKEUP_URL}} --connect-timeout 300 --retry 3 --retry-delay 30 >> /dev/null
      - run: bash upload_output.sh

      - name: update deployment status
        uses: bobheadxi/deployments@v1.3.0
        with:
          step: finish
          token: ${{secrets.GITHUB_TOKEN}}
          status: ${{job.status}}
          deployment_id: ${{steps.deployment.outputs.deployment_id}}
          env_url: ${{secrets.TARANTOOL_HOST}}/doc/${{env.BRANCH_NAME}}
