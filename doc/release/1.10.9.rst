Date: 2020-12-30 Tag: 1.10.9-0-g720ffdd23

Overview
--------

1.10.9 is the next stable release in the `long-term support (LTS)
version <https://www.tarantool.io/en/doc/1.10/dev_guide/release_management/#release-policy>`__
1.10.x release series. The label “stable” means there are 1.10.x-based
applications running in production for quite a while without known
crashes, incorrect results or other showstopper bugs.

This release introduces one improvement and resolves roughly 7 issues
since the 1.10.8 version.

Compatibility
-------------

Tarantool 1.10.x is backward compatible with Tarantool 1.9.x in binary
data layout, client-server protocol and replication protocol. Please
`upgrade <https://www.tarantool.io/en/doc/1.10/book/admin/upgrades/>`__
using the ``box.schema.upgrade()`` procedure to unlock all the new
features of the 1.10.x series.

Functionality added or changed
------------------------------

Build
~~~~~

-   Deploy packages for Fedora 32 (gh-4966).
-   Deploy packages for Debian Bullseye (gh-5638).

Misc
~~~~

-   Don’t start an ‘example’ instance after installing tarantool
    (gh-4507).

    Before this release tarantool package for Debian and Ubuntu used to
    automatically enable and start an ‘example’ instance, which would
    listen on the TCP port ``3301``. Since this release the instance file
    is installed to ``/etc/tarantool/instances.available/example.lua``,
    but isn’t enabled by default and not started anymore. You can enable
    and start it with the following commands:

   ..   code:: bash

        ln -s /etc/tarantool/instances.available/example.lua \
            /etc/tarantool/instances.enabled/example.lua
        systemctl start tarantool@example

    Existing configuration will not be updated automatically at package
    update. If you don’t the need example instance, you can stop and
    disable it with the following commands:

   ..   code:: bash

        systemctl stop tarantool@example
        rm /etc/tarantool/instances.enabled/example.lua

Bugs fixed
----------

Core
~~~~

-   ``fiber.cond:wait()`` now correctly throws an error when a fiber is
    cancelled, instead of ignoring the timeout and returning without any
    signs of an error (gh-5013).
-   Fixed a memory corruption issue, which was most visible on macOS, but
    could affect any system (gh-5312).
-   A dynamic module now gets correctly unloaded from memory in case of
    an attempt to load a non-existing function from it (gh-5475).
-   The fiber region (the box region) won’t be invalidated on a read-only
    transaction (gh-5427, gh-5623).

LuaJIT
~~~~~~

-   Dispatching ``__call`` metamethod no longer causes address clashing
    (gh-4518, gh-4649).
-   Fixed a false positive panic when yielding in debug hook (gh-5649).

Lua
~~~

-   An attempt to use a ``net.box`` connection which is not established
    yet now results in a correctly reported error (gh-4787).
-   Fixed a hang which occured when ``tarantool`` ran a user script with
    the ``-e`` option and this script exited with an error (like with
    ``tarantool -e 'assert(false)'``) (gh-4983).
