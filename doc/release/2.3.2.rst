Tarantool 2.3.2
===============

Date: 2020-04-20 Tag: 2.3.2-1-g9be641b

Overview
--------

2.3.2 is the first stable version of the 2.3 release series. The label
stable means we have all planned features implemented and we see no
high-impact issues.

This release resolves roughly 39 issues since the latest beta version.
There may be bugs in less common areas, please feel free to file an
issue at `GitHub <https://github.com/tarantool/tarantool/issues>`__.

Please note, this release contains **no new features**.

Compatibility
-------------

Tarantool 2.x is backward compatible with Tarantool 1.10.x in binary
data layout, client-server protocol and replication protocol.

Please
`upgrade <https://www.tarantool.io/en/doc/2.3/book/admin/upgrades/>`__
using the box.schema.upgrade() procedure to unlock all the new features
of the 2.x series.

Bugs fixed
----------

Core
~~~~

-   ``fiber.storage`` is cleaned between requests, and can be used as a
    request-local storage. Previously ``fiber.storage`` could contain
    some old values in the beginning of an iproto request execution, and
    it needed to be nullified manually. Now the cleanup is unneeded
    (gh-4662).
-   ``tuple``/``space``/``index``:``update()``/``upsert()`` were fixed
    not to turn a value into an infinity when a float value was added to
    or subtracted from a float column and exceeded the float value range
    (gh-4701).
-   Fix potential execution abort when operating the system runs under
    heavy memory load (gh-4722).
-   Make RTREE indexes handle the out of memory error: before this fix,
    OOM during the recovery of an RTREE index resulted in segmentation
    fault (gh-4619).
-   Fix the error message returned on using an already dropped sequence
    (gh-4753).
-   Add cancellation guard to avoid WAL thread stuck (gh-4127).
-   Fix execution abort when ``memtx_memory`` and ``vinyl_memory`` are
    set to more than 4398046510080 bytes. Now an error message is
    returned (gh-4705).
-   Add Lua output format support for ``box.session.push()`` (gh-4686).

Replication
~~~~~~~~~~~

-   Fix rebootstrap procedure not working in case replica itself is
    listed in ``box.cfg.replication`` (gh-4759).
-   Fix possible user password leaking via replication logs (gh-4493).
-   Refactor vclock map to be exactly 4 bytes in size to fit all 32
    replicas regardless of the compiler used
    (https://github.com/tarantool/tarantool/commit/e5679980aa5f813553a95ab7d31f111dd0893df6).
-   Fix crash when the replication applier rollbacks a transaction
    (gh-4730, gh-4776).
-   Fix segmentation fault on master side when one of the replicas
    transitions from anonymous to normal (gh-4731).
-   Local space operations are now counted in 0th vclock component. Every
    instance may have its own 0-th vclock component not matching others’.
    Local space operations are not replicated at all, even as NOPs
    (gh-4114).
-   Gc consumers are now ordered by their vclocks and not by vclock
    signatures. Only the WALS that contain no entries needed by any of
    the consumers are deleted (gh-4114).

Lua
~~~

-   json: ``:decode()`` doesn’t spoil instance’s options with per-call
    ones (when it is called with the second argument) (gh-4761).
-   Handle empty input for ``uri.format()`` properly (gh-4779).
-   ``os.environ()`` is now changed when ``os.setenv()`` is called
    (gh-4733).
-   ``netbox.self:call/eval()`` now returns the same types as
    ``netbox_connection:call``/``eval``. Previously it could return a
    tuple or ``box.error`` cdata (gh-4513).
-   ``box.tuple.*`` namespace is cleaned up from private functions.
    ``box.tuple.is()`` description is added to documentation (gh-4684).
-   ``tarantoolctl rocks search``: fix the ``--all`` flag (gh-4529).
-   ``tarantoolctl rocks remove``: fix the ``--force`` flag (gh-3632).
-   libev: backport fix for listening for more then 1024 file descriptors
    on Mac OS (gh-3867).

SQL
~~~

-   Fix ``box.stat()`` behavior: now it collects statistics on the
    ``PREPARE`` and ``EXECUTE`` methods as expected (gh-4756).
-   Add an empty body to the ``UNPREPARE`` IProto response (gh-4769).
-   Reset all the placeholders’ bound values after execution of a
    prepared statement (gh-4825).
-   The inserted values are inserted in the order in which they are given
    in case of INSERT into space with autoincrement (gh-4256).

HTTP client
~~~~~~~~~~~

-   When building Tarantool with bundled ``libcurl``, link it with the
    ``c-ares`` library by default (gh-4591).

LuaJIT
~~~~~~

-   ``__pairs``/``__ipairs`` metamethods handling is removed since we
    faced the issues with the backward compatibility between Lua 5.1 and
    Lua 5.2 within Tarantool modules as well as other third party code
    (gh-4770).

-   Introduce ``luajit-gdb.py`` extension with commands for inspecting
    LuaJIT internals. The extension obliges one to provide gdbinfo for
    ``libluajit``, otherwise loading fails. The extension provides the
    following commands:

   -  ``lj-arch`` dumps values of LJ_64 and LJ_GC64 macro definitions
   -  ``lj-tv`` dumps the type and GCobj info related to the given
      TValue
   -  ``lj-str`` dumps the contents of the given GCstr
   -  ``lj-tab`` dumps the contents of the given GCtab
   -  ``lj-stack`` dumps Lua stack of the given lua_State
   -  ``lj-state`` shows current VM, GC and JIT states
   -  ``lj-gc`` shows current GC stats

-   Fix string to number conversion: current implementation respects the
    buffer length (gh-4773).

-  “FFI sandwich”(*) detection is introduced. If sandwich is detected
    while trace recording the recording is aborted. The sandwich detected
    while mcode execution leads to the platform panic.

-   luaJIT_setmode call is prohibited while mcode execution and leads to
    the platform panic.

(*) The following stack mix is called FFI sandwich:

    Lua-FFI -> C routine -> Lua-C API -> Lua VM

This sort of re-entrancy is explicitly not supported by LuaJIT compiler.
For more info see gh-4427.

Vinyl
~~~~~

-   Fix assertion fault due to triggered dump process during secondary
    index build (gh-4810).

Misc
~~~~

-   Fix crashes at attempts to use ``-e`` and ``-l`` command line options
    concatenated with their values, like this: ``-eprint(100)``
    (gh-4775).
-   Fix inability to upgrade from 2.1 if there was an automatically
    generated sequence (gh-4771).
-   Update ``libopenssl`` version to 1.1.1f since the previous one was
    EOLed (gh-4830).

Building from sources
^^^^^^^^^^^^^^^^^^^^^

-   Update the ``decNumber`` library to silence the build warning
    produced on too long integer constant
    (https://github.com/tarantool/tarantool/commit/aab03a735c7a215b4371ef834f7d08432b1bf0f7).
-   Fix static build (``-DBUILD_STATIC=ON``) when ``libunwind`` depends
    on ``liblzma`` (gh-4551).
