Tarantool 2.4.2
===============

Releases: https://github.com/tarantool/tarantool/releases
Date: 2020-07-17 Tag: 2.4.2-1-g3f00d29

Overview
--------

2.4.2 is the first stable version of the 2.4 release series. The label
stable means we have all planned features implemented and we see no
high-impact issues.

This release resolves roughly 32 issues since the latest beta version.
There may be bugs in less common areas, please feel free to file an
issue at `GitHub <https://github.com/tarantool/tarantool/issues>`_.

Compatibility
-------------

Tarantool 2.x is backward compatible with Tarantool 1.10.x in binary
data layout, client-server protocol and replication protocol.

Please
`upgrade <https://www.tarantool.io/en/doc/2.3/book/admin/upgrades/>`_
using the box.schema.upgrade() procedure to unlock all the new features
of the 2.x series.

Functionality added or changed
------------------------------

Core
~~~~

-   :doc:`/reference/reference_lua/box_session/push` parameter ``sync``
    is deprecated. A warning is printed when the sync is used, but it still works.
    It is removed in the next version (:tarantool-issue:`4689`).

Misc
~~~~

-   Don’t start :ref:`‘example’ instance <creating-db-locally>` after
    installing Tarantool (:tarantool-issue:`4507`).

    Before this release tarantool package for Debian and Ubuntu
    automatically enable and start ‘example’ instance, which listens on
    the TCP port 3301. Starting from this release the instance file is
    installed to /etc/tarantool/instances.available/example.lua, but is
    not enabled by default and not started anymore. One may perform the
    following actions to enable and start it:

    ..  code-block:: bash


        ln -s /etc/tarantool/instances.available/example.lua \
            /etc/tarantool/instances.enabled/example.lua
        systemctl start tarantool@example

    Existing configuration will not be updated automatically at package
    update, so manual actions are required to stop and disable the
    instance (if it is not needed, of course):

    ..  code-block:: bash


        systemctl stop tarantool@example
        rm /etc/tarantool/instances.enabled/example.lua

Bugs fixed
----------


Core
~~~~

-   Fixed a bug in altering a normal index to a functional one (n/a).
-   Fixed a couple of internal symbols dangling in global namespace \_G
    (:tarantool-issue:`4812`).
-   Fixed bug when on_shutdown triggers were not executed after EOF
    (:tarantool-issue:`4703`).
-   Fixed inability to handle ULL constants in Lua mode console
    (:tarantool-issue:`4682`).
-   Fixed a bug in C module reloading (:tarantool-issue:`4945`).
-   Fixed assert outdated due to multikey index arrival (:tarantool-issue:`5132`).
-   Fixed confusing implicit requirements for tuple fields (:tarantool-issue:`5027`).
-   Added needed key validation to space_before_replace (:tarantool-issue:`5017`).
-   Fixed check of index field map size which led to crash (:tarantool-issue:`5084`).
-   Fixed NULL pointer dereference when merger is called via the binary
    protocol (say, via net.box) (:tarantool-issue:`4954`).
-   Fix wrong mpsgpack extension type in an error message at decoding
    (:tarantool-issue:`5017`).
-   Fixed crash when invalid JSON was used in update() (:tarantool-issue:`5135`).

Replication
~~~~~~~~~~~

-   Fixed possible ER_TUPLE_FOUND error when bootstrapping replicas in an
    1.10/2.1.1 cluster (:tarantool-issue:`4924`).
-   Fixed tx boundary check for half-applied txns (:tarantool-issue:`5125`).
-   Fixed replication tx boundaries after local space rework (:tarantool-issue:`4928`).

Lua
~~~

-   Added format string usage to form a CustomError message (:tarantool-issue:`4903`).
    Read more: :doc:`/reference/reference_lua/box_error/custom_type`.
-   Fixed error while closing socket.tcp_server socket (:tarantool-issue:`4087`).
-   Extended box.error objects reference counter to 64 bit to prevent
    possible overflow (:tarantool-issue:`4902`).

SQL
~~~

-   Fix wrong order of rows as a result of query containing column of
    SCALAR type in ORDER BY clause (:tarantool-issue:`4697`).
-   Fix bug with the display of collation for scalar fields in <SELECT>
    result, when ``sql_full_metadata`` is enabled (:tarantool-issue:`4755`).
-   Block using HASH indexes in SQL since scheduler is unable to use it
    properly (:tarantool-issue:`4659`).
-   Fixed races and corner cases in box (re)configuration (:tarantool-issue:`4231`).

Vinyl
~~~~~

-   Fixed crash during compaction due to tuples with size exceeding
    vinyl_max_tuple_size setting (:tarantool-issue:`4864`).
-   Fixed crash during recovery of vinyl index due to the lack of file
    descriptors (:tarantool-issue:`4805`).
-   Fixed crash during executing upsert changing primary key in debug
    mode (:tarantool-issue:`5005`).
-   Fixed crash due to triggered dump process during secondary index
    creation (:tarantool-issue:`5042`).
-   Fixed crash/deadlock (depending on build type) during dump process
    scheduling and concurrent DDL operation (:tarantool-issue:`4821`).
-   Fixed crash during read of prepared but not committed statement
    (:tarantool-issue:`3395`).
-   Fixed squashing set and arithmetic upsert operations (:tarantool-issue:`5106`).
-   Create missing folders for vinyl spaces and indexes if needed to
    avoid confusing fails of tarantool started from backup (:tarantool-issue:`5090`).
-   Fixed crash during squash of many (more than 4000) upserts modifying
    the same key (:tarantool-issue:`4957`).

Memtx
~~~~~

-   Fixed concurrent replaces on index building. Tuples are now
    referenced on all needed execution paths (:tarantool-issue:`4973`).
