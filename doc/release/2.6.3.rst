Tarantool 2.6.3
===============

Released on 2021-04-21.

*   Release :tarantool-release:`2.6.3`.
*   Tagged ``2.6.3-0-gcd487a2``

Overview
--------

2.6.3 is the second :doc:`stable </release/policy>`
version of the 2.6 release series. It introduces 15 improvements and
resolves 28 bugs since version :doc:`2.6.2 </release/2.6.2>`.

The "stable" label means that we have all planned features implemented
and we see no high-impact issues. However, if you encounter an issue,
feel free to `report
it <https://github.com/tarantool/tarantool/issues>`__ on GitHub.


Compatibility
-------------

Tarantool 2.x is backward compatible with Tarantool 1.10.x in the binary
data layout, client-server protocol, and replication protocol.

Please
`upgrade <https://www.tarantool.io/en/doc/latest/book/admin/upgrades/>`__
using the ``box.schema.upgrade()`` procedure to unlock all the new
features of the 2.x series.


Functionality added or changed
------------------------------

Core
~~~~

-   Introduced the concept of WAL queue and the new configuration option
    ``wal_queue_max_size``, measured in bytes.
    The default value is 16 Mb.
    The option helps limit the pace at which replica submits new transactions to the WAL.
    The limit is checked every time a transaction from the master is
    submitted to the replica’s WAL.
    The space taken by the transaction is considered empty once it’s successfully written
    (:tarantool-issue:`5536`).


Replication
~~~~~~~~~~~

-   Introduced the ``box.ctl.promote()`` function and the concept of manual elections
    (enabled with ``election_mode='manual'``) (:tarantool-issue:`3055`).

    Once the instance is in the ``manual`` election mode,
    it acts like a ``voter`` most of the time,
    but may trigger elections and become a leader when ``box.ctl.promote()`` is called.
    When ``election_mode ~= 'manual'``,
    ``box.ctl.promote()`` replaces ``box.ctl.clear_synchro_queue()``,
    which is now deprecated.


Build
~~~~~

-   Tarantool build infrastructure now requires CMake version 3.1 or later.

-   Binary packages for Fedora 33 are now available (:tarantool-issue:`5502`) .

-   Binary packages for CentOS 6 and Debian Jessie won't be published since this version.

-   RPM and DEB packages no longer have the ``autotools`` dependency (follows up
    :tarantool-issue:`4968`).

-   Regular testing on MacOS 10.13 has been disabled, effectively stopping
    the support of this version.

-   The built-in ``zstd`` is upgraded from v1.3.3 to v1.4.8
    (part of :tarantool-issue:`5502`).

-   SMTP and SMTPS protocols are now enabled in the bundled ``libcurl`` (:tarantool-issue:`4559`).

-   The ``libcurl`` headers are now shipped to system path ``${PREFIX}/include/tarantool``
    when ``libcurl`` is included as a bundled library or in a static build
    (:tarantool-issue:`4559`).


Testing
~~~~~~~

-   Tarantool CI/CD has migrated to GitHub Actions (:tarantool-issue:`5662`).

-   Single node Jepsen testing now runs on per-push basis (:tarantool-issue:`5736`).

-   A self-sufficient LuaJIT testing environment has been implemented.
    As a result, LuaJIT build system is now partially ported to CMake and all testing
    machinery is enclosed within the `tarantool/luajit <https://github.com/tarantool/luajit/>`__
    repository (:tarantool-issue:`4862`, :tarantool-issue:`5470`).

-   Python 3 is now the default in the test infrastructure (:tarantool-issue:`5652`).


Bugs fixed
----------

Core
~~~~

-   The ``lbox_ctl_is_recovery_finished()`` function no longer returns ``true``
    when recovery is still in progress.

-   A memory corruption bug has been fixed in netbox.
    The memory of a struct error which is still used will no longer be freed prematurely
    because of the wrong order of ``ffi.gc`` and ``ffi.cast`` calls.

-   Relay can no longer time out while a replica is joining or syncing with the master.
    (:tarantool-issue:`5762`).

-   An issue with missing "path" value of index schema fetched by netbox has been fixed
    (:tarantool-issue:`5451`).

-   Extensive usage of ``uri`` and ``uuid`` modules with debug log level
    no longer leads to crashes or corrupted results of the functions from these
    modules.
    Same problem is resolved for using these modules from the callbacks passed to ``ffi.gc()``,
    and for some functions from the modules ``fio``, ``box.tuple``, and ``iconv``
    (:tarantool-issue:`5632`).

-   The new ``wal_cleanup_delay`` option can prevent early cleanup of
    ``*.xlog`` files, needed by replicas.
    Such cleanup used to result in a ``XlogGapError`` (:tarantool-issue:`5806`).

-   Appliers will no longer cause errors with ``Unknown request type 40`` during
    a final join when the master has synchronous spaces (:tarantool-issue:`5566`).

-   Added memtx MVCC tracking of read gaps which fixes the problem of phantom reads
    (:tarantool-issue:`5628`).

-   Fixed the wrong result of using ``space:count()`` with memtx MVCC (:tarantool-issue:`5972`).

-   Fixed the dirty read after restart while using MVCC with synchronous
    replication (:tarantool-issue:`5973`).


Replication
~~~~~~~~~~~

-   Fixed an issue with an applier hanging on a replica after failing to process
    a ``CONFIRM`` or ``ROLLBACK`` message coming from a master.

-   Fixed the issue where master did not send some rows to an anonymous replica
    which had fallen behind and was trying to register.

-   Fixed the bug when a synchronous transaction could be confirmed and
    visible on a replica, but then not confirmed or invisible again after
    restart. It was more likely to happen on memtx spaces with
    ``memtx_use_mvcc_engine`` enabled (:tarantool-issue:`5213`).

-   Fixed the recovery of a rolled back multi-statement synchronous transaction
    which could lead to the transaction being applied partially, and to
    recovery errors. It happened in case the transaction worked with
    non-sync spaces (:tarantool-issue:`5874`).

-   Fixed a bug in synchronous replication when rolled back transactions
    could reappear after reconnecting a sufficiently old instance
    (:tarantool-issue:`5445`).


Swim
~~~~

-   Fixed an issue where ``<swim_instance>:broadcast()`` did not work on non-local
    addresses and spammed "Permission denied" errors to the log.
    After instance termination it could return a non-0 exit code even if there
    were no errors in the script, and then spam the same error again
    (:tarantool-issue:`5864`).

-   Fixed the crash on attempts to call ``swim:member_by_uuid()`` with no
    arguments or with ``nil``/``box.NULL`` (:tarantool-issue:`5951`).

-   Fixed the crash on attempts to pass an object of a wrong type to
    ``__serialize`` method of a swim member in Lua (:tarantool-issue:`5952`).

Lua
~~~

-   Fixed the `-e` option, when ``tarantool`` used to enter the interactive mode when
    stdin is a TTY. Now, ``tarantool -e 'print"Hello"'`` doesn't enter the
    interactive mode, but just prints "Hello" and exits
    (:tarantool-issue:`5040`).

-   Fixed a leak of a tuple object in ``key_def:compare_with_key(tuple, key)``,
    which had occurred when the serialization of the key failed (:tarantool-issue:`5388`).


SQL
~~~

-   The string received by a user-defined C or Lua function will no longer be
    different from the string passed to the function. This could happen
    when the string passed from SQL had contained ``\\0``
    (:tarantool-issue:`5938`).

-   ``SQL SELECT`` or ``SQL UPDATE`` on ``UUID`` or ``DECIMAL`` field will not cause a
    SEGMENTATION FAULT anymore (:tarantool-issue:`5011`,
    :tarantool-issue:`5704`, :tarantool-issue:`5913`).

-   Fixed an issue with wrong results of ``SELECT`` with ``GROUP BY`` which occurred
    when one of the selected values was ``VARBINARY`` and not directly obtained from the space
    (:tarantool-issue:`5890`).

LuaJIT
~~~~~~

-   Fixed a double ``gc_cdatanum`` decrementing in LuaJIT platform metrics
    which occurred when a finalizer was set for a ``GCсdata`` object (:tarantool-issue:`5820`).


Build
~~~~~

-   Fix building on FreeBSD (incomplete definition of type ``struct
    sockaddr``)
    (:tarantool-issue:`5748`).

-   The already downloaded static build dependencies will not be fetched repeatedly
    (:tarantool-issue:`5761`).

-   Recovering with ``force_recovery`` option now deletes vylog files which are newer than the snapshot.
    It helps an instance recover after incidents during a checkpoint (:tarantool-issue:`5823`).

-   Fixed the ``libcurl`` configuring when Tarantool itself has been configured with
    ``cmake3`` command and there was no ``cmake`` command in the ``PATH``
    (:tarantool-issue:`5955`).

    This affects building Tarantool from sources with bundled ``libcurl`` (it
    is the default mode).
