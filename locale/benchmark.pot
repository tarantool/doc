# SOME DESCRIPTIVE TITLE.
# Copyright (C) 
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 1.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-09-20 15:07+0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../benchmark.rst:40
msgid "Tarantool - Benchmarks (YCSB)"
msgstr ""

#: ../benchmark.rst:None
msgid "There are lies, then there is statistics, but the first place in misrepresenting the truth is undoubtedly owned by benchmarks.Comparing Tarantool with other systems, apples to apples, is not strictly correct: the server networking subsystem is fully asynchronous and it's possible to proxy all clients via a single socket. In this case, responses to queries are sent as soon as they are ready. Most production applications use asynchronous and batched I/O with Tarantool.As long as the overhead of system calls and context switches is the single largest contributor to the cost of serving a single request, use of batched and multiplexed I/O produces an order of magnitude better results, when compared with traditional multi-threaded workloads. A tool we developed for our own use, nosqlbench, utilizes this approach at full.However, to compare with the rest of the world, a standardized benchmarking kit is more appropriate. This is why Yahoo! Cloud Serving Benchmark |copy| was used to produce the charts below. Since YCSB was developed to compare cloud key/value servers, it provides a very narrow view at performance of a tested server. For example, performance of secondary keys or overhead of locking (which Tarantool doesn't have) is not tested at all."
msgstr ""

#: ../benchmark.rst:50
msgid "There are lies, then there is statistics, but the first place in misrepresenting the truth is undoubtedly owned by benchmarks."
msgstr ""

#: ../benchmark.rst:53
msgid "Comparing Tarantool with other systems, apples to apples, is not strictly correct: the server networking subsystem is fully asynchronous and it's possible to proxy all clients via a single socket. In this case, responses to queries are sent as soon as they are ready. Most production applications use asynchronous and batched I/O with Tarantool."
msgstr ""

#: ../benchmark.rst:59
msgid "As long as the overhead of system calls and context switches is the single largest contributor to the cost of serving a single request, use of batched and multiplexed I/O produces an order of magnitude better results, when compared with traditional multi-threaded workloads. A tool we developed for our own use, `nosqlbench <http://github.com/tarantool/nosqlbench>`_, utilizes this approach at full."
msgstr ""

#: ../benchmark.rst:66
msgid "However, to compare with the rest of the world, a standardized benchmarking kit is more appropriate. This is why `Yahoo! Cloud Serving Benchmark |copy| <http://github.com/brianfrankcooper/YCSB>`_ was used to produce the charts below. Since YCSB was developed to compare cloud key/value servers, it provides a very narrow view at performance of a tested server. For example, performance of secondary keys or overhead of locking (which Tarantool doesn't have) is not tested at all."
msgstr ""

#: ../benchmark.rst:78
msgid "Yahoo! Cloud Serving Benchmark (c) consists of two components:"
msgstr ""

#: ../benchmark.rst:80
msgid "the client, which generates the load according to a workload type and analyzes latency and throughput,"
msgstr ""

#: ../benchmark.rst:82
msgid "workload files, which define a single benchmark by describing the size of the data set, the total amount of requests, the ratio of read and write queries."
msgstr ""

#: ../benchmark.rst:86
msgid "There are 6 major workload types in YCSB:"
msgstr ""

#: ../benchmark.rst:88
msgid "workload **A**, 50/50 update/read ratio, size of the data set is 2 000 000 key/value pairs,"
msgstr ""

#: ../benchmark.rst:90
msgid "workload **B**, 5/95 update/read ratio, the same size of the data set,"
msgstr ""

#: ../benchmark.rst:91
msgid "workload **C** is 100% read-only,"
msgstr ""

#: ../benchmark.rst:92
msgid "workload **D** 5/95 insert/read ratio, the read load is skewed towards the end of the key range,"
msgstr ""

#: ../benchmark.rst:94
msgid "workload **E**, 5/95 ratio of insert/reads over a range of 10 records,"
msgstr ""

#: ../benchmark.rst:95
msgid "workload **F**, 95% read/modify/write, 5% read."
msgstr ""

#: ../benchmark.rst:97
msgid "For additional information on YCSB and workload types, please visit `YCSB official page on Github <http://github.com/brianfrankcooper/YCSB>`_."
msgstr ""

#: ../benchmark.rst:100
msgid "All charts below were measured using 5M queries per test, averaged over 8 consecutive test runs."
msgstr ""

#: ../benchmark.rst:103
msgid "Configuration files for the tested systems can be found `on its Github page <https://github.com/bigbes/autoycsb/tree/master/configs>`_."
msgstr ""

