
msgid "Module `index`"
msgstr ""

msgid "A space iterator"
msgstr ""

msgid "Controls how to iterate over tuples in an index. Different index types support different iterator types. For example, one can start iteration from a particular value (request key) and then retrieve all tuples where keys are greater or equal (= GE) to this key."
msgstr ""

msgid "If iterator type is not supported by the selected index type, iterator constructor must fail with ER_UNSUPPORTED. To be selectable for primary key, an index must support at least ITER_EQ and ITER_GE types."
msgstr ""

msgid "NULL value of request key corresponds to the first or last key in the index, depending on iteration direction. (first key for GE and GT types, and last key for LE and LT). Therefore, to iterate over all tuples in an index, one can use ITER_GE or ITER_LE iteration types with start key equal to NULL. For ITER_EQ, the key must not be NULL."
msgstr ""

msgid "key == x ASC order"
msgstr ""

msgid "key == x DESC order"
msgstr ""

msgid "all tuples"
msgstr ""

msgid "key < x"
msgstr ""

msgid "key <= x"
msgstr ""

msgid "key >= x"
msgstr ""

msgid "key > x"
msgstr ""

msgid "all bits from x are set in key"
msgstr ""

msgid "at least one x's bit is set"
msgstr ""

msgid "all bits are not set"
msgstr ""

msgid "key overlaps x"
msgstr ""

msgid "tuples in distance ascending order from specified point"
msgstr ""

msgid "Allocate and initialize iterator for space_id, index_id."
msgstr ""

msgid "The returned iterator must be destroyed by :ref:`box_iterator_free<c_api-box_index-box_iterator_free>`."
msgstr ""

msgid "Parameters"
msgstr ""

msgid "space identifier"
msgstr ""

msgid "index identifier"
msgstr ""

msgid ":ref:`iterator_type<c_api-box_index-iterator_type>`"
msgstr ""

msgid "encode key in MsgPack Array format ([part1, part2, ...])"
msgstr ""

msgid "the end of encoded ``key``"
msgstr ""

msgid "Returns"
msgstr ""

msgid "NULL on error (check :ref:`box_error_last <c_api-error-box_error_last>`)"
msgstr ""

msgid "iterator otherwise"
msgstr ""

msgid "See also :ref:`box_iterator_next<c_api-box_index-box_iterator_next>`, :ref:`box_iterator_free<c_api-box_index-box_iterator_free>`"
msgstr ""

msgid "Retrieve the next item from the ``iterator``."
msgstr ""

msgid "an iterator returned by :ref:`box_index_iterator <c_api-box_index-box_index_iterator>`"
msgstr ""

msgid "output argument. result a tuple or NULL if there is no more data."
msgstr ""

msgid "-1 on error (check :ref:`box_error_last <c_api-error-box_error_last>`)"
msgstr ""

msgid "0 on success. The end of data is not an error."
msgstr ""

msgid "Destroy and deallocate iterator."
msgstr ""

msgid "Determine a direction of the given iterator type: -1 for REQ, LT, LE, and +1 for all others."
msgstr ""

msgid "Return the number of element in the index."
msgstr ""

msgid ">= 0 otherwise"
msgstr ""

msgid "Return the number of bytes used in memory by the index."
msgstr ""

msgid "Return a random tuple from the index (useful for statistical analysis)."
msgstr ""

msgid "random seed"
msgstr ""

msgid "output argument. result a tuple or NULL if there is no tuples in space"
msgstr ""

msgid "See also: :doc:`/reference/reference_lua/box_index/random`"
msgstr ""

msgid "Get a tuple from index by the key."
msgstr ""

msgid "Please note that this function works much more faster than :doc:`/reference/reference_lua/box_index/select` or :ref:`box_index_iterator<c_api-box_index-box_index_iterator>` + :ref:`box_iterator_next<c_api-box_index-box_iterator_next>`."
msgstr ""

msgid "0 on success"
msgstr ""

msgid "See also: ``index_object.get()``"
msgstr ""

msgid "Return a first (minimal) tuple matched the provided key."
msgstr ""

msgid "-1 on error (check :ref:`box_error_last() <c_api-error-box_error_last>`)"
msgstr ""

msgid "See also: :doc:`/reference/reference_lua/box_index/min`"
msgstr ""

msgid "Return a last (maximal) tuple matched the provided key."
msgstr ""

msgid "See also: :doc:`/reference/reference_lua/box_index/max`"
msgstr ""

msgid "Count the number of tuple matched the provided key."
msgstr ""

msgid "See also: :ref:`index_object.count()<box_index-count>`"
msgstr ""

msgid "Return :ref:`key definition <capi-tuple_key_def>` for an index"
msgstr ""

msgid "Returned object is valid until the next yield."
msgstr ""

msgid "key definition on success"
msgstr ""

msgid "NULL on error"
msgstr ""

msgid "See also: :ref:`box_tuple_compare() <capi-tuple_box_tuple_compare>`,"
msgstr ""

msgid ":ref:`box_tuple_format_new() <capi-tuple_box_tuple_format_new>`"
msgstr ""

