
msgid "Instance configuration"
msgstr ""

msgid "For each Tarantool instance, you need two files:"
msgstr ""

msgid "[Optional] An :ref:`application file <app_server-launching_app>` with instance-specific logic. Put this file into the ``/usr/share/tarantool/`` directory."
msgstr ""

msgid "For example, ``/usr/share/tarantool/my_app.lua`` (here we implement it as a :ref:`Lua module <app_server-modules>` that bootstraps the database and exports ``start()`` function for API calls):"
msgstr ""

msgid "local function start()\n"
"    box.schema.space.create(\"somedata\")\n"
"    box.space.somedata:create_index(\"primary\")\n"
"    <...>\n"
"end\n"
"\n"
"return {\n"
"  start = start;\n"
"}"
msgstr ""

msgid "An :ref:`instance file <admin-instance_file>` with instance-specific initialization logic and parameters. Put this file, or a symlink to it, into the **instance directory** (see :ref:`instance_dir <admin-instance_dir>` parameter in ``tarantoolctl`` configuration file)."
msgstr ""

msgid "For example, ``/etc/tarantool/instances.enabled/my_app.lua`` (here we load ``my_app.lua`` module and make a call to ``start()`` function from that module):"
msgstr ""

msgid "#!/usr/bin/env tarantool\n"
"\n"
"box.cfg {\n"
"    listen = 3301;\n"
"}\n"
"\n"
"-- load my_app module and call start() function\n"
"-- with some app options controlled by sysadmins\n"
"local m = require('my_app').start({...})"
msgstr ""

msgid "Instance file"
msgstr ""

msgid "After this short introduction, you may wonder what an instance file is, what it is for, and how ``tarantoolctl`` uses it. After all, Tarantool is an application server, so why not start the application stored in ``/usr/share/tarantool`` directly?"
msgstr ""

msgid "A typical Tarantool application is not a script, but a daemon running in background mode and processing requests, usually sent to it over a TCP/IP socket. This daemon needs to be started automatically when the operating system starts, and managed with the operating system standard tools for service management -- such as ``systemd`` or ``init.d``. To serve this very purpose, we created **instance files**."
msgstr ""

msgid "You can have more than one instance file. For example, a single application in ``/usr/share/tarantool`` can run in multiple instances, each of them having its own instance file. Or you can have multiple applications in ``/usr/share/tarantool`` -- again, each of them having its own instance file."
msgstr ""

msgid "An instance file is typically created by a system administrator. An application file is often provided by a developer, in a Lua rock or an rpm/deb package."
msgstr ""

msgid "An instance file is designed to not differ in any way from a Lua application. It must, however, configure the database, i.e. contain a call to :doc:`box.cfg{} </reference/reference_lua/box_cfg>` somewhere in it, because it’s the only way to turn a Tarantool script into a background process, and ``tarantoolctl`` is a tool to manage background processes. Other than that, an instance file may contain arbitrary Lua code, and, in theory, even include the entire application business logic in it. We, however, do not recommend this, since it clutters the instance file and leads to unnecessary copy-paste when you need to run multiple instances of an application."
msgstr ""

msgid "`tarantoolctl` configuration file"
msgstr ""

msgid "While instance files contain instance configuration, the ``tarantoolctl`` configuration file contains the configuration that ``tarantoolctl`` uses to override instance configuration. In other words, it contains system-wide configuration defaults. If ``tarantoolctl`` fails to find this file with the method described in section :ref:`Starting/stopping an instance <admin-start_stop_instance>`, it uses default settings."
msgstr ""

msgid "Most of the parameters are similar to those used by :doc:`box.cfg{} </reference/reference_lua/box_cfg>`. Here are the default settings (possibly installed in ``/etc/default/tarantool`` or ``/etc/sysconfig/tarantool`` as part of Tarantool distribution -- see OS-specific default paths in :ref:`Notes for operating systems <admin-os_notes>`):"
msgstr ""

msgid "default_cfg = {\n"
"    pid_file  = \"/var/run/tarantool\",\n"
"    wal_dir   = \"/var/lib/tarantool\",\n"
"    memtx_dir = \"/var/lib/tarantool\",\n"
"    vinyl_dir = \"/var/lib/tarantool\",\n"
"    log       = \"/var/log/tarantool\",\n"
"    username  = \"tarantool\",\n"
"}\n"
"instance_dir = \"/etc/tarantool/instances.enabled\""
msgstr ""

msgid "where:"
msgstr ""

msgid "``pid_file``"
msgstr ""

msgid "Directory for the pid file and control-socket file; ``tarantoolctl`` will add “/instance_name” to the directory name."
msgstr ""

msgid "``wal_dir``"
msgstr ""

msgid "Directory for write-ahead .xlog files; ``tarantoolctl`` will add \"/instance_name\" to the directory name."
msgstr ""

msgid "``memtx_dir``"
msgstr ""

msgid "Directory for snapshot .snap files; ``tarantoolctl`` will add \"/instance_name\" to the directory name."
msgstr ""

msgid "``vinyl_dir``"
msgstr ""

msgid "Directory for vinyl files; ``tarantoolctl`` will add \"/instance_name\" to the directory name."
msgstr ""

msgid "``log``"
msgstr ""

msgid "The place where the application log will go; ``tarantoolctl`` will add \"/instance_name.log\" to the name."
msgstr ""

msgid "``username``"
msgstr ""

msgid "The user that runs the Tarantool instance. This is the operating-system user name rather than the Tarantool-client user name. Tarantool will change its effective user to this user after becoming a daemon."
msgstr ""

msgid "``instance_dir``"
msgstr ""

msgid "The directory where all instance files for this host are stored. Put instance files in this directory, or create symbolic links."
msgstr ""

msgid "The default instance directory depends on Tarantool's ``WITH_SYSVINIT`` build option: when ON, it is ``/etc/tarantool/instances.enabled``, otherwise (OFF or not set) it is ``/etc/tarantool/instances.available``. The latter case is typical for Tarantool builds for Linux distros with ``systemd``."
msgstr ""

msgid "To check the build options, say ``tarantool --version``."
msgstr ""

msgid "As a full-featured example, you can take `example.lua <https://github.com/tarantool/tarantool/blob/1.10/extra/dist/example.lua>`_ script that ships with Tarantool and defines all configuration options."
msgstr ""

