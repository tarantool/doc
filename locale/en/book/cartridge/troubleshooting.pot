# SOME DESCRIPTIVE TITLE.
# Copyright (C) 
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 2.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-12 15:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../doc/book/cartridge/troubleshooting.rst:4
msgid "Troubleshooting"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:6
msgid "First of all, see a similar `guide <https://www.tarantool.io/en/doc/latest/book/admin/troubleshoot/>`_ in the Tarantool manual. Below you can find other Cartridge-specific problems considered."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:11
msgid "Contents"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:14
msgid "Problems with replica"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:16
msgid "**Examples:**"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:18
msgid "``Missing .xlog file between LSN 5137088 {1: 240379, 2: 4750534, 5: 146175} and 5137379 {1: 240379, 2: 4750825, 5: 146175} which means that master lost one or more of their xlog files, please check it``"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:22
msgid "``Duplicate key exists in unique index \"primary\" in space \"T1\" with old tuple``"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:24
msgid "**Solution:**"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:26
msgid "If you have some replication conflicts and issues that you don't know how to deal with, try to rebootstrap the replica."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:29
msgid "**(!)** Make sure that you have your data safe on the master before rebootstrap."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:31
msgid "Stop the instance"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:32
msgid "Delete snapshots and xlogs"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:33
msgid "Preserve cluster-wide config (``config`` dir)"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:34
msgid "Restart the instance"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:37
msgid "Editing clusterwide configuration in WebUI returns an error"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:39
msgid "**Examples**:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:41
msgid "``NetboxConnectError: \"localhost:3302\": Connection refused``;"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:42
msgid "``Prepare2pcError: Instance state is OperationError, can't apply config in this state``."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:45
msgid "**The root problem**: all cluster instances are equal, and all of them store a copy of clusterwide configuration, which must be the same. If an instance degrades (can't accept new configuration) -- the quorum is lost. This prevents further configuration modifications to avoid inconsistency."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:50
msgid "But sometimes inconsistency is needed to repair the system, at least partially and temporarily. It can be achieved by disabling degraded instances."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:54
#: ../../doc/book/cartridge/troubleshooting.rst:117
#: ../../doc/book/cartridge/troubleshooting.rst:139
msgid "**Solution**:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:56
msgid "Connect to the console of the alive instance."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:58
msgid "tarantoolctl connect unix/:/var/run/tarantool/<app-name>.<instance-name>.control"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:62
msgid "Inspect what's going on."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:64
msgid "cartridge = require('cartridge')\n"
"report = {}\n"
"for _, srv in pairs(cartridge.admin_get_servers()) do\n"
"    report[srv.uuid] = {uri = srv.uri, status = srv.status, message = srv.message}\n"
"end\n"
"return report"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:73
msgid "If you're ready to proceed, run the following snippet. It'll disable all instances which are not healthy. After that, you can use the WebUI as usual."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:77
msgid "disable_list = {}\n"
"for uuid, srv in pairs(report) do\n"
"    if srv.status ~= 'healthy' then\n"
"       table.insert(disable_list, uuid)\n"
"    end\n"
"end\n"
"return cartridge.admin_disable_servers(disable_list)"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:87
msgid "When it's necessary to bring disabled instances back, re-enable them in a similar manner:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:90
msgid "cartridge = require('cartridge')\n"
"enable_list = {}\n"
"for _, srv in pairs(cartridge.admin_get_servers()) do\n"
"    if srv.disabled then\n"
"       table.insert(enable_list, srv.uuid)\n"
"    end\n"
"end\n"
"return cartridge.admin_enable_servers(enable_list)"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:104
msgid "An instance is stuck in the ConnectingFullmesh state upon restart"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:106
msgid "**Example**:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:112
msgid "**The root problem**: after restart, the instance tries to connect to all its replicas and remains in the ``ConnectingFullmesh`` state until it succeeds. If it can't (due to replica URI unavailability or for any other reason) -- it's stuck forever."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:119
msgid "Set the `replication_connect_quorum <https://www.tarantool.io/en/doc/latest/reference/configuration/#cfg-replication-replication-connect-quorum>`_ option to zero. It may be accomplished in two ways:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:122
msgid "By restarting it with the corresponding option set (in environment variables or in the :ref:`instance configuration file <cartridge-run-systemctl-config>`);"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:125
msgid "Or without restart -- by running the following one-liner:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:127
msgid "echo \"box.cfg({replication_connect_quorum = 0})\" | tarantoolctl connect \\\n"
"unix/:/var/run/tarantool/<app-name>.<instance-name>.control"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:133
msgid "I want to run an instance with a new advertise_uri"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:135
msgid "**The root problem**: ``advertise_uri`` parameter is persisted in the clusterwide configuration. Even if it changes upon restart, the rest of the cluster keeps using the old one, and the cluster may behave in an odd way."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:141
msgid "The clusterwide configuration should be updated."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:143
msgid "Make sure all instances are running and not stuck in the ConnectingFullmesh state (see :ref:`above <troubleshooting-stuck-connecting-fullmesh>`)."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:146
msgid "Make sure all instances have discovered each other (i.e. they look healthy in the WebUI)."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:149
msgid "Run the following snippet in the Tarantool console. It'll prepare a patch for the clusterwide configuration."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:152
msgid "cartridge = require('cartridge')\n"
"members = require('membership').members()\n"
"\n"
"edit_list = {}\n"
"changelog = {}\n"
"for _, srv in pairs(cartridge.admin_get_servers()) do\n"
"    for _, m in pairs(members) do\n"
"        if m.status == 'alive'\n"
"        and m.payload.uuid == srv.uuid\n"
"        and m.uri ~= srv.uri\n"
"        then\n"
"            table.insert(edit_list, {uuid = srv.uuid, uri = m.uri})\n"
"            table.insert(changelog, string.format('%s -> %s (%s)', srv.uri, m.uri, m.payload.alias))\n"
"            break\n"
"        end\n"
"    end\n"
"end\n"
"return changelog"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:173
msgid "As a result you'll see a brief summary like the following one:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:175
msgid "localhost:3301> return changelog\n"
"---\n"
"- - localhost:13301 -> localhost:3301 (srv-1)\n"
"  - localhost:13302 -> localhost:3302 (srv-2)\n"
"  - localhost:13303 -> localhost:3303 (srv-3)\n"
"  - localhost:13304 -> localhost:3304 (srv-4)\n"
"  - localhost:13305 -> localhost:3305 (srv-5)\n"
"..."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:186
msgid "Finally, apply the patch:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:188
msgid "cartridge.admin_edit_topology({servers = edit_list})"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:193
msgid "The cluster is doomed, I've edited the config manually. How do I reload it?"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:197
msgid "Please be aware that it's quite risky and you know what you're doing. There's some useful information about :ref:`clusterwide configuration <cartridge-config>` anatomy and \"normal\" management API."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:202
msgid "But if you're still determined to reload the configuration manually, you can do (in the Tarantool console):"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:205
msgid "function reload_clusterwide_config()\n"
"    local changelog = {}\n"
"\n"
"    local ClusterwideConfig = require('cartridge.clusterwide-config')\n"
"    local confapplier = require('cartridge.confapplier')\n"
"\n"
"    -- load config from filesystem\n"
"    table.insert(changelog, 'Loading new config...')\n"
"\n"
"    local cfg, err = ClusterwideConfig.load('./config')\n"
"    if err ~= nil then\n"
"        return changelog, string.format('Failed to load new config: %s', err)\n"
"    end\n"
"\n"
"    -- check instance state\n"
"    table.insert(changelog, 'Checking instance config state...')\n"
"\n"
"    local roles_configured_state = 'RolesConfigured'\n"
"    local connecting_fullmesh_state = 'ConnectingFullmesh'\n"
"\n"
"    local state = confapplier.wish_state(roles_configured_state, 10)\n"
"\n"
"    if state == connecting_fullmesh_state then\n"
"        return changelog, string.format(\n"
"            'Failed to reach %s config state. Stuck in %s. ' ..\n"
"                'Call \"box.cfg({replication_connect_quorum = 0})\" in instance console and try again',\n"
"            roles_configured_state, state\n"
"        )\n"
"    end\n"
"\n"
"    if state ~= roles_configured_state then\n"
"        return changelog, string.format(\n"
"            'Failed to reach %s config state. Stuck in %s',\n"
"            roles_configured_state, state\n"
"        )\n"
"    end\n"
"\n"
"    -- apply config changes\n"
"    table.insert(changelog, 'Applying config changes...')\n"
"\n"
"    cfg:lock()\n"
"    local ok, err = confapplier.apply_config(cfg)\n"
"    if err ~= nil then\n"
"        return changelog, string.format('Failed to apply new config: %s', err)\n"
"    end\n"
"\n"
"    table.insert(changelog, 'Cluster-wide configuration was successfully updated')\n"
"\n"
"    return changelog\n"
"end\n"
"\n"
"reload_clusterwide_config()"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:260
msgid "This snippet reloads the configuration on a single instance. All other instances continue operating as before."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:265
msgid "If further configuration modifications are made with a two-phase commit (e.g. via the WebUI or with the Lua API), the active configuration of an active instance will be spread across the cluster."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:270
msgid "Repairing cluster using Cartridge CLI repair command"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:272
msgid "Cartridge CLI has `repair <https://github.com/tarantool/cartridge-cli#repairing-a-cluster>`_ command since version `2.3.0 <https://github.com/tarantool/cartridge-cli/releases/tag/2.3.0>`_."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:276
msgid "It can be used to get current topology, remove instance from cluster, change replicaset leader or change instance advertise URI."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:281
msgid "``cartridge repair`` patches the cluster-wide configuration files of application instances placed ON THE LOCAL MACHINE. It means that running ``cartridge repair`` on all machines is user responsibility."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:287
msgid "It's not enough to apply new configuration: the configuration should be reloaded by the instance. If your application uses ``cartridge >= 2.0.0``, you can simply use ``--reload`` flag to reload configuration. Otherwise, you need to restart instances or reload configuration manually."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:293
msgid "Changing instance advertise URI"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:295
msgid "To change instance advertise URI you have to perform these actions:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:297
msgid "Start instance with a new advertise URI. The easiest way is to change ``advertise_uri`` value in the :ref:`instance configuration file <cartridge-run-systemctl-config>`)."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:301
msgid "Make sure instances are running and not stuck in the ConnectingFullmesh state (see :ref:`above <troubleshooting-stuck-connecting-fullmesh>`)."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:304
#: ../../doc/book/cartridge/troubleshooting.rst:380
msgid "Get instance UUID:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:306
#: ../../doc/book/cartridge/troubleshooting.rst:382
msgid "open ``server details`` tab in WebUI;"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:307
#: ../../doc/book/cartridge/troubleshooting.rst:383
msgid "call ``cartridge repair list-topology --name <app-name>`` and find desired instance UUID:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:309
#: ../../doc/book/cartridge/troubleshooting.rst:385
msgid "get instance ``box.info().uuid``:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:311
#: ../../doc/book/cartridge/troubleshooting.rst:387
msgid "echo \"return box.info().uuid\" | tarantoolctl connect \\\n"
"unix/:/var/run/tarantool/<app-name>.<instance-name>.control"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:316
msgid "Now we need to update instance advertise URI in all instances cluster-wide configuration files on each machine. Run ``cartridge repair set-advertise-uri`` with ``--dry-run`` flag on each machine to check cluster-wide config changes computed  by ``cartridge-cli``:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:321
msgid "cartridge repair set-advertise-uri \\\n"
"  --name myapp \\\n"
"  --dry-run \\\n"
"  <instance-uuid> <new-advertise-uri>"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:328
#: ../../doc/book/cartridge/troubleshooting.rst:361
msgid "Run ``cartridge repair set-advertise-uri`` without ``--dry-run`` flag on each machine to apply config changes computed by ``cartridge-cli``. If your application uses ``cartridge >= 2.0.0``, you can specify ``--reload`` flag to load new cluter-wide configuration on instances. Otherwise, you need to restart instances or reload configuration manually."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:334
msgid "cartridge repair set-advertise-uri \\\n"
"  --name myapp \\\n"
"  --verbose \\\n"
"  --reload \\\n"
"  <instance-uuid> <new-advertise-uri>"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:343
msgid "Changing replicaset leader"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:345
msgid "You can change replicaset leader using ``cartridge repair`` command."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:347
msgid "Get replicaset UUID and new leader UUID (in WebUI or by calling ``cartridge repair list-topology --name <app-name>``)."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:350
msgid "Now we need to update cluster-wide config for all instances on each machine. Run ``cartridge repair set-leader`` with ``--dry-run`` flag on each machine to check cluster-wide config changes computed by `` cartridge-cli``:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:354
msgid "cartridge repair set-leader \\\n"
"  --name myapp \\\n"
"  --dry-run \\\n"
"  <replicaset-uuid> <instance-uuid>"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:367
#: ../../doc/book/cartridge/troubleshooting.rst:409
msgid "cartridge repair set-leader \\\n"
"  --name myapp \\\n"
"  --verbose \\\n"
"  --reload \\\n"
"  <replicaset-uuid> <instance-uuid>"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:376
msgid "Removing instance from the cluster"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:378
msgid "You can remove instance from cluster using ``cartridge repair`` command."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:392
msgid "Now we need to update cluster-wide config for all instances on each machine. Run ``cartridge repair remove-instance`` with ``--dry-run`` flag on each machine to check cluster-wide config changes computed by ``cartridge-cli``:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:396
msgid "cartridge repair remove-instance \\\n"
"  --name myapp \\\n"
"  --dry-run \\\n"
"  <replicaset-uuid>"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:403
msgid "Run ``cartridge repair remove-instance`` without ``--dry-run`` flag on each machine to apply config changes computed by ``cartridge-cli``. If your application uses ``cartridge >= 2.0.0``, you can specify ``--reload`` flag to load new cluter-wide configuration on instances. Otherwise, you need to restart instances or reload configuration manually."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:419
msgid "Broken failover promote in Cartridge 2.7.7/2.7.8"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:421
msgid "When updating on Cartridge 2.7.7/2.7.8 while trying to promote a replica you can see an error like this: ``Cannot appoint non-electable instance``."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:424
msgid "This is a known bug in Cartridge 2.7.7/2.7.8, which is fixed in Cartridge 2.7.9."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:426
msgid "To fix this issue, you need to update Cartridge to version 2.7.9 or higher."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:428
msgid "Or you can use the following workaround:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:430
msgid "require('cartridge.lua-api.topology').set_electable_servers({uuid1, uuid2, ... uuidN}) -- list all of your uuids here"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:436
msgid "A 'Connection refused' error in unconfigured instance since 2.7.4"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:438
msgid "Before `v2.7.4 <https://github.com/tarantool/cartridge/blob/master/CHANGELOG.rst#274---2022-04-11>`_, an unconfigured instance was bound to the `0.0.0.0` interface. Given that `0.0.0.0` accepts connections on any IP address assigned to the machine, this might impose additional security risks."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:442
msgid "With `v2.7.4 <https://github.com/tarantool/cartridge/blob/master/CHANGELOG.rst#274---2022-04-11>`_ version, an unconfigured instance resolves the `advertise_uri <https://www.tarantool.io/en/doc/latest/book/cartridge/cartridge_dev/#configuration-basics>`_ host and binds to it. You can check that the instance's `advertise_uri <https://www.tarantool.io/en/doc/latest/book/cartridge/cartridge_dev/#configuration-basics>`_ is resolved to a network interface (not loopback) as follows:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:445
msgid "dig +short place_advertise_uri_here"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:451
msgid "'Address already in use' errors"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:453
msgid "There are the following known 'Address already in use' errors:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:455
msgid "``CartridgeCfgError``: Socket bind error (<port>/udp): Address already in use"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:457
msgid "``HttpInitError``: <...> Can't create tcp_server: Address already in use"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:459
msgid "``RemoteControlError``: Can't start server on <host>:<port>: Address already in use"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:461
msgid "You can see these errors in Tarantool logs only. The reason causing these errors is that Tarantool cannot use the binary (for example, ``3301``) or HTTP (for example, ``8081``) port. As a result, the instance cannot be configured and fails with an error."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:466
msgid "To fix an error, follow the steps below:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:468
msgid "Determine which port is busy."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:470
msgid "Use the ``lsof`` command to determine the application that uses this port:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:472
msgid "sudo lsof -i :<port>"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:476
msgid "Note that without ``sudo`` you can see only the current user's processes."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:478
msgid "Determine the connection type, for example:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:480
msgid "# An outgoing connection on the 50858 port\n"
"TCP 192.168.100.17:50858->google.com:https (ESTABLISHED)\n"
"\n"
"# Waiting for incoming requests on the 3301 port.\n"
"TCP localhost:3301 (LISTEN)"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:488
msgid "For an outgoing connection, you need to adjust the port range used to choose the local port, for example:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:490
msgid "echo \"32768 61000\" > /proc/sys/net/ipv4/ip_local_port_range\n"
"/etc/rc.d/init.d/network restart"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:495
msgid "For an incoming connection, do one of the following:"
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:497
msgid "For Google Chrome, etcd, nginx, or other application, you need to adjust settings to release a busy port."
msgstr ""

#: ../../doc/book/cartridge/troubleshooting.rst:500
msgid "For Tarantool, you might have an incorrect cluster topology or there might be several clusters running simultaneously. In this case, please contact Tarantool support."
msgstr ""
