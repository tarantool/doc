# SOME DESCRIPTIVE TITLE.
# Copyright (C) 
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 2.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-12 15:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../doc/book/monitoring/plugins.rst:4
msgid "Metrics plugins"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:6
msgid "Plugins let you collect metrics through a unified interface without worrying about the way metrics export works. If you want to use another DB to store metrics data, you can enable an appropriate export plugin just by changing one line of code."
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:14
msgid "Available plugins"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:17
msgid "Prometheus"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:20
#: ../../doc/book/monitoring/plugins.rst:82
#: ../../doc/book/monitoring/plugins.rst:114
msgid "Usage"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:22
#: ../../doc/book/monitoring/plugins.rst:84
#: ../../doc/book/monitoring/plugins.rst:116
msgid "Import the plugin:"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:24
msgid "local prometheus = require('metrics.plugins.prometheus')"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:28
msgid "Then use the ``prometheus.collect_http()`` function, which returns:"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:30
msgid "{\n"
"    status = 200,\n"
"    headers = <headers>,\n"
"    body = <body>,\n"
"}"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:38
msgid "See the `Prometheus exposition format <https://github.com/prometheus/docs/blob/master/content/docs/instrumenting/exposition_formats.md>`_ for details on ``<body>`` and ``<headers>``."
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:42
msgid "With Tarantool `http.server <https://github.com/tarantool/http/>`__, use this plugin as follows:"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:45
msgid "local httpd = require('http.server').new(...)\n"
"...\n"
"httpd:route( { path = '/metrics' }, prometheus.collect_http)"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:53
msgid "Sample settings"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:55
msgid "For Tarantool:"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:57
msgid "metrics = require('metrics')\n"
"metrics.cfg{}\n"
"prometheus = require('metrics.plugins.prometheus')\n"
"httpd = require('http.server').new('0.0.0.0', 8080)\n"
"httpd:route( { path = '/metrics' }, prometheus.collect_http)\n"
"httpd:start()"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:66
msgid "For Tarantool Cartridge:"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:68
msgid "cartridge = require('cartridge')\n"
"httpd = cartridge.service_get('httpd')\n"
"metrics = require('metrics')\n"
"metrics.cfg{}\n"
"prometheus = require('metrics.plugins.prometheus')\n"
"httpd:route( { path = '/metrics' }, prometheus.collect_http)"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:79
msgid "Graphite"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:86
msgid "local graphite = require('metrics.plugins.graphite')"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:90
msgid "To start automatically exporting the current values of all ``metrics.{counter,gauge,histogram}``, call the following function:"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:0
msgid "Parameters"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:97
msgid "possible options:  *  ``prefix`` (string): metrics prefix (``'tarantool'`` by default) *  ``host`` (string): Graphite server host (``'127.0.0.1'`` by default) *  ``port`` (number): Graphite server port (``2003`` by default) *  ``send_interval`` (number): metrics collection interval in seconds    (``2`` by default)"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:97
msgid "possible options:"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:99
msgid "``prefix`` (string): metrics prefix (``'tarantool'`` by default)"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:100
msgid "``host`` (string): Graphite server host (``'127.0.0.1'`` by default)"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:101
msgid "``port`` (number): Graphite server port (``2003`` by default)"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:102
msgid "``send_interval`` (number): metrics collection interval in seconds (``2`` by default)"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:105
msgid "This function creates a background fiber that periodically sends all metrics to a remote Graphite server."
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:108
msgid "Exported metric names are formatted as follows: ``<prefix>.<metric_name>``."
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:111
msgid "JSON"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:118
msgid "local json_metrics = require('metrics.plugins.json')"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:0
#: ../../doc/book/monitoring/plugins.rst:0
#: ../../doc/book/monitoring/plugins.rst:0
msgid "return"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:126
msgid "the following structure"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:128
msgid "[\n"
"    {\n"
"        \"name\": \"<name>\",\n"
"        \"label_pairs\": {\n"
"            \"<name>\": \"<value>\",\n"
"            \"...\": \"...\"\n"
"            },\n"
"        \"timestamp\": \"<number>\",\n"
"        \"value\": \"<value>\"\n"
"    },\n"
"    \"...\"\n"
"]"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:0
#: ../../doc/book/monitoring/plugins.rst:0
msgid "rtype"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:143
msgid "string"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:147
msgid "The values can also be ``+-math.huge`` and ``math.huge * 0``. In such case:"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:149
msgid "``math.huge`` is serialized to ``\"inf\"``"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:150
msgid "``-math.huge`` is serialized to ``\"-inf\"``"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:151
msgid "``math.huge * 0`` is serialized to ``\"nan\"``."
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:153
msgid "**Example**"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:155
msgid "[\n"
"    {\n"
"        \"label_pairs\": {\n"
"            \"type\": \"nan\"\n"
"        },\n"
"        \"timestamp\": 1559211080514607,\n"
"        \"metric_name\": \"test_nan\",\n"
"        \"value\": \"nan\"\n"
"    },\n"
"    {\n"
"        \"label_pairs\": {\n"
"            \"type\": \"-inf\"\n"
"        },\n"
"        \"timestamp\": 1559211080514607,\n"
"        \"metric_name\": \"test_inf\",\n"
"        \"value\": \"-inf\"\n"
"    },\n"
"    {\n"
"        \"label_pairs\": {\n"
"            \"type\": \"inf\"\n"
"        },\n"
"        \"timestamp\": 1559211080514607,\n"
"        \"metric_name\": \"test_inf\",\n"
"        \"value\": \"inf\"\n"
"    }\n"
"]"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:184
msgid "Use the JSON plugin with Tarantool ``http.server`` as follows:"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:186
msgid "local httpd = require('http.server').new(...)\n"
"...\n"
"httpd:route({\n"
"        method = 'GET',\n"
"        path = '/metrics',\n"
"        public = true,\n"
"    },\n"
"    function(req)\n"
"        return req:render({\n"
"            text = json_exporter.export()\n"
"        })\n"
"    end\n"
")"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:205
msgid "Plugin-specific API"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:207
msgid "Use the following methods **only when developing a new plugin**."
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:213
msgid "Invoke a function registered via ``metrics.register_callback(<callback>)``. Used in exporters."
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:219
msgid "List all collectors in the registry. Designed to be used in exporters."
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:221
msgid "A list of created collectors."
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:229
msgid "You'll probably want to use ``metrics.collectors()`` instead."
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:231
msgid "Equivalent to:"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:233
msgid "for _, c in pairs(metrics.collectors()) do\n"
"    for _, obs in ipairs(c:collect()) do\n"
"        ...  -- handle observation\n"
"    end\n"
"end"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:241
msgid "A concatenation of ``observation`` objects across all created collectors."
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:243
msgid "{\n"
"    label_pairs: table,         -- `label_pairs` key-value table\n"
"    timestamp: ctype<uint64_t>, -- current system time (in microseconds)\n"
"    value: number,              -- current value\n"
"    metric_name: string,        -- collector\n"
"}"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:252
msgid "table"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:257
msgid "Creating custom plugins"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:259
msgid "Include the following in your main export function:"
msgstr ""

#: ../../doc/book/monitoring/plugins.rst:261
msgid "-- Invoke all callbacks registered via `metrics.register_callback(<callback-function>)`\n"
"metrics.invoke_callbacks()\n"
"\n"
"-- Loop over collectors\n"
"for _, c in pairs(metrics.collectors()) do\n"
"    ...\n"
"\n"
"    -- Loop over instant observations in the collector\n"
"    for _, obs in pairs(c:collect()) do\n"
"        -- Export observation `obs`\n"
"        ...\n"
"    end\n"
"\n"
"end"
msgstr ""
