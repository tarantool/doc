# SOME DESCRIPTIVE TITLE.
# Copyright (C) 
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 2.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-12 15:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../doc/concepts/atomic/thread_model.rst:4
msgid "Thread model"
msgstr ""

#: ../../doc/concepts/atomic/thread_model.rst:9
msgid "Main threads"
msgstr ""

#: ../../doc/concepts/atomic/thread_model.rst:11
msgid "The thread model assumes that a :ref:`query <index-box_operations>` received by Tarantool via network is processed with three operating system **threads**:"
msgstr ""

#: ../../doc/concepts/atomic/thread_model.rst:14
msgid "The **network thread** (or :ref:`threads <cfg_networking-iproto_threads>`) on the server side receives the query, parses the statement, checks if it is correct, and then transforms it into a special structure -- a message containing an executable statement and its options."
msgstr ""

#: ../../doc/concepts/atomic/thread_model.rst:19
msgid "The network thread sends this message to the instance's **transaction processor thread** (*TX thread*) via a lock-free message bus. Lua programs are executed directly in the transaction processor thread, and do not need to be parsed and prepared."
msgstr ""

#: ../../doc/concepts/atomic/thread_model.rst:24
msgid "The TX thread either uses a space index to find and update the tuple, or executes a stored function that performs a data operation."
msgstr ""

#: ../../doc/concepts/atomic/thread_model.rst:27
msgid "The execution of the operation results in a message to the :ref:`write-ahead logging (WAL) <internals-wal>` thread used to commit the transaction and the fiber executing the transaction is suspended. When the transaction results in a COMMIT or ROLLBACK, the following actions are taken:"
msgstr ""

#: ../../doc/concepts/atomic/thread_model.rst:32
msgid "The WAL thread responds with a message to the TX thread."
msgstr ""

#: ../../doc/concepts/atomic/thread_model.rst:34
msgid "The fiber executing the transaction is resumed to process the result of the transaction."
msgstr ""

#: ../../doc/concepts/atomic/thread_model.rst:36
msgid "The result of the fiber execution is passed to the network thread, and the network thread returns the result to the client."
msgstr ""

#: ../../doc/concepts/atomic/thread_model.rst:42
msgid "There is only one TX thread in Tarantool. Some users are used to the idea that there can be multiple threads working on the database. For example, thread #1 reads a row #x while thread #2 writes a row #y. With Tarantool this does not happen. Only the TX thread can access the database, and there is only one TX thread for each Tarantool instance."
msgstr ""

#: ../../doc/concepts/atomic/thread_model.rst:50
msgid "The TX thread can handle many :ref:`fibers <fiber-fibers>` -- a set of computer instructions that can contain \"**yield**\" signals. The TX thread executes all computer instructions up to a yield signal, and then switches to execute the instructions of another fiber."
msgstr ""

#: ../../doc/concepts/atomic/thread_model.rst:56
msgid ":ref:`Yields <app-yields>` must happen, otherwise the TX thread would be permanently stuck on the same fiber."
msgstr ""

#: ../../doc/concepts/atomic/thread_model.rst:63
msgid "Supplementary threads"
msgstr ""

#: ../../doc/concepts/atomic/thread_model.rst:65
msgid "There are also several supplementary threads that serve additional capabilities:"
msgstr ""

#: ../../doc/concepts/atomic/thread_model.rst:67
msgid "For :ref:`replication <replication-architecture>`, Tarantool creates a separate thread for each connected replica. This thread reads a write-ahead log and sends it to the replica, following its position in the log. Separate threads are required because each replica can point to a different position in the log and can run at different speeds."
msgstr ""

#: ../../doc/concepts/atomic/thread_model.rst:71
msgid "There is a thread pool for ad hoc asynchronous tasks, such as a DNS resolver or :ref:`fsync <cfg_binary_logging_snapshots-wal_mode>`."
msgstr ""

#: ../../doc/concepts/atomic/thread_model.rst:74
msgid "There are OpenMP threads used to parallelize sorting (hence, to parallelize building :ref:`indexes <concepts-data_model_indexes>`). For example, this is applicable when Tarantool is restoring from a :ref:`snapshot <internals-snapshot>` with a large amount of data and needs to sort a secondary index if it is ordered by something other than the primary order."
msgstr ""

#: ../../doc/concepts/atomic/thread_model.rst:82
msgid "The maximum number of OpenMP threads can be controlled by the ``OMP_NUM_THREADS`` environment variable."
msgstr ""
