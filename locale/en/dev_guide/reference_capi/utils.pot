# SOME DESCRIPTIVE TITLE.
# Copyright (C) 
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-17 14:22+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../doc/dev_guide/reference_capi/utils.rst:3
msgid "Module lua/utils"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:9
msgid "Push cdata of given ``ctypeid`` onto the stack."
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:11
msgid "CTypeID must be used from FFI at least once. Allocated memory returned uninitialized. Only numbers and pointers are supported."
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:0
#: ../../doc/dev_guide/reference_capi/utils.rst:0
#: ../../doc/dev_guide/reference_capi/utils.rst:0
#: ../../doc/dev_guide/reference_capi/utils.rst:0
#: ../../doc/dev_guide/reference_capi/utils.rst:0
#: ../../doc/dev_guide/reference_capi/utils.rst:0
#: ../../doc/dev_guide/reference_capi/utils.rst:0
#: ../../doc/dev_guide/reference_capi/utils.rst:0
#: ../../doc/dev_guide/reference_capi/utils.rst:0
msgid "Parameters"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:14
#: ../../doc/dev_guide/reference_capi/utils.rst:27
#: ../../doc/dev_guide/reference_capi/utils.rst:42
#: ../../doc/dev_guide/reference_capi/utils.rst:49
#: ../../doc/dev_guide/reference_capi/utils.rst:62
#: ../../doc/dev_guide/reference_capi/utils.rst:74
#: ../../doc/dev_guide/reference_capi/utils.rst:81
#: ../../doc/dev_guide/reference_capi/utils.rst:116
#: ../../doc/dev_guide/reference_capi/utils.rst:128
msgid "Lua State"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:15
msgid "FFI's CTypeID of this cdata"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:0
#: ../../doc/dev_guide/reference_capi/utils.rst:0
#: ../../doc/dev_guide/reference_capi/utils.rst:0
#: ../../doc/dev_guide/reference_capi/utils.rst:0
#: ../../doc/dev_guide/reference_capi/utils.rst:0
#: ../../doc/dev_guide/reference_capi/utils.rst:0
#: ../../doc/dev_guide/reference_capi/utils.rst:0
#: ../../doc/dev_guide/reference_capi/utils.rst:0
#: ../../doc/dev_guide/reference_capi/utils.rst:0
msgid "Returns"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:17
#: ../../doc/dev_guide/reference_capi/utils.rst:31
msgid "memory associated with this cdata"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:19
msgid "See also: :ref:`luaL_checkcdata()<c_api-utils-luaL_checkcdata>`"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:25
msgid "Check whether the function argument ``idx`` is a cdata."
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:28
#: ../../doc/dev_guide/reference_capi/utils.rst:43
msgid "stack index"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:29
msgid "output argument. FFI's CTypeID of returned cdata"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:33
msgid "See also: :ref:`luaL_pushcdata()<c_api-utils-luaL_pushcdata>`"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:37
msgid "Set finalizer function on a cdata object."
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:39
msgid "Equivalent to call `ffi.gc(obj, function)`. Finalizer function must be on the top of the stack."
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:47
msgid "Return CTypeID (FFI) of given Ð¡DATA type."
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:50
msgid "C type name as string (e.g. \"struct request\" or \"uint32_t\")"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:53
msgid "CTypeID"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:55
msgid "See also: :ref:`luaL_pushcdata()<c_api-utils-luaL_pushcdata>`, :ref:`luaL_checkcdata()<c_api-utils-luaL_checkcdata>`"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:60
msgid "Declare symbols for FFI."
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:63
msgid "C definitions (e.g. \"struct stat\")"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:65
msgid "0 on success"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:66
msgid "``LUA_ERRRUN``, ``LUA_ERRMEM`` or ``LUA_ERRERR`` otherwise."
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:68
msgid "See also: ``ffi.cdef(def)``"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:72
msgid "Push uint64_t onto the stack."
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:75
#: ../../doc/dev_guide/reference_capi/utils.rst:82
msgid "value to push"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:79
msgid "Push int64_t onto the stack."
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:86
#: ../../doc/dev_guide/reference_capi/utils.rst:100
msgid "Check whether the argument idx is a uint64 or a convertible string and returns this number."
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:0
#: ../../doc/dev_guide/reference_capi/utils.rst:0
#: ../../doc/dev_guide/reference_capi/utils.rst:0
msgid "throws"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:89
#: ../../doc/dev_guide/reference_capi/utils.rst:96
msgid "error if the argument can't be converted"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:93
#: ../../doc/dev_guide/reference_capi/utils.rst:107
msgid "Check whether the argument idx is a int64 or a convertible string and returns this number."
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:103
#: ../../doc/dev_guide/reference_capi/utils.rst:110
msgid "the converted number or 0 of argument can't be converted"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:114
msgid "Push a tuple onto the stack."
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:118
msgid "error on OOM"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:120
msgid "See also: :ref:`luaT_istuple <c_api-utils-luaT_istuple>`"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:126
msgid "Check whether ``idx`` is a tuple."
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:129
msgid "the stack index"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:131
msgid "non-NULL if ``idx`` is a tuple"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:132
msgid "NULL if ``idx`` is not a tuple"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:136
msgid "Re-throw the last Tarantool error as a Lua object."
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:138
msgid "See also: `lua_error() <https://www.lua.org/manual/5.1/manual.html#lua_error>`_,"
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:139
msgid ":ref:`box_error_last() <c_api-error-box_error_last>`."
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:143
msgid "Similar to `lua_cpcall() <https://www.lua.org/manual/5.1/manual.html#lua_cpcall>`_, but with the proper support of Tarantool errors."
msgstr ""

#: ../../doc/dev_guide/reference_capi/utils.rst:148
msgid "Get the global Lua state used by Tarantool."
msgstr ""
