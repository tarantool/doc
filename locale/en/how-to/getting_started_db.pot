# SOME DESCRIPTIVE TITLE.
# Copyright (C) 
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-25 11:48+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../doc/how-to/getting_started_db.rst:4
msgid "Creating your first Tarantool database"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:6
msgid "In this tutorial, you connect to Tarantool instances using the :ref:`tt CLI <tt-installation>` utility, create a database, and establish a remote connection using the :ref:`net.box <net_box-module>` module."
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:10
msgid "Installing Tarantool"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:12
msgid "For production purposes, we recommend that you install Tarantool via the `official package manager <https://www.tarantool.io/en/download/>`_. To download and install the package that's appropriate for your OS, start a shell (terminal) and enter the command-line instructions provided for your OS at Tarantool `download page <http://tarantool.org/download.html>`_."
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:21
msgid "Installing tt CLI"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:23
msgid "Before starting this tutorial:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:25
msgid "Install the :ref:`tt CLI <tt-installation>` utility."
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:27
msgid "Create a tt environment in the current directory using the :ref:`tt init <tt-init>` command."
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:29
msgid "Inside the ``instances.enabled`` directory of the created tt environment, create the ``create_db`` directory."
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:31
msgid "Inside ``instances.enabled/create_db``, create the ``instances.yml`` and ``config.yaml`` files:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:33
msgid "``instances.yml`` specifies instances to run in the current environment. In this example, there is one instance:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:35
msgid "instance001:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:39
msgid "``config.yaml`` contains basic :ref:`configuration <configuration_file>`, for example:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:41
msgid "groups:\n"
"  group001:\n"
"    replicasets:\n"
"      replicaset001:\n"
"        instances:\n"
"          instance001:\n"
"            iproto:\n"
"              listen:\n"
"              - uri: '127.0.0.1:3301'"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:45
msgid "The instance in the configuration accepts TCP requests on port ``3301``."
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:47
msgid "Read more: :ref:`admin-instance_config-develop-app`."
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:52
msgid "Starting Tarantool"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:54
msgid "First, start the Tarantool instance from the tt environment directory using :ref:`tt start <tt-start>`:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:57
msgid "$ tt start create_db"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:61
msgid "To check the running instances, use the :ref:`tt status <tt-status>` command:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:63
msgid "$ tt status create_db\n"
"INSTANCE                       STATUS      PID\n"
"create_db:instance001     RUNNING     54560"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:69
msgid "After that, connect to the instance with :ref:`tt connect <tt-connect>`:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:71
msgid "$ tt connect create_db:instance001"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:75
msgid "This command opens an interactive Tarantool console with the ``create_db:instance001>`` prompt. Now you can enter requests on the command line."
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:80
msgid "On production machines, Tarantool's interactive mode is designed for system administration only. We use it for most examples in this manual because it is convenient for learning."
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:87
msgid "Creating a database"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:89
msgid "To create a test database after installation:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:91
msgid "Create a :term:`space <space>` named ``bands``:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:93
msgid "box.schema.space.create('bands')\n"
""
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:98
msgid "Format the created space by specifying :term:`field` names and :ref:`types <index-box_data-types>`:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:100
msgid "box.space.bands:format({\n"
"    { name = 'id', type = 'unsigned' },\n"
"    { name = 'band_name', type = 'string' },\n"
"    { name = 'year', type = 'unsigned' }\n"
"})\n"
""
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:105
msgid "Create the first :ref:`index <index-box_index>` named ``primary``:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:107
msgid "box.space.bands:create_index('primary', { type = \"tree\", parts = { 'id' } })\n"
""
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:112
msgid "This is a primary index based on the ``id`` field of each tuple. ``TREE`` is the most universal index type. To learn more, check the documentation on Tarantool :ref:`index types <index-types>`."
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:115
msgid "Insert three :term:`tuples <tuple>` into the space:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:117
msgid "box.space.bands:insert { 1, 'Roxette', 1986 }\n"
"box.space.bands:insert { 2, 'Scorpions', 1965 }\n"
"box.space.bands:insert { 3, 'Ace of Base', 1987 }\n"
""
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:122
msgid "Then select a tuple using the ``primary`` index:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:124
msgid "box.space.bands:select { 3 }\n"
""
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:129
msgid "Add a secondary index based on the ``band_name`` field:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:131
msgid "box.space.bands:create_index('secondary', { type = \"tree\", parts = { 'band_name' } })\n"
""
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:136
msgid "Select tuples using the ``secondary`` index:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:138
msgid "box.space.bands.index.secondary:select{'Scorpions'}\n"
""
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:143
msgid "To prepare for the example in the next section, grant read, write, and execute privileges to the current user:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:146
msgid "box.schema.user.grant('guest', 'read,write,execute', 'universe')\n"
""
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:151
msgid "The full example in the terminal looks like this:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:153
msgid "create_db:instance001> box.schema.space.create('bands')\n"
"---\n"
"...\n"
"create_db:instance001> box.space.bands:format({\n"
"                     > {name = 'id', type = 'unsigned'},\n"
"                     > {name = 'band_name', type = 'string'},\n"
"                     > {name = 'year', type = 'unsigned'}\n"
"                     > })\n"
"---\n"
"...\n"
"create_db:instance001> box.space.bands:create_index('primary', { parts = { 'id' } })\n"
"---\n"
"- unique: true\n"
"  parts:\n"
"  - type: unsigned\n"
"    is_nullable: false\n"
"    fieldno: 1\n"
"  id: 0\n"
"  space_id: 512\n"
"  name: primary\n"
"  type: TREE\n"
"...\n"
"create_db:instance001> box.space.bands:insert { 1, 'Roxette', 1986 }\n"
"---\n"
"- [1, 'Roxette', 1986]\n"
"...\n"
"create_db:instance001> box.space.bands:insert { 2, 'Scorpions', 1965 }\n"
"---\n"
"- [2, 'Scorpions', 1965]\n"
"...\n"
"create_db:instance001> box.space.bands:insert { 3, 'Ace of Base', 1987 }\n"
"---\n"
"- [3, 'Ace of Base', 1987]\n"
"...\n"
"create_db:instance001> box.space.bands:select { 3 }\n"
"---\n"
"- - [3, 'Ace of Base', 1987]\n"
"...\n"
"create_db:instance001> box.space.bands:create_index('secondary', { parts = { 'band_name' } })\n"
"---\n"
"- unique: true\n"
"  parts:\n"
"  - fieldno: 2\n"
"    sort_order: asc\n"
"    type: string\n"
"    exclude_null: false\n"
"    is_nullable: false\n"
"  hint: true\n"
"  id: 1\n"
"  type: TREE\n"
"  space_id: 512\n"
"  name: secondary\n"
"...\n"
"create_db:instance001> s.index.secondary:select{'Scorpions'}\n"
"---\n"
"- - [2, 'Scorpions', 1965]\n"
"...\n"
"create_db:instance001> box.schema.user.grant('guest', 'read,write,execute', 'universe')\n"
"---\n"
"..."
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:219
msgid "Connecting remotely"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:221
msgid "In the configuration file (``config.yaml``), the instance listens on ``127.0.0.1:3301``:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:223
msgid "instance001:\n"
"  iproto:\n"
"    listen:\n"
"    - uri: '127.0.0.1:3301'"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:229
msgid "The :ref:`iproto.listen <configuration_reference_iproto_listen>` option is an array of URIs used to listen for incoming requests. Each record of the array contains a required :ref:`URI <index-uri>` (uniform resource identifier) field and an optional :ref:`params <configuration_reference_iproto_listen>` field. The ``iproto.listen.uri`` field may contain:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:234
msgid "a listening address  (for example, ``127.0.0.1:3301``)"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:235
msgid "a listening port (for example, `3301`)"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:237
msgid "The field can't contain parameters, login, or password."
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:239
msgid "Learn more about the :ref:`connection parameters <configuration_options_connection>`."
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:241
msgid "You can send requests to a Tarantool instance using:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:243
msgid "``telnet``"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:244
msgid "a :ref:`connector <index-box_connectors>`"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:245
msgid "another instance of Tarantool (using the :ref:`console <console-module>` module)"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:246
msgid ":ref:`tt <tt-cli>` administrative utility"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:248
msgid "In previous steps, the requests were sent using the tt utility. To connect from another Tarantool instance, start the ``tarantool`` executable with the ``-i`` option, which enables the interactive mode."
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:252
msgid "To start working, switch to another terminal and start another Tarantool instance:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:254
msgid "$ tarantool -i"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:258
msgid "Use the :ref:`net.box <net_box-module>` module to connect to the remote Tarantool instance that is listening on ``localhost:3301``:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:261
msgid "tarantool> net_box = require('net.box')\n"
"---\n"
"...\n"
"tarantool> conn = net_box.connect(3301)\n"
"---\n"
"..."
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:270
msgid "Then send a select request to ``instance001``:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:272
msgid "tarantool> conn.space.bands:select{2}\n"
"---\n"
"- - [2, 'Scorpions', 1965]\n"
"..."
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:279
msgid "This request is equivalent to the local request ``box.space.bands:select{2}``. The result in this case is one of the tuples that was inserted earlier."
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:282
msgid "You can repeat ``box.space...:insert{}`` and ``box.space...:select{}`` (or ``conn.space...:insert{}`` and ``conn.space...:select{}``) indefinitely, on either Tarantool instance."
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:286
msgid "When the tutorial is over, you can use :ref:`box.space.s:drop() <box_space-drop>` to drop the space. To exit interactive console, enter ``Ctrl+D``. After that, to stop Tarantool instances, use the :ref:`tt stop <tt-stop>` command:"
msgstr ""

#: ../../doc/how-to/getting_started_db.rst:290
msgid "$ tt stop create_db"
msgstr ""
