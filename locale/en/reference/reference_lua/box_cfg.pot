
msgid "Submodule `box.cfg`"
msgstr ""

msgid "The ``box.cfg`` submodule is used for specifying :ref:`server configuration parameters <box_cfg_params>`."
msgstr ""

msgid "To view the current configuration, say ``box.cfg`` without braces:"
msgstr ""

msgid "tarantool> box.cfg\n"
"---\n"
"- checkpoint_count: 2\n"
"  too_long_threshold: 0.5\n"
"  slab_alloc_factor: 1.1\n"
"  memtx_max_tuple_size: 1048576\n"
"  background: false\n"
"  <...>\n"
"..."
msgstr ""

msgid "To set particular parameters, use the following syntax: ``box.cfg{key = value [, key = value ...]}`` (further referred to as ``box.cfg{...}`` for short). For example:"
msgstr ""

msgid "tarantool> box.cfg{listen = 3301}"
msgstr ""

msgid "Parameters that are not specified in the ``box.cfg{...}`` call explicitly will be set to the :ref:`default values<box_cfg_default>`."
msgstr ""

msgid "If you say ``box.cfg{}`` with no parameters, Tarantool applies the following default settings to all the parameters:"
msgstr ""

msgid "tarantool> box.cfg{}\n"
"tarantool> box.cfg -- sorted in the alphabetic order\n"
"---\n"
"- background                   = false\n"
"  checkpoint_count             = 2\n"
"  checkpoint_interval          = 3600\n"
"  checkpoint_wal_threshold     = 1000000000000000000\n"
"  coredump                     = false\n"
"  custom_proc_title            = nil\n"
"  feedback_enabled             = true\n"
"  feedback_host                = 'https://feedback.tarantool.io'\n"
"  feedback_interval            = 3600\n"
"  force_recovery               = false\n"
"  hot_standby                  = false\n"
"  instance_uuid                = nil -- generated automatically\n"
"  io_collect_interval          = nil\n"
"  listen                       = nil\n"
"  log                          = nil\n"
"  log_format                   = plain\n"
"  log_level                    = 5\n"
"  log_nonblock                 = true\n"
"  memtx_dir                    = '.'\n"
"  memtx_max_tuple_size         = 1024 * 1024\n"
"  memtx_memory                 = 256 * 1024 *1024\n"
"  memtx_min_tuple_size         = 16\n"
"  net_msg_max                  = 768\n"
"  pid_file                     = nil\n"
"  readahead                    = 16320\n"
"  read_only                    = false\n"
"  replicaset_uuid              = nil -- generated automatically\n"
"  replication                  = nil\n"
"  replication_anon             = false\n"
"  replication_connect_quorum   = nil\n"
"  replication_connect_timeout  = 30\n"
"  replication_skip_conflict    = false\n"
"  replication_sync_lag         = 10\n"
"  replication_sync_timeout     = 300\n"
"  replication_timeout          = 1\n"
"  slab_alloc_factor            = 1.05\n"
"  snap_io_rate_limit           = nil\n"
"  sql_cache_size               = 5242880\n"
"  strip_core                   = true\n"
"  too_long_threshold           = 0.5\n"
"  username                     = nil\n"
"  vinyl_bloom_fpr              = 0.05\n"
"  vinyl_cache                  = 128 * 1024 * 1024\n"
"  vinyl_dir                    = '.'\n"
"  vinyl_max_tuple_size         = 1024 * 1024* 1024 * 1024\n"
"  vinyl_memory                 = 128 * 1024 * 1024\n"
"  vinyl_page_size              = 8 * 1024\n"
"  vinyl_range_size             = nil\n"
"  vinyl_read_threads           = 1\n"
"  vinyl_run_count_per_level    = 2\n"
"  vinyl_run_size_ratio         = 3.5\n"
"  vinyl_timeout                = 60\n"
"  vinyl_write_threads          = 4\n"
"  wal_dir                      = '.'\n"
"  wal_dir_rescan_delay         = 2\n"
"  wal_max_size                 = 256 * 1024 * 1024\n"
"  wal_mode                     = 'write'\n"
"  worker_pool_threads          = 4\n"
"  work_dir                     = nil"
msgstr ""

msgid "The first call to ``box.cfg{...}`` (with or without parameters) initiates Tarantool's database module :ref:`box <box-module>`. Before Tarantool 2.0, you needed to call ``box.cfg{...}`` prior to performing any database operations. Now you can start working with the database outright, without calling ``box.cfg{...}``. In this case, Tarantool initiates the database module and applies default settings, as if you said ``box.cfg{}`` (without parameters)."
msgstr ""

msgid "``box.cfg{...}`` is also the command that reloads :ref:`persistent data files <index-box_persistence>` into RAM upon restart once we have data."
msgstr ""

