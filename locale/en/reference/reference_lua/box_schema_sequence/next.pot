# SOME DESCRIPTIVE TITLE.
# Copyright (C) 
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 2.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-12 15:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../doc/reference/reference_lua/box_schema_sequence/next.rst:5
msgid "sequence_object:next()"
msgstr ""

#: ../../doc/reference/reference_lua/box_schema_sequence/next.rst:11
msgid "Generate the next value and return it."
msgstr ""

#: ../../doc/reference/reference_lua/box_schema_sequence/next.rst:13
msgid "The generation algorithm is simple:"
msgstr ""

#: ../../doc/reference/reference_lua/box_schema_sequence/next.rst:15
msgid "If this is the first time, then return the STARTS WITH value."
msgstr ""

#: ../../doc/reference/reference_lua/box_schema_sequence/next.rst:16
msgid "If the previous value plus the INCREMENT value is less than the MINIMUM value or greater than the MAXIMUM value, that is \"overflow\", so either raise an error (if ``cycle`` = ``false``) or return the MAXIMUM value (if ``cycle`` = ``true`` and ``step`` < 0) or return the MINIMUM value (if ``cycle`` = ``true`` and ``step`` > 0)."
msgstr ""

#: ../../doc/reference/reference_lua/box_schema_sequence/next.rst:22
msgid "If there was no error, then save the returned result, it is now the \"previous value\"."
msgstr ""

#: ../../doc/reference/reference_lua/box_schema_sequence/next.rst:25
msgid "For example, suppose sequence 'S' has:"
msgstr ""

#: ../../doc/reference/reference_lua/box_schema_sequence/next.rst:27
msgid "``min`` == -6,"
msgstr ""

#: ../../doc/reference/reference_lua/box_schema_sequence/next.rst:28
msgid "``max`` == -1,"
msgstr ""

#: ../../doc/reference/reference_lua/box_schema_sequence/next.rst:29
msgid "``step`` == -3,"
msgstr ""

#: ../../doc/reference/reference_lua/box_schema_sequence/next.rst:30
msgid "``start`` = -2,"
msgstr ""

#: ../../doc/reference/reference_lua/box_schema_sequence/next.rst:31
msgid "``cycle`` = true,"
msgstr ""

#: ../../doc/reference/reference_lua/box_schema_sequence/next.rst:32
msgid "previous value = -2."
msgstr ""

#: ../../doc/reference/reference_lua/box_schema_sequence/next.rst:34
msgid "Then ``box.sequence.S:next()`` returns -5 because -2 + (-3) == -5."
msgstr ""

#: ../../doc/reference/reference_lua/box_schema_sequence/next.rst:36
msgid "Then ``box.sequence.S:next()`` again returns -1 because -5 + (-3) < -6, which is overflow, causing cycle, and ``max`` == -1."
msgstr ""

#: ../../doc/reference/reference_lua/box_schema_sequence/next.rst:39
msgid "This function requires a :doc:`'write' privilege </reference/reference_lua/box_schema/user_grant>` on the sequence."
msgstr ""

#: ../../doc/reference/reference_lua/box_schema_sequence/next.rst:45
msgid "This function should not be used in \"cross-engine\" transactions (transactions which use both the memtx and the vinyl storage engines)."
msgstr ""

#: ../../doc/reference/reference_lua/box_schema_sequence/next.rst:48
msgid "To see what the previous value was, without changing it, you can select from the :ref:`_sequence_data <box_space-sequence_data>` system space."
msgstr ""
