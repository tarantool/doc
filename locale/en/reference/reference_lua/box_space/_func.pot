
msgid "box.space._func"
msgstr ""

msgid "``_func`` is a system space with function tuples made by :doc:`/reference/reference_lua/box_schema/func_create`."
msgstr ""

msgid "Tuples in this space contain the following fields:"
msgstr ""

msgid "the numeric function id, a number,"
msgstr ""

msgid "the function name,"
msgstr ""

msgid "flag,"
msgstr ""

msgid "a language name (optional): 'LUA' (default) or 'C'."
msgstr ""

msgid "The ``_func`` space does not include the function’s body. You continue to create Lua functions in the usual way, by saying ``function function_name () ... end``, without adding anything in the ``_func`` space. The ``_func`` space only exists for storing function tuples so that their names can be used within :ref:`grant/revoke <authentication-owners_privileges>` functions."
msgstr ""

msgid "You can:"
msgstr ""

msgid "Create a ``_func`` tuple with :doc:`/reference/reference_lua/box_schema/func_create`,"
msgstr ""

msgid "Drop a ``_func`` tuple with :doc:`/reference/reference_lua/box_schema/func_drop`,"
msgstr ""

msgid "Check whether a ``_func`` tuple exists with :doc:`/reference/reference_lua/box_schema/func_exists`."
msgstr ""

msgid "**Example:**"
msgstr ""

msgid "In the following example, we create a function named ‘f7’, put it into Tarantool's ``_func`` space and grant 'execute' privilege for this function to 'guest' user."
msgstr ""

msgid "tarantool> function f7()\n"
"         >  box.session.uid()\n"
"         > end\n"
"---\n"
"...\n"
"tarantool> box.schema.func.create('f7')\n"
"---\n"
"...\n"
"tarantool> box.schema.user.grant('guest', 'execute', 'function', 'f7')\n"
"---\n"
"...\n"
"tarantool> box.schema.user.revoke('guest', 'execute', 'function', 'f7')\n"
"---\n"
"..."
msgstr ""

