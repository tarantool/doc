# SOME DESCRIPTIVE TITLE.
# Copyright (C) 
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 2.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-12 15:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../doc/reference/reference_lua/box_space/update.rst:5
msgid "space_object:update()"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:11
msgid "Update a tuple."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:13
msgid "The ``update`` function supports operations on fields — assignment, arithmetic (if the field is numeric), cutting and pasting fragments of a field, deleting or inserting a field. Multiple operations can be combined in a single update request, and in this case they are performed atomically and sequentially. Each operation requires specification of a field identifier, which is usually a number. When multiple operations are present, the field number for each operation is assumed to be relative to the most recent state of the tuple, that is, as if all previous operations in a multi-operation update have already been applied. In other words, it is always safe to merge multiple ``update`` invocations into a single invocation, with no change in semantics."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:25
msgid "Possible operators are:"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:27
msgid "``+`` for addition. values must be numeric, e.g. unsigned or decimal"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:28
msgid "``-`` for subtraction. values must be numeric"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:29
msgid "``&`` for bitwise AND. values must be unsigned numeric"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:30
msgid "``|`` for bitwise OR. values must be unsigned numeric"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:31
msgid "``^`` for bitwise :abbr:`XOR(exclusive OR)`. values must be unsigned numeric"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:33
msgid "``:`` for string splice."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:34
msgid "``!`` for insertion of a new field."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:35
msgid "``#`` for deletion."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:36
msgid "``=`` for assignment."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:38
msgid "Possible field_identifiers are:"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:40
msgid "Positive field number. The first field is 1, the second field is 2, and so on."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:42
msgid "Negative field number. The last field is -1, the second-last field is -2, and so on. In other words: (#tuple + negative field number + 1)."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:44
msgid "Name. If the space was formatted with :doc:`/reference/reference_lua/box_space/format`, then this can be a string for the field 'name'."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:0
msgid "Parameters"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:48
msgid "an :ref:`object reference <app_server-object_reference>`"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:50
msgid "primary-key field values, must be passed as a Lua table if key is multi-part"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:52
msgid "operation type represented in string"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:53
msgid "what field the operation will apply to."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:54
msgid "what value will be applied"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:0
msgid "return"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:56
msgid "the updated tuple"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:57
msgid "nil if the key is not found"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:0
msgid "rtype"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:58
msgid "tuple or nil"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:60
msgid "**Possible errors:**"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:62
msgid "It is illegal to modify a primary key field."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:63
msgid ":errcode:`ER_TRANSACTION_CONFLICT` if a transaction conflict is detected in the :ref:`MVCC transaction mode <txn_mode_transaction-manager>`."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:66
msgid "**Complexity factors:** Index size, Index type, number of indexes accessed, WAL settings."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:69
msgid "Thus, in the instruction:"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:71
msgid "s:update(44, {{'+', 1, 55 }, {'=', 3, 'x'}})"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:75
msgid "the primary-key value is ``44``, the operators are ``'+'`` and ``'='`` meaning *add a value to a field and then assign a value to a field*, the first affected field is field ``1`` and the value which will be added to it is ``55``, the second affected field is field ``3`` and the value which will be assigned to it is ``'x'``."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:81
msgid "**Example:**"
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:83
msgid "Assume that initially there is a space named ``tester`` with a primary-key index whose type is ``unsigned``. There is one tuple, with ``field[1]`` = ``999`` and ``field[2]`` = ``'A'``."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:87
msgid "In the update: |br| ``box.space.tester:update(999, {{'=', 2, 'B'}})`` |br| The first argument is ``tester``, that is, the affected space is ``tester``. The second argument is ``999``, that is, the affected tuple is identified by primary key value = 999. The third argument is ``=``, that is, there is one operation — *assignment to a field*. The fourth argument is ``2``, that is, the affected field is ``field[2]``. The fifth argument is ``'B'``, that is, ``field[2]`` contents change to ``'B'``. Therefore, after this update, ``field[1]`` = ``999`` and ``field[2]`` = ``'B'``."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:98
msgid "In the update: |br| ``box.space.tester:update({999}, {{'=', 2, 'B'}})`` |br| the arguments are the same, except that the key is passed as a Lua table (inside braces). This is unnecessary when the primary key has only one field, but would be necessary if the primary key had more than one field. Therefore, after this update, ``field[1]`` = ``999`` and ``field[2]`` = ``'B'`` (no change)."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:105
msgid "In the update: |br| ``box.space.tester:update({999}, {{'=', 3, 1}})`` |br| the arguments are the same, except that the fourth argument is ``3``, that is, the affected field is ``field[3]``. It is okay that, until now, ``field[3]`` has not existed. It gets added. Therefore, after this update, ``field[1]`` = ``999``, ``field[2]`` = ``'B'``, ``field[3]`` = ``1``."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:112
msgid "In the update: |br| ``box.space.tester:update({999}, {{'+', 3, 1}})`` |br| the arguments are the same, except that the third argument is ``'+'``, that is, the operation is addition rather than assignment. Since ``field[3]`` previously contained ``1``, this means we're adding ``1`` to ``1``. Therefore, after this update, ``field[1]`` = ``999``, ``field[2]`` = ``'B'``, ``field[3]`` = ``2``."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:120
msgid "In the update: |br| ``box.space.tester:update({999}, {{'|', 3, 1}, {'=', 2, 'C'}})`` |br| the idea is to modify two fields at once. The formats are ``'|'`` and ``=``, that is, there are two operations, OR and assignment. The fourth and fifth arguments mean that ``field[3]`` gets OR'ed with ``1``. The seventh and eighth arguments mean that ``field[2]`` gets assigned ``'C'``. Therefore, after this update, ``field[1]`` = ``999``, ``field[2]`` = ``'C'``, ``field[3]`` = ``3``."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:129
msgid "In the update: |br| ``box.space.tester:update({999}, {{'#', 2, 1}, {'-', 2, 3}})`` |br| The idea is to delete ``field[2]``, then subtract ``3`` from ``field[3]``. But after the delete, there is a renumbering, so ``field[3]`` becomes ``field[2]`` before we subtract ``3`` from it, and that's why the seventh argument is ``2``, not ``3``. Therefore, after this update, ``field[1]`` = ``999``, ``field[2]`` = ``0``."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:137
msgid "In the update: |br| ``box.space.tester:update({999}, {{'=', 2, 'XYZ'}})`` |br| we're making a long string so that splice will work in the next example. Therefore, after this update, ``field[1]`` = ``999``, ``field[2]`` = ``'XYZ'``."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:142
msgid "In the update: |br| ``box.space.tester:update({999}, {{':', 2, 2, 1, '!!'}})`` |br| The third argument is ``':'``, that is, this is the example of splice. The fourth argument is ``2`` because the change will occur in ``field[2]``. The fifth argument is 2 because deletion will begin with the second byte. The sixth argument is 1 because the number of bytes to delete is 1. The seventh argument is ``'!!'``, because ``'!!'`` is to be added at this position. Therefore, after this update, ``field[1]`` = ``999``, ``field[2]`` = ``'X!!Z'``."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:151
msgid "For more usage scenarios and typical errors see :ref:`Example: using data operations <box_space-operations-detailed-examples>` further in this section."
msgstr ""

#: ../../doc/reference/reference_lua/box_space/update.rst:155
msgid "Since Tarantool 2.3 a tuple can also be updated via :ref:`JSON paths<json_paths-module>`."
msgstr ""
