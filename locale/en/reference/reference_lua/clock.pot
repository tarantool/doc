
msgid "Module `clock`"
msgstr ""

msgid "Overview"
msgstr ""

msgid "The ``clock`` module returns time values derived from the Posix / C CLOCK_GETTIME_ function or equivalent. Most functions in the module return a number of seconds; functions whose names end in \"64\" return a 64-bit number of nanoseconds."
msgstr ""

msgid "Index"
msgstr ""

msgid "Below is a list of all ``clock`` functions."
msgstr ""

msgid "Name"
msgstr ""

msgid "Use"
msgstr ""

msgid ":ref:`clock.time() <clock-time>` |br| :ref:`clock.realtime() <clock-time>`"
msgstr ""

msgid "Get the wall clock time in seconds"
msgstr ""

msgid ":ref:`clock.time64() <clock-time>` |br| :ref:`clock.realtime64() <clock-time>`"
msgstr ""

msgid "Get the wall clock time in nanoseconds"
msgstr ""

msgid ":ref:`clock.monotonic() <clock-monotonic>`"
msgstr ""

msgid "Get the monotonic time in seconds"
msgstr ""

msgid ":ref:`clock.monotonic64() <clock-monotonic>`"
msgstr ""

msgid "Get the monotonic time in nanoseconds"
msgstr ""

msgid ":ref:`clock.proc() <clock-proc>`"
msgstr ""

msgid "Get the processor time in seconds"
msgstr ""

msgid ":ref:`clock.proc64() <clock-proc>`"
msgstr ""

msgid "Get the processor time in nanoseconds"
msgstr ""

msgid ":ref:`clock.thread() <clock-thread>`"
msgstr ""

msgid "Get the thread time in seconds"
msgstr ""

msgid ":ref:`clock.thread64() <clock-thread>`"
msgstr ""

msgid "Get the thread time in nanoseconds"
msgstr ""

msgid ":ref:`clock.bench() <clock-bench>`"
msgstr ""

msgid "Measure the time a function takes within a processor"
msgstr ""

msgid "The wall clock time. Derived from C function clock_gettime(CLOCK_REALTIME). This is the best function for knowing what the official time is, as determined by the system administrator."
msgstr ""

msgid "return"
msgstr ""

msgid "seconds or nanoseconds since epoch (1970-01-01 00:00:00), adjusted."
msgstr ""

msgid "rtype"
msgstr ""

msgid "number or number64"
msgstr ""

msgid "**Example:**"
msgstr ""

msgid "-- This will print an approximate number of years since 1970.\n"
"clock = require('clock')\n"
"print(clock.time() / (365*24*60*60))"
msgstr ""

msgid "See also :ref:`fiber.time64 <fiber-time64>` and the standard Lua function `os.clock <http://www.lua.org/manual/5.1/manual.html#pdf-os.clock>`_."
msgstr ""

msgid "The monotonic time. Derived from C function clock_gettime(CLOCK_MONOTONIC). Monotonic time is similar to wall clock time but is not affected by changes to or from daylight saving time, or by changes done by a user. This is the best function to use with benchmarks that need to calculate elapsed time."
msgstr ""

msgid "seconds or nanoseconds since the last time that the computer was booted."
msgstr ""

msgid "-- This will print nanoseconds since the start.\n"
"clock = require('clock')\n"
"print(clock.monotonic64())"
msgstr ""

msgid "The processor time. Derived from C function ``clock_gettime(CLOCK_PROCESS_CPUTIME_ID)``. This is the best function to use with benchmarks that need to calculate how much time has been spent within a CPU."
msgstr ""

msgid "seconds or nanoseconds since processor start."
msgstr ""

msgid "-- This will print nanoseconds in the CPU since the start.\n"
"clock = require('clock')\n"
"print(clock.proc64())"
msgstr ""

msgid "The thread time. Derived from C function ``clock_gettime(CLOCK_THREAD_CPUTIME_ID)``. This is the best function to use with benchmarks that need to calculate how much time has been spent within a thread within a CPU."
msgstr ""

msgid "seconds or nanoseconds since the transaction processor thread started."
msgstr ""

msgid "-- This will print seconds in the thread since the start.\n"
"clock = require('clock')\n"
"print(clock.thread64())"
msgstr ""

msgid "The time that a function takes within a processor. This function uses ``clock.proc()``, therefore it calculates elapsed CPU time. Therefore it is not useful for showing actual elapsed time."
msgstr ""

msgid "Parameters"
msgstr ""

msgid "function or function reference"
msgstr ""

msgid "whatever values are required by the function."
msgstr ""

msgid "**table**. first element - seconds of CPU time, second element - whatever the function returns."
msgstr ""

msgid "-- Benchmark a function which sleeps 10 seconds.\n"
"-- NB: bench() will not calculate sleep time.\n"
"-- So the returned value will be {a number less than 10, 88}.\n"
"clock = require('clock')\n"
"fiber = require('fiber')\n"
"function f(param)\n"
"  fiber.sleep(param)\n"
"  return 88\n"
"end\n"
"clock.bench(f, 10)"
msgstr ""

