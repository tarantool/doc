
msgid "Module `iconv`"
msgstr ""

msgid "Overview"
msgstr ""

msgid "The ``iconv`` module provides a way to convert a string with one encoding to a string with another encoding, for example from ASCII to UTF-8. It is based on the POSIX iconv routines."
msgstr ""

msgid "An exact list of the available encodings may depend on environment. Typically the list includes ASCII, BIG5, KOI8R, LATIN8, MS-GREEK, SJIS, and about 100 others. For a complete list, type ``iconv --list`` on a terminal."
msgstr ""

msgid "Index"
msgstr ""

msgid "Below is a list of all ``iconv`` functions."
msgstr ""

msgid "Name"
msgstr ""

msgid "Use"
msgstr ""

msgid ":ref:`iconv.new() <iconv-new>`"
msgstr ""

msgid "Create an iconv instance"
msgstr ""

msgid ":ref:`iconv.converter() <iconv-converter>`"
msgstr ""

msgid "Perform conversion on a string"
msgstr ""

msgid "Construct a new iconv instance."
msgstr ""

msgid "Parameters"
msgstr ""

msgid "the name of the encoding that we will convert to."
msgstr ""

msgid "the name of the encoding that we will convert from."
msgstr ""

msgid "return"
msgstr ""

msgid "a new iconv instance -- in effect, a callable function"
msgstr ""

msgid "rtype"
msgstr ""

msgid "userdata"
msgstr ""

msgid "If either parameter is not a valid name, there will be an error message."
msgstr ""

msgid "**Example:**"
msgstr ""

msgid "tarantool> converter = require('iconv').new('UTF8', 'ASCII')\n"
"---\n"
"..."
msgstr ""

msgid "Convert."
msgstr ""

msgid "param string input-string"
msgstr ""

msgid "the string to be converted (the \"from\" string)"
msgstr ""

msgid "the string that results from the conversion (the \"to\" string)"
msgstr ""

msgid "If anything in input-string cannot be converted, there will be an error message and the result string will be unchanged."
msgstr ""

msgid "We know that the Unicode code point for \"Д\" (CYRILLIC CAPITAL LETTER DE) is hexadecimal 0414 according to the character database of Unicode_. Therefore that is what it will look like in UTF-16. We know that Tarantool typically uses the UTF-8 character set. So make a from-UTF-8-to-UTF-16 converter, use string.hex('Д') to show what Д's encoding looks like in the UTF-8 source, and use string.hex('Д'-after-conversion) to show what it looks like in the UTF-16 target. Since the result is 0414, we see that iconv conversion works. (Different iconv implementations might use different names, for example UTF-16BE instead of UTF16BE.)"
msgstr ""

msgid "tarantool> string.hex('Д')\n"
"---\n"
"- d094\n"
"...\n"
"\n"
"tarantool> converter = require('iconv').new('UTF16BE', 'UTF8')\n"
"---\n"
"...\n"
"\n"
"tarantool> utf16_string = converter('Д')\n"
"---\n"
"...\n"
"\n"
"tarantool> string.hex(utf16_string)\n"
"---\n"
"- '0414'\n"
"..."
msgstr ""

