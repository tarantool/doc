
msgid "Module `utf8`"
msgstr ""

msgid "Overview"
msgstr ""

msgid "``utf8`` is Tarantool's module for handling UTF-8 strings. It includes some functions which are compatible with ones in `Lua 5.3 <https://www.lua.org/manual/5.3/manual.html#6.5>`_ but Tarantool has much more. For example, because internally Tarantool contains a complete copy of the \"International Components For Unicode\" library, there are comparison functions which understand the default ordering for Cyrillic (Capital Letter Zhe Ж = Small Letter Zhe ж) and Japanese (Hiragana A = Katakana A)."
msgstr ""

msgid "Name"
msgstr ""

msgid "Use"
msgstr ""

msgid ":ref:`casecmp <utf8-casecmp>` and |br| :ref:`cmp <utf8-cmp>`"
msgstr ""

msgid "Comparisons"
msgstr ""

msgid ":ref:`lower <utf8-islower>` and |br| :ref:`upper <utf8-isupper>`"
msgstr ""

msgid "Case conversions"
msgstr ""

msgid ":ref:`isalpha <utf8-isalpha>`, |br| :ref:`isdigit <utf8-isdigit>`, |br| :ref:`islower <utf8-islower>` and |br| :ref:`isupper <utf8-isupper>`"
msgstr ""

msgid "Determine character types"
msgstr ""

msgid ":ref:`sub <utf8-sub>`"
msgstr ""

msgid "Substrings"
msgstr ""

msgid ":ref:`length <utf8-length>`"
msgstr ""

msgid "Length in characters"
msgstr ""

msgid ":ref:`next <utf8-next>`"
msgstr ""

msgid "Character-at-a-time iterations"
msgstr ""

msgid "Parameters"
msgstr ""

msgid "a string encoded with UTF-8"
msgstr ""

msgid "return"
msgstr ""

msgid "-1 meaning \"less\", 0 meaning \"equal\", +1 meaning \"greater\""
msgstr ""

msgid "rtype"
msgstr ""

msgid "number"
msgstr ""

msgid "Compare two strings with the Default Unicode Collation Element Table (DUCET) for the `Unicode Collation Algorithm <http://www.unicode.org/Public/UCA/10.0.0/allkeys.txt>`_. Thus 'å' is less than 'B', even though the code-point value of å (229) is greater than the code-point value of B (66), because the algorithm depends on the values in the Collation Element Table, not the code-point values."
msgstr ""

msgid "The comparison is done with primary weights. Therefore the elements which affect secondary or later weights (such as \"case\" in Latin or Cyrillic alphabets, or \"kana differentiation\" in Japanese) are ignored. If asked \"is this like a Microsoft case-insensitive accent-insensitive collation\" we tend to answer \"yes\", though the Unicode Collation Algorithm is far more sophisticated than those terms imply."
msgstr ""

msgid "**Example:**"
msgstr ""

msgid "tarantool> utf8.casecmp('é','e'),utf8.casecmp('E','e')\n"
"---\n"
"- 0\n"
"- 0\n"
"..."
msgstr ""

msgid "a Unicode code point value, repeatable"
msgstr ""

msgid "a UTF-8 string"
msgstr ""

msgid "string"
msgstr ""

msgid "The code-point number is the value that corresponds to a character in the `Unicode Character Database <http://www.unicode.org/Public/5.2.0/ucd/UnicodeData.txt>`_ This is not the same as the byte values of the encoded character, because the UTF-8 encoding scheme is more complex than a simple copy of the code-point number."
msgstr ""

msgid "Another way to construct a string with Unicode characters is with the \\\\u{hex-digits} escape mechanism, for example '\\\\u{41}\\\\u{42}' and ``utf8.char(65,66)`` both produce the string 'AB'."
msgstr ""

msgid "tarantool> utf8.char(229)\n"
"---\n"
"- å\n"
"..."
msgstr ""

msgid "Compare two strings with the Default Unicode Collation Element Table (DUCET) for the `Unicode Collation Algorithm <http://www.unicode.org/Public/UCA/10.0.0/allkeys.txt>`_. Thus 'å' is less than 'B', even though the code-point value of å (229) is greater than the code-point value of B (66), because the algorithm depends on the values in the Collation Element Table, not the code values."
msgstr ""

msgid "The comparison is done with at least three weights. Therefore the elements which affect secondary or later weights (such as \"case\" in Latin or Cyrillic alphabets, or \"kana differentiation\" in Japanese) are not ignored. and upper case comes after lower case."
msgstr ""

msgid "tarantool> utf8.cmp('é','e'),utf8.cmp('E','e')\n"
"---\n"
"- 1\n"
"- 1\n"
"..."
msgstr ""

msgid "a single UTF8 character, expressed as a one-byte string or a code point value"
msgstr ""

msgid "true or false"
msgstr ""

msgid "boolean"
msgstr ""

msgid "Return true if the input character is an \"alphabetic-like\" character, otherwise return false. Generally speaking a character will be considered alphabetic-like provided it is typically used within a word, as opposed to a digit or punctuation. It does not have to be a character in an alphabet."
msgstr ""

msgid "tarantool> utf8.isalpha('Ж'),utf8.isalpha('å'),utf8.isalpha('9')\n"
"---\n"
"- true\n"
"- true\n"
"- false\n"
"..."
msgstr ""

msgid "Return true if the input character is a digit, otherwise return false."
msgstr ""

msgid "tarantool> utf8.isdigit('Ж'),utf8.isdigit('å'),utf8.isdigit('9')\n"
"---\n"
"- false\n"
"- false\n"
"- true\n"
"..."
msgstr ""

msgid "Return true if the input character is lower case, otherwise return false."
msgstr ""

msgid "tarantool> utf8.islower('Ж'),utf8.islower('å'),utf8.islower('9')\n"
"---\n"
"- false\n"
"- true\n"
"- false\n"
"..."
msgstr ""

msgid "Return true if the input character is upper case, otherwise return false."
msgstr ""

msgid "tarantool> utf8.isupper('Ж'),utf8.isupper('å'),utf8.isupper('9')\n"
"---\n"
"- true\n"
"- false\n"
"- false\n"
"..."
msgstr ""

msgid "byte position of the first character"
msgstr ""

msgid "byte position where to stop"
msgstr ""

msgid "the number of characters in the string, or between start and end"
msgstr ""

msgid "Byte positions for start and end can be negative, which indicates \"calculate from end of string\" rather than \"calculate from start of string\"."
msgstr ""

msgid "If the string contains a byte sequence which is not valid in UTF-8, each byte in the invalid byte sequence will be counted as one character."
msgstr ""

msgid "UTF-8 is a variable-size encoding scheme. Typically a simple Latin letter takes one byte, a Cyrillic letter takes two bytes, a Chinese/Japanese character takes three bytes, and the maximum is four bytes."
msgstr ""

msgid "tarantool> utf8.len('G'),utf8.len('ж')\n"
"---\n"
"- 1\n"
"- 1\n"
"...\n"
"\n"
"tarantool> string.len('G'),string.len('ж')\n"
"---\n"
"- 1\n"
"- 2\n"
"..."
msgstr ""

msgid "the same string, lower case"
msgstr ""

msgid "tarantool> utf8.lower('ÅΓÞЖABCDEFG')\n"
"---\n"
"- åγþжabcdefg\n"
"..."
msgstr ""

msgid "byte position where to start within the string, default is 1"
msgstr ""

msgid "byte position of the next character and the code point value of the next character"
msgstr ""

msgid "table"
msgstr ""

msgid "The ``next`` function is often used in a loop to get one character at a time from a UTF-8 string."
msgstr ""

msgid "In the string 'åa' the first character is 'å', it starts at position 1, it takes two bytes to store so the character after it will be at position 3, its Unicode code point value is (decimal) 229."
msgstr ""

msgid "tarantool> -- show next-character position + first-character codepoint\n"
"tarantool> utf8.next('åa', 1)\n"
"---\n"
"- 3\n"
"- 229\n"
"...\n"
"tarantool> -- (loop) show codepoint of every character\n"
"tarantool> for position,codepoint in utf8.next,'åa' do print(codepoint) end\n"
"229\n"
"97\n"
"..."
msgstr ""

msgid "a string encoded as UTF-8"
msgstr ""

msgid "the position of the first character"
msgstr ""

msgid "the position of the last character"
msgstr ""

msgid "a UTF-8 string, the \"substring\" of the input value"
msgstr ""

msgid "Character positions for start and end can be negative, which indicates \"calculate from end of string\" rather than \"calculate from start of string\"."
msgstr ""

msgid "The default value for end-character is the length of the input string. Therefore, saying ``utf8.sub(1, 'abc')`` will return 'abc', the same as the input string."
msgstr ""

msgid "tarantool> utf8.sub('åγþжabcdefg', 5, 8)\n"
"---\n"
"- abcd\n"
"..."
msgstr ""

msgid "the same string, upper case"
msgstr ""

msgid "In rare cases the upper-case result may be longer than the lower-case input, for example ``utf8.upper('ß')`` is 'SS'."
msgstr ""

msgid "tarantool> utf8.upper('åγþжabcdefg')\n"
"---\n"
"- ÅΓÞЖABCDEFG\n"
"..."
msgstr ""

