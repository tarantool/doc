# SOME DESCRIPTIVE TITLE.
# Copyright (C) 
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-06 10:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../doc/reference/tooling/tt_cli/index.rst:4
msgid "tt CLI utility"
msgstr ""

#: ../../doc/reference/tooling/tt_cli/index.rst:6
msgid "``tt`` is a utility that provides a unified command-line interface for managing Tarantool-based applications. It covers a wide range of tasks -- from installing a specific Tarantool version to managing remote instances and developing applications."
msgstr ""

#: ../../doc/reference/tooling/tt_cli/index.rst:10
msgid "``tt`` is developed in its own `GitHub repository <https://github.com/tarantool/tt>`_. Here you can find its source code, changelog, and releases information. For a complete list of releases, see the `Releases <https://github.com/tarantool/tt/releases>`_ section on GitHub."
msgstr ""

#: ../../doc/reference/tooling/tt_cli/index.rst:14
msgid "There is also the Enterprise version of ``tt`` available in a Tarantool Enterprise Edition's :ref:`release package <enterprise-package-contents>`. The Enterprise version provides additional features, for example, :ref:`importing <tt-import>` and :ref:`exporting <tt-export>` data."
msgstr ""

#: ../../doc/reference/tooling/tt_cli/index.rst:18
msgid "This section provides instructions on ``tt`` installation and configuration, concept explanation, and the ``tt`` command reference."
msgstr ""

#: ../../doc/reference/tooling/tt_cli/index.rst:34
msgid "tt environments"
msgstr ""

#: ../../doc/reference/tooling/tt_cli/index.rst:36
msgid "The key aspect of the ``tt`` usage is an *environment*. A ``tt`` environment is a directory that includes a ``tt`` configuration, Tarantool installations, application files, and other resources. If you're familiar with `Python virtual environments <https://packaging.python.org/en/latest/guides/installing-using-pip-and-virtual-environments/#creating-a-virtual-environment>`_, you can think of ``tt`` environments as their analog."
msgstr ""

#: ../../doc/reference/tooling/tt_cli/index.rst:42
msgid "``tt`` environments enable independent management of multiple Tarantool applications, each running on its own Tarantool version and configuration, on a single host in an isolated manner."
msgstr ""

#: ../../doc/reference/tooling/tt_cli/index.rst:46
msgid "To create a ``tt`` environment in a directory, run :ref:`tt init <tt-init>` in it."
msgstr ""

#: ../../doc/reference/tooling/tt_cli/index.rst:49
msgid "Multi-instance applications"
msgstr ""

#: ../../doc/reference/tooling/tt_cli/index.rst:51
msgid "``tt`` supports Tarantool applications that run on multiple instances. For example, you can write an application that includes different source files for storage and router instances. With ``tt``, you can start and stop them in a single call, or manage each instance independently."
msgstr ""

#: ../../doc/reference/tooling/tt_cli/index.rst:56
msgid "Learn more about working with multi-instance applications in :ref:`Multi-instance applications <admin-start_stop_instance-multi-instance>`."
msgstr ""

#: ../../doc/reference/tooling/tt_cli/index.rst:59
msgid "Replacement for tarantooctl and Cartridge CLI"
msgstr ""

#: ../../doc/reference/tooling/tt_cli/index.rst:61
msgid "A multi-purpose tool for working with Tarantool from the command line, ``tt`` has come to replace the deprecated utilities :ref:`tarantoolctl <tarantoolctl>` and `Cartridge CLI <https://github.com/tarantool/cartridge-cli>`_ command-line utilities. The instructions on migration to ``tt`` are provided in the `tt GitHub reposirory <https://github.com/tarantool/tt/blob/v1.3.0/doc/examples.md>`_."
msgstr ""
