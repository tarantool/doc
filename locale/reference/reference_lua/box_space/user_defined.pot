
msgid "space_object:user_defined()"
msgstr ""

msgid "Users can define any functions they want, and associate them with spaces: in effect they can make their own space methods. They do this by:"
msgstr ""

msgid "creating a Lua function,"
msgstr ""

msgid "adding the function name to a predefined global variable which has type = table, and"
msgstr ""

msgid "invoking the function any time thereafter, as long as the server is up, by saying ``space_object:function-name([parameters])``."
msgstr ""

msgid "The predefined global variable is ``box.schema.space_mt``. Adding to ``box.schema.space_mt`` makes the method available for all spaces."
msgstr ""

msgid "Alternatively, user-defined methods can be made available for only one space, by calling ``getmetatable(space_object)`` and then adding the function name to the meta table. See also the example for :doc:`/reference/reference_lua/box_index/user_defined`."
msgstr ""

msgid "Parameters"
msgstr ""

msgid "an :ref:`object reference <app_server-object_reference>`."
msgstr ""

msgid "whatever the user defines"
msgstr ""

msgid "**Example:**"
msgstr ""

msgid "-- Visible to any space, no parameters.\n"
"-- After these requests, the value of global_variable will be 6.\n"
"box.schema.space.create('t')\n"
"box.space.t:create_index('i')\n"
"global_variable = 5\n"
"function f(space_arg) global_variable = global_variable + 1 end\n"
"box.schema.space_mt.counter = f\n"
"box.space.t:counter()"
msgstr ""

