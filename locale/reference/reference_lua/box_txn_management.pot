
msgid "Functions for transaction management"
msgstr ""

msgid "Overview"
msgstr ""

msgid "For general information and examples, see section :ref:`Transaction control <atomic-atomic_execution>`."
msgstr ""

msgid "Observe the following rules when working with transactions:"
msgstr ""

msgid "Rule #1"
msgstr ""

msgid "The requests in a transaction must be sent to a server as a single block. It is not enough to enclose them between begin and commit or rollback. To ensure they are sent as a single block: put them in a function, or put them all on one line, or use a delimiter so that multi-line requests are handled together."
msgstr ""

msgid "Rule #2"
msgstr ""

msgid "All database operations in a transaction should use the same storage engine. It is not safe to access tuple sets that are defined with ``{engine='vinyl'}`` and also access tuple sets that are defined with ``{engine='memtx'}``, in the same transaction."
msgstr ""

msgid "Rule #3"
msgstr ""

msgid "Requests which cause changes to the data definition -- create, alter, drop, truncate -- must not be used."
msgstr ""

msgid "Contents"
msgstr ""

msgid "Below is a list of all functions for transaction management."
msgstr ""

msgid "Name"
msgstr ""

msgid "Use"
msgstr ""

msgid ":ref:`box.begin() <box-begin>`"
msgstr ""

msgid "Begin the transaction"
msgstr ""

msgid ":ref:`box.commit() <box-commit>`"
msgstr ""

msgid "End the transaction and save all changes"
msgstr ""

msgid ":ref:`box.rollback() <box-rollback>`"
msgstr ""

msgid "End the transaction and discard all changes"
msgstr ""

msgid ":ref:`box.savepoint() <box-savepoint>`"
msgstr ""

msgid "Get a savepoint descriptor"
msgstr ""

msgid ":ref:`box.rollback_to_savepoint() <box-rollback_to_savepoint>`"
msgstr ""

msgid "Do not end the transaction and discard all changes made after a savepoint"
msgstr ""

msgid ":ref:`box.atomic() <box-atomic>`"
msgstr ""

msgid "Execute a function, treating it as a transaction"
msgstr ""

msgid ":ref:`box.on_commit() <box-on_commit>`"
msgstr ""

msgid "Define a trigger that will be activated by ``box.commit``"
msgstr ""

msgid ":ref:`box.on_rollback() <box-on_rollback>`"
msgstr ""

msgid "Define a trigger that will be activated by ``box.rollback``"
msgstr ""

msgid ":ref:`box.is_in_txn() <box-is_in_txn>`"
msgstr ""

msgid "State whether a transaction is in progress"
msgstr ""

