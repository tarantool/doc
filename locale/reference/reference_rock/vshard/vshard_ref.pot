
msgid "Configuration reference"
msgstr ""

msgid "Basic parameters"
msgstr ""

msgid ":ref:`sharding <cfg_basic-sharding>`"
msgstr ""

msgid ":ref:`weights <cfg_basic-weights>`"
msgstr ""

msgid ":ref:`shard_index <cfg_basic-shard_index>`"
msgstr ""

msgid ":ref:`bucket_count <cfg_basic-bucket_count>`"
msgstr ""

msgid ":ref:`collect_bucket_garbage_interval <cfg_basic-collect_bucket_garbage_interval>`"
msgstr ""

msgid ":ref:`collect_lua_garbage <cfg_basic-collect_lua_garbage>`"
msgstr ""

msgid ":ref:`sync_timeout <cfg_basic-sync_timeout>`"
msgstr ""

msgid ":ref:`rebalancer_disbalance_threshold <cfg_basic-rebalancer_disbalance_threshold>`"
msgstr ""

msgid ":ref:`rebalancer_max_receiving <cfg_basic-rebalancer_max_receiving>`"
msgstr ""

msgid ":ref:`rebalancer_max_sending <cfg_basic-rebalancer_max_sending>`"
msgstr ""

msgid "A field defining the logical topology of the sharded Tarantool cluster."
msgstr ""

msgid "Type: table"
msgstr ""

msgid "Default: false"
msgstr ""

msgid "Dynamic: yes"
msgstr ""

msgid "A field defining the configuration of relative weights for each zone pair in a replica set. See the :ref:`Replica weights <vshard-replica-weights>` section."
msgstr ""

msgid "Name of a TREE index over the :ref:`bucket id <vshard-vbuckets>`. Spaces without this index do not participate in a sharded Tarantool cluster and can be used as regular spaces if needed."
msgstr ""

msgid "Type: non-empty string or non-negative integer"
msgstr ""

msgid "Default: \"bucket_id\""
msgstr ""

msgid "Dynamic: no"
msgstr ""

msgid "The total number of buckets in a cluster."
msgstr ""

msgid "This number should be several orders of magnitude larger than the potential number of cluster nodes, considering potential scaling out in the foreseeable future."
msgstr ""

msgid "**Example:**"
msgstr ""

msgid "If the estimated number of nodes is M, then the data set should be divided into 100M or even 1000M buckets, depending on the planned scaling out. This number is certainly greater than the potential number of cluster nodes in the system being designed."
msgstr ""

msgid "Keep in mind that too many buckets can cause a need to allocate more memory to store routing information. On the other hand, an insufficient number of buckets can lead to decreased granularity when rebalancing."
msgstr ""

msgid "Type: number"
msgstr ""

msgid "Default: 3000"
msgstr ""

msgid "The interval between garbage collector actions, in seconds."
msgstr ""

msgid "Default: 0.5"
msgstr ""

msgid "If set to true, the Lua ``collectgarbage()`` function is called periodically."
msgstr ""

msgid "Type: boolean"
msgstr ""

msgid "Default: no"
msgstr ""

msgid "Timeout to wait for synchronization of the old master with replicas before demotion. Used when switching a master or when manually calling the ``sync()`` function."
msgstr ""

msgid "Default: 1"
msgstr ""

msgid "A maximum bucket disbalance threshold, in percent. The threshold is calculated for each replica set using the following formula:"
msgstr ""

msgid "|etalon_bucket_count - real_bucket_count| / etalon_bucket_count * 100"
msgstr ""

msgid "The maximum number of buckets that can be received in parallel by a single replica set. This number must be limited, because when a new replica set is added to a cluster, the rebalancer sends a very large amount of buckets from the existing replica sets to the new replica set. This produces a heavy load on the new replica set."
msgstr ""

msgid "Suppose ``rebalancer_max_receiving`` is equal to 100, ``bucket_count`` is equal to 1000. There are 3 replica sets with 333, 333 and 334 buckets on each respectively. When a new replica set is added, each replica set’s ``etalon_bucket_count`` becomes equal to 250. Rather than receiving all 250 buckets at once, the new replica set receives 100, 100 and 50 buckets sequentially."
msgstr ""

msgid "Default: 100"
msgstr ""

msgid "The degree of parallelism for :ref:`parallel rebalancing <vshard-parallel-rebalancing>`."
msgstr ""

msgid "Works for storages only, ignored for routers."
msgstr ""

msgid "The maximum value is ``15``."
msgstr ""

msgid "Replica set functions"
msgstr ""

msgid ":ref:`uuid <cfg_replica_set-uuid>`"
msgstr ""

msgid ":ref:`weight <cfg_replica_set-weight>`"
msgstr ""

msgid "A unique identifier of a replica set."
msgstr ""

msgid "Type:"
msgstr ""

msgid "Default:"
msgstr ""

msgid "Dynamic:"
msgstr ""

msgid "A weight of a replica set. See the :ref:`Replica set weights <vshard-replica-set-weights>` section for details."
msgstr ""

msgid "API reference"
msgstr ""

msgid "Router public API"
msgstr ""

msgid ":ref:`vshard.router.bootstrap() <router_api-bootstrap>`"
msgstr ""

msgid ":ref:`vshard.router.cfg(cfg) <router_api-cfg>`"
msgstr ""

msgid ":ref:`vshard.router.new(name, cfg) <router_api-new>`"
msgstr ""

msgid ":ref:`vshard.router.call(bucket_id, mode, function_name, {argument_list}, {options}) <router_api-call>`"
msgstr ""

msgid ":ref:`vshard.router.callro(bucket_id, function_name, {argument_list}, {options}) <router_api-callro>`"
msgstr ""

msgid ":ref:`vshard.router.callrw(bucket_id, function_name, {argument_list}, {options}) <router_api-callrw>`"
msgstr ""

msgid ":ref:`vshard.router.callre(bucket_id, function_name, {argument_list}, {options}) <router_api-callre>`"
msgstr ""

msgid ":ref:`vshard.router.callbro(bucket_id, function_name, {argument_list}, {options}) <router_api-callbro>`"
msgstr ""

msgid ":ref:`vshard.router.callbre(bucket_id, function_name, {argument_list}, {options}) <router_api-callbre>`"
msgstr ""

msgid ":ref:`vshard.router.route(bucket_id) <router_api-route>`"
msgstr ""

msgid ":ref:`vshard.router.routeall() <router_api-routeall>`"
msgstr ""

msgid ":ref:`vshard.router.bucket_id_strcrc32(key) <router_api-bucket_id_strcrc32>`"
msgstr ""

msgid ":ref:`vshard.router.bucket_id_mpcrc32(key) <router_api-bucket_id_mpcrc32>`"
msgstr ""

msgid ":ref:`vshard.router.bucket_count() <router_api-bucket_count>`"
msgstr ""

msgid ":ref:`vshard.router.sync(timeout) <router_api-sync>`"
msgstr ""

msgid ":ref:`vshard.router.discovery_wakeup() <router_api-discovery_wakeup>`"
msgstr ""

msgid ":ref:`vshard.router.info() <router_api-info>`"
msgstr ""

msgid ":ref:`vshard.router.buckets_info() <router_api-buckets_info>`"
msgstr ""

msgid ":ref:`replicaset_object:call() <router_api-replicaset_call>`"
msgstr ""

msgid ":ref:`replicaset_object:callro() <router_api-replicaset_callro>`"
msgstr ""

msgid ":ref:`replicaset_object:callrw() <router_api-replicaset_callrw>`"
msgstr ""

msgid ":ref:`replicaset_object:callre() <router_api-replicaset_callre>`"
msgstr ""

msgid "Perform the initial cluster bootstrap and distribute all buckets across the replica sets."
msgstr ""

msgid "Parameters"
msgstr ""

msgid "a number of seconds before ending a bootstrap attempt as unsuccessful. Recreate the cluster in case of bootstrap timeout."
msgstr ""

msgid "by default is set to ``false`` that means raise an error, when the cluster is already bootstrapped. ``True`` means consider an already bootstrapped cluster a success."
msgstr ""

msgid "vshard.router.bootstrap({timeout = 4, if_not_bootstrapped = true})"
msgstr ""

msgid "To detect whether a cluster is bootstrapped, ``vshard`` looks for at least one bucket in the whole cluster. If the cluster was bootstrapped only partially (for example, due to an error during the first bootstrap), then it will be considered a bootstrapped cluster on a next bootstrap call with ``if_not_bootstrapped``. So this is still a bad practice. Avoid calling ``bootstrap()`` multiple times."
msgstr ""

msgid "Configure the database and start sharding for the specified ``router`` instance. See the :ref:`sample configuration <vshard-config-cluster-example>` above."
msgstr ""

msgid "a configuration table"
msgstr ""

msgid "Create a new router instance. ``vshard`` supports multiple routers in a single Tarantool instance. Each router can be connected to any ``vshard`` cluster, and multiple routers can be connected to the same cluster."
msgstr ""

msgid "A router created via ``vshard.router.new()`` works in the same way as a static router, but the method name is preceded by a colon (``vshard.router:method_name(...)``), while for a static router the method name is preceded by a period (``vshard.router.method_name(...)``)."
msgstr ""

msgid "A static router can be obtained via the ``vshard.router.static()`` method and then used like a router created via the ``vshard.router.new()`` method."
msgstr ""

msgid "``box.cfg`` is shared among all the routers of a single instance."
msgstr ""

msgid "a router instance name. This name is used as a prefix in logs of the router and must be unique within the instance"
msgstr ""

msgid "a configuration table. The :ref:`sample configuration <vshard-config-cluster-example>` is described above."
msgstr ""

msgid "Return"
msgstr ""

msgid "a router instance, if created successfully; otherwise, nil and an error object"
msgstr ""

msgid "Call the function identified by function-name on the shard storing the bucket identified by bucket_id. See the :ref:`Processing requests <vshard-process-requests>` section for details on function operation."
msgstr ""

msgid "a bucket identifier"
msgstr ""

msgid "either a string = 'read'|'write', or a map with mode='read'|'write' and/or prefer_replica=true|false and/or balance=true|false."
msgstr ""

msgid "a function to execute"
msgstr ""

msgid "an array of the function's arguments"
msgstr ""

msgid "* ``timeout`` – a request timeout, in seconds. If the ``router`` cannot identify a   shard with the specified ``bucket_id``, the operation will be repeated until the   timeout is reached.  * other :ref:`net.box options <net_box-options>`, such as ``is_async``,   ``buffer``, ``on_push`` are also supported."
msgstr ""

msgid "``timeout`` – a request timeout, in seconds. If the ``router`` cannot identify a shard with the specified ``bucket_id``, the operation will be repeated until the timeout is reached."
msgstr ""

msgid "other :ref:`net.box options <net_box-options>`, such as ``is_async``, ``buffer``, ``on_push`` are also supported."
msgstr ""

msgid "The mode parameter has two possible forms: a string or a map. Examples of the string form are: ``'read'``, ``'write'``. Examples of the map form are: ``{mode='read'}``, ``{mode='write'}``, ``{mode='read', prefer_replica=true}``, ``{mode='read', balance=true}``, ``{mode='read', prefer_replica=true, balance=true}``."
msgstr ""

msgid "If ``'write'`` is specified then the target is the master."
msgstr ""

msgid "If ``prefer_replica=true`` is specified then the preferred target is one of the replicas, but the target is the master if there is no conveniently available replica."
msgstr ""

msgid "It may be good to specify prefer_replica=true for functions which are expensive in terms of resource use, to avoid slowing down the master."
msgstr ""

msgid "If ``balance=true`` then there is load balancing -- reads are distributed over all the nodes in the replica set in round-robin fashion, with a preference for replicas if prefer_replica=true is also set."
msgstr ""

msgid "The original return value of the executed function, or ``nil`` and error object. The error object has a type attribute equal to ``ShardingError`` or one of the regular Tarantool errors (``ClientError``, ``OutOfMemory``, ``SocketError``, etc.)."
msgstr ""

msgid "``ShardingError`` is returned on errors specific for sharding: the master is missing, wrong bucket id, etc. It has an attribute code containing one of the values from the ``vshard.error.code.*`` LUA table, an optional attribute containing a message with the human-readable error description, and other attributes specific for the error code."
msgstr ""

msgid "**Examples:**"
msgstr ""

msgid "To call ``customer_add`` function from ``vshard/example``, say:"
msgstr ""

msgid "vshard.router.call(100, 'write', 'customer_add', {{customer_id = 2, bucket_id = 100, name = 'name2', accounts = {}}}, {timeout = 100})\n"
"-- or, the same thing but with a map for the second argument\n"
"vshard.router.call(100, {mode='write'}, 'customer_add', {{customer_id = 2, bucket_id = 100, name = 'name2', accounts = {}}}, {timeout = 100})"
msgstr ""

msgid "Call the function identified by function-name on the shard storing the bucket identified by bucket_id, in read-only mode (similar to calling vshard.router.call with mode='read'). See the :ref:`Processing requests <vshard-process-requests>` section for details on function operation."
msgstr ""

msgid "* ``timeout`` – a request timeout, in seconds. In case the ``router`` cannot identify a   shard with the bucket id, the operation will be repeated until the   timeout is reached.  * other :ref:`net.box options <net_box-options>`, such as ``is_async``,   ``buffer``, ``on_push`` are also supported."
msgstr ""

msgid "``timeout`` – a request timeout, in seconds. In case the ``router`` cannot identify a shard with the bucket id, the operation will be repeated until the timeout is reached."
msgstr ""

msgid "``ShardingError`` is returned on errors specific for sharding: the replica set is not available, the master is missing, wrong bucket id, etc. It has an attribute code containing one of the values from the ``vshard.error.code.*`` LUA table, an optional attribute containing a message with the human-readable error description, and other attributes specific for this error code."
msgstr ""

msgid "Call the function identified by function-name on the shard storing the bucket identified by bucket_id, in read-write mode (similar to calling vshard.router.call with mode='write'). See the :ref:`Processing requests <vshard-process-requests>` section for details on function operation."
msgstr ""

msgid "Call the function identified by function-name on the shard storing the bucket identified by bucket_id, in read-only mode (similar to calling ``vshard.router.call`` with ``mode='read'``), with preference for a replica rather than a master (similar to calling ``vshard.router.call`` with ``prefer_replica = true``). See the :ref:`Processing requests <vshard-process-requests>` section for details on function operation."
msgstr ""

msgid "This has the same effect as :ref:`vshard.router.call() <router_api-call>` with mode parameter = ``{mode='read', balance=true}``."
msgstr ""

msgid "This has the same effect as :ref:`vshard.router.call() <router_api-call>` with mode parameter = ``{mode='read', balance=true, prefer_replica=true}``."
msgstr ""

msgid "Return the replica set object for the bucket with the specified bucket id value."
msgstr ""

msgid "a replica set object"
msgstr ""

msgid "replicaset = vshard.router.route(123)"
msgstr ""

msgid "Return all available replica set objects."
msgstr ""

msgid "a map of the following type: ``{UUID = replicaset}``"
msgstr ""

msgid "Rtype"
msgstr ""

msgid "replicaset = vshard.router.routeall()"
msgstr ""

msgid "**Deprecated**. Logs a warning when used because it is not consistent for cdata numbers."
msgstr ""

msgid "In particular, it returns 3 different values for normal Lua numbers like 123, for unsigned long long cdata (like ``123ULL``, or ``ffi.cast('unsigned long long',123)``), and for signed long long cdata (like ``123LL``, or ``ffi.cast('long long', 123)``). And it is important."
msgstr ""

msgid "vshard.router.bucket_id(123)\n"
"vshard.router.bucket_id(123LL)\n"
"vshard.router.bucket_id(123ULL)"
msgstr ""

msgid "For float and double cdata (``ffi.cast('float', number)``, ``ffi.cast('double', number)``) these functions return different values even for the same numbers of the same floating point type. This is because ``tostring()`` on a floating point cdata number returns not the number, but a pointer at it. Different on each call."
msgstr ""

msgid "``vshard.router.bucket_id_strcrc32()`` behaves exactly the same, but does not log a warning. In case you need that behavior."
msgstr ""

msgid "Calculate the bucket id using a simple built-in hash function."
msgstr ""

msgid "a hash key. This can be any Lua object (number, table, string)."
msgstr ""

msgid "number"
msgstr ""

msgid "bucket_id = vshard.router.bucket_id_strcrc32(18374927634039)"
msgstr ""

msgid "Remember that it is not safe. See details in :ref:`bucket_id() <router_api-bucket_id>`"
msgstr ""

msgid "This function is safer than ``bucket_id_strcrc32``. It takes a CRC32 from a MessagePack encoded value. That is, bucket id of integers does not depend on their Lua type. In case of a string key, it does not encode it into MessagePack, but takes a hash right from the string."
msgstr ""

msgid "However it still may return different values for not equal floating point types. That is, ``ffi.cast('float', number)`` may be reflected into a bucket id not equal to ``ffi.cast('double', number)``. This can't be fixed, because a float value, even being casted to double, may have a garbage tail in its fraction."
msgstr ""

msgid "Floating point keys should not be used to calculate a bucket id, usually."
msgstr ""

msgid "Be very careful in case you store floating point types in a space. When data is returned from a space, it is cast to Lua number. And if that value had an empty fraction part, it will be treated as an integer by ``bucket_id_mpcrc32()``. So you need to do explicit casts in such cases. Here is an example of the problem:"
msgstr ""

msgid "tarantool> s = box.schema.create_space('test', {format = {{'id', 'double'}}}); _ = s:create_index('pk')\n"
"---\n"
"...\n"
"\n"
"tarantool> inserted = ffi.cast('double', 1)\n"
"---\n"
"...\n"
"\n"
"-- Value is stored as double\n"
"tarantool> s:replace({inserted})\n"
"---\n"
"- [1]\n"
"...\n"
"\n"
"-- But when returned to Lua, stored as Lua number, not cdata.\n"
"tarantool> returned = s:get({inserted}).id\n"
"---\n"
"...\n"
"\n"
"tarantool> type(returned), returned\n"
"---\n"
"- number\n"
"- 1\n"
"...\n"
"\n"
"tarantool> vshard.router.bucket_id_mpcrc32(inserted)\n"
"---\n"
"- 1411\n"
"...\n"
"tarantool> vshard.router.bucket_id_mpcrc32(returned)\n"
"---\n"
"- 1614\n"
"..."
msgstr ""

msgid "Return the total number of buckets specified in ``vshard.router.cfg()``."
msgstr ""

msgid "the total number of buckets"
msgstr ""

msgid "Wait until the dataset is synchronized on replicas."
msgstr ""

msgid "a timeout, in seconds"
msgstr ""

msgid "return"
msgstr ""

msgid "``true`` if the dataset was synchronized successfully; or ``nil`` and ``err`` explaining why the dataset cannot be synchronized."
msgstr ""

msgid "Force wakeup of the bucket discovery fiber."
msgstr ""

msgid "Return information about each instance."
msgstr ""

msgid "Replica set parameters:"
msgstr ""

msgid "replica set uuid"
msgstr ""

msgid "master instance parameters"
msgstr ""

msgid "replica instance parameters"
msgstr ""

msgid "Instance parameters:"
msgstr ""

msgid "``uri`` — URI of the instance"
msgstr ""

msgid "``uuid`` — UUID of the instance"
msgstr ""

msgid "``status`` – status of the instance (``available``, ``unreachable``, ``missing``)"
msgstr ""

msgid "``network_timeout`` – a timeout for the request. The value is updated automatically on each 10th successful request and each 2nd failed request."
msgstr ""

msgid "Bucket parameters:"
msgstr ""

msgid "``available_ro`` – the number of buckets known to the ``router`` and available for read requests"
msgstr ""

msgid "``available_rw`` – the number of buckets known to the ``router`` and available for read and write requests"
msgstr ""

msgid "``unavailable`` – the number of buckets known to the ``router`` but unavailable for any requests"
msgstr ""

msgid "``unreachable`` – the number of buckets whose replica sets are not known to the ``router``"
msgstr ""

msgid "tarantool> vshard.router.info()\n"
"---\n"
"- replicasets:\n"
"    ac522f65-aa94-4134-9f64-51ee384f1a54:\n"
"      replica: &0\n"
"        network_timeout: 0.5\n"
"        status: available\n"
"        uri: storage@127.0.0.1:3303\n"
"        uuid: 1e02ae8a-afc0-4e91-ba34-843a356b8ed7\n"
"      uuid: ac522f65-aa94-4134-9f64-51ee384f1a54\n"
"      master: *0\n"
"    cbf06940-0790-498b-948d-042b62cf3d29:\n"
"      replica: &1\n"
"        network_timeout: 0.5\n"
"        status: available\n"
"        uri: storage@127.0.0.1:3301\n"
"        uuid: 8a274925-a26d-47fc-9e1b-af88ce939412\n"
"      uuid: cbf06940-0790-498b-948d-042b62cf3d29\n"
"      master: *1\n"
"  bucket:\n"
"    unreachable: 0\n"
"    available_ro: 0\n"
"    unknown: 0\n"
"    available_rw: 3000\n"
"  status: 0\n"
"  alerts: []\n"
"..."
msgstr ""

msgid "Return information about each bucket. Since a bucket map can be huge, only the required range of buckets can be specified."
msgstr ""

msgid "the offset in a bucket map of the first bucket to show"
msgstr ""

msgid "the maximum number of buckets to show"
msgstr ""

msgid "a map of the following type: ``{bucket_id = 'unknown'/replicaset_uuid}``"
msgstr ""

msgid "Call a function on a nearest available master (distances are defined using ``replica.zone`` and ``cfg.weights`` matrix) with specified arguments."
msgstr ""

msgid "The ``replicaset_object:call`` method is similar to ``replicaset_object:callrw``."
msgstr ""

msgid "function to execute"
msgstr ""

msgid "array of the function's arguments"
msgstr ""

msgid "result of ``function_name`` on success"
msgstr ""

msgid "nill, err otherwise"
msgstr ""

msgid "Call a function on a nearest available master (distances are defined using ``replica.zone`` and ``cfg.weights`` matrix) with a specified arguments."
msgstr ""

msgid "The ``replicaset_object:callrw`` method is similar to ``replicaset_object:call``."
msgstr ""

msgid "Call a function on the nearest available replica (distances are defined using ``replica.zone`` and ``cfg.weights`` matrix) with specified arguments. It is recommended to use ``replicaset_object:callro()`` for calling only read-only functions, as the called functions can be executed not only on a master, but also on replicas."
msgstr ""

msgid "Call a function on the nearest available replica (distances are defined using ``replica.zone`` and ``cfg.weights`` matrix) with specified arguments, with preference for a replica rather than a master (similar to calling ``vshard.router.call`` with ``prefer_replica = true``). It is recommended to use ``replicaset_object:callre()`` for calling only read-only functions, as the called function can be executed not only on a master, but also on replicas."
msgstr ""

msgid "Router internal API"
msgstr ""

msgid ":ref:`vshard.router.bucket_discovery(bucket_id) <router_api-bucket_discovery>`"
msgstr ""

msgid "Search for the bucket in the whole cluster. If the bucket is not found, it is likely that it does not exist. The bucket might also be moved during rebalancing and currently is in the RECEIVING state."
msgstr ""

msgid "Storage public API"
msgstr ""

msgid ":ref:`vshard.storage.cfg(cfg, name) <storage_api-cfg>`"
msgstr ""

msgid ":ref:`vshard.storage.info() <storage_api-info>`"
msgstr ""

msgid ":ref:`vshard.storage.call(bucket_id, mode, function_name, {argument_list}) <storage_api-call>`"
msgstr ""

msgid ":ref:`vshard.storage.sync(timeout) <storage_api-sync>`"
msgstr ""

msgid ":ref:`vshard.storage.bucket_pin(bucket_id) <storage_api-bucket_pin>`"
msgstr ""

msgid ":ref:`vshard.storage.bucket_unpin(bucket_id) <storage_api-bucket_unpin>`"
msgstr ""

msgid ":ref:`vshard.storage.bucket_ref(bucket_id, mode) <storage_api-bucket_ref>`"
msgstr ""

msgid ":ref:`vshard.storage.bucket_refro() <storage_api-bucket_refro>`"
msgstr ""

msgid ":ref:`vshard.storage.bucket_refrw() <storage_api-bucket_refrw>`"
msgstr ""

msgid ":ref:`vshard.storage.bucket_unref(bucket_id, mode) <storage_api-bucket_unref>`"
msgstr ""

msgid ":ref:`vshard.storage.bucket_unrefro() <storage_api-bucket_unrefro>`"
msgstr ""

msgid ":ref:`vshard.storage.bucket_unrefrw() <storage_api-bucket_unrefrw>`"
msgstr ""

msgid ":ref:`vshard.storage.find_garbage_bucket(bucket_index, control) <storage_api-find_garbage_bucket>`"
msgstr ""

msgid ":ref:`vshard.storage.rebalancer_disable() <storage_api-rebalancer_disable>`"
msgstr ""

msgid ":ref:`vshard.storage.rebalancer_enable() <storage_api-rebalancer_enable>`"
msgstr ""

msgid ":ref:`vshard.storage.is_locked() <storage_api-is_locked>`"
msgstr ""

msgid ":ref:`vshard.storage.rebalancing_is_in_progress() <storage_api-rebalancing_is_in_progress>`"
msgstr ""

msgid ":ref:`vshard.storage.buckets_info() <storage_api-buckets_info>`"
msgstr ""

msgid ":ref:`vshard.storage.buckets_count() <storage_api-buckets_count>`"
msgstr ""

msgid ":ref:`vshard.storage.sharded_spaces() <storage_api-sharded_spaces>`"
msgstr ""

msgid "Configure the database and start sharding for the specified ``storage`` instance."
msgstr ""

msgid "a ``storage`` configuration"
msgstr ""

msgid "UUID of the instance"
msgstr ""

msgid "Return information about the storage instance in the following format:"
msgstr ""

msgid "tarantool> vshard.storage.info()\n"
"---\n"
"- buckets:\n"
"    2995:\n"
"      status: active\n"
"      id: 2995\n"
"    2997:\n"
"      status: active\n"
"      id: 2997\n"
"    2999:\n"
"      status: active\n"
"      id: 2999\n"
"  replicasets:\n"
"    2dd0a343-624e-4d3a-861d-f45efc571cd3:\n"
"      uuid: 2dd0a343-624e-4d3a-861d-f45efc571cd3\n"
"      master:\n"
"        state: active\n"
"        uri: storage:storage@127.0.0.1:3301\n"
"        uuid: 2ec29309-17b6-43df-ab07-b528e1243a79\n"
"    c7ad642f-2cd8-4a8c-bb4e-4999ac70bba1:\n"
"      uuid: c7ad642f-2cd8-4a8c-bb4e-4999ac70bba1\n"
"      master:\n"
"        state: active\n"
"        uri: storage:storage@127.0.0.1:3303\n"
"        uuid: 810d85ef-4ce4-4066-9896-3c352fec9e64\n"
"..."
msgstr ""

msgid "Call the specified function on the current ``storage`` instance."
msgstr ""

msgid "a type of the function: 'read' or 'write'"
msgstr ""

msgid "The original return value of the executed function, or ``nil`` and error object."
msgstr ""

msgid "Pin a bucket to a replica set. A pinned bucket cannot be moved even if it breaks the cluster balance."
msgstr ""

msgid "``true`` if the bucket is pinned successfully; or ``nil`` and ``err`` explaining why the bucket cannot be pinned"
msgstr ""

msgid "Return a pinned bucket back into the active state."
msgstr ""

msgid "``true`` if the bucket is unpinned successfully; or ``nil`` and ``err`` explaining why the bucket cannot be unpinned"
msgstr ""

msgid "Create an RO or RW :ref:`ref <vshard-ref>`."
msgstr ""

msgid "'read' or 'write'"
msgstr ""

msgid "``true`` if the bucket ref is created successfully; or ``nil`` and ``err`` explaining why the ref cannot be created"
msgstr ""

msgid "An alias for :ref:`vshard.storage.bucket_ref <storage_api-bucket_ref>` in the RO mode."
msgstr ""

msgid "An alias for :ref:`vshard.storage.bucket_ref <storage_api-bucket_ref>` in the RW mode."
msgstr ""

msgid "Remove a RO/RW :ref:`ref <vshard-ref>`."
msgstr ""

msgid "``true`` if the bucket ref is removed successfully; or ``nil`` and ``err`` explaining why the ref cannot be removed"
msgstr ""

msgid "An alias for :ref:`vshard.storage.bucket_unref <storage_api-bucket_unref>` in the RO mode."
msgstr ""

msgid "An alias for :ref:`vshard.storage.bucket_unref <storage_api-bucket_unref>` in the RW mode."
msgstr ""

msgid "Find a bucket which has data in a space but is not stored in a ``_bucket`` space; or is in a GARBAGE state."
msgstr ""

msgid "index of a space with the part of a bucket id"
msgstr ""

msgid "a garbage collector controller. If there is an increased buckets generation, then the search should be interrupted."
msgstr ""

msgid "an identifier of the bucket in the garbage state, if found; otherwise, nil"
msgstr ""

msgid "Return information about each bucket located in storage. For example:"
msgstr ""

msgid "vshard.storage.buckets_info(1)\n"
"---\n"
"- 1:\n"
"    status: active\n"
"    ref_rw: 1\n"
"    ref_ro: 1\n"
"    ro_lock: true\n"
"    rw_lock: true\n"
"    id: 1"
msgstr ""

msgid "Return the number of buckets located in storage."
msgstr ""

msgid "Immediately wake up a recovery fiber, if it exists."
msgstr ""

msgid "Return a flag indicating whether rebalancing is in progress. The result is true if the node is currently applying routes received from a rebalancer node in the special fiber."
msgstr ""

msgid "Return a flag indicating whether storage is invisible to the rebalancer."
msgstr ""

msgid "Disable rebalancing. A disabled rebalancer sleeps until it is enabled again with vshard.storage.rebalancer_enable()."
msgstr ""

msgid "Enable rebalancing."
msgstr ""

msgid "Show the spaces that are visible to rebalancer and garbage collector fibers."
msgstr ""

msgid "Storage internal API"
msgstr ""

msgid ":ref:`vshard.storage.bucket_stat(bucket_id) <storage_api-bucket_stat>`"
msgstr ""

msgid ":ref:`vshard.storage.bucket_recv(bucket_id, from, data) <storage_api-bucket_recv>`"
msgstr ""

msgid ":ref:`vshard.storage.bucket_delete_garbage(bucket_id) <storage_api-bucket_delete_garbage>`"
msgstr ""

msgid ":ref:`vshard.storage.bucket_collect(bucket_id) <storage_api-bucket_collect>`"
msgstr ""

msgid ":ref:`vshard.storage.bucket_force_create(first_bucket_id, count) <storage_api-bucket_force_create>`"
msgstr ""

msgid ":ref:`vshard.storage.bucket_force_drop(bucket_id, to) <storage_api-bucket_force_drop>`"
msgstr ""

msgid ":ref:`vshard.storage.bucket_send(bucket_id, to) <storage_api-bucket_send>`"
msgstr ""

msgid ":ref:`vshard.storage.buckets_discovery() <storage_api-buckets_discovery>`"
msgstr ""

msgid ":ref:`vshard.storage.rebalancer_request_state() <storage_api-rebalancer_request_state>`"
msgstr ""

msgid "Receive a bucket identified by bucket id from a remote replica set."
msgstr ""

msgid "UUID of source replica set"
msgstr ""

msgid "data logically stored in a bucket identified by bucket_id, in the same format as the return value from ``bucket_collect() <storage_api-bucket_collect>``"
msgstr ""

msgid "Return information about the bucket id:"
msgstr ""

msgid "tarantool> vshard.storage.bucket_stat(1)\n"
"---\n"
"- 0\n"
"- status: active\n"
"  id: 1\n"
"..."
msgstr ""

msgid "Force garbage collection for the bucket identified by bucket_id in case the bucket was transferred to a different replica set."
msgstr ""

msgid "Collect all the data that is logically stored in the bucket identified by bucket_id:"
msgstr ""

msgid "tarantool> vshard.storage.bucket_collect(1)\n"
"---\n"
"- 0\n"
"- - - 514\n"
"    - - [10, 1, 1, 100, 'Account 10']\n"
"      - [11, 1, 1, 100, 'Account 11']\n"
"      - [12, 1, 1, 100, 'Account 12']\n"
"      - [50, 5, 1, 100, 'Account 50']\n"
"      - [51, 5, 1, 100, 'Account 51']\n"
"      - [52, 5, 1, 100, 'Account 52']\n"
"  - - 513\n"
"    - - [1, 1, 'Customer 1']\n"
"      - [5, 1, 'Customer 5']\n"
"..."
msgstr ""

msgid "Force creation of the buckets (single or multiple) on the current replica set. Use only for manual emergency recovery or for initial bootstrap."
msgstr ""

msgid "an identifier of the first bucket in a range"
msgstr ""

msgid "the number of buckets to insert (default = 1)"
msgstr ""

msgid "Drop a bucket manually for tests or emergency cases."
msgstr ""

msgid "Send a specified bucket from the current replica set to a remote replica set."
msgstr ""

msgid "bucket identifier"
msgstr ""

msgid "UUID of a remote replica set"
msgstr ""

msgid "Check all buckets of the host storage that have the SENT or ACTIVE state, return the number of active buckets."
msgstr ""

msgid "the number of buckets in the active state, if found; otherwise, nil"
msgstr ""

msgid "Collect an array of active bucket identifiers for discovery."
msgstr ""

