# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 1.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-06 14:05+0000\n"
"PO-Revision-Date: 2019-12-06 16:11+0300\n"
"Last-Translator: \n"
"Language: ru\n"
"Language-Team: \n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

msgid "Reloading a module"
msgstr "Перезагрузка модуля"

msgid "You can reload any Tarantool application or module with zero downtime."
msgstr ""
"Любое приложение или модуль Tarantool'а можно перезагрузить с нулевым "
"временем простоя."

msgid "Reloading a module in Lua"
msgstr "Перезагрузка модуля на Lua"

msgid ""
"Here's an example that illustrates the most typical case -- \"update and "
"reload\"."
msgstr ""
"Ниже представлен пример, который иллюстрирует наиболее типичный случай --"
" \"обновление и перезагрузка\"."

msgid ""
"In this example, we use recommended :ref:`administration practices "
"<admin>` based on :ref:`instance files <admin-instance_file>` and "
":ref:`tarantoolctl <tarantoolctl>` utility."
msgstr ""
"В этом примере используются рекомендованные :ref:`методики "
"администрирования <admin>` на основании :ref:`файлов экземпляров <admin-"
"instance_file>` и утилиты :ref:`tarantoolctl <tarantoolctl>`."

msgid "Update the application file."
msgstr "Обновите файлы приложения."

msgid "For example, a module in ``/usr/share/tarantool/app.lua``:"
msgstr "Например, модуль в ``/usr/share/tarantool/app.lua``:"

msgid ""
"local function start()\n"
"  -- initial version\n"
"  box.once(\"myapp:v1.0\", function()\n"
"    box.schema.space.create(\"somedata\")\n"
"    box.space.somedata:create_index(\"primary\")\n"
"    ...\n"
"  end)\n"
"\n"
"  -- migration code from 1.0 to 1.1\n"
"  box.once(\"myapp:v1.1\", function()\n"
"    box.space.somedata.index.primary:alter(...)\n"
"    ...\n"
"  end)\n"
"\n"
"  -- migration code from 1.1 to 1.2\n"
"  box.once(\"myapp:v1.2\", function()\n"
"    box.space.somedata.index.primary:alter(...)\n"
"    box.space.somedata:insert(...)\n"
"    ...\n"
"  end)\n"
"end\n"
"\n"
"-- start some background fibers if you need\n"
"\n"
"local function stop()\n"
"  -- stop all background fibers and clean up resources\n"
"end\n"
"\n"
"local function api_for_call(xxx)\n"
"  -- do some business\n"
"end\n"
"\n"
"return {\n"
"  start = start,\n"
"  stop = stop,\n"
"  api_for_call = api_for_call\n"
"}"
msgstr ""
"local function start()\n"
"  -- начальная версия\n"
"  box.once(\"myapp:v1.0\", function()\n"
"    box.schema.space.create(\"somedata\")\n"
"    box.space.somedata:create_index(\"primary\")\n"
"    ...\n"
"  end)\n"
"\n"
"  -- код миграции с 1.0 на 1.1\n"
"  box.once(\"myapp:v1.1\", function()\n"
"    box.space.somedata.index.primary:alter(...)\n"
"    ...\n"
"  end)\n"
"\n"
"  -- код миграции с 1.1 на 1.2\n"
"  box.once(\"myapp:v1.2\", function()\n"
"    box.space.somedata.index.primary:alter(...)\n"
"    box.space.somedata:insert(...)\n"
"    ...\n"
"  end)\n"
"end\n"
"\n"
"-- запустить файберы в фоновом режиме, если необходимо\n"
"\n"
"local function stop()\n"
"  -- остановить все файберы, работающие в фоновом режиме, и очистить "
"ресурсы\n"
"end\n"
"\n"
"local function api_for_call(xxx)\n"
"  -- сделать что-то\n"
"end\n"
"\n"
"return {\n"
"  start = start,\n"
"  stop = stop,\n"
"  api_for_call = api_for_call\n"
"}"

msgid "Update the :ref:`instance file <admin-instance_file>`."
msgstr "Обновить :ref:`файл экземпляра <admin-instance_file>`."

msgid "For example, ``/etc/tarantool/instances.enabled/my_app.lua``:"
msgstr "Например, ``/etc/tarantool/instances.enabled/my_app.lua``:"

msgid ""
"#!/usr/bin/env tarantool\n"
"--\n"
"-- hot code reload example\n"
"--\n"
"\n"
"box.cfg({listen = 3302})\n"
"\n"
"-- ATTENTION: unload it all properly!\n"
"local app = package.loaded['app']\n"
"if app ~= nil then\n"
"  -- stop the old application version\n"
"  app.stop()\n"
"  -- unload the application\n"
"  package.loaded['app'] = nil\n"
"  -- unload all dependencies\n"
"  package.loaded['somedep'] = nil\n"
"end\n"
"\n"
"-- load the application\n"
"log.info('require app')\n"
"app = require('app')\n"
"\n"
"-- start the application\n"
"app.start({some app options controlled by sysadmins})"
msgstr ""
"#!/usr/bin/env tarantool\n"
"--\n"
"-- пример горячей перезагрузки кода\n"
"--\n"
"\n"
"box.cfg({listen = 3302})\n"
"\n"
"-- ВНИМАНИЕ: правильно выполните разгрузку!\n"
"local app = package.loaded['app']\n"
"if app ~= nil then\n"
"  -- остановите старую версию приложения\n"
"  app.stop()\n"
"  -- разгрузите приложение\n"
"  package.loaded['app'] = nil\n"
"  -- разгрузите все зависимости\n"
"  package.loaded['somedep'] = nil\n"
"end\n"
"\n"
"-- загрузите приложение\n"
"log.info('require app')\n"
"app = require('app')\n"
"\n"
"-- запустите приложение\n"
"app.start({some app options controlled by sysadmins})"

msgid ""
"The important thing here is to properly unload the application and its "
"dependencies."
msgstr "Самое главное -- правильно разгрузить приложение и его зависимости."

msgid "Manually reload the application file."
msgstr "Вручную перезагрузите файл приложения."

msgid "For example, using ``tarantoolctl``:"
msgstr "Например, используя ``tarantoolctl``:"

msgid "$ tarantoolctl eval my_app /etc/tarantool/instances.enabled/my_app.lua"
msgstr "$ tarantoolctl eval my_app /etc/tarantool/instances.enabled/my_app.lua"

msgid "Reloading a module in C"
msgstr "Перезагрузка модуля на С"

msgid ""
"After you compiled a new version of a C module (``*.so`` shared library),"
" call :ref:`box.schema.func.reload('module-name') <box_schema-"
"func_reload>` from your Lua script to reload the module."
msgstr ""
"После компиляции новой версии модуля на C (библиотека общего пользования "
"``*.so``),  вызовите функцию :ref:`box.schema.func.reload('module-name') "
"<box_schema-func_reload>` из Lua-скрипта для перезагрузки модуля."
