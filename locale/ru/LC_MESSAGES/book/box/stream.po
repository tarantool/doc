#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-20 10:27+0000\n"
"PO-Revision-Date: 2023-10-20 10:27+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language-Team: Russian <http://weblate.tarantool.io/projects/project/"
"documentation-bookboxstream/ru/>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: ENCODING\n"
"Plural-Forms: nplurals=3; plural=n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2;\n"
"X-Generator: Weblate 5.0.2\n"

msgid "Streams and interactive transactions"
msgstr "Стримы и интерактивные транзакции"

msgid "Overview"
msgstr "Общие сведения"

msgid ""
"Since :tarantool-release:`2.10.0`, iproto implements streams and "
"interactive transactions."
msgstr ""
"Начиная с версии :tarantool-release:`2.10.0`, в iproto реализованы стримы и "
"интерактивные транзакции."

msgid "Stream"
msgstr "Стрим"

msgid ""
"A stream supports multiplexing several transactions over one connection. All"
" requests in the stream are executed strictly sequentially, which allows the"
" implementation of :term:`interactive transactions <interactive "
"transaction>`."
msgstr ""
"Стрим поддерживает мультиплексирование нескольких транзакций в рамках одного "
"соединения. Все запросы в стриме выполняются строго последовательно, что "
"позволяет проводить :term:`интерактивные транзакции <interactive "
"transaction>`."

msgid ""
"Unlike a thread associated with multitasking and execution within a program,"
" a stream transfers data via the protocol between a client and a server."
msgstr ""
"Стрим передает данные по протоколу между клиентом и сервером. Это понятие не "
"связано с потоками выполнения, реализующими многозадачность внутри программ."

msgid "Interactive transaction"
msgstr "Интерактивная транзакция"

msgid ""
"An interactive transaction is a transaction that does not need to be sent in"
" a single request. The ``begin``, ``commit``, and other TX statements can be"
" sent and executed in different requests."
msgstr ""
"Интерактивной называется транзакция, которую не обязательно отправлять "
"целиком в рамках одного запроса. ``begin``, ``commit`` и другие TX-"
"инструкции могут быть отправлены и выполнены в разных запросах."

msgid "Features"
msgstr "Функциональные возможности"

msgid ""
"The primary purpose of :term:`streams <stream>` is to execute transactions "
"via iproto. Every stream has its own identifier, which is unique within the "
"connection. All requests with the same non-zero stream ID belong to the same"
" stream. All requests in the stream are processed synchronously. The next "
"request will not start executing until the previous one is completed. If a "
"request's stream ID is ``0``, it does not belong to any stream and is "
"processed in the old way."
msgstr ""
"Основное предназначение :term:`стрима <stream>` --- выполнение транзакций "
"внутри потока iproto. У каждого стрима есть идентификатор, уникальный в "
"рамках соединения. Все запросы с одинаковым ненулевым идентификатором стрима "
"относятся к одному стриму. Запросы в стриме выполняются синхронно. Следующий "
"запрос не начинает выполняться, пока не завершится предыдущий. Если "
"идентификатор стрима запроса равен ``0``, то этот запрос не привязан к "
"какому-либо стриму и обрабатывается обычным способом."

msgid ""
"In :doc:`net.box </reference/reference_lua/net_box>`, a stream is an object "
"above the connection that has the same methods but allows executing requests"
" sequentially. The ID is generated on the client side automatically. If a "
"user writes their own connector and wants to use streams, they must transmit"
" the ``stream_id`` over the iproto protocol."
msgstr ""
"В :doc:`net.box </reference/reference_lua/net_box>` стрим представляет собой "
"объект над соединением, который имеет те же методы, но позволяет выполнять "
"запросы последовательно. Идентификатор генерируется автоматически на стороне "
"клиента. Пользователь может также создать собственный коннектор с поддержкой "
"стримов. Используя стримы с пользовательским коннектором, необходимо "
"передавать ``stream_id`` через протокол iproto."

msgid ""
"Interactive transactions over streams only work if the ``box.cfg{}`` option "
":ref:`memtx_use_mvcc_engine <cfg_basic-memtx_use_mvcc_engine>` is enabled on"
" the server: ``memtx_use_mvcc_engine = true``."
msgstr ""
"Чтобы в стримах работали интерактивные транзакции, необходимо включить "
"параметр ``box.cfg{}`` :ref:`memtx_use_mvcc_engine <cfg_basic-"
"memtx_use_mvcc_engine>` на сервере: ``memtx_use_mvcc_engine = true``."

msgid "Interaction between streams and transactions"
msgstr "Взаимодействие между стримами и транзакциями"

msgid ""
"As each stream can start a transaction, several transactions can be "
"multiplexed over one connection. There are multiple ways to begin, commit, "
"and roll back a transaction. One can do that using the appropriate stream "
"methods -- ``call``, ``eval``, or ``execute`` -- with the SQL transaction "
"syntax. Users can mix these methods. For example, one might start a "
"transaction using ``stream:begin()`` and commit it with "
"``stream:call('box.commit')`` or ``stream:execute('COMMIT')``. All the "
"requests between ``stream:begin()`` and ``stream:commit()`` are executed "
"within the same transaction. If any request fails during the transaction, it"
" will not affect the other requests in the transaction. If a disconnect "
"occurs while there is an active transaction in the stream, that transaction "
"will be rolled back if it hasn't been committed before the connection "
"failure."
msgstr ""
"Поскольку каждый стрим может запустить транзакцию, одно соединение способно "
"мультиплексировать несколько транзакций. Начать транзакцию, сделать ее "
"коммит и отменить ее можно, используя с синтаксисом SQL-транзакций методы "
"стрима: ``call``, ``eval``, ``execute``. Пользователь может комбинировать "
"эти методы. Например, можно начать транзакцию с помощью ``stream:begin()``, "
"а коммит провести, используя ``stream:call('box.commit')`` или "
"``stream:execute('COMMIT')``. Все запросы между ``stream:begin()`` и "
"``stream:commit()`` выполняются в рамках одной транзакции. Если один запрос "
"во время транзакции завершится ошибкой, на остальные запросы это не "
"повлияет. Если во время активной транзакции в стриме произойдет сбой "
"подключения, эта транзакция будет отменена, если она не прошла коммит до "
"сбоя."

msgid "Example:"
msgstr "Пример:"

msgid ""
"local conn = net_box.connect(remote_server_addr)\n"
"local conn_space = conn.space.test\n"
"local stream = conn:new_stream()\n"
"local stream_space = stream.space.test\n"
"\n"
"-- Begin transaction over an iproto stream:\n"
"stream:begin()\n"
"stream_space:replace({1})\n"
"\n"
"-- Empty select, the transaction was not committed.\n"
"-- You can't see it from the requests that do not belong to the\n"
"-- transaction.\n"
"conn_space:select{}\n"
"\n"
"-- Select returns the previously inserted tuple,\n"
"-- because this select belongs to the transaction:\n"
"stream_space:select({})\n"
"\n"
"-- Commit transaction:\n"
"stream:commit()\n"
"\n"
"-- Now this select also returns the tuple, because the transaction has been committed:\n"
"conn_space:select{}"
msgstr ""
"local conn = net_box.connect(remote_server_addr)\n"
"local conn_space = conn.space.test\n"
"local stream = conn:new_stream()\n"
"local stream_space = stream.space.test\n"
"\n"
"-- Начать транзакцию через поток iproto:\n"
"stream:begin()\n"
"stream_space:replace({1})\n"
"\n"
"-- Пустой select, коммит транзакции не выполнен.\n"
"-- Ее нельзя увидеть из запросов, не относящихся\n"
"-- к транзакции.\n"
"conn_space:select{}\n"
"\n"
"-- Метод select возвращает ранее вставленный кортеж,\n"
"-- так как этот кортеж относится к транзакции:\n"
"stream_space:select({})\n"
"\n"
"-- Коммит транзакции:\n"
"stream:commit()\n"
"\n"
"-- Теперь и этот select возвращает кортеж, так как транзакция прошла коммит:"
"\n"
"conn_space:select{}"
