
msgid "Triggers"
msgstr "Триггеры"

msgid ""
"**Triggers**, also known as **callbacks**, are functions which the server"
" executes when certain events happen."
msgstr ""
"**Триггеры**, которые также называют **обратными вызовами**, представляют"
" собой функции, которые выполняет сервер при наступлении определенных "
"событий."

msgid "There are four types of triggers in Tarantool:"
msgstr "В Tarantool'е есть четыре типа триггеров:"

msgid ""
":doc:`session triggers "
"</reference/reference_lua/box_session/on_connect>`, which are executed "
"when a session begins or ends and during authentication,"
msgstr ""
":doc:`session-триггеры "
"</reference/reference_lua/box_session/on_connect>`, которые выполняются, "
"когда начинается или заканчивается сессия, а также во время "
"аутентификации,"

msgid ""
":ref:`replace triggers <box_space-on_replace>`, which are for database "
"events,"
msgstr ""
":ref:`триггеры для обработки замены <box_space-on_replace>`, которые "
"предназначены для событий в базе данных,"

msgid ""
":ref:`connection triggers <net_box-on_connect>`, which are for "
"``net.box`` connections,"
msgstr ""
":ref:`connection-триггеры <box_session-on_connect>`, которые относятся к "
"соединениям через ``net.box``,"

msgid ""
":doc:`transaction triggers "
"</reference/reference_lua/box_txn_management/on_commit>`, which are "
"executed during commit or rollback."
msgstr ""
":doc:`триггеры для обработки транзакций "
"</reference/reference_lua/box_txn_management/on_commit>`, которые "
"выполняются во время коммита или отката."

msgid "All triggers have the following characteristics:"
msgstr "У всех триггеров есть следующие особенности:"

msgid ""
"Triggers associate a function with an event. The request to \"define a "
"trigger\" implies passing the trigger’s function to one of the "
"\"on_event()\" functions:"
msgstr ""
"Триггеры связывают функцию с событием. Запрос \"определить триггер\" "
"подразумевает передачу функции с триггером в одну из функций обработки "
"событий \"on_event()\":"

#, fuzzy
msgid ""
":doc:`/reference/reference_lua/box_session/on_connect` or "
":doc:`/reference/reference_lua/box_session/on_disconnect` or"
msgstr ""
":doc:`/reference/reference_lua/box_txn_management/on_commit` или "
":doc:`/reference/reference_lua/box_txn_management/on_rollback` или"

msgid ":doc:`/reference/reference_lua/box_session/on_auth` or"
msgstr ""

msgid ""
":ref:`space_object:on_replace() <box_space-on_replace>` or "
":ref:`space_object:before_replace() <box_space-before_replace>` or"
msgstr ""
":ref:`space_object:on_replace() <box_space-on_replace>`, "
":ref:`space_object:before_replace() <box_space-before_replace>` или"

msgid ""
":doc:`/reference/reference_lua/box_txn_management/on_commit` or "
":doc:`/reference/reference_lua/box_txn_management/on_rollback` or"
msgstr ""
":doc:`/reference/reference_lua/box_txn_management/on_commit` или "
":doc:`/reference/reference_lua/box_txn_management/on_rollback` или"

msgid ""
":ref:`net.box.on_connect() <net_box-on_connect>` or "
":ref:`net.box.on_disconnect() <net_box-on_disconnect>` or"
msgstr ""
":ref:`net.box.on_connect() <net_box-on_connect>` или "
":ref:`net.box.on_disconnect() <net_box-on_disconnect>` или"

msgid ":ref:`net.box.on_schema_reload() <net_box-on_schema_reload>`."
msgstr ":ref:`net.box.on_schema_reload() <net_box-on_schema_reload>`."

msgid ""
"Triggers are defined only by the :ref:`'admin' user <authentication-"
"owners_privileges>`."
msgstr ""
"Только :ref:`пользователь 'admin' <authentication-owners_privileges>` "
"определяет триггеры."

msgid ""
"Triggers are stored in the Tarantool instance's memory, not in the "
"database. Therefore triggers disappear when the instance is shut down. To"
" make them permanent, put function definitions and trigger settings into "
"Tarantool's :ref:`initialization script <index-init_label>`."
msgstr ""
"Триггеры хранятся в памяти экземпляра Tarantool'а, а не в базе данных. "
"Поэтому триггеры пропадают, когда экземпляр отключают. Чтобы сохранить "
"их, поместите определения функции и настройки триггера в :ref:`скрипт "
"инициализации <index-init_label>` Tarantool'а."

msgid ""
"Triggers have low overhead. If a trigger is not defined, then the "
"overhead is minimal: merely a pointer dereference and check. If a trigger"
" is defined, then its overhead is equivalent to the overhead of calling a"
" function."
msgstr ""
"Триггеры не тратят много ресурсов. Если триггер не задан, то требуется "
"минимум вычислений — разыменование и проверка указателя. Если триггер "
"определен, то стоимость вызова равна стоимости вызова функции."

msgid ""
"There can be multiple triggers for one event. In this case, triggers are "
"executed in the reverse order that they were defined in."
msgstr ""
"Для одного события можно определить несколько триггеров. В таком случае "
"триггеры выполняются в обратном порядке относительно того, как их "
"определили."

msgid ""
"Triggers must work within the event context. However, effects are "
"undefined if a function contains requests which normally could not occur "
"immediately after the event, but only before the return from the event. "
"For example, putting `os.exit() "
"<http://www.lua.org/manual/5.1/manual.html#pdf-os.exit>`_ or "
":doc:`/reference/reference_lua/box_txn_management/rollback` in a trigger "
"function would be bringing in requests outside the event context."
msgstr ""
"Триггеры должны работать в контексте события. Однако результат не "
"определен, если функция содержит запросы, которые при нормальных условиях"
" не могут быть выполнены непосредственно после события, а только после "
"возврата из события. Например, если указать `os.exit() "
"<http://www.lua.org/manual/5.1/manual.html#pdf-os.exit>`_ или "
":doc:`/reference/reference_lua/box_txn_management/rollback` в триггерной "
"функции, запросы не будут выполняться в контексте события."

msgid ""
"Triggers are replaceable. The request to \"redefine a trigger\" implies "
"passing a new trigger function and an old trigger function to one of the "
"\"on_event()\" functions."
msgstr ""
"Триггеры можно заменять. Запрос на \"замену триггера\" подразумевает "
"передачу новой триггерной функции и старой триггерной функции в одну из "
"функций обработки событий \"on_event()\"."

msgid ""
"The \"on_event()\" functions all have parameters which are function "
"pointers, and they all return function pointers. Remember that a Lua "
"function definition such as \"function f() x = x + 1 end\" is the same as"
" \"f = function () x = x + 1 end\" -- in both cases ``f`` gets a function"
" pointer. And \"trigger = box.session.on_connect(f)\" is the same as "
"\"trigger = box.session.on_connect(function () x = x + 1 end)\" -- in "
"both cases ``trigger`` gets the function pointer which was passed."
msgstr ""
"Во всех функциях обработки событий \"on_event()\" есть параметры, которые"
" представляют собой указатели функции, и все они возвращают указатели "
"функции. Следует запомнить, что определение Lua-функции, например, "
"\"function f() x = x + 1 end\" совпадает с \"f = function () x = x + 1 "
"end\" -- в обоих случаях ``f`` получит указатель функции. А \"trigger = "
"box.session.on_connect(f)\" -- это то же самое, что \"trigger = "
"box.session.on_connect(function () x = x + 1 end)\" -- в обоих случаях "
"``trigger`` получит переданный указатель функции."

msgid ""
"You can call any \"on_event()\" function with no arguments to get a list "
"of its triggers. For example, use ``box.session.on_connect()`` to return "
"a table of all connect-trigger functions."
msgstr ""
"Если вызвать любую из \"on_event()\" функций без аргументов, то она "
"вернет список соответствующих триггеров. Например, "
"``box.session.on_connect()`` вернет таблицу со всеми connect-trigger "
"функциями."

msgid "**Example**"
msgstr "**Пример**"

msgid "Here we log connect and disconnect events into Tarantool server log."
msgstr ""
"Здесь мы записываем события подключения и отключения в журнал на сервере "
"Tarantool'а."

msgid ""
"log = require('log')\n"
"\n"
"function on_connect_impl()\n"
"  log.info(\"connected \"..box.session.peer()..\", sid "
"\"..box.session.id())\n"
"end\n"
"\n"
"function on_disconnect_impl()\n"
"  log.info(\"disconnected, sid \"..box.session.id())\n"
"end\n"
"\n"
"function on_auth_impl(user)\n"
"  log.info(\"authenticated sid \"..box.session.id()..\" as \"..user)\n"
"end\n"
"\n"
"function on_connect() pcall(on_connect_impl) end\n"
"function on_disconnect() pcall(on_disconnect_impl) end\n"
"function on_auth(user) pcall(on_auth_impl, user) end\n"
"\n"
"box.session.on_connect(on_connect)\n"
"box.session.on_disconnect(on_disconnect)\n"
"box.session.on_auth(on_auth)"
msgstr ""
"log = require('log')\n"
"\n"
"function on_connect_impl()\n"
"  log.info(\"connected \"..box.session.peer()..\", sid "
"\"..box.session.id())\n"
"end\n"
"\n"
"function on_disconnect_impl()\n"
"  log.info(\"disconnected, sid \"..box.session.id())\n"
"end\n"
"\n"
"function on_auth_impl(user)\n"
"  log.info(\"authenticated sid \"..box.session.id()..\" as \"..user)\n"
"end\n"
"\n"
"function on_connect() pcall(on_connect_impl) end\n"
"function on_disconnect() pcall(on_disconnect_impl) end\n"
"function on_auth(user) pcall(on_auth_impl, user) end\n"
"\n"
"box.session.on_connect(on_connect)\n"
"box.session.on_disconnect(on_disconnect)\n"
"box.session.on_auth(on_auth)"

#~ msgid ""
#~ ":ref:`box.session.on_connect() <box_session-on_connect>`"
#~ " or :ref:`box.session.on_disconnect() <box_session-"
#~ "on_disconnect>` or"
#~ msgstr ""
#~ ":ref:`box.session.on_connect() <box_session-on_connect>`"
#~ " или :ref:`box.session.on_disconnect() <box_session-"
#~ "on_disconnect>` или"

#~ msgid ":ref:`box.session.on_auth() <box_session-on_auth>` or"
#~ msgstr ":ref:`box.session.on_auth() <box_session-on_auth>` или"
