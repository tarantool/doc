
msgid "Perl"
msgstr "Perl"

#, fuzzy
msgid ""
"The most commonly used Perl driver is `tarantool-perl "
"<https://github.com/tarantool/tarantool-perl>`__. It is not supplied as part"
" of the Tarantool repository; it must be installed separately. The most "
"common way to install it is by cloning from GitHub."
msgstr ""
"Самый используемый драйвер для Perl -- `tarantool-perl "
"<https://github.com/tarantool/tarantool-perl>`_. Он не входит в репозиторий "
"Tarantool, его необходимо устанавливать отдельно. Проще всего установить его"
" путем клонирования с GitHub."

#, fuzzy
msgid ""
"To avoid minor warnings that may appear the first time ``tarantool-perl`` is"
" installed, start with installing some other modules that ``tarantool-perl``"
" uses, with `CPAN, the Comprehensive Perl Archive Network "
"<https://en.wikipedia.org/wiki/Cpan>`__:"
msgstr ""
"Во избежание незначительных предупреждений, которые может выдать система "
"после первой установки ``tarantool-perl``, начните установку с некоторых "
"других модулей, которые использует ``tarantool-perl``, с `CPAN, the "
"Comprehensive Perl Archive Network (Всеобъемлющая сеть архивов Perl) "
"<https://ru.wikipedia.org/wiki/CPAN>`_:"

msgid ""
"$ sudo cpan install AnyEvent\n"
"$ sudo cpan install Devel::GlobalDestruction"
msgstr ""
"$ sudo cpan install AnyEvent\n"
"$ sudo cpan install Devel::GlobalDestruction"

msgid "Then, to install ``tarantool-perl`` itself, say:"
msgstr "Затем для установки самого ``tarantool-perl``, выполните:"

msgid ""
"$ git clone https://github.com/tarantool/tarantool-perl.git tarantool-perl\n"
"$ cd tarantool-perl\n"
"$ git submodule init\n"
"$ git submodule update --recursive\n"
"$ perl Makefile.PL\n"
"$ make\n"
"$ sudo make install"
msgstr ""
"$ git clone https://github.com/tarantool/tarantool-perl.git tarantool-perl\n"
"$ cd tarantool-perl\n"
"$ git submodule init\n"
"$ git submodule update --recursive\n"
"$ perl Makefile.PL\n"
"$ make\n"
"$ sudo make install"

#, fuzzy
msgid ""
"Here is a complete Perl program that inserts ``[99999,'BB']`` into "
"``space[999]`` via the Perl API. Before trying to run, check that the server"
" instance is listening at ``localhost:3301`` and that the space ``examples``"
" exists, as :ref:`described earlier <index-connector_setting>`. To run, "
"paste the code into a file named :file:`example.pl` and say :samp:`perl "
"example.pl`. The program will connect using an application-specific "
"definition of the space. The program will open a socket connection with the "
"Tarantool instance at ``localhost:3301``, then send an "
":ref:`space_object:INSERT <box_space-insert>` request, then — if all is well"
" — end without displaying any messages. If Tarantool is not running on "
"``localhost`` with :ref:`listen <cfg_basic-listen>` port = 3301, the program"
" will print “Connection refused”."
msgstr ""
"Далее приводится пример полноценной программы на языке Perl, которая "
"осуществляет вставку кортежа ``[99999,'BB']`` в спейс ``space[999]`` с "
"помощью API для языка Perl. Перед запуском проверьте, что у экземпляра задан"
" порт для прослушивания на ``localhost:3301``, и в базе создан спейс "
"``examples``, как :ref:`описано выше <index-connector_setting>`.  Чтобы "
"запустить программу, сохраните код в файл с именем :file:`example.pl` и "
"выполните команду :samp:`perl example.pl`. Программа установит соединение, "
"используя определение спейса для этой цели, откроет сокет для соединения с "
"экземпляром по ``localhost:3301``, пошлет запрос "
":ref:`space_object:INSERT<box_space-insert>`, а затем -- если всё хорошо -- "
"закончит работу без каких-либо сообщений. Если Tarantool не запущен на "
"``localhost`` на :ref:`прослушивание <cfg_basic-listen>` по порту = 3301, то"
" программа выдаст сообщение об ошибке \"Connection refused\"."

msgid ""
"#!/usr/bin/perl\n"
"use DR::Tarantool ':constant', 'tarantool';\n"
"use DR::Tarantool ':all';\n"
"use DR::Tarantool::MsgPack::SyncClient;\n"
"\n"
"my $tnt = DR::Tarantool::MsgPack::SyncClient->connect(\n"
"  host    => '127.0.0.1',                      # look for tarantool on localhost\n"
"  port    => 3301,                             # on port 3301\n"
"  user    => 'guest',                          # username. for 'guest' we do not also say 'password=>...'\n"
"\n"
"  spaces  => {\n"
"    999 => {                                   # definition of space[999] ...\n"
"      name => 'examples',                      #   space[999] name = 'examples'\n"
"      default_type => 'STR',                   #   space[999] field type is 'STR' if undefined\n"
"      fields => [ {                            #   definition of space[999].fields ...\n"
"          name => 'field1', type => 'NUM' } ], #     space[999].field[1] name='field1',type='NUM'\n"
"      indexes => {                             #   definition of space[999] indexes ...\n"
"        0 => {\n"
"          name => 'primary', fields => [ 'field1' ] } } } } );\n"
"\n"
"$tnt->insert('examples' => [ 99999, 'BB' ]);"
msgstr ""
"#!/usr/bin/perl\n"
"#!/usr/bin/perl\n"
"use DR::Tarantool ':constant', 'tarantool';\n"
"use DR::Tarantool ':all';\n"
"use DR::Tarantool::MsgPack::SyncClient;\n"
"\n"
"  host    => '127.0.0.1',                      # поиск Tarantool-сервера по адресу localhost\n"
"  port    => 3301,                             # на порту 3301\n"
"  user    => 'guest',                          # имя пользователя; здесь же можно добавить 'password=>...'\n"
"\n"
"  spaces  => {\n"
"    999 => {                                   # определение спейса  space[999] ...\n"
"      name => 'examples',                      # имя спейса space[999] = 'examples'\n"
"      default_type => 'STR',                   # если тип поля в space[999] не задан, то = 'STR'\n"
"      fields => [ {                            # определение полей в спейсе space[999] ...\n"
"          name => 'field1', type => 'NUM' } ], # имя поля space[999].field[1]='field1', тип ='NUM'\n"
"      indexes => {                             # определение индексов спейса space[999] ...\n"
"        0 => {\n"
"          name => 'primary', fields => [ 'field1' ] } } } } );\n"
"\n"
"$tnt->insert('examples' => [ 99999, 'BB' ]);"

#, fuzzy
msgid ""
"The example program uses field type names 'STR' and 'NUM' instead of "
":ref:`'string' and 'unsigned' <box_space-create_index>`, due to a temporary "
"Perl limitation."
msgstr ""
"Из-за временных ограничений в языке Perl, вместо полей типа :ref:`'string' и"
" 'unsigned'<box_space-create_index>` в тестовой программе указаны поля типа "
"'STR' и 'NUM'."

#, fuzzy
msgid ""
"The example program only shows one request and does not show all that's "
"necessary for good practice. For that, please see the `tarantool-perl "
"repository <https://github.com/tarantool/tarantool-perl>`__."
msgstr ""
"В этой программе мы привели пример использования лишь одного запроса. Для "
"полноценной работы с Tarantool обратитесь к документации из `репозитория "
"tarantool-perl <https://github.com/tarantool/tarantool-perl>`_."
