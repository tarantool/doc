
msgid "Synchronous replication"
msgstr "Синхронная репликация"

msgid "Overview"
msgstr "Общие сведения"

msgid ""
"By default, replication in Tarantool is **asynchronous**: if a transaction "
"is committed locally on a master node, it does not mean it is replicated "
"onto any replicas. If a master responds success to a client and then dies, "
"after failover to a replica, from the client's point of view the transaction"
" will disappear."
msgstr ""
"По умолчанию репликация в Tarantool **асинхронная**: локальный коммит "
"транзакции на мастере не означает, что эта транзакция будет сразу же "
"выполнена на репликах. Если мастер сообщит клиенту об успешном выполнении "
"операции, а потом прекратит работу и после отказа восстановится на реплике, "
"то с точки зрения клиента транзакция пропадет."

msgid ""
"**Synchronous** replication exists to solve this problem. Synchronous "
"transactions are not considered committed and are not responded to a client "
"until they are replicated onto some number of replicas."
msgstr ""
"Эту проблему решает **синхронная** репликация. Каждая синхронная транзакция "
"проходит коммит лишь после репликации на некотором количестве экземпляров, и"
" только тогда клиенту приходит ответ о завершении транзакции."

msgid "Usage"
msgstr "Использование"

msgid ""
"Since version :doc:`2.5.1 </release/2.5.1>`, synchronous replication can be "
"enabled per-space by using the ``is_sync`` option:"
msgstr ""
"Начиная с версии Tarantool :doc:`2.5.1 </release/2.5.1>`, синхронную "
"репликацию можно включать для отдельных спейсов, используя параметр "
"``is_sync``:"

msgid "box.schema.create_space('test1', {is_sync = true})"
msgstr "box.schema.create_space('test1', {is_sync = true})"

msgid ""
"Any transaction doing a DML request on this space becomes synchronous. "
"Notice that DDL on this space (including truncation) is **not** synchronous."
msgstr ""
"Все транзакции, где выполняются DML-запросы к такому спейсу, становятся "
"синхронными. Обратите внимание, что транзакции, где содержатся DDL-операции,"
" в том числе запросы на очистку (truncate), синхронными **не будут**."

msgid ""
"To control the behavior of synchronous transactions, there exist global "
"``box.cfg`` :ref:`options <cfg_replication-replication_synchro_quorum>`:"
msgstr ""
"Управлять поведением синхронных транзакций можно с помощью глобальных "
":ref:`параметров <cfg_replication-replication_synchro_quorum>` ``box.cfg``:"

msgid "box.cfg{replication_synchro_quorum = <number of instances>}"
msgstr "box.cfg{replication_synchro_quorum = <количество экземпляров>}"

msgid ""
"This option tells how many replicas should confirm the receipt of a "
"synchronous transaction before it is committed. Since version :doc:`2.10.0 </release/2.10.0>`, "
"this option does not account for anonymous replicas. As a usage example, consider "
"this:"
msgstr ""
"Параметр указывает, сколько реплик должно подтвердить получение синхронной "
"транзакции, прежде чем она пройдет коммит. Начиная с версии :doc:`2.10.0 </release/2.10.0>`, "
"анонимные реплики не учитываются. Пример:"

msgid ""
"-- Instance 1\n"
"box.cfg{\n"
"    listen = 3313,\n"
"    replication_synchro_quorum = 2,\n"
"}\n"
"box.schema.user.grant('guest', 'super')\n"
"_ = box.schema.space.create('sync', {is_sync=true})\n"
"_ = _:create_index('pk')"
msgstr ""
"-- Экземпляр 1\n"
"box.cfg{\n"
"    listen = 3313,\n"
"    replication_synchro_quorum = 2,\n"
"}\n"
"box.schema.user.grant('guest', 'super')\n"
"_ = box.schema.space.create('sync', {is_sync=true})\n"
"_ = _:create_index('pk')"

msgid ""
"-- Instance 2\n"
"box.cfg{\n"
"    listen = 3314,\n"
"    replication = 'localhost:3313'\n"
"}"
msgstr ""
"-- Экземпляр 2\n"
"box.cfg{\n"
"    listen = 3314,\n"
"    replication = 'localhost:3313'\n"
"}"

msgid ""
"-- Instance 1\n"
"box.space.sync:replace{1}"
msgstr ""
"-- Экземпляр 1\n"
"box.space.sync:replace{1}"

msgid ""
"When the first instance makes ``replace()``, it won't finish until the "
"second instance confirms its receipt and successful appliance. Note that the"
" quorum is set to 2, but the transaction was still committed even though "
"there is only one replica. This is because the master instance itself also "
"participates in the quorum."
msgstr ""
"Операция ``replace()``, вызванная на первом экземпляре, не будет "
"завершена, пока второй экземпляр не подтвердит получение и успешное "
"применение транзакции. Обратите внимание, что кворум равен 2, а реплика "
"одна, но транзакция все же успешно проходит коммит. Это происходит "
"потому, что мастер также участвует в кворуме."

msgid ""
"Now, if the second instance is down, the first one won't be able to commit "
"any synchronous change."
msgstr ""
"Если второй экземпляр прекратит работу, первый не сможет выполнять коммиты "
"для синхронных изменений."

msgid ""
"-- Instance 2\n"
"Ctrl+D"
msgstr ""
"-- Экземпляр 2\n"
"Ctrl+D"

msgid ""
"-- Instance 1\n"
"tarantool> box.space.sync:replace{2}\n"
"---\n"
"- error: Quorum collection for a synchronous transaction is timed out\n"
"..."
msgstr ""
"-- Экземпляр 1\n"
"tarantool> box.space.sync:replace{2}\n"
"---\n"
"- error: Quorum collection for a synchronous transaction is timed out\n"
"..."

msgid ""
"The transaction wasn't committed because it failed to achieve the quorum in "
"the given time. The time is a second configuration option:"
msgstr ""
"Транзакция не прошла коммит, поскольку за определенное время не был набран "
"кворум. Время — ещё один параметр конфигурации:"

msgid ""
"box.cfg{replication_synchro_timeout = <number of seconds, can be float>}"
msgstr ""
"box.cfg{replication_synchro_timeout = <время в секундах; может иметь тип "
"float>}"

msgid ""
"It tells how many seconds to wait for a synchronous transaction quorum "
"replication until it is declared failed and is rolled back."
msgstr ""
"Параметр указывает, сколько секунд синхронная транзакция будет ожидать "
"репликации на кворуме. По истечении этого времени транзакция будет отменена."

msgid ""
"A successful synchronous transaction commit is persisted in the WAL as a "
"special CONFIRM record. The rollbacks are similarly persisted with a "
"ROLLBACK record."
msgstr ""
"Успешные коммиты синхронных транзакций персистентно сохраняются в журнал "
"упреждающей записи (WAL) в виде особых записей CONFIRM. Сообщения об отмене "
"транзакций сохраняются аналогичным образом в виде записей ROLLBACK."

msgid ""
"The ``timeout`` and ``quorum`` options are not used on replicas. It means if"
" the master dies, the pending synchronous transactions will be kept waiting "
"on the replicas until a new master is elected."
msgstr ""
"Параметры ``timeout`` и ``quorum`` на репликах не используются. Если мастер "
"прекратит работу, синхронные транзакции, которые находятся в обработке на "
"репликах, будут ожидать выборов нового мастера."

msgid "Synchronous and asynchronous transactions"
msgstr "Синхронные и асинхронные транзакции"

msgid ""
"A killer feature of Tarantool's synchronous replication is its being *per-"
"space*. So, if you need it only rarely for some critical data changes, you "
"won't pay for it in performance terms."
msgstr ""
"В Tarantool синхронную репликацию можно настроить для отдельных спейсов. Эта"
" удобная функция позволит вам не потерять в производительности, если "
"синхронная репликация нужна вам лишь изредка для изменения критически важных"
" данных."

msgid ""
"When there is more than one synchronous transaction, they all wait for being"
" replicated. Moreover, if an asynchronous transaction appears, it will also "
"be blocked by the existing synchronous transactions. This behavior is very "
"similar to a regular queue of asynchronous transactions because all the "
"transactions are committed in the same order as they make the "
"``box.commit()`` call. So, here comes **the commit rule**: transactions are "
"committed in the same order as they make the ``box.commit()`` "
"call—regardless of being synchronous or asynchronous."
msgstr ""
"Если наряду с несколькими синхронными транзакциями, ожидающими репликации, "
"совершается асинхронная транзакция, она блокируется синхронными. Коммиты при"
" этом выполняются в той последовательности, в которой для каждой из "
"транзакций вызывается метод ``box.commit()``. Похожим образом работает "
"обычная очередь асинхронных транзакций. Можно сформулировать **правило "
"коммитов**: порядок коммитов соответствует порядку вызова ``box.commit()`` "
"для каждой из транзакций, независимо от того, синхронные транзакции или "
"асинхронные."

msgid ""
"If one of the waiting synchronous transactions times out and is rolled back,"
" it will first roll back all the newer pending transactions. Again, just "
"like how asynchronous transactions are rolled back when WAL write fails. So,"
" here comes **the rollback rule:** transactions are always rolled back in "
"the order reversed from the one they make the ``box.commit()`` "
"call—regardless of being synchronous or asynchronous."
msgstr ""
"Если для одной из синхронных транзакций истечет время ожидания, эта "
"транзакция будет отменена, а вместе с ней и все последующие транзакции в "
"очереди на репликацию. Похожим образом отменяются и асинхронные транзакции "
"при ошибке записи в WAL. Действует **правило отмены**: транзакции отменяются"
" в порядке, обратном порядку вызова ``box.commit()`` для каждой из них, "
"независимо от того, синхронные транзакции или асинхронные."

msgid ""
"One more important thing is that if an asynchronous transaction is blocked "
"by a synchronous transaction, it does not become synchronous as well. This "
"just means it will wait for the synchronous transaction to be committed. But"
" once it is done, the asynchronous transaction will be committed "
"immediately—it won't wait for being replicated itself."
msgstr ""
"Асинхронная транзакция, заблокированная синхронной, не становится сама "
"синхронной, а просто ожидает коммита синхронной транзакции. Как только это "
"произойдет, асинхронная транзакция сразу сможет пройти коммит, не ожидая "
"репликации."

msgid "Limitations and known problems"
msgstr "Ограничения и известные проблемы"

msgid ""
"Until version :doc:`2.5.2 </release/2.5.2>`, there was no way to enable "
"synchronous replication for existing spaces, but since 2.5.2 it can be "
"enabled by :ref:`space_object:alter({is_sync = true}) <box_space-alter>`."
msgstr ""
"До версии :doc:`2.5.2 </release/2.5.2>` способа настроить синхронную "
"репликацию для существующих спейсов не было. Однако, начиная с версии 2.5.2,"
" ее можно включить, вызвав метод :ref:`space_object:alter({is_sync = true}) "
"<box_space-alter>`."

msgid ""
"Synchronous transactions work only for master-slave topology. You can have "
"multiple replicas, anonymous replicas, but only one node can make "
"synchronous transactions."
msgstr ""
"Синхронные транзакции работают исключительно в топологии \"мастер-реплика\"."
" В кластере может быть несколько реплик, в том числе анонимных, однако "
"синхронные транзакции должен совершать только один узел."

msgid ""
"Since Tarantool :doc:`2.10.0 </release/2.10.0>`, anonymous replicas "
"do not participate in the quorum."
msgstr ""
"Начиная с версии Tarantool :doc:`2.10.0 </release/2.10.0>`, анонимные реплики не участвуют в кворуме."

msgid "Leader election"
msgstr "Выборы лидера"

msgid ""
"Starting from version :doc:`2.6.1 </release/2.6.1>`, Tarantool has the "
"built-in functionality managing automated leader election in a replica set. "
"For more information, refer to the :ref:`corresponding chapter "
"<repl_leader_elect>`."
msgstr ""
"В Tarantool, начиная с версии :doc:`2.6.1 </release/2.6.1>`, есть встроенная"
" функциональность для управления автоматическими выборами лидера (automated "
"leader election) в наборе реплик. Подробности можно найти в "
":ref:`соответствующей главе <repl_leader_elect>`."

msgid "Tips and tricks"
msgstr "Полезные советы"

msgid ""
"If a transaction is rolled back, it does not mean the ROLLBACK message "
"reached the replicas. It still can happen that the master node suddenly "
"dies, so the transaction will be committed by the new master. Your "
"application logic should be ready for that."
msgstr ""
"Если транзакция была отменена, это не обязательно значит, что реплики "
"получили сообщение ROLLBACK. Может возникнуть ситуация, когда мастер "
"внезапно прекратит работу, а после этого коммит транзакции будет выполнен "
"новым мастером. Учитывайте это в логике вашего приложения."

msgid ""
"Synchronous transactions are better to use with full mesh. Then the replicas"
" can talk to each other in case of the master node's death and still confirm"
" some pending transactions."
msgstr ""
"Синхронные транзакции лучше всего использовать в кластерах с полноячеистой "
"топологией (full mesh). В этом случае реплики смогут общаться друг с другом "
"и подтверждать некоторые транзакции, даже если откажет мастер."
