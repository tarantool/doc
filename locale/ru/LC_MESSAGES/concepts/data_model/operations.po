
msgid "Operations"
msgstr "Операции"

msgid "Data operations"
msgstr "Операции с данными"

msgid "The basic data operations supported in Tarantool are:"
msgstr "Tarantool поддерживает следующие основные операции с данными:"

msgid ""
"five data-manipulation operations (INSERT, UPDATE, UPSERT, DELETE, REPLACE),"
" and"
msgstr ""
"пять операций по изменению данных (INSERT, UPDATE, UPSERT, DELETE, REPLACE) "
"и"

msgid "one data-retrieval operation (SELECT)."
msgstr "одну операцию по выборке данных (SELECT)."

msgid ""
"All of them are implemented as functions in :ref:`box.space <box_space>` "
"submodule."
msgstr ""
"Все они реализованы в виде функций во вложенном модуле  :ref:`box.space "
"<box_space>`."

msgid "**Examples:**"
msgstr "**Примеры:**"

msgid ":ref:`INSERT <box_space-insert>`: Add a new tuple to space 'tester'."
msgstr ""
":ref:`INSERT <box_space-insert>`: добавить новый кортеж к спейсу 'tester'."

msgid "The first field, field[1], will be 999 (MsgPack type is `integer`)."
msgstr ""
"Первое поле, field[1], будет 999 (тип MsgPack -- `integer`, целое число)."

msgid ""
"The second field, field[2], will be 'Taranto' (MsgPack type is `string`)."
msgstr ""
"Второе поле, field[2], будет 'Taranto' (тип MsgPack -- `string`, строка)."

msgid "tarantool> box.space.tester:insert{999, 'Taranto'}"
msgstr "tarantool> box.space.tester:insert{999, 'Taranto'}"

msgid ""
":ref:`UPDATE <box_space-update>`: Update the tuple, changing field field[2]."
msgstr ""
":ref:`UPDATE <box_space-update>`: обновить кортеж, изменяя поле field[2]."

msgid ""
"The clause \"{999}\", which has the value to look up in the index of the "
"tuple's primary-key field, is mandatory, because ``update()`` requests must "
"always have a clause that specifies a unique key, which in this case is "
"field[1]."
msgstr ""
"Оператор \"{999}\" со значением, которое используется для поиска поля, "
"соответствующего ключу в первичном индексе, является обязательным, поскольку"
" в запросе ``update()`` должен быть оператор, который указывает уникальный "
"ключ, в данном случае -- field[1]."

msgid ""
"The clause \"{{'=', 2, 'Tarantino'}}\" specifies that assignment will happen"
" to field[2] with the new value."
msgstr ""
"Оператор \"{{'=', 2, 'Tarantino'}}\" указывает, что назначение нового "
"значения относится к field[2]."

msgid "tarantool> box.space.tester:update({999}, {{'=', 2, 'Tarantino'}})"
msgstr "tarantool> box.space.tester:update({999}, {{'=', 2, 'Tarantino'}})"

msgid ""
":ref:`UPSERT <box_space-upsert>`: Upsert the tuple, changing field field[2] "
"again."
msgstr ""
":ref:`UPSERT <box_space-upsert>`: обновить или вставить кортеж, снова "
"изменяя поле field[2]."

msgid ""
"The syntax of ``upsert()`` is similar to the syntax of ``update()``. "
"However, the execution logic of these two requests is different. UPSERT is "
"either UPDATE or INSERT, depending on the database's state. Also, UPSERT "
"execution is postponed until after transaction commit, so, unlike "
"``update()``, ``upsert()`` doesn't return data back."
msgstr ""
"Синтаксис ``upsert()`` похож на синтаксис ``update()``. Однако логика "
"выполнения двух запросов отличается. UPSERT означает UPDATE или INSERT, в "
"зависимости от состояния базы данных. Кроме того, выполнение UPSERT "
"откладывается до коммита транзакции, поэтому в отличие от ``update()``, "
"``upsert()`` не возвращает данные."

msgid ""
"tarantool> box.space.tester:upsert({999, 'Taranted'}, {{'=', 2, "
"'Tarantism'}})"
msgstr ""
"tarantool> box.space.tester:upsert({999, 'Taranted'}, {{'=', 2, "
"'Tarantism'}})"

msgid ""
":ref:`REPLACE <box_space-replace>`: Replace the tuple, adding a new field."
msgstr ""
":ref:`REPLACE <box_space-replace>`: заменить кортеж, добавляя новое поле."

msgid ""
"This is also possible with the ``update()`` request, but the ``update()`` "
"request is usually more complicated."
msgstr ""
"Это действие также можно выполнить с помощью запроса ``update()``, но обычно"
" запрос ``update()`` более сложен."

msgid "tarantool> box.space.tester:replace{999, 'Tarantella', 'Tarantula'}"
msgstr "tarantool> box.space.tester:replace{999, 'Tarantella', 'Tarantula'}"

msgid ":ref:`SELECT <box_space-select>`: Retrieve the tuple."
msgstr ":ref:`SELECT <box_space-select>`: провести выборку кортежа."

msgid ""
"The clause \"{999}\" is still mandatory, although it does not have to "
"mention the primary key."
msgstr ""
"Оператор \"{999}\" все еще обязателен, хотя в нем не должен упоминаться "
"первичный ключ."

msgid "tarantool> box.space.tester:select{999}"
msgstr "tarantool> box.space.tester:select{999}"

msgid ":ref:`DELETE <box_space-delete>`: Delete the tuple."
msgstr ":ref:`DELETE <box_space-delete>`: удалить кортеж."

msgid "In this example, we identify the primary-key field."
msgstr ""
"В этом примере мы определяем поле, соответствующее ключу в первичном "
"индексе."

msgid "tarantool> box.space.tester:delete{999}"
msgstr "tarantool> box.space.tester:delete{999}"

msgid "Summarizing the examples:"
msgstr "Подводя итоги по примерам:"

msgid ""
"Functions ``insert`` and ``replace`` accept a tuple (where a primary key "
"comes as part of the tuple)."
msgstr ""
"Функции ``insert`` и ``replace`` принимают кортеж (где первичный ключ -- это"
" часть кортежа)."

msgid ""
"Function ``upsert`` accepts a tuple (where a primary key comes as part of "
"the tuple), and also the update operations to execute."
msgstr ""
"Функция ``upsert`` принимает кортеж (где первичный ключ -- это часть "
"кортежа), а также операции по обновлению."

msgid ""
"Function ``delete`` accepts a full key of any unique index (primary or "
"secondary)."
msgstr ""
"Функция ``delete`` принимает полный ключ любого уникального индекса "
"(первичный или вторичный)."

msgid ""
"Function ``update`` accepts a full key of any unique index (primary or "
"secondary), and also the operations to execute."
msgstr ""
"Функция  ``update`` принимает полный ключ любого уникального индекса "
"(первичный или вторичный), а также операции к выполнению."

msgid ""
"Function ``select`` accepts any key: primary/secondary, unique/non-unique, "
"full/partial."
msgstr ""
"Функция ``select`` принимает любой ключ: первичный/вторичный, "
"уникальный/неуникальный, полный/часть."

msgid ""
"See reference on ``box.space`` for more :ref:`details on using data "
"operations <box_space-operations-detailed-examples>`."
msgstr ""
"Для получения более :ref:`подробной информации по использованию операций с "
"данными <box_space-operations-detailed-examples>` см. справочник по "
"``box.space``."

msgid ""
"Besides Lua, you can use :ref:`Perl, PHP, Python or other programming "
"language connectors <index-box_connectors>`. The client server protocol is "
"open and documented. See this :ref:`annotated BNF <box_protocol-"
"iproto_protocol>`."
msgstr ""
"Помимо Lua можно использовать :ref:`коннекторы к Perl, PHP, Python или "
"другому языку программирования <index-box_connectors>`. Клиент-серверный "
"протокол открыт и задокументирован. См. :ref:`БНФ с комментариями "
"<box_protocol-iproto_protocol>`."

msgid "Complexity factors"
msgstr "Факторы сложности"

msgid ""
"In reference for :ref:`box.space <box_space>` and "
":doc:`/reference/reference_lua/box_index` submodules, there are notes about "
"which complexity factors might affect the resource usage of each function."
msgstr ""
"Во вложенных модулях :ref:`box.space <box_space>` и "
":doc:`/reference/reference_lua/box_index` содержится информация о том, как "
"факторы сложности могут повлиять на использование каждой функции."

msgid "Complexity factor"
msgstr "Фактор сложности"

msgid "Effect"
msgstr "Эффект"

msgid "Index size"
msgstr "Размер индекса"

msgid ""
"The number of index keys is the same as the number of tuples in the data "
"set. For a TREE index, if there are more keys, then the lookup time will be "
"greater, although, of course, the effect is not linear. For a HASH index, if"
" there are more keys, then there is more RAM used, but the number of low-"
"level steps tends to remain constant."
msgstr ""
"Количество ключей в индексе равно количеству кортежей в наборе данных. Для "
"TREE-индекса: чем больше ключей, тем больше время поиска, хотя зависимость "
"здесь, конечно же, нелинейная. Для HASH-индекса: чем больше ключей, тем "
"больше нужно оперативной памяти, но количество низкоуровневых шагов остается"
" примерно тем же."

#, fuzzy
msgid "Index type"
msgstr "Размер индекса"

msgid ""
"Typically, a HASH index is faster than a TREE index if the number of tuples "
"in the space is greater than one."
msgstr ""
"Как правило, поиск по HASH-индексу работает быстрее, чем по TREE-индексу,  "
"если в спейсе более одного кортежа."

msgid "Number of indexes accessed"
msgstr "Количество обращений к индексам"

#, fuzzy
msgid ""
"Ordinarily, only one index is accessed to retrieve one tuple. But to update "
"the tuple, there must be N accesses if the space has N different indexes. "
"|br| Note regarding storage engine: Vinyl optimizes away such accesses if "
"secondary index fields are unchanged by the update. So, this complexity "
"factor applies only to memtx, since it always makes a full-tuple copy on "
"every update."
msgstr ""
"Примечание по движку базы данных: если обновление не затрагивает поля "
"вторичного индекса, vinyl не производит эти обращения. Таким образом, этот "
"фактор сложности влияет только на memtx, который создает копию всего кортежа"
" при каждом обновлении."

msgid "Number of tuples accessed"
msgstr "Количество обращений к кортежам"

msgid ""
"A few requests, for example, SELECT, can retrieve multiple tuples. This "
"factor is usually less important than the others."
msgstr ""
"Некоторые запросы, например SELECT, могут возвращать несколько кортежей. "
"Обычно этот фактор менее важен, чем другие."

msgid "WAL settings"
msgstr "Настройки WAL"

msgid ""
"The important setting for the write-ahead log is :ref:`wal_mode "
"<cfg_binary_logging_snapshots-wal_mode>`. If the setting causes no writing "
"or delayed writing, this factor is unimportant. If the setting causes every "
"data-change request to wait for writing to finish on a slow device, this "
"factor is more important than all the others."
msgstr ""
"Важным параметром для записи в WAL является :ref:`wal_mode "
"<cfg_binary_logging_snapshots-wal_mode>`. Если запись в WAL отключена или "
"задана запись с задержкой, но этот фактор не так важен. Если же запись в  "
"WAL производится при каждом запросе на изменение данных, то при каждом таком"
" запросе приходится ждать, пока отработает обращение к более медленному "
"диску, и данный фактор становится важнее всех остальных."

#~ msgid ""
#~ "Ordinarily, only one index is accessed to retrieve one tuple. But to update "
#~ "the tuple, there must be N accesses if the space has N different indexes."
#~ msgstr ""
#~ "Обычно для выборки значений одного кортежа используется только один индекс. "
#~ "Но при обновлении значений в кортеже требуется N обращений, если в спейсе N "
#~ "индексов."
