
msgid "Data schema description"
msgstr "Описание схемы данных"

msgid "In Tarantool, the use of a data schema is optional."
msgstr "В Tarantool использование схемы данных опционально."

msgid ""
"When creating a :term:`space <space>`, you do not have to define a data "
"schema. In this case, the tuples store random data. This rule does not apply"
" to indexed fields. Such fields must contain data of the same type."
msgstr ""
"При создании :term:`спейса <space>` схему можно не задавать и тогда в "
"кортежах могут лежать произвольные данные. Это правило не распространяется "
"на поля, по которым построены индексы. У таких полей данные должны быть "
"одного типа."

msgid ""
"You can define a data schema when creating a space. Read more in the "
"description of the :doc:`/reference/reference_lua/box_schema/space_create` "
"function. If you have already created a space without specifying a data "
"schema, you can do it later using "
":doc:`/reference/reference_lua/box_space/format`."
msgstr ""
"Схему можно задать при создании спейса. Читайте подробнее в описании функции"
" :doc:`/reference/reference_lua/box_schema/space_create`. Если вы создали "
"спейс без схемы, ее можно добавить позже с помощью метода "
":doc:`/reference/reference_lua/box_space/format`."

msgid ""
"After the data schema is defined, all the data is validated by type. Before "
"any insert or update, you will get an error if the data types do not match."
msgstr ""
"После указания схемы данные начинают валидироваться по типам. Перед каждой "
"операцией вставки или обновления они проверяются, и в случае несоответствия "
"типов вы получите ошибку."

msgid "We recommend using a data schema because it helps avoid mistakes."
msgstr ""
"Мы рекомендуем использовать подход со схемой, потому что он помогает "
"избежать ошибок."

msgid "In Tarantool, you can define a data schema in two different ways."
msgstr "Схему в Tarantool можно задавать двумя разными способами."

msgid "Data schema description in a code file"
msgstr "Описание схемы в файле с кодом"

msgid ""
"The code file is usually called ``init.lua`` and contains the following "
"schema description:"
msgstr ""
"Обычно файл с кодом называется ``init.lua`` и имеет следующее описание "
"схемы:"

msgid ""
"box.cfg()\n"
"\n"
"users = box.schema.create_space('users', { if_not_exists = true })\n"
"users:format({{ name = 'user_id', type = 'number'}, { name = 'fullname', type = 'string'}})\n"
"\n"
"users:create_index('pk', { parts = { { field = 'user_id', type = 'number'}}})"
msgstr ""
"box.cfg()\n"
"\n"
"users = box.schema.create_space('users', { if_not_exists = true })\n"
"users:format({{ name = 'user_id', type = 'number'}, { name = 'fullname', type = 'string'}})\n"
"\n"
"users:create_index('pk', { parts = { { field = 'user_id', type = 'number'}}})"

msgid ""
"This is quite simple: when you run tarantool, it executes this code and "
"creates a data schema. To run this file, use:"
msgstr ""
"Этот подход довольно простой. Когда вы запустите tarantool, этот код "
"исполнится и создаст схему. Чтобы запустить файл, используйте следующую "
"команду:"

msgid "tarantool init.lua"
msgstr "tarantool init.lua"

msgid ""
"However, it may seem complicated if you do not plan to dive deep into the "
"Lua language and its syntax."
msgstr ""
"Но это может показаться слишком сложным, если вы не собираетесь глубоко "
"разбираться с языком Lua и его синтаксисом."

msgid ""
"Possible difficulty: the snippet above has a function call with a colon: "
"``users:format``. It is used to pass the ``users`` variable as the first "
"argument of the ``format`` function. This is similar to ``self`` in object-"
"based languages."
msgstr ""
"Пример возможной сложности: в фрагменте выше есть вызов функций с "
"двоеточием: ``users:format``. Он используется, чтобы передать переменную "
"``users`` в качестве первого аргумента функции ``format``. Это аналог "
"``self`` в объектно-ориентированных языках."

msgid ""
"So it might be more convenient for you to describe the data schema with "
"YAML."
msgstr "Поэтому вам может быть удобно описать схему через YAML."

msgid "Data schema description using the DDL module"
msgstr "Описание через модуль DDL"

msgid ""
"The `DDL module <https://github.com/tarantool/ddl>`_ allows you to describe "
"a data schema in the YAML format in a declarative way."
msgstr ""
"`Модуль DDL <https://github.com/tarantool/ddl>`_ позволяет декларативно "
"описывать схему данных в YAML формате."

msgid "The schema would look something like this:"
msgstr "Схема будет выглядеть примерно вот так:"

msgid ""
"spaces:\n"
"    users:\n"
"      engine: memtx\n"
"      is_local: false\n"
"      temporary: false\n"
"      format:\n"
"      - {name: user_id, type: uuid, is_nullable: false}\n"
"      - {name: fullname, type: string,  is_nullable: false}\n"
"      indexes:\n"
"      - name: user_id\n"
"        unique: true\n"
"        parts: [{path: user_id, type: uuid, is_nullable: false}]\n"
"        type: HASH"
msgstr ""
"spaces:\n"
"    users:\n"
"      engine: memtx\n"
"      is_local: false\n"
"      temporary: false\n"
"      format:\n"
"      - {name: user_id, type: uuid, is_nullable: false}\n"
"      - {name: fullname, type: string,  is_nullable: false}\n"
"      indexes:\n"
"      - name: user_id\n"
"        unique: true\n"
"        parts: [{path: user_id, type: uuid, is_nullable: false}]\n"
"        type: HASH"

msgid ""
"This alternative is simpler to use, and you do not have to dive deep into "
"Lua."
msgstr ""
"Этот вариант проще для старта: его проще использовать и не нужно вникать в "
"язык Lua."

msgid ""
"``DDL`` is a built-in :doc:`Cartridge </book/cartridge/index>` module. "
"Cartridge is a cluster solution for Tarantool. In its WebUI, there is a "
"separate tab called \"Schema\". On this tab, you can define the schema, "
"check its correctness, and apply it to the whole cluster."
msgstr ""
"Модуль ``DDL`` встроен по умолчанию в :doc:`Cartridge </book/cartridge/index>`.\n"
"Cartridge — это кластерное решение для Tarantool. В его веб-интерфейсе есть\n"
"отдельная вкладка \"Schema\". Там можно написать схему, проверить ее корректность и применить на всем кластере."

msgid ""
"If you do not use Cartridge, you can still use the DDL module: put the "
"following Lua code into the file that you use to run Tarantool. This file is"
" usually called ``init.lua``."
msgstr ""
"Если вы не используете Cartridge, то чтобы использовать модуль DDL, нужно "
"вставить нижеприведенный код на Lua в файл, с которым вы запускаете "
"Tarantool. Обычно это ``init.lua``."

msgid ""
"local yaml = require('yaml')\n"
"local ddl = require('ddl')\n"
"\n"
"box.cfg{}\n"
"\n"
"local fh = io.open('ddl.yml', 'r')\n"
"local schema = yaml.decode(fh:read('*all'))\n"
"fh:close()\n"
"local ok, err = ddl.check_schema(schema)\n"
"if not ok then\n"
"    print(err)\n"
"end\n"
"local ok, err = ddl.set_schema(schema)\n"
"if not ok then\n"
"    print(err)\n"
"end"
msgstr ""
"local yaml = require('yaml')\n"
"local ddl = require('ddl')\n"
"\n"
"box.cfg{}\n"
"\n"
"local fh = io.open('ddl.yml', 'r')\n"
"local schema = yaml.decode(fh:read('*all'))\n"
"fh:close()\n"
"local ok, err = ddl.check_schema(schema)\n"
"if not ok then\n"
"    print(err)\n"
"end\n"
"local ok, err = ddl.set_schema(schema)\n"
"if not ok then\n"
"    print(err)\n"
"end"

msgid ""
"It is forbidden to modify the data schema in DDL after it has been applied. "
"For migration, there are different scenarios described in the :ref:`Migrations <migrations>` section."
msgstr ""
"Менять схему в самом DDL после ее применения нельзя. Для миграций есть "
"несколько подходов — они описаны в разделе :ref:`Миграции <migrations>`."