msgid ""
msgstr ""
"Plural-Forms: nplurals=4; plural=((n%10==1 && n%100!=11) ? 0 : ((n%10 >= 2 && n%10 <=4 && (n%100 < 12 || n%100 > 14)) ? 1 : ((n%10 == 0 || (n%10 >= 5 && n%10 <=9)) || (n%100 >= 11 && n%100 <= 14)) ? 2 : 3));\n"
"X-Crowdin-Project: tarantool-docs\n"
"X-Crowdin-Project-ID: 442986\n"
"X-Crowdin-Language: ru\n"
"X-Crowdin-File: /en/contributing/docs/examples.pot\n"
"X-Crowdin-File-ID: 1480\n"
"Project-Id-Version: tarantool-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Russian\n"
"Language: ru_RU\n"
"PO-Revision-Date: 2021-04-23 11:58\n"

msgid "Examples and templates"
msgstr "Примеры и шаблоны"

msgid "In this document, we explain general guidelines for describing Tarantool API and give some examples and templates."
msgstr ""

msgid "Use this checklist for documenting a function or a method:"
msgstr ""

msgid "Base description"
msgstr ""

msgid "Parameters"
msgstr "Параметры"

msgid "What this function returns (if nothing, write 'none')"
msgstr ""

msgid "Return type (if exists)"
msgstr ""

msgid "Possible errors (if exist)"
msgstr ""

msgid "Complexity factors (if exist)"
msgstr ""

msgid "Note re storage engine (if exists)"
msgstr ""

msgid "Example(s)"
msgstr ""

msgid "Extra information (if needed)"
msgstr ""

msgid "Documenting a function"
msgstr ""

msgid "We describe functions of Tarantool modules via Sphinx directives ``.. module::`` and ``.. function::``:"
msgstr ""

msgid "..  module:: fiber\n\n"
"..  function:: create(function [, function-arguments])\n\n"
"    Create and start a fiber. The fiber is created and begins to run immediately.\n\n"
"    :param function: the function to be associated with the fiber\n"
"    :param function-arguments: what will be passed to function\n\n"
"    :return: created fiber object\n"
"    :rtype: userdata\n\n"
"    **Example:**\n\n"
"    ..  code-block:: tarantoolsession\n\n"
"        tarantool> fiber = require('fiber')\n"
"        ---\n"
"        ...\n"
"        tarantool> function function_name()\n"
"                 >   print(\"I'm a fiber\")\n"
"                 > end\n"
"        ---\n"
"        ...\n"
"        tarantool> fiber_object = fiber.create(function_name); print(\"Fiber started\")\n"
"        I'm a fiber\n"
"        Fiber started\n"
"        ---\n"
"        ...\n"
msgstr ""

msgid "And the resulting output looks like this:"
msgstr ""

msgid "Create and start a fiber. The fiber is created and begins to run immediately."
msgstr "Создание и запуск файбера. Происходит создание файбера, который незамедлительно начинает работу."

msgid "the function to be associated with the fiber"
msgstr "функция, которая будет связана с файбером"

msgid "what will be passed to function"
msgstr "что передается в функцию"

msgid "return"
msgstr "возвращает"

msgid "created fiber object"
msgstr "созданный объект файбера"

msgid "rtype"
msgstr "возвращаемое значение"

msgid "userdata"
msgstr "пользовательские данные"

msgid "**Example:**"
msgstr "**Пример:**"

msgid "tarantool> fiber = require('fiber')\n"
"---\n"
"...\n"
"tarantool> function function_name()\n"
"         >   print(\"I'm a fiber\")\n"
"         > end\n"
"---\n"
"...\n"
"tarantool> fiber_object = fiber.create(function_name); print(\"Fiber started\")\n"
"I'm a fiber\n"
"Fiber started\n"
"---\n"
"..."
msgstr "tarantool> fiber = require('fiber')\n"
"---\n"
"...\n"
"tarantool> function function_name()\n"
"         >   print(\"I'm a fiber\")\n"
"         > end\n"
"---\n"
"...\n"
"tarantool> fiber_object = fiber.create(function_name); print(\"Fiber started\")\n"
"I'm a fiber\n"
"Fiber started\n"
"---\n"
"..."

msgid "Documenting class method and data"
msgstr ""

msgid "Description of a method is similar to a function, but the ``.. class::`` directive, unlike ``.. module::``, requires nesting."
msgstr ""

msgid "As for documenting data, it will be enough to write a description, a return type, and an example."
msgstr ""

msgid "Here is an example of documenting a method and data of a class ``index_object``:"
msgstr ""

msgid "..  class:: index_object\n\n"
"    ..  method:: get(key)\n\n"
"        Search for a tuple :ref:`via the given index <box_index-note>`.\n\n"
"        :param index_object index_object: an :ref:`object reference\n"
"                                          <app_server-object_reference>`.\n"
"        :param scalar/table      key: values to be matched against the index key\n\n"
"        :return: the tuple whose index-key fields are equal to the passed key values\n"
"        :rtype:  tuple\n\n"
"        **Possible errors:**\n\n"
"        * no such index;\n"
"        * wrong type;\n"
"        * more than one tuple matches.\n\n"
"        **Complexity factors:** Index size, Index type.\n"
"        See also :ref:`space_object:get() <box_space-get>`.\n\n"
"        **Example:**\n\n"
"        ..  code-block:: tarantoolsession\n\n"
"            tarantool> box.space.tester.index.primary:get(2)\n"
"            ---\n"
"            - [2, 'Music']\n"
"            ...\n\n"
"    ..  data:: unique\n\n"
"        True if the index is unique, false if the index is not unique.\n\n"
"        :rtype: boolean\n\n"
"        ..  code-block:: tarantoolsession\n\n"
"            tarantool> box.space.tester.index.primary.unique\n"
"            ---\n"
"            - true\n"
"            ...\n"
msgstr ""

msgid "Search for a tuple :ref:`via the given index <box_index-note>`."
msgstr ""

msgid "an :ref:`object reference <app_server-object_reference>`."
msgstr ":ref:`ссылка на объект <app_server-object_reference>`."

msgid "values to be matched against the index key"
msgstr "значения для сопоставления с ключом индекса"

msgid "the tuple whose index-key fields are equal to the passed key values"
msgstr ""

msgid "tuple"
msgstr "кортеж"

msgid "**Possible errors:**"
msgstr "**Возможные ошибки:**"

msgid "no such index;"
msgstr "отсутствие такого индекса;"

msgid "wrong type;"
msgstr "неправильный тип;"

msgid "more than one tuple matches."
msgstr "больше одного кортежа подходят."

msgid "**Complexity factors:** Index size, Index type. See also :ref:`space_object:get() <box_space-get>`."
msgstr "**Факторы сложности:** Размер индекса, тип индекса. См. также :ref:`space_object:get() <box_space-get>`."

msgid "tarantool> box.space.tester.index.primary:get(2)\n"
"---\n"
"- [2, 'Music']\n"
"..."
msgstr ""

msgid "True if the index is unique, false if the index is not unique."
msgstr "Если индекс уникальный -- true, если индекс не уникален -- false."

msgid "boolean"
msgstr "boolean (логический)"

msgid "tarantool> box.space.tester.index.primary.unique\n"
"---\n"
"- true\n"
"..."
msgstr ""

