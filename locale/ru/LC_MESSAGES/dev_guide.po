# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 1.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-23 10:58+0000\n"
"PO-Revision-Date: 2019-11-14 20:46+0300\n"
"Last-Translator: \n"
"Language: ru\n"
"Language-Team: \n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../doc/dev_guide/build_contribute_index.rst:3
msgid "Build and contribute"
msgstr "Содействие в разработке"

#: ../doc/dev_guide/building_from_source.rst:5
msgid "Building from source"
msgstr "Сборка из исходных файлов"

#: ../doc/dev_guide/building_from_source.rst:7
msgid ""
"For downloading Tarantool source and building it, the platforms can "
"differ and the preferences can differ. But strategically the steps are "
"always the same."
msgstr ""
"При загрузке исходных файлов и сборке Tarantool'а могут отличаться "
"платформы и настройки, но в целом предпринимаются одинаковые действия."

#: ../doc/dev_guide/building_from_source.rst:10
msgid "Get tools and libraries that will be necessary for building and testing."
msgstr ""
"Найдите средства и библиотеки, которые будут нужны для сборки и "
"тестирования."

#: ../doc/dev_guide/building_from_source.rst:13
msgid "The absolutely necessary ones are:"
msgstr "Абсолютно необходимы следующие:"

#: ../doc/dev_guide/building_from_source.rst:15
msgid ""
"A program for downloading source repositories. |br| For all platforms, "
"this is ``git``. It allows downloading the latest complete set of source "
"files from the Tarantool repository on GitHub."
msgstr ""
"Программа для скачивания репозиториев исходного кода. |br| Для всех "
"платформ это будет ``git``. Программа позволяет скачивать самый "
"актуальный набор исходных файлов из репозитория Tarantool'а на GitHub."

#: ../doc/dev_guide/building_from_source.rst:19
msgid ""
"A C/C++ compiler. |br| Ordinarily, this is ``gcc`` and ``g++`` version "
"4.6 or later. On Mac OS X, this is ``Clang`` version 3.2+."
msgstr ""
"Компилятор C/C++. |br| Как правило, это ``gcc`` и ``g++`` версии 4.6 или "
"более новой. На Mac OS X это ``Clang`` версии 3.2+."

#: ../doc/dev_guide/building_from_source.rst:22
msgid ""
"A program for managing the build process. |br| For all platforms, this is"
" ``CMake`` version 2.8+."
msgstr ""
"Программа для управления процессом сборки. |br| Для всех платформ это "
"будет ``CMake`` версии 2.8+."

#: ../doc/dev_guide/building_from_source.rst:25
msgid "A build automation tool. |br| For all platforms this is ``GNU Make``."
msgstr "Средство автоматизации сборок. |br| На всех платформах это``GNU Make``."

#: ../doc/dev_guide/building_from_source.rst:27
msgid "`ReadLine <http://www.gnu.org/software/readline/>`_ library, any version"
msgstr ""
"библиотека `ReadLine <http://www.gnu.org/software/readline/>`_ любой "
"версии"

#: ../doc/dev_guide/building_from_source.rst:28
msgid "`ncurses <https://www.gnu.org/software/ncurses/>`_ library, any version"
msgstr "библиотека `ncurses <https://www.gnu.org/software/ncurses/>`_ любой версии"

#: ../doc/dev_guide/building_from_source.rst:29
msgid "`OpenSSL <https://www.openssl.org>`_ library, version 1.0.1+"
msgstr "библиотека `OpenSSL <https://www.openssl.org>`_ версии 1.0.1+"

#: ../doc/dev_guide/building_from_source.rst:30
msgid "`LibYAML <http://pyyaml.org/wiki/LibYAML>`_ library, version 0.1.4+"
msgstr "библиотека `LibYAML <http://pyyaml.org/wiki/LibYAML>`_ версии 0.1.4+"

#: ../doc/dev_guide/building_from_source.rst:31
msgid "`ICU <http://site.icu-project.org/download>`_ library, recent version"
msgstr "библиотека `ICU <http://site.icu-project.org/download>`_ последней версии"

#: ../doc/dev_guide/building_from_source.rst:32
msgid "`Autoconf <https://www.gnu.org/software/autoconf/>`_ library, any version"
msgstr ""
"библиотека `Autoconf <https://www.gnu.org/software/autoconf/>`_ любой "
"версии"

#: ../doc/dev_guide/building_from_source.rst:33
msgid "`Automake <https://www.gnu.org/software/automake/>`_ library, any version"
msgstr ""
"библиотека `Automake <https://www.gnu.org/software/automake/>`_ любой "
"версии"

#: ../doc/dev_guide/building_from_source.rst:34
msgid "`Libtool <https://www.gnu.org/software/libtool/>`_ library, any version"
msgstr "библиотека `Libtool <https://www.gnu.org/software/libtool/>`_ любой версии"

#: ../doc/dev_guide/building_from_source.rst:35
msgid "`Zlib-devel <https://www.zlib.net/>`_ library, any version"
msgstr "библиотека `Zlib-devel <https://www.zlib.net/>`_ любой версии"

#: ../doc/dev_guide/building_from_source.rst:37
msgid ""
"Python and modules. |br| Python interpreter is not necessary for building"
" Tarantool itself, unless you intend to use the \"Run the test suite\" "
"option in step 5. For all platforms, this is ``python`` version 2.7+ (but"
" not 3.x). You need the following Python modules:"
msgstr ""
"Python и его модули. |br| Интерпретатор для Python не нужен для сборки "
"самого Tarantool'а, если вы не планируете проводить тестирование из шага "
"5. Для всех платформ это будет ``python`` версии 2.7+ (но не 3.x). "
"Необходимы следующие модули Python:"

#: ../doc/dev_guide/building_from_source.rst:42
msgid "`pyyaml <https://pypi.python.org/pypi/PyYAML>`_ version 3.10"
msgstr "`pyyaml <https://pypi.python.org/pypi/PyYAML>`_ версии 3.10"

#: ../doc/dev_guide/building_from_source.rst:43
msgid "`argparse <https://pypi.python.org/pypi/argparse>`_ version 1.1"
msgstr "`argparse <https://pypi.python.org/pypi/argparse>`_ версии 1.1"

#: ../doc/dev_guide/building_from_source.rst:44
msgid ""
"`msgpack-python <https://pypi.python.org/pypi/msgpack-python>`_ version "
"0.4.6"
msgstr ""
"`msgpack-python <https://pypi.python.org/pypi/msgpack-python>`_ версии "
"0.4.6"

#: ../doc/dev_guide/building_from_source.rst:45
msgid "`gevent <https://pypi.python.org/pypi/gevent>`_ version 1.1.2"
msgstr "`gevent <https://pypi.python.org/pypi/gevent>`_ версии 1.1.2"

#: ../doc/dev_guide/building_from_source.rst:46
msgid "`six <https://pypi.python.org/pypi/six>`_ version 1.8.0"
msgstr "`six <https://pypi.python.org/pypi/six>`_ версии 1.8.0"

#: ../doc/dev_guide/building_from_source.rst:48
msgid "To install all required dependencies, follow the instructions for your OS:"
msgstr ""
"Чтобы установить все необходимые зависимости, следуйте инструкциям для "
"вашей ОС:"

#: ../doc/dev_guide/building_from_source.rst:50
msgid "For Debian/Ubuntu, say:"
msgstr "Если вы используете Debian/Ubuntu, выполните команду:"

#: ../doc/dev_guide/building_from_source.rst:52
msgid ""
"$ apt install -y build-essential cmake make coreutils sed \\\n"
"      autoconf automake libtool zlib1g-dev \\\n"
"      libreadline-dev libncurses5-dev libyaml-dev libssl-dev \\\n"
"      libunwind-dev libicu-dev \\\n"
"      python python-pip python-setuptools python-dev \\\n"
"      python-msgpack python-yaml python-argparse python-six python-gevent"
msgstr ""
"$ apt install -y build-essential cmake make coreutils sed \\\n"
"      autoconf automake libtool zlib1g-dev \\\n"
"      libreadline-dev libncurses5-dev libyaml-dev libssl-dev \\\n"
"      libunwind-dev libicu-dev \\\n"
"      python python-pip python-setuptools python-dev \\\n"
"      python-msgpack python-yaml python-argparse python-six python-gevent"

#: ../doc/dev_guide/building_from_source.rst:61
msgid "For RHEL/CentOS/Fedora, say:"
msgstr "Если вы используете RHEL/CentOS/Fedora, выполните команду:"

#: ../doc/dev_guide/building_from_source.rst:63
msgid ""
"$ yum install -y gcc gcc-c++ cmake make coreutils sed \\\n"
"      autoconf automake libtool zlib-devel \\\n"
"      readline-devel ncurses-devel libyaml-devel openssl-devel \\\n"
"      libunwind-devel libicu-devel \\\n"
"      python python-pip python-setuptools python-devel \\\n"
"      python-msgpack python-yaml python-argparse python-six python-gevent"
msgstr ""
"$ yum install -y gcc gcc-c++ cmake make coreutils sed \\\n"
"      autoconf automake libtool zlib-devel \\\n"
"      readline-devel ncurses-devel libyaml-devel openssl-devel \\\n"
"      libunwind-devel libicu-devel \\\n"
"      python python-pip python-setuptools python-devel \\\n"
"      python-msgpack python-yaml python-argparse python-six python-gevent"

#: ../doc/dev_guide/building_from_source.rst:72
msgid "For Mac OS X (instructions below are for OS X El Capitan):"
msgstr "Если вы используете Mac OS X (команды для OS X El Capitan):"

#: ../doc/dev_guide/building_from_source.rst:74
msgid "If you're using Homebrew as your package manager, say:"
msgstr ""
"Если вы пользуетесь Homebrew в качестве менеджера пакетов, выполните "
"команду:"

#: ../doc/dev_guide/building_from_source.rst:76
msgid ""
"$ brew install cmake make autoconf binutils zlib \\\n"
"       autoconf automake libtool \\\n"
"       readline ncurses libyaml openssl libunwind-headers icu4c \\\n"
"       && pip install python-daemon \\\n"
"       msgpack-python pyyaml configargparse six gevent"
msgstr ""
"$ brew install cmake make autoconf binutils zlib \\\n"
"       autoconf automake libtool \\\n"
"       readline ncurses libyaml openssl libunwind-headers icu4c \\\n"
"       && pip install python-daemon \\\n"
"       msgpack-python pyyaml configargparse six gevent"

#: ../doc/dev_guide/building_from_source.rst:86
msgid ""
"You can not install `zlib-devel <https://www.zlib.net/>`_  package this "
"way."
msgstr ""
"Таким образом невозможно установить пакет `zlib-devel "
"<https://www.zlib.net/>`_."

#: ../doc/dev_guide/building_from_source.rst:88
msgid "Alternatively, download Apple's default Xcode toolset:"
msgstr "Либо загрузите стандартный пакет Xcode для разработки:"

#: ../doc/dev_guide/building_from_source.rst:90
msgid ""
"$ xcode-select --install\n"
"$ xcode-select -switch /Applications/Xcode.app/Contents/Developer"
msgstr ""
"$ xcode-select --install\n"
"$ xcode-select -switch /Applications/Xcode.app/Contents/Developer"

#: ../doc/dev_guide/building_from_source.rst:95
msgid "For FreeBSD (instructions below are for FreeBSD 10.1+ release), say:"
msgstr ""
"Если вы используете FreeBSD (дальнейшие инструкции работают для FreeBSD "
"10.1+), выполните команду:"

#: ../doc/dev_guide/building_from_source.rst:97
msgid ""
"$ pkg install -y sudo git cmake gmake gcc coreutils \\\n"
"      autoconf automake libtool \\\n"
"      readline ncurses libyaml openssl libunwind icu \\\n"
"      python27 py27-pip py27-setuptools py27-daemon \\\n"
"      py27-msgpack py27-yaml py27-argparse py27-six py27-gevent"
msgstr ""
"$ pkg install -y sudo git cmake gmake gcc coreutils \\\n"
"      autoconf automake libtool \\\n"
"      readline ncurses libyaml openssl libunwind icu \\\n"
"      python27 py27-pip py27-setuptools py27-daemon \\\n"
"      py27-msgpack py27-yaml py27-argparse py27-six py27-gevent"

#: ../doc/dev_guide/building_from_source.rst:105
msgid ""
"If some Python modules are not available in a repository, it is best to "
"set up the modules by getting a tarball and doing the setup with ``python"
" setup.py`` like this:"
msgstr ""
"Если некоторые модули Python недоступны в репозитории, лучше всего "
"произвести настройку модулей, скачав пакет в формате TAR и выполнив "
"установку с помощью ``python setup.py`` следующим образом:"

#: ../doc/dev_guide/building_from_source.rst:109
msgid ""
"$ # On some machines, this initial command may be necessary:\n"
"$ wget https://bootstrap.pypa.io/ez_setup.py -O - | sudo python\n"
"\n"
"$ # Python module for parsing YAML (pyYAML), for test suite:\n"
"$ # (If wget fails, check at http://pyyaml.org/wiki/PyYAML\n"
"$ # what the current version is.)\n"
"$ cd ~\n"
"$ wget http://pyyaml.org/download/pyyaml/PyYAML-3.10.tar.gz\n"
"$ tar -xzf PyYAML-3.10.tar.gz\n"
"$ cd PyYAML-3.10\n"
"$ sudo python setup.py install"
msgstr ""
"$ # На некоторых машинах может потребоваться такая начальная команда:\n"
"$ wget https://bootstrap.pypa.io/ez_setup.py -O - | sudo python\n"
"\n"
"$ # Модуль Python для анализа YAML (pyYAML) для набора тестов:\n"
"$ # (Если wget не работает, проверьте на сайте "
"http://pyyaml.org/wiki/PyYAML\n"
"$ # актуальность версии.)\n"
"$ cd ~\n"
"$ wget http://pyyaml.org/download/pyyaml/PyYAML-3.10.tar.gz\n"
"$ tar -xzf PyYAML-3.10.tar.gz\n"
"$ cd PyYAML-3.10\n"
"$ sudo python setup.py install"

#: ../doc/dev_guide/building_from_source.rst:123
msgid ""
"Finally, use Python ``pip`` to bring in Python packages that may not be "
"up-to-date in the distro repositories. (On CentOS 7, it will be necessary"
" to install ``pip`` first, with :code:`sudo yum install epel-release` "
"followed by :code:`sudo yum install python-pip`.)"
msgstr ""
"Наконец, используйте ``pip`` в Python, чтобы импортировать пакеты Python,"
" которые могут быть неактуальны в репозиториях дистрибутивов.  (В CentOS "
"7 будет необходимо сначала установить ``pip`` так: :code:`sudo yum "
"install epel-release`, а затем :code:`sudo yum install python-pip`.)"

#: ../doc/dev_guide/building_from_source.rst:129
msgid ""
"$ pip install -r \\\n"
"      https://raw.githubusercontent.com/tarantool/test-"
"run/master/requirements.txt \\\n"
"      --user"
msgstr ""
"$ pip install -r \\\n"
"      https://raw.githubusercontent.com/tarantool/test-"
"run/master/requirements.txt \\\n"
"      --user"

#: ../doc/dev_guide/building_from_source.rst:135
msgid "This step is only necessary once, the first time you do a download."
msgstr "Это действие следует выполнить только один раз при первой загрузке."

#: ../doc/dev_guide/building_from_source.rst:137
msgid ""
"Use ``git`` to download the latest Tarantool source code from the GitHub "
"repository ``tarantool/tarantool``, branch 1.10, to a local directory "
"named ``~/tarantool``, for example:"
msgstr ""
"Используйте ``git``, чтобы загрузить последний исходный код Tarantool'а "
"из репозитория  на GitHub ``tarantool/tarantool`` (ветка 1.10) в "
"локальную директорию ``~/tarantool``, например:"

#: ../doc/dev_guide/building_from_source.rst:141
msgid ""
"$ git clone --recursive https://github.com/tarantool/tarantool.git -b "
"1.10 ~/tarantool"
msgstr ""
"$ git clone --recursive https://github.com/tarantool/tarantool.git -b "
"1.10 ~/tarantool"

#: ../doc/dev_guide/building_from_source.rst:145
msgid ""
"On rare occasions, the submodules need to be updated again with the "
"command:"
msgstr ""
"В редких случаях вложенные модули необходимо снова обновить с помощью "
"команды:"

#: ../doc/dev_guide/building_from_source.rst:148
msgid ""
"cd ~/tarantool\n"
"$ git submodule update --init --recursive"
msgstr ""
"cd ~/tarantool\n"
"$ git submodule update --init --recursive"

#: ../doc/dev_guide/building_from_source.rst:153
msgid "Use CMake to initiate the build."
msgstr "Используйте CMake, чтобы начать сборку."

#: ../doc/dev_guide/building_from_source.rst:155
msgid ""
"$ cd ~/tarantool\n"
"$ make clean         # unnecessary, added for good luck\n"
"$ rm CMakeCache.txt  # unnecessary, added for good luck\n"
"$ cmake .            # start initiating with build type=Debug"
msgstr ""
"$ cd ~/tarantool\n"
"$ make clean         # необязательно, добавлено на удачу\n"
"$ rm CMakeCache.txt  # необязательно, добавлено на удачу\n"
"$ cmake .            # начать с типом сборки = Debug (отладка)"

#: ../doc/dev_guide/building_from_source.rst:162
msgid ""
"On some platforms, it may be necessary to specify the C and C++ versions,"
" for example:"
msgstr ""
"На некоторых платформах может потребоваться указать версии C и C++, "
"например:"

#: ../doc/dev_guide/building_from_source.rst:165
msgid "$ CC=gcc-4.8 CXX=g++-4.8 cmake ."
msgstr "$ CC=gcc-4.8 CXX=g++-4.8 cmake ."

#: ../doc/dev_guide/building_from_source.rst:169
msgid ""
"The CMake option for specifying build type is "
":samp:`-DCMAKE_BUILD_TYPE={type}`, where :samp:`{type}` can be:"
msgstr ""
"Чтобы указать тип сборки в CMake используется опция "
":samp:`-DCMAKE_BUILD_TYPE={type}`, где :samp:`{type}` может быть:"

#: ../doc/dev_guide/building_from_source.rst:172
msgid "``Debug`` -- used by project maintainers"
msgstr "``Debug`` -- отладка, используется эксплуатационным персоналом на проекте"

#: ../doc/dev_guide/building_from_source.rst:173
msgid "``Release`` -- used only if the highest performance is required"
msgstr ""
"``Release`` -- релиз, используется только при необходимости высокой "
"производительности"

#: ../doc/dev_guide/building_from_source.rst:174
msgid ""
"``RelWithDebInfo`` -- used for production, also provides debugging "
"capabilities"
msgstr ""
"``RelWithDebInfo`` -- используется для сборки в эксплуатации, также "
"предоставляет возможности отладки"

#: ../doc/dev_guide/building_from_source.rst:176
msgid ""
"The CMake option for hinting that the result will be distributed is "
":code:`-DENABLE_DIST=ON`. If this option is on, then later ``make "
"install`` will install ``tarantoolctl`` files in addition to "
"``tarantool`` files."
msgstr ""
"Чтобы указать в CMake, что результат будет распределен, используется "
"опция :code:`-DENABLE_DIST=ON`. При наличии такой опции ``make install`` "
"в дальнейшем установит файлы ``tarantoolctl`` в дополнение к файлам "
"``tarantool``."

#: ../doc/dev_guide/building_from_source.rst:180
msgid "Use ``make`` to complete the build."
msgstr "Используйте ``make`` для завершения сборки."

#: ../doc/dev_guide/building_from_source.rst:182
msgid "$ make"
msgstr "$ make"

#: ../doc/dev_guide/building_from_source.rst:188
msgid "For FreeBSD, use ``gmake`` instead."
msgstr "В FreeBSD используйте вместо этого ``gmake``."

#: ../doc/dev_guide/building_from_source.rst:190
msgid "This creates the 'tarantool' executable in the ``src/`` directory."
msgstr "При этом создается исполняемый файл 'tarantool' в директории ``src/``."

#: ../doc/dev_guide/building_from_source.rst:194
msgid ""
"If you encounter a ``curl`` or ``OpenSSL`` errors on this step try "
"installing ``openssl111`` package of the specific ``1.1.1d`` version."
msgstr ""
"Если на данном шаге вы сталкиваетесь с ошибками ``curl`` или ``OpenSSL``,"
" попробуйте установить пакет ``openssl111`` версии ``1.1.1d``."

#: ../doc/dev_guide/building_from_source.rst:197
msgid ""
"Next, it's highly recommended to say ``make install`` to install "
"Tarantool to the ``/usr/local`` directory and keep your system clean. "
"However, it is possible to run the Tarantool executable without "
"installation."
msgstr ""
"Далее настоятельно рекомендуется выполнить команду ``make install`` для "
"установки Tarantool'а в директорию ``/usr/local`` и поддержания порядка в"
" системе. Однако, можно запустить исполняемый файл и без установки."

#: ../doc/dev_guide/building_from_source.rst:201
msgid "Run the test suite."
msgstr "Проведите тестирование."

#: ../doc/dev_guide/building_from_source.rst:203
msgid ""
"This step is optional. Tarantool's developers always run the test suite "
"before they publish new versions. You should run the test suite too, if "
"you make any changes in the code. Assuming you downloaded to "
"``~/tarantool``, the principal steps are:"
msgstr ""
"Это необязательное действие. Разработчики Tarantool'а всегда проводят "
"тестирование до публикации новых версий. Следует проводить тестирование, "
"если внесены изменения в код. Итак, после загрузки в ``~/tarantool`` "
"основные действия:"

#: ../doc/dev_guide/building_from_source.rst:208
msgid ""
"$ # make a subdirectory named `bin`\n"
"$ mkdir ~/tarantool/bin\n"
"\n"
"$ # link Python to bin (this may require superuser privileges)\n"
"$ ln /usr/bin/python ~/tarantool/bin/python\n"
"\n"
"$ # get to the test subdirectory\n"
"$ cd ~/tarantool/test\n"
"\n"
"$ # run tests using Python\n"
"$ PATH=~/tarantool/bin:$PATH ./test-run.py"
msgstr ""
"$ # создание поддиректории под названием `bin`\n"
"$ mkdir ~/tarantool/bin\n"
"\n"
"$ # привязка Python к bin (могут потребовать права пользователя "
"superuser)\n"
"$ ln /usr/bin/python ~/tarantool/bin/python\n"
"\n"
"$ # переход в поддиректорию с тестами\n"
"$ cd ~/tarantool/test\n"
"\n"
"$ # проведение тестирования с помощью Python\n"
"$ PATH=~/tarantool/bin:$PATH ./test-run.py"

#: ../doc/dev_guide/building_from_source.rst:222
msgid "The output should contain reassuring reports, for example:"
msgstr "Вывод должен включать в себя обнадеживающие результаты, например:"

#: ../doc/dev_guide/building_from_source.rst:224
msgid ""
"======================================================================\n"
"TEST                                            RESULT\n"
"------------------------------------------------------------\n"
"box/bad_trigger.test.py                         [ pass ]\n"
"box/call.test.py                                [ pass ]\n"
"box/iproto.test.py                              [ pass ]\n"
"box/xlog.test.py                                [ pass ]\n"
"box/admin.test.lua                              [ pass ]\n"
"box/auth_access.test.lua                        [ pass ]\n"
"... etc."
msgstr ""
"======================================================================\n"
"TEST                                            RESULT\n"
"------------------------------------------------------------\n"
"box/bad_trigger.test.py                         [ pass ]\n"
"box/call.test.py                                [ pass ]\n"
"box/iproto.test.py                              [ pass ]\n"
"box/xlog.test.py                                [ pass ]\n"
"box/admin.test.lua                              [ pass ]\n"
"box/auth_access.test.lua                        [ pass ]\n"
"... etc."

#: ../doc/dev_guide/building_from_source.rst:237
msgid "To prevent later confusion, clean up what's in the ``bin`` subdirectory:"
msgstr "Во избежание путаницы очистите поддиректорию ``bin``:"

#: ../doc/dev_guide/building_from_source.rst:239
msgid ""
"$ rm ~/tarantool/bin/python\n"
"$ rmdir ~/tarantool/bin"
msgstr ""
"$ rm ~/tarantool/bin/python\n"
"$ rmdir ~/tarantool/bin"

#: ../doc/dev_guide/building_from_source.rst:244
msgid "Make RPM and Debian packages."
msgstr "Создайте пакеты RPM и Debian."

#: ../doc/dev_guide/building_from_source.rst:246
msgid ""
"This step is optional. It's only for people who want to redistribute "
"Tarantool. We highly recommend to use official packages from the "
"`tarantool.org <https://tarantool.org/download.html>`_ web-site. However,"
" you can build RPM and Debian packages using `PackPack "
"<https://github.com/packpack/packpack>`_ or using the ``dpkg-"
"buildpackage`` or ``rpmbuild`` tools. Please consult ``dpkg`` or "
"``rpmbuild`` documentation for details."
msgstr ""
"Это необязательное действие, которое следует выполнить только тем, кто "
"хочет перераспределить Tarantool. Мы настоятельно рекомендуем "
"использовать официальные пакеты с сайта `tarantool.org "
"<https://tarantool.org/download.html>`_. Однако, можно собрать пакеты RPM"
" и Debian с помощью `PackPack <https://github.com/packpack/packpack>`_ "
"или путем использования средств ``dpkg-buildpackage`` или ``rpmbuild``. "
"Для получения более подробной информации обратитесь к документации по "
"``dpkg`` или ``rpmbuild``."

#: ../doc/dev_guide/building_from_source.rst:254
msgid "Verify your Tarantool installation."
msgstr "Проверьте установку Tarantool'а."

#: ../doc/dev_guide/building_from_source.rst:256
msgid ""
"$ # if you installed tarantool locally after build\n"
"$ tarantool\n"
"$ # - OR -\n"
"$ # if you didn't install tarantool locally after build\n"
"$ ./src/tarantool"
msgstr ""
"$ # если tarantool установлен локально после сборки\n"
"$ tarantool\n"
"$ # - ИЛИ -\n"
"$ # если tarantool не установлен локально после сборки\n"
"$ ./src/tarantool"

#: ../doc/dev_guide/building_from_source.rst:264
msgid "This starts Tarantool in the interactive mode."
msgstr "Tarantool запустится в интерактивном режиме."

#: ../doc/dev_guide/building_from_source.rst:266
msgid "See also:"
msgstr "См. также:"

#: ../doc/dev_guide/building_from_source.rst:268
msgid ""
"`Tarantool README.md "
"<https://github.com/tarantool/tarantool/blob/1.10/README.md>`_"
msgstr ""
"`Tarantool README.md "
"<https://github.com/tarantool/tarantool/blob/1.10/README.md>`_"

#: ../doc/dev_guide/c_style_guide.rst:3
msgid "C Style Guide"
msgstr "Руководство по написанию кода на C"

#: ../doc/dev_guide/c_style_guide.rst:5
msgid ""
"The project's coding style is based on a version of the Linux kernel "
"coding style."
msgstr ""
"Стиль программирования проекта основан на версии стиля программирования "
"ядра Linux."

#: ../doc/dev_guide/c_style_guide.rst:7
msgid ""
"The latest version of the Linux style can be found at: "
"http://www.kernel.org/doc/Documentation/CodingStyle"
msgstr ""
"Последнюю версию стиля программирования Linux можно найти по ссылке: "
"http://www.kernel.org/doc/Documentation/CodingStyle"

#: ../doc/dev_guide/c_style_guide.rst:10
msgid ""
"Since it is open for changes, the version of style that we follow, one "
"from 2007-July-13, will be also copied later in this document."
msgstr ""
"Мы придерживаемся версии от 13 июля 2007 года, которая приводится ниже в "
"документе."

#: ../doc/dev_guide/c_style_guide.rst:13
msgid ""
"There are a few additional guidelines, either unique to Tarantool or "
"deviating from the Kernel guidelines."
msgstr ""
"Здесь мы приводим дополнительные рекомендации, которые либо специфичны "
"для Tarantool'а, либо отличаются от рекомендаций по программированию ядра"
" Linux."

#: ../doc/dev_guide/c_style_guide.rst:16
msgid ""
"Chapters 10 \"Kconfig configuration files\", 11 \"Data structures\", 13 "
"\"Printing kernel messages\", 14 \"Allocating memory\" and 17 \"Don't re-"
"invent the kernel macros\" do not apply, since they are specific to Linux"
" kernel programming environment."
msgstr ""
"Следующие главы не применимы, поскольку они специфичны для среды "
"программирования ядра Linux: 10 \"Конфигурационные файлы Kconfig\", 11 "
"\"Структуры данных\", 13 \"Вывод сообщений ядра\", 14 \"Выделение "
"памяти\" и 17 \"Не изобретайте макросы снова\"."

#: ../doc/dev_guide/c_style_guide.rst:21
msgid "The rest of Linux Kernel Coding Style is amended as follows:"
msgstr ""
"Остальные главы документа \"Стиль программирования ядра Linux\" "
"изменяются следующим образом:"

#: ../doc/dev_guide/c_style_guide.rst:25
msgid "General guidelines"
msgstr "Общие рекомендации"

#: ../doc/dev_guide/c_style_guide.rst:27
msgid ""
"We use Git for revision control. The latest development is happening in "
"the default branch (currently ``2.0``). Our git repository is hosted on "
"github, and can be checked out with ``git clone "
"git://github.com/tarantool/tarantool.git`` (anonymous read-only access)."
msgstr ""
"Для управления версиями мы пользуемся Git. Последние разработки ведутся в"
" ветке, используемой по умолчанию (сейчас ``2.0``). Наш git-репозиторий "
"находится на github, его можно посмотреть выгрузить с помощью ``git clone"
" git://github.com/tarantool/tarantool.git`` (для анонимного пользователя "
"доступ только для чтения)."

#: ../doc/dev_guide/c_style_guide.rst:32
msgid ""
"If you have any questions about Tarantool internals, please post them on "
"the developer discussion list, "
"https://groups.google.com/forum/#!forum/tarantool. However, please be "
"warned: Launchpad silently deletes posts from non-subscribed members, "
"thus please be sure to have subscribed to the list prior to posting. "
"Additionally, some engineers are always present on #tarantool channel on "
"irc.freenode.net."
msgstr ""
"Если у вас есть вопросы о внутреннем устройстве Tarantool'а, разместите "
"их в списке вопросов к обсуждению для разработчиков: "
"https://groups.google.com/forum/#!forum/tarantool. Однако, предупреждаем:"
" Launchpad молча удаляет сообщения от тех, кто не является подписчиком, "
"поэтому обязательно подпишитесь на список перед публикацией. Кроме того, "
"несколько инженеров всегда находятся на канале #tarantool в "
"irc.freenode.net."

#: ../doc/dev_guide/c_style_guide.rst:40
msgid "Commenting style"
msgstr "Стиль комментирования кода"

#: ../doc/dev_guide/c_style_guide.rst:42
msgid ""
"Use Doxygen comment format, Javadoc flavor, i.e. `@tag` rather than "
"`\\tag`. The main tags in use are @param, @retval, @return, @see, @note "
"and @todo."
msgstr ""
"Используйте формат комментирования Doxygen, разновидность Javadoc, то "
"есть `@tag` вместо `\\tag`. Основные используемые теги: @param, @retval, "
"@return, @see, @note и @todo."

#: ../doc/dev_guide/c_style_guide.rst:45
msgid ""
"Every function, except perhaps a very short and obvious one, should have "
"a comment. A sample function comment may look like below:"
msgstr ""
"Каждая функция, за исключением, пожалуй, очень короткой и очевидной, "
"должна быть прокомментирована. Пример комментария функции может выглядеть"
" следующим образом:"

#: ../doc/dev_guide/c_style_guide.rst:48
msgid ""
"/** Write all data to a descriptor.\n"
" *\n"
" * This function is equivalent to 'write', except it would ensure\n"
" * that all data is written to the file unless a non-ignorable\n"
" * error occurs.\n"
" *\n"
" * @retval 0  Success\n"
" *\n"
" * @reval  1  An error occurred (not EINTR)\n"
" * /\n"
"static int\n"
"write_all(int fd, void \\*data, size_t len);"
msgstr ""
"/** Запись всех данных в дескриптор.\n"
" *\n"
" * Эта функция аналогична 'write' во всём кроме того, что она "
"обеспечивает\n"
" * запись всех данных в файл, если не возникает ошибка,\n"
" * которую нельзя игнорировать.\n"
" *\n"
" * @retval 0  Выполнено\n"
" *\n"
" * @reval  1  Ошибка (не EINTR)\n"
" * /\n"
"static int\n"
"write_all(int fd, void \\*data, size_t len);"

#: ../doc/dev_guide/c_style_guide.rst:63
msgid ""
"Public structures and important structure members should be commented as "
"well."
msgstr ""
"Доступные структуры и важные элементы структуры также должны быть "
"прокомментированы."

#: ../doc/dev_guide/c_style_guide.rst:67
msgid "Header files"
msgstr "Файлы заголовка"

#: ../doc/dev_guide/c_style_guide.rst:69
msgid ""
"Use header guards. Put the header guard in the first line in the header, "
"before the copyright or declarations. Use all-uppercase name for the "
"header guard. Derive the header guard name from the file name, and append"
" _INCLUDED to get a macro name. For example, core/log_io.h -> "
"CORE_LOG_IO_H_INCLUDED. In ``.c`` (implementation) file, include the "
"respective declaration header before all other headers, to ensure that "
"the header is self- sufficient. Header \"header.h\" is self-sufficient if"
" the following compiles without errors:"
msgstr ""
"Используйте защиту заголовка. Поместите защиту заголовка в первую строку "
"заголовка до авторского права или объявления. Для защиты заголовка "
"используйте имя в верхнем регистре. Выводите имя защиты заголовка из "
"имени файла и добавьте _INCLUDED, чтобы получить имя макроса. Например, "
"core/log_io.h -> CORE_LOG_IO_H_INCLUDE. В файле ``.c`` (реализация) "
"следует включить соответствующий заголовок с объявлением перед всеми "
"другими заголовками, чтобы убедиться, что заголовок является автономным. "
"Заголовок \"header.h\" является автономным, если компилируется без "
"ошибок:"

#: ../doc/dev_guide/c_style_guide.rst:77
msgid "#include \"header.h\""
msgstr "#include \"header.h\""

#: ../doc/dev_guide/c_style_guide.rst:83
msgid "Allocating memory"
msgstr "Выделение памяти"

#: ../doc/dev_guide/c_style_guide.rst:85
msgid ""
"Prefer the supplied slab (salloc) and pool (palloc) allocators to "
"malloc()/free() for any performance-intensive or large  memory "
"allocations. Repetitive use of malloc()/free() can lead to memory "
"fragmentation and should therefore be avoided."
msgstr ""
"Предпочтительно использовать предоставляемые распределители slab'ов "
"(salloc) и пулов (palloc) вместо malloc()/free() для любых операций "
"выделения памяти большого объема. Многократное использование "
"malloc()/free() может привести к фрагментации памяти, чего следует "
"избегать."

#: ../doc/dev_guide/c_style_guide.rst:89
msgid ""
"Always free all allocated memory, even allocated  at start-up. We aim at "
"being valgrind leak-check clean, and in most cases it's just as easy to "
"free() the allocated memory as it is to write a valgrind suppression. "
"Freeing all allocated memory is also dynamic-load friendly: assuming a "
"plug-in can be dynamically loaded and unloaded multiple times, reload "
"should not lead to a memory leak."
msgstr ""
"Всегда освобождайте всю выделенную память, даже выделенную при запуске. "
"Мы стремимся к тому, чтобы valgrind не находил утечек памяти, и в "
"большинстве случаев так же легко освободить выделенную память по free(), "
"как и записать подавление valgrind. Освобождение всей выделенной памяти "
"также помогает динамическому балансированию нагрузки: предполагается, что"
" подключаемый модуль может динамически загружаться и выгружаться "
"несколько раз, перезагрузка не должна приводить к утечке памяти."

#: ../doc/dev_guide/c_style_guide.rst:97
msgid "Other"
msgstr "Прочее"

#: ../doc/dev_guide/c_style_guide.rst:99
msgid ""
"Select GNU C99 extensions are acceptable. It's OK to mix declarations and"
" statements, use true and false."
msgstr ""
"Допускаются расширения GNU C99. Можно смешивать операторы и объявления в "
"выражениях."

#: ../doc/dev_guide/c_style_guide.rst:102
msgid ""
"The not-so-current list of all GCC C extensions can be found at: "
"http://gcc.gnu.org/onlinedocs/gcc-4.3.5/gcc/C-Extensions.html"
msgstr ""
"Не слишком актуальный список всех расширений семейства языка C можно "
"найти по ссылке: "
"http://gcc.gnu.org/onlinedocs/gcc-4.3.5/gcc/C-Extensions.html"

#: ../doc/dev_guide/c_style_guide.rst:107
msgid "Linux kernel coding style"
msgstr "Стиль программирования ядра Linux"

#: ../doc/dev_guide/c_style_guide.rst:109
msgid ""
"This is a short document describing the preferred coding style for the "
"linux kernel.  Coding style is very personal, and I won't _force_ my "
"views on anybody, but this is what goes for anything that I have to be "
"able to maintain, and I'd prefer it for most other things too.  Please at"
" least consider the points made here."
msgstr ""
"В данном коротком документе описывается предпочтительный стиль "
"программирования для ядра Linux. Стиль программирования -- это личное "
"дело каждого, и я не буду никому _навязывать_ свои убеждения, но "
"поскольку это касается всего, что я должен поддерживать, я бы предпочел, "
"чтобы эти правила использовали повсеместно. Пожалуйста, хотя бы "
"рассмотрите описываемые здесь пункты."

#: ../doc/dev_guide/c_style_guide.rst:115
msgid ""
"First off, I'd suggest printing out a copy of the GNU coding standards, "
"and NOT read it.  Burn them, it's a great symbolic gesture."
msgstr ""
"Для начала я предлагаю вам распечатать копию стандартов написания кода "
"GNU и НЕ читать их. Сожгите их в качестве весьма символического жеста."

#: ../doc/dev_guide/c_style_guide.rst:118
msgid "Anyway, here goes:"
msgstr "В любом случае, поехали:"

#: ../doc/dev_guide/c_style_guide.rst:122
msgid "Chapter 1: Indentation"
msgstr "Глава 1: Отступы"

#: ../doc/dev_guide/c_style_guide.rst:124
msgid ""
"Tabs are 8 characters, and thus indentations are also 8 characters. There"
" are heretic movements that try to make indentations 4 (or even 2!) "
"characters deep, and that is akin to trying to define the value of PI to "
"be 3."
msgstr ""
"Табуляция составляет 8 символов, то есть отступы будут также в 8 "
"символов. Появляются отступнические движения, которые призывают делать "
"отступы в 4 (или даже 2!) символа, а это сродни попытке округлить число "
"Пи до 3."

#: ../doc/dev_guide/c_style_guide.rst:129
msgid ""
"Rationale: The whole idea behind indentation is to clearly define where a"
" block of control starts and ends.  Especially when you've been looking "
"at your screen for 20 straight hours, you'll find it a lot easier to see "
"how the indentation works if you have large indentations."
msgstr ""
"Обоснование: Основная идея отступов состоит в том, чтобы показать, где "
"начинается и заканчивается логический блок кода. Особенно если вы "
"смотрите на один и тот же код в течение 20 часов, трудно не заметить "
"пользу больших отступов."

#: ../doc/dev_guide/c_style_guide.rst:134
msgid ""
"Now, some people will claim that having 8-character indentations makes "
"the code move too far to the right, and makes it hard to read on a "
"80-character terminal screen.  The answer to that is that if you need "
"more than 3 levels of indentation, you're screwed anyway, and should fix "
"your program."
msgstr ""
"Некоторые могут возразить, что отступ в 8 символов делает код слишком "
"широким, особенно на 80-знаковой строке терминала. Ответ: Если вам "
"понадобилось более трех уровней отступа, вы что-то делаете неправильно, и"
" вам следует переписать этот участок."

#: ../doc/dev_guide/c_style_guide.rst:140
msgid ""
"In short, 8-char indents make things easier to read, and have the added "
"benefit of warning you when you're nesting your functions too deep. Heed "
"that warning."
msgstr ""
"Короче говоря, отступы в 8 символов облегчают чтение кода, да еще и "
"предупреждают, когда вы слишком глубоко встраиваете свои функции. "
"Прислушайтесь к этому."

#: ../doc/dev_guide/c_style_guide.rst:144
msgid ""
"The preferred way to ease multiple indentation levels in a switch "
"statement is to align the \"switch\" and its subordinate \"case\" labels "
"in the same column instead of \"double-indenting\" the \"case\" labels. "
"e.g.:"
msgstr ""
"Лучше всего упростить несколько уровней отступов в операторе switch, "
"выравнивая \"switch\" и его вспомогательные метки \"case\" в одном "
"столбце вместо использования двойных отступов для меток \"case\", "
"например:"

#: ../doc/dev_guide/c_style_guide.rst:148
msgid ""
"switch (suffix) {\n"
"case 'G':\n"
"case 'g':\n"
"    mem <<= 30;\n"
"    break;\n"
"case 'M':\n"
"case 'm':\n"
"    mem <<= 20;\n"
"    break;\n"
"case 'K':\n"
"case 'k':\n"
"    mem <<= 10;\n"
"    /* fall through */\n"
"default:\n"
"    break;\n"
"}"
msgstr ""
"switch (suffix) {\n"
"case 'G':\n"
"case 'g':\n"
"    mem <<= 30;\n"
"    break;\n"
"case 'M':\n"
"case 'm':\n"
"    mem <<= 20;\n"
"    break;\n"
"case 'K':\n"
"case 'k':\n"
"    mem <<= 10;\n"
"    /* fall through */\n"
"default:\n"
"    break;\n"
"}"

#: ../doc/dev_guide/c_style_guide.rst:168
msgid ""
"Don't put multiple statements on a single line unless you have something "
"to hide:"
msgstr ""
"Не размещайте несколько операторов на одной строке, если вам нечего "
"скрывать:"

#: ../doc/dev_guide/c_style_guide.rst:171
msgid ""
"if (condition) do_this;\n"
"  do_something_everytime;"
msgstr ""
"if (condition) do_this;\n"
"  do_something_everytime;"

#: ../doc/dev_guide/c_style_guide.rst:176
msgid ""
"Don't put multiple assignments on a single line either. Kernel coding "
"style is super simple. Avoid tricky expressions."
msgstr ""
"И не размещайте несколько операторов присваивания на одной строке. Стиль "
"программирования ядра чрезвычайно прост. Избегайте сложных выражений."

#: ../doc/dev_guide/c_style_guide.rst:179
msgid ""
"Outside of comments, documentation and except in Kconfig, spaces are "
"never used for indentation, and the above example is deliberately broken."
msgstr ""
"За пределами комментариев, документации и Kconfig, пробелы никогда не "
"используются для отступов, и приведенный выше пример намеренно нарушен."

#: ../doc/dev_guide/c_style_guide.rst:182
msgid "Get a decent editor and don't leave whitespace at the end of lines."
msgstr "Найдите достойный редактор и не оставляйте пробелы в конце строки."

#: ../doc/dev_guide/c_style_guide.rst:187
msgid "Chapter 2: Breaking long lines and strings"
msgstr "Глава 2: Разрыв длинных строк"

#: ../doc/dev_guide/c_style_guide.rst:189
msgid ""
"Coding style is all about readability and maintainability using commonly "
"available tools."
msgstr ""
"Смысл стиля программирования заключается в читаемости и удобстве "
"сопровождения с использованием общедоступных средств."

#: ../doc/dev_guide/c_style_guide.rst:192
msgid ""
"The limit on the length of lines is 80 columns, reduced to 66 columns for"
" comments, and this is a strongly preferred limit."
msgstr ""
"Длина строк ограничена 80 символами, для комментариев уменьшается до 66 "
"символов, и этому следует уделить особое внимание."

#: ../doc/dev_guide/c_style_guide.rst:195
msgid ""
"Statements longer than 80 columns will be broken into sensible chunks. "
"Descendants are always substantially shorter than the parent and are "
"placed substantially to the right. The same applies to function headers "
"with a long argument list. Long strings are as well broken into shorter "
"strings. The only exception to this is where exceeding 80 columns "
"significantly increases readability and does not hide information."
msgstr ""
"Операторы длиной более 80 символов будут разбиты на логические части. "
"Последующие части значительно короче основной и смещены вправо. То же "
"относится к заголовкам функций с длинным списком аргументов. Длинные "
"строки также разбиваются на более короткие строки. Единственным "
"исключением может быть случай, если превышение ограничений повысит "
"читаемость и не скроет необходимую информацию."

#: ../doc/dev_guide/c_style_guide.rst:202
#, python-format
msgid ""
"void fun(int a, int b, int c)\n"
"{\n"
"    if (condition)\n"
"        printk(KERN_WARNING \"Warning this is a long printk with \"\n"
"                        \"3 parameters a: %u b: %u \"\n"
"                        \"c: %u \\n\", a, b, c);\n"
"    else\n"
"        next_statement;\n"
"}"
msgstr ""
"void fun(int a, int b, int c)\n"
"{\n"
"    if (condition)\n"
"        printk(KERN_WARNING \"Warning this is a long printk with \"\n"
"                        \"3 parameters a: %u b: %u \"\n"
"                        \"c: %u \\n\", a, b, c);\n"
"    else\n"
"        next_statement;\n"
"}"

#: ../doc/dev_guide/c_style_guide.rst:216
msgid "Chapter 3: Placing Braces and Spaces"
msgstr "Глава 3: Фигурные скобки и пробелы"

#: ../doc/dev_guide/c_style_guide.rst:218
msgid ""
"The other issue that always comes up in C styling is the placement of "
"braces.  Unlike the indent size, there are few technical reasons to "
"choose one placement strategy over the other, but the preferred way, as "
"shown to us by the prophets Kernighan and Ritchie, is to put the opening "
"brace last on the line, and put the closing brace first, thusly:"
msgstr ""
"Другой проблемой, которая всегда возникает в программировании на C, "
"является размещение фигурных скобок. В отличие от отступов, есть "
"несколько технических обоснований, чтобы выбрать один способ, а не "
"другой, но предпочтительно, как нам показали великие Керниган и Ричи, "
"поместить открывающую скобку в конце строки, а закрывающую в начале новой"
" строки:"

#: ../doc/dev_guide/c_style_guide.rst:224
msgid ""
"if (x is true) {\n"
"    we do y\n"
"}"
msgstr ""
"if (x is true) {\n"
"    we do y\n"
"}"

#: ../doc/dev_guide/c_style_guide.rst:230
msgid ""
"This applies to all non-function statement blocks (if, switch, for, "
"while, do). e.g.:"
msgstr ""
"Это применимо ко всем блокам операторов без функций (if, switch, for, "
"while, do), например:"

#: ../doc/dev_guide/c_style_guide.rst:233
msgid ""
"switch (action) {\n"
"case KOBJ_ADD:\n"
"    return \"add\";\n"
"case KOBJ_REMOVE:\n"
"    return \"remove\";\n"
"case KOBJ_CHANGE:\n"
"    return \"change\";\n"
"default:\n"
"    return NULL;\n"
"}"
msgstr ""
"switch (action) {\n"
"case KOBJ_ADD:\n"
"    return \"add\";\n"
"case KOBJ_REMOVE:\n"
"    return \"remove\";\n"
"case KOBJ_CHANGE:\n"
"    return \"change\";\n"
"default:\n"
"    return NULL;\n"
"}"

#: ../doc/dev_guide/c_style_guide.rst:246
msgid ""
"However, there is one special case, namely functions: they have the "
"opening brace at the beginning of the next line, thus:"
msgstr ""
"И только в особенных случаях, а именно для функций, открывающая скобка "
"размещается в начале следующей строки:"

#: ../doc/dev_guide/c_style_guide.rst:249
msgid ""
"int function(int x)\n"
"{\n"
"    body of function;\n"
"}"
msgstr ""
"int function(int x)\n"
"{\n"
"    body of function;\n"
"}"

#: ../doc/dev_guide/c_style_guide.rst:256
msgid ""
"Heretic people all over the world have claimed that this inconsistency is"
" ...  well ...  inconsistent, but all right-thinking people know that (a)"
" K&R are _right_ and (b) K&R are right.  Besides, functions are special "
"anyway (you can't nest them in C)."
msgstr ""
"Отступники по всему миру утверждали, что такая несогласованность ... ну "
"... несогласованна, но все здравомыслящие люди знают: (a) K&R _правы_, "
"(б) K&R правы. Кроме того, функции в любом случае будут особенными (в C "
"их нельзя вложить)."

#: ../doc/dev_guide/c_style_guide.rst:261
msgid ""
"Note that the closing brace is empty on a line of its own, _except_ in "
"the cases where it is followed by a continuation of the same statement, "
"ie a \"while\" in a do-statement or an \"else\" in an if-statement, like "
"this:"
msgstr ""
"Обратите внимание, что за закрывающей скобкой на отдельной строке ничего "
"нет, _кроме_ тех случаев, когда за ней следует продолжение того же "
"оператора, то есть \"while\" в do-операторе или \"else\" в if-операторе, "
"например:"

#: ../doc/dev_guide/c_style_guide.rst:266
msgid ""
"do {\n"
"    body of do-loop;\n"
"} while (condition);"
msgstr ""
"do {\n"
"    body of do-loop;\n"
"} while (condition);"

#: ../doc/dev_guide/c_style_guide.rst:272
msgid "and"
msgstr "и"

#: ../doc/dev_guide/c_style_guide.rst:274
msgid ""
"if (x == y) {\n"
"    ..\n"
"} else if (x > y) {\n"
"    ...\n"
"} else {\n"
"    ....\n"
"}"
msgstr ""
"if (x == y) {\n"
"    ..\n"
"} else if (x > y) {\n"
"    ...\n"
"} else {\n"
"    ....\n"
"}"

#: ../doc/dev_guide/c_style_guide.rst:284
msgid "Rationale: K&R."
msgstr "Обоснование: K&R."

#: ../doc/dev_guide/c_style_guide.rst:286
msgid ""
"Also, note that this brace-placement also minimizes the number of empty "
"(or almost empty) lines, without any loss of readability.  Thus, as the "
"supply of new-lines on your screen is not a renewable resource (think "
"25-line terminal screens here), you have more empty lines to put comments"
" on."
msgstr ""
"Кроме того, обратите внимание, что такое расположение скобок также сводит"
" к минимуму количество пустых (или почти пустых) строк без потери "
"читаемости. Таким образом, поскольку новые строки на экране -- это не "
"возобновляемый ресурс (вспомним о 25-строчных экранах терминала), у вас "
"будет больше пустых строк для комментариев."

#: ../doc/dev_guide/c_style_guide.rst:292
msgid "Do not unnecessarily use braces where a single statement will do."
msgstr "Не используйте лишние фигурные скобки, если нужен всего один оператор."

#: ../doc/dev_guide/c_style_guide.rst:294
msgid ""
"if (condition)\n"
"    action();"
msgstr ""
"if (condition)\n"
"    action();"

#: ../doc/dev_guide/c_style_guide.rst:299
msgid ""
"This does not apply if one branch of a conditional statement is a single "
"statement. Use braces in both branches."
msgstr ""
"Это не применимо, если одна ветка условного оператора -- это отдельный "
"оператор. Используйте фигурные скобки в обеих ветках."

#: ../doc/dev_guide/c_style_guide.rst:302
msgid ""
"if (condition) {\n"
"    do_this();\n"
"    do_that();\n"
"} else {\n"
"    otherwise();\n"
"}"
msgstr ""
"if (condition) {\n"
"    do_this();\n"
"    do_that();\n"
"} else {\n"
"    otherwise();\n"
"}"

#: ../doc/dev_guide/c_style_guide.rst:313
msgid "Chapter 3.1:  Spaces"
msgstr "Глава 3.1: Пробелы"

#: ../doc/dev_guide/c_style_guide.rst:315
msgid ""
"Linux kernel style for use of spaces depends (mostly) on function-versus-"
"keyword usage.  Use a space after (most) keywords.  The notable "
"exceptions are sizeof, typeof, alignof, and __attribute__, which look "
"somewhat like functions (and are usually used with parentheses in Linux, "
"although they are not required in the language, as in: \"sizeof info\" "
"after \"struct fileinfo info;\" is declared)."
msgstr ""
"Стиль программирования ядра Linux в том, что касается пробелов, зависит "
"(в основном) от использования функции или ключевого слова. Используйте "
"пробел после (большинства) ключевых слов. Значимые исключения: sizeof, "
"typeof, alignof и __attribute__, которые похожи на функции (и обычно "
"используются с круглыми скобками в Linux, хотя они и не требуются, как в "
"объявлении \"sizeof info\" после \"struct fileinfo info;\")."

#: ../doc/dev_guide/c_style_guide.rst:322
msgid ""
"So use a space after these keywords: if, switch, case, for, do, while but"
" not with sizeof, typeof, alignof, or __attribute__.  E.g.,"
msgstr ""
"Поэтому добавляйте пробел после следующих ключевых слов: if, switch, "
"case, for, do, while, но не для sizeof, typeof, alignof или "
"__attribute__.  Пример:"

#: ../doc/dev_guide/c_style_guide.rst:325
msgid "s = sizeof(struct file);"
msgstr "s = sizeof(struct file);"

#: ../doc/dev_guide/c_style_guide.rst:329
msgid ""
"Do not add spaces around (inside) parenthesized expressions. This example"
" is **bad**:"
msgstr ""
"Не добавляйте пробелы вокруг (внутри) выражений в круглых скобках. Этот "
"пример **неправильный**:"

#: ../doc/dev_guide/c_style_guide.rst:332
msgid "s = sizeof( struct file );"
msgstr "s = sizeof( struct file );"

#: ../doc/dev_guide/c_style_guide.rst:336
msgid ""
"When declaring pointer data or a function that returns a pointer type, "
"the preferred use of '*' is adjacent to the data name or function name "
"and not adjacent to the type name.  Examples:"
msgstr ""
"Объявляя данных типа указателя или функцию, которая возвращает тип "
"указателя, предпочтительно использовать '*' рядом с именем данных или "
"именем функции, а не рядом с именем типа. Примеры:"

#: ../doc/dev_guide/c_style_guide.rst:340
msgid ""
"char *linux_banner;\n"
"unsigned long long memparse(char *ptr, char **retptr);\n"
"char *match_strdup(substring_t *s);"
msgstr ""
"char *linux_banner;\n"
"unsigned long long memparse(char *ptr, char **retptr);\n"
"char *match_strdup(substring_t *s);"

#: ../doc/dev_guide/c_style_guide.rst:346
msgid ""
"Use one space around (on each side of) most binary and ternary operators,"
" such as any of these:"
msgstr ""
"Добавляйте по одному пробелу вокруг (с каждой стороны) большинства знаков"
" двухместных и трехместных операций, например, любое из следующих:"

#: ../doc/dev_guide/c_style_guide.rst:349
msgid "=  +  -  <  >  *  /  %  |  &  ^  <=  >=  ==  !=  ?  :"
msgstr "=  +  -  <  >  *  /  %  |  &  ^  <=  >=  ==  !=  ?  :"

#: ../doc/dev_guide/c_style_guide.rst:351
msgid "but no space after unary operators:"
msgstr "но не добавляйте пробелы после знаков одноместных операций:"

#: ../doc/dev_guide/c_style_guide.rst:353
msgid "&  *  +  -  ~  !  sizeof  typeof  alignof  __attribute__  defined"
msgstr "&  *  +  -  ~  !  sizeof  typeof  alignof  __attribute__  defined"

#: ../doc/dev_guide/c_style_guide.rst:355
msgid "no space before the postfix increment & decrement unary operators:"
msgstr ""
"не нужны пробелы перед знаками одноместных операций увеличения или "
"уменьшения постфикса:"

#: ../doc/dev_guide/c_style_guide.rst:357
#: ../doc/dev_guide/c_style_guide.rst:361
msgid "++  --"
msgstr "++  --"

#: ../doc/dev_guide/c_style_guide.rst:359
msgid "no space after the prefix increment & decrement unary operators:"
msgstr ""
"не нужны пробелы после знаков одноместных операций увеличения или "
"уменьшения префикса:"

#: ../doc/dev_guide/c_style_guide.rst:363
msgid "and no space around the '.' and \"->\" structure member operators."
msgstr "и не нужны пробелы вокруг знаков элементов структуры '.' и \"->\"."

#: ../doc/dev_guide/c_style_guide.rst:365
msgid ""
"Do not leave trailing whitespace at the ends of lines.  Some editors with"
" \"smart\" indentation will insert whitespace at the beginning of new "
"lines as appropriate, so you can start typing the next line of code right"
" away. However, some such editors do not remove the whitespace if you end"
" up not putting a line of code there, such as if you leave a blank line."
"  As a result, you end up with lines containing trailing whitespace."
msgstr ""
"Не оставляйте пробелы на концах строк. Некоторые редакторы с \"умным\" "
"отступом вставляют пробелы в начале новых строк, поэтому вы можете сразу "
"ввести следующую строку кода. Однако некоторые такие редакторы не удаляют"
" пробелы, если вы не пишете там код, например, если вы оставите пустую "
"строку. В результате имеем строки с пробелами в конце."

#: ../doc/dev_guide/c_style_guide.rst:372
msgid ""
"Git will warn you about patches that introduce trailing whitespace, and "
"can optionally strip the trailing whitespace for you; however, if "
"applying a series of patches, this may make later patches in the series "
"fail by changing their context lines."
msgstr ""
"Git предупредит, если патчи содержат пробелы в конце строк, и может по "
"желанию удалить пробелы за вас; однако, в серии патчей, это может "
"привести к тому, что последующие патчи в серии не применятся, поскольку "
"изменены контекстные строки."

#: ../doc/dev_guide/c_style_guide.rst:380
msgid "Chapter 4: Naming"
msgstr "Глава 4: Именование"

#: ../doc/dev_guide/c_style_guide.rst:382
msgid ""
"C is a Spartan language, and so should your naming be.  Unlike Modula-2 "
"and Pascal programmers, C programmers do not use cute names like "
"ThisVariableIsATemporaryCounter.  A C programmer would call that variable"
" \"tmp\", which is much easier to write, and not the least more difficult"
" to understand."
msgstr ""
"C -- это спартанский язык, и именование должно быть спартанским. В "
"отличие от разработчиков на Modula-2 и Pascal, разработчики на языке C не"
" используют забавные имена, такие как ThisVariableIsATemporaryCounter. "
"Разработчик на языке C назвал бы такую переменную \"tmp\", что намного "
"легче написать и не менее сложно понять."

#: ../doc/dev_guide/c_style_guide.rst:388
msgid ""
"HOWEVER, while mixed-case names are frowned upon, descriptive names for "
"global variables are a must.  To call a global function \"foo\" is a "
"shooting offense."
msgstr ""
"ОДНАКО, хотя на имена со смешанным регистром смотрят неодобрительно, "
"обязательным требованием будут описательные имена глобальных переменных. "
"Назвать глобальную функцию \"foo\" -- это оскорбление."

#: ../doc/dev_guide/c_style_guide.rst:392
msgid ""
"GLOBAL variables (to be used only if you _really_ need them) need to have"
" descriptive names, as do global functions.  If you have a function that "
"counts the number of active users, you should call that "
"\"count_active_users()\" or similar, you should _not_ call it "
"\"cntusr()\"."
msgstr ""
"У ГЛОБАЛЬНЫХ переменных (которые надо использовать, только если без них "
"НЕЛЬЗЯ обойтись) должны быть описательные имена, равно как и у глобальных"
" функций. Если у вас есть функция, которая подсчитывает количество "
"активных пользователей, нужно назвать ее \"count_active_users()\" или "
"как-то похоже, _НЕ_ следует называть ее \"cntusr()\"."

#: ../doc/dev_guide/c_style_guide.rst:397
msgid ""
"Encoding the type of a function into the name (so-called Hungarian "
"notation) is brain damaged - the compiler knows the types anyway and can "
"check those, and it only confuses the programmer.  No wonder MicroSoft "
"makes buggy programs."
msgstr ""
"Кодирование типа функции в названии (так называемая венгерская нотация) "
"-- это признак плохого тона, поскольку компилятор в любом случае знает "
"типы и может их проверять, и это только путает программиста. "
"Неудивительно, что MicroSoft делает глючные программы."

#: ../doc/dev_guide/c_style_guide.rst:402
msgid ""
"LOCAL variable names should be short, and to the point.  If you have some"
" random integer loop counter, it should probably be called \"i\". Calling"
" it \"loop_counter\" is non-productive, if there is no chance of it being"
" mis-understood.  Similarly, \"tmp\" can be just about any type of "
"variable that is used to hold a temporary value."
msgstr ""
"Имена ЛОКАЛЬНЫХ переменных должны быть короткими и точными. Если у вас "
"есть счетчик случайных целых чисел, его следует называть \"i\". Назвать "
"его \"loop_counter\" будет непродуктивно, если нет никаких шансов, что "
"его перепутают. Аналогично \"tmp\" может быть практически любым типом "
"переменной, которая используется для хранения временного значения."

#: ../doc/dev_guide/c_style_guide.rst:408
msgid ""
"If you are afraid to mix up your local variable names, you have another "
"problem, which is called the function-growth-hormone-imbalance syndrome. "
"See chapter 6 (Functions)."
msgstr ""
"Если вы боитесь перепутать имена своих локальных переменных, у вас другая"
" проблема, которая называется синдромом дисбаланса гормона роста функций."
" См. Главу 6 (Функции)."

#: ../doc/dev_guide/c_style_guide.rst:415
msgid "Chapter 5: Typedefs"
msgstr "Глава 5: Директива Typedef"

#: ../doc/dev_guide/c_style_guide.rst:417
msgid "Please don't use things like \"vps_t\"."
msgstr "Не используйте что-то вроде \"vps_t\"."

#: ../doc/dev_guide/c_style_guide.rst:419
msgid ""
"It's a _mistake_ to use typedef for structures and pointers. When you see"
" a"
msgstr ""
"Будет _ошибкой_ использовать typedef для определения структур и "
"указателей. Если вы видите"

#: ../doc/dev_guide/c_style_guide.rst:421
msgid "vps_t a;"
msgstr "vps_t a;"

#: ../doc/dev_guide/c_style_guide.rst:425
msgid "in the source, what does it mean?"
msgstr "в исходном коде, что это означает?"

#: ../doc/dev_guide/c_style_guide.rst:427
msgid "In contrast, if it says"
msgstr "И наоборот, если говорится"

#: ../doc/dev_guide/c_style_guide.rst:429
msgid "struct virtual_container *a;"
msgstr "struct virtual_container *a;"

#: ../doc/dev_guide/c_style_guide.rst:433
msgid "you can actually tell what \"a\" is."
msgstr "можно действительно понять, что такое \"a\"."

#: ../doc/dev_guide/c_style_guide.rst:435
msgid ""
"Lots of people think that typedefs \"help readability\". Not so. They are"
" useful only for:"
msgstr ""
"Многие думают, что typedef \"способствует читаемости\". Это не так. Эту "
"директиву нужно использовать для:"

#: ../doc/dev_guide/c_style_guide.rst:438
msgid ""
"totally opaque objects (where the typedef is actively used to _hide_ what"
" the object is)."
msgstr ""
"непрозрачных объектов (где typedef активно используется для _сокрытия_ "
"объекта)."

#: ../doc/dev_guide/c_style_guide.rst:441
msgid ""
"Example: \"pte_t\" etc. opaque objects that you can only access using the"
" proper accessor functions."
msgstr ""
"Пример: \"pte_t\" и другие непрозрачные объекты, доступ к которым можно "
"получить с помощью соответствующих функций доступа."

#: ../doc/dev_guide/c_style_guide.rst:444
msgid ""
"NOTE! Opaqueness and \"accessor functions\" are not good in themselves. "
"The reason we have them for things like pte_t etc. is that there really "
"is absolutely _zero_ portably accessible information there."
msgstr ""
"ВНИМАНИЕ! Непрозрачность и функции доступа сами по себе не слишком "
"хороши. Причина, по которой мы используем их для pte_t и т.п., состоит в "
"том, что на самом деле там _нет_ никакой информации для скачивания."

#: ../doc/dev_guide/c_style_guide.rst:448
msgid ""
"Clear integer types, where the abstraction _helps_ avoid confusion "
"whether it is \"int\" or \"long\"."
msgstr ""
"Чисто целочисленные типы, где абстракция _помогает_ избежать путаницы, "
"\"int\" это или \"long\"."

#: ../doc/dev_guide/c_style_guide.rst:451
msgid ""
"u8/u16/u32 are perfectly fine typedefs, although they fit into category "
"(d) better than here."
msgstr ""
"u8/u16/u32 -- вполне нормальные typedef, хотя они больше подходят для "
"категории (d)."

#: ../doc/dev_guide/c_style_guide.rst:454
msgid ""
"NOTE! Again - there needs to be a _reason_ for this. If something is "
"\"unsigned long\", then there's no reason to do"
msgstr ""
"ВНИМАНИЕ! Опять же -- для этого должна быть _причина_. Если что-то "
"представляет собой \"unsigned long\", должна быть причина для"

#: ../doc/dev_guide/c_style_guide.rst:457
msgid "typedef unsigned long myflags_t;"
msgstr "typedef unsigned long myflags_t;"

#: ../doc/dev_guide/c_style_guide.rst:461
msgid ""
"but if there is a clear reason for why it under certain circumstances "
"might be an \"unsigned int\" and under other configurations might be "
"\"unsigned long\", then by all means go ahead and use a typedef."
msgstr ""
"но если есть четкая причина, почему при определенных обстоятельствах "
"может быть \"unsigned int\", а в других случаях может быть \"unsigned "
"long\", то на здоровье, используйте typedef."

#: ../doc/dev_guide/c_style_guide.rst:465
msgid "when you use sparse to literally create a _new_ type for type-checking."
msgstr ""
"когда вы используете разрыв, чтобы буквально создать _новый_ тип для "
"проверки типов."

#: ../doc/dev_guide/c_style_guide.rst:468
msgid ""
"New types which are identical to standard C99 types, in certain "
"exceptional circumstances."
msgstr ""
"Новые типы, идентичные стандартным типам C99, в определенных "
"исключительных обстоятельствах."

#: ../doc/dev_guide/c_style_guide.rst:471
msgid ""
"Although it would only take a short amount of time for the eyes and brain"
" to become accustomed to the standard types like 'uint32_t', some people "
"object to their use anyway."
msgstr ""
"Хотя глазам и мозгу требуется лишь короткое время, чтобы привыкнуть к "
"стандартным типам, например, 'uint32_t', некоторые в любом случае "
"возражают против их использования."

#: ../doc/dev_guide/c_style_guide.rst:475
msgid ""
"Therefore, the Linux-specific 'u8/u16/u32/u64' types and their signed "
"equivalents which are identical to standard types are permitted -- "
"although they are not mandatory in new code of your own."
msgstr ""
"Таким образом, допускаются специфичные для Linux типы 'u8/u16/u32/u64' и "
"их эквиваленты, идентичные стандартным типам, хотя они и не обязательны "
"новом коде."

#: ../doc/dev_guide/c_style_guide.rst:480
msgid ""
"When editing existing code which already uses one or the other set of "
"types, you should conform to the existing choices in that code."
msgstr ""
"При редактировании существующего кода, в котором уже используется один "
"или другой набор типов, следует придерживаться выбранного типа."

#: ../doc/dev_guide/c_style_guide.rst:483
msgid "Types safe for use in userspace."
msgstr "Типы, которые можно использовать в пользовательском пространстве."

#: ../doc/dev_guide/c_style_guide.rst:485
msgid ""
"In certain structures which are visible to userspace, we cannot require "
"C99 types and cannot use the 'u32' form above. Thus, we use __u32 and "
"similar types in all structures which are shared with userspace."
msgstr ""
"В некоторых структурах, видимых в пользовательском пространстве, мы не "
"можем требовать использования типов C99 и не можем применять форму 'u32' "
"выше. Таким образом, мы используем __u32 и подобные типы во всех "
"структурах, которые используются и в пользовательском пространстве."

#: ../doc/dev_guide/c_style_guide.rst:490
msgid ""
"Maybe there are other cases too, but the rule should basically be to "
"NEVER EVER use a typedef unless you can clearly match one of those rules."
msgstr ""
"Возможно, есть и другие случаи, но основное правило состоит в следующем: "
"НИКОГДА НЕ используйте typedef, если вы не соблюдаете одно из этих "
"правил."

#: ../doc/dev_guide/c_style_guide.rst:493
msgid ""
"In general, a pointer, or a struct that has elements that can reasonably "
"be directly accessed should **never** be a typedef."
msgstr ""
"В общем, указатель или структура, содержащие элементы, к которым можно "
"получить прямой доступ, **никогда** не должны быть typedef."

#: ../doc/dev_guide/c_style_guide.rst:499
msgid "Chapter 6: Functions"
msgstr "Глава 6: Функции"

#: ../doc/dev_guide/c_style_guide.rst:501
msgid ""
"Functions should be short and sweet, and do just one thing.  They should "
"fit on one or two screenfuls of text (the ISO/ANSI screen size is 80x24, "
"as we all know), and do one thing and do that well."
msgstr ""
"Функции должны быть короткими и приятными, и выполнять только одно "
"действие. Они должны помещаться на одном или двух экранах текста (размер "
"экрана ISO/ANSI 80x24, как мы все знаем), и выполнять одно действие, но "
"делать это хорошо."

#: ../doc/dev_guide/c_style_guide.rst:505
msgid ""
"The maximum length of a function is inversely proportional to the "
"complexity and indentation level of that function.  So, if you have a "
"conceptually simple function that is just one long (but simple) case-"
"statement, where you have to do lots of small things for a lot of "
"different cases, it's OK to have a longer function."
msgstr ""
"Максимальная длина функции обратно пропорциональна сложности функции и "
"уровню отступов. Итак, если у вас есть концептуально простая функция, "
"которая представляет собой лишь один длинный (но простой) оператор "
"вариант case, где вам нужно делать много мелочей для множества разных "
"случаев, длинная функция -- это нормально."

#: ../doc/dev_guide/c_style_guide.rst:511
msgid ""
"However, if you have a complex function, and you suspect that a less-"
"than-gifted first-year high-school student might not even understand what"
" the function is all about, you should adhere to the maximum limits all "
"the more closely.  Use helper functions with descriptive names (you can "
"ask the compiler to in-line them if you think it's performance-critical, "
"and it will probably do a better job of it than you would have done)."
msgstr ""
"Однако, если у вас есть сложная функция, и вы подозреваете, что не "
"слишком одаренный старшеклассник может даже не понять, о чем эта функция,"
" следует придерживаться ограничений. Используйте вспомогательные функции "
"с описательными именами (можно попросить компилятор встроить их, если "
"считаете, что это критически важно для производительности, и он, "
"вероятно, справится лучше)."

#: ../doc/dev_guide/c_style_guide.rst:519
msgid ""
"Another measure of the function is the number of local variables.  They "
"shouldn't exceed 5-10, or you're doing something wrong.  Re-think the "
"function, and split it into smaller pieces.  A human brain can generally "
"easily keep track of about 7 different things, anything more and it gets "
"confu/sed.  You know you're brilliant, but maybe you'd like to understand"
" what you did 2 weeks from now."
msgstr ""
"Другим критерием функции является количество локальных переменных. Их не "
"должно быть больше 5-10, или вы делаете что-то неправильно. Продумайте "
"функцию заново и разбейте ее на более мелкие части. Человеческий мозг "
"обычно легко отслеживает около 7 разных вещей, а больше -- и он уже "
"запутается. Вы знаете, что сейчас вы гений, но, возможно, вам через пару "
"недель захочется понять, что именно вы делали."

#: ../doc/dev_guide/c_style_guide.rst:526
msgid ""
"In source files, separate functions with one blank line.  If the function"
" is exported, the EXPORT* macro for it should follow immediately after "
"the closing function brace line.  E.g.:"
msgstr ""
"В исходных файлах разделяйте функции пустой строкой. Если функция "
"экспортируется, макрос EXPORT* должен следовать сразу за строкой с "
"закрывающей фигурной скобкой. Например:"

#: ../doc/dev_guide/c_style_guide.rst:530
msgid ""
"int system_is_up(void)\n"
"{\n"
"    return system_state == SYSTEM_RUNNING;\n"
"}\n"
"EXPORT_SYMBOL(system_is_up);"
msgstr ""
"int system_is_up(void)\n"
"{\n"
"    return system_state == SYSTEM_RUNNING;\n"
"}\n"
"EXPORT_SYMBOL(system_is_up);"

#: ../doc/dev_guide/c_style_guide.rst:538
msgid ""
"In function prototypes, include parameter names with their data types. "
"Although this is not required by the C language, it is preferred in Linux"
" because it is a simple way to add valuable information for the reader."
msgstr ""
"В прототипах функций включайте имена параметров с типами данных. Хотя для"
" языка C это и не требуется, но рекомендуется для Linux, потому что это "
"простой способ добавить ценную информацию для читателя."

#: ../doc/dev_guide/c_style_guide.rst:544
msgid "Chapter 7: Centralized exiting of functions"
msgstr "Глава 7: Централизованный выход из функции"

#: ../doc/dev_guide/c_style_guide.rst:546
msgid ""
"Albeit deprecated by some people, the equivalent of the goto statement is"
" used frequently by compilers in form of the unconditional jump "
"instruction."
msgstr ""
"Хотя некоторые объявили аналог оператора goto устаревшим, его часто "
"используют компиляторы в виде инструкции безусловной передачи управления."

#: ../doc/dev_guide/c_style_guide.rst:549
msgid ""
"The goto statement comes in handy when a function exits from multiple "
"locations and some common work such as cleanup has to be done."
msgstr ""
"Оператор goto пригодится, когда функция производит выход из нескольких "
"мест, и необходимо выполнить какие-то общие действия, такие как очистка."

#: ../doc/dev_guide/c_style_guide.rst:552
msgid "The rationale is:"
msgstr "Обоснование:"

#: ../doc/dev_guide/c_style_guide.rst:554
msgid "unconditional statements are easier to understand and follow"
msgstr "безусловные операторы легче понять и выполнять"

#: ../doc/dev_guide/c_style_guide.rst:555
msgid "nesting is reduced"
msgstr "уменьшается глубина вложения"

#: ../doc/dev_guide/c_style_guide.rst:556
msgid ""
"errors by not updating individual exit points when making modifications "
"are prevented"
msgstr ""
"предотвращаются ошибки по причине отсутствия обновления отдельных точек "
"выхода при внесении изменений"

#: ../doc/dev_guide/c_style_guide.rst:558
msgid "saves the compiler work to optimize redundant code away ;)"
msgstr "уменьшает объем работы компилятора для оптимизации избыточного кода ;)"

#: ../doc/dev_guide/c_style_guide.rst:560
msgid ""
"int fun(int a)\n"
"{\n"
"    int result = 0;\n"
"    char *buffer = kmalloc(SIZE);\n"
"\n"
"    if (buffer == NULL)\n"
"        return -ENOMEM;\n"
"\n"
"    if (condition1) {\n"
"        while (loop1) {\n"
"            ...\n"
"        }\n"
"        result = 1;\n"
"        goto out;\n"
"    }\n"
"    ...\n"
"out:\n"
"    kfree(buffer);\n"
"    return result;\n"
"}"
msgstr ""
"int fun(int a)\n"
"{\n"
"    int result = 0;\n"
"    char *buffer = kmalloc(SIZE);\n"
"\n"
"    if (buffer == NULL)\n"
"        return -ENOMEM;\n"
"\n"
"    if (condition1) {\n"
"        while (loop1) {\n"
"            ...\n"
"        }\n"
"        result = 1;\n"
"        goto out;\n"
"    }\n"
"    ...\n"
"out:\n"
"    kfree(buffer);\n"
"    return result;\n"
"}"

#: ../doc/dev_guide/c_style_guide.rst:585
msgid "Chapter 8: Commenting"
msgstr "Глава 8: Комментирование"

#: ../doc/dev_guide/c_style_guide.rst:587
msgid ""
"Comments are good, but there is also a danger of over-commenting. NEVER "
"try to explain HOW your code works in a comment: it's much better to "
"write the code so that the _working_ is obvious, and it's a waste of time"
" to explain badly written code. с Generally, you want your comments to "
"tell WHAT your code does, not HOW. Also, try to avoid putting comments "
"inside a function body: if the function is so complex that you need to "
"separately comment parts of it, you should probably go back to chapter 6 "
"for a while.  You can make small comments to note or warn about something"
" particularly clever (or ugly), but try to avoid excess.  Instead, put "
"the comments at the head of the function, telling people what it does, "
"and possibly WHY it does it."
msgstr ""
"Комментарии полезны, но есть и опасность чрезмерного комментирования. "
"НИКОГДА не пытайтесь объяснить в комментарии, КАК работает ваш код: "
"гораздо лучше написать код так, чтобы принцип _работы_ был очевиден, а "
"объяснять плохо написанный код -- это пустая трата времени. Как правило, "
"желательно, чтобы комментарии поясняли, ЧТО делает ваш код, а не КАК. "
"Кроме того, постарайтесь не размещать комментарии внутри тела функции: "
"если функция настолько сложна, что нужно отдельно комментировать ее "
"части, скорее всего, вам надо вернуться к главе 6. Можно давать небольшие"
" комментарии, чтобы отметить или предупредить о чем-то особенно умном "
"(или уродливом), но старайтесь избегать лишнего. Вместо этого поставьте "
"комментарии во главе функции, сообщите людям, что она делает, и, "
"возможно, ПОЧЕМУ она это делает."

#: ../doc/dev_guide/c_style_guide.rst:601
msgid ""
"When commenting the kernel API functions, please use the kernel-doc "
"format. See the files Documentation/kernel-doc-nano-HOWTO.txt and scripts"
"/kernel-doc for details."
msgstr ""
"Комментируя функции API ядра, используйте формат kernel-doc. Более "
"подробную информацию см. в файлах Documentation/kernel-doc-nano-HOWTO.txt"
" и scripts/kernel-doc."

#: ../doc/dev_guide/c_style_guide.rst:605
msgid ""
"Linux style for comments is the C89 :code:`/* ... */`` style. Don't use "
"C99-style :code:`// ...` comments."
msgstr ""
"Стиль Linux для комментариев -- стиль C89 :code:`/* ... */`` . Не "
"используйте стиль C99 :code:`// ...`."

#: ../doc/dev_guide/c_style_guide.rst:608
msgid "The preferred style for long (multi-line) comments is:"
msgstr "Для длинных (многострочных) комментариев рекомендуется:"

#: ../doc/dev_guide/c_style_guide.rst:610
msgid ""
"/*\n"
" * This is the preferred style for multi-line\n"
" * comments in the Linux kernel source code.\n"
" * Please use it consistently.\n"
" *\n"
" * Description:  A column of asterisks on the left side,\n"
" * with beginning and ending almost-blank lines.\n"
" */"
msgstr ""
"/*\n"
" * Рекомендуется использовать этот стиль для многострочных\n"
" * комментариев в исходном коде ядра Linux.\n"
" * Просьба использовать его согласованно.\n"
" *\n"
" * Описание:  Столбец звездочек слева,\n"
" * в начале и в конце почти пустые строки.\n"
" */"

#: ../doc/dev_guide/c_style_guide.rst:621
msgid ""
"It's also important to comment data, whether they are basic types or "
"derived types.  To this end, use just one data declaration per line (no "
"commas for multiple data declarations).  This leaves you room for a small"
" comment on each item, explaining its use."
msgstr ""
"Также важно комментировать данные, являются ли они базовыми или "
"производными типами. Для этого используйте только одно объявление данных "
"в строке (без запятой для объявления массива данных). Это оставляет вам "
"место для небольшого комментария к каждому пункту с объяснением его "
"использования."

#: ../doc/dev_guide/c_style_guide.rst:628
msgid "Chapter 9: You've made a mess of it"
msgstr "Глава 9: Вы устроили беспорядок"

#: ../doc/dev_guide/c_style_guide.rst:630
msgid ""
"That's OK, we all do.  You've probably been told by your long-time Unix "
"user helper that \"GNU emacs\" automatically formats the C sources for "
"you, and you've noticed that yes, it does do that, but the defaults it "
"uses are less than desirable (in fact, they are worse than random typing "
"- an infinite number of monkeys typing into GNU emacs would never make a "
"good program)."
msgstr ""
"Всё в порядке, мы все так делаем. Наверное, опытный пользователь Unix, "
"который вам помогает, сказал, что \"GNU emacs\" автоматически форматирует"
" исходный код C, и вы заметили, что да, действительно, но используемые по"
" умолчанию значения оставляют желать лучшего ( на самом деле, они хуже, "
"чем случайные -- несметное количество обезьян, печатающих в GNU emacs, "
"никогда не создаст хорошую программу)."

#: ../doc/dev_guide/c_style_guide.rst:637
msgid ""
"So, you can either get rid of GNU emacs, or change it to use saner "
"values.  To do the latter, you can stick the following in your .emacs "
"file:"
msgstr ""
"Итак, вы можете либо избавиться от GNU emacs, либо изменить его для "
"использования более адекватных значений. Чтобы сделать последнее, можно "
"вставить следующее в файл .emacs:"

#: ../doc/dev_guide/c_style_guide.rst:640
msgid ""
"(defun c-lineup-arglist-tabs-only (ignored)\n"
"\"Line up argument lists by tabs, not spaces\"\n"
"(let* ((anchor (c-langelem-pos c-syntactic-element))\n"
"    (column (c-langelem-2nd-pos c-syntactic-element))\n"
"    (offset (- (1+ column) anchor))\n"
"    (steps (floor offset c-basic-offset)))\n"
"    (* (max steps 1)\n"
"    c-basic-offset)))\n"
"\n"
"(add-hook 'c-mode-common-hook\n"
"        (lambda ()\n"
"            ;; Add kernel style\n"
"            (c-add-style\n"
"            \"linux-tabs-only\"\n"
"            '(\"linux\" (c-offsets-alist\n"
"                        (arglist-cont-nonempty\n"
"                        c-lineup-gcc-asm-reg\n"
"                        c-lineup-arglist-tabs-only))))))\n"
"\n"
"(add-hook 'c-mode-hook\n"
"        (lambda ()\n"
"            (let ((filename (buffer-file-name)))\n"
"            ;; Enable kernel mode for the appropriate files\n"
"            (when (and filename\n"
"                        (string-match (expand-file-name \"~/src/linux-"
"trees\")\n"
"                                    filename))\n"
"                (setq indent-tabs-mode t)\n"
"                (c-set-style \"linux-tabs-only\")))))"
msgstr ""
"(defun c-lineup-arglist-tabs-only (ignored)\n"
"\"Line up argument lists by tabs, not spaces\"\n"
"(let* ((anchor (c-langelem-pos c-syntactic-element))\n"
"    (column (c-langelem-2nd-pos c-syntactic-element))\n"
"    (offset (- (1+ column) anchor))\n"
"    (steps (floor offset c-basic-offset)))\n"
"    (* (max steps 1)\n"
"    c-basic-offset)))\n"
"\n"
"(add-hook 'c-mode-common-hook\n"
"        (lambda ()\n"
"            ;; Add kernel style\n"
"            (c-add-style\n"
"            \"linux-tabs-only\"\n"
"            '(\"linux\" (c-offsets-alist\n"
"                        (arglist-cont-nonempty\n"
"                        c-lineup-gcc-asm-reg\n"
"                        c-lineup-arglist-tabs-only))))))\n"
"\n"
"(add-hook 'c-mode-hook\n"
"        (lambda ()\n"
"            (let ((filename (buffer-file-name)))\n"
"            ;; Enable kernel mode for the appropriate files\n"
"            (when (and filename\n"
"                        (string-match (expand-file-name \"~/src/linux-"
"trees\")\n"
"                                    filename))\n"
"                (setq indent-tabs-mode t)\n"
"                (c-set-style \"linux-tabs-only\")))))"

#: ../doc/dev_guide/c_style_guide.rst:671
msgid ""
"This will make emacs go better with the kernel coding style for C files "
"below ~/src/linux-trees."
msgstr ""
"Это заставит emacs лучше работать со стилем программирования ядра для "
"файлов C в ~/src/linux-trees."

#: ../doc/dev_guide/c_style_guide.rst:674
msgid ""
"But even if you fail in getting emacs to do sane formatting, not "
"everything is lost: use \"indent\"."
msgstr ""
"Но даже если вам не удастся заставить emacs форматировать нормально, не "
"все потеряно: используйте \"indent\"."

#: ../doc/dev_guide/c_style_guide.rst:677
msgid ""
"Now, again, GNU indent has the same brain-dead settings that GNU emacs "
"has, which is why you need to give it a few command line options. "
"However, that's not too bad, because even the makers of GNU indent "
"recognize the authority of K&R (the GNU people aren't evil, they are just"
" severely misguided in this matter), so you just give indent the options "
"\"-kr -i8\" (stands for \"K&R, 8 character indents\"), or use "
"\"scripts/Lindent\", which indents in the latest style."
msgstr ""
"Опять же, у GNU indent такие же безмозглые настройки, как и у GNU emacs, "
"поэтому надо задать для него несколько параметров командной строки. Тем "
"не менее, это не так уж плохо, потому что даже разработчики GNU indent "
"признают авторитет K&R (люди из GNU не злые, они просто серьезно "
"ошибаются в этом вопросе), поэтому вы просто указываете опции \"-kr -i8\""
" (означает \"K&R, 8 символов отступа\") или используйте "
"\"scripts/Lindent\", которые делают отступы в новейшем стиле."

#: ../doc/dev_guide/c_style_guide.rst:685
msgid ""
"\"indent\" has a lot of options, and especially when it comes to comment "
"re-formatting you may want to take a look at the man page.  But remember:"
" \"indent\" is not a fix for bad programming."
msgstr ""
"В \"indent\" есть много опций, и особенно когда дело доходит до "
"повторного форматирования комментариев, вы можете захотеть взглянуть на "
"страницу руководства. Но помните: \"indent\" -- это не залог хорошего "
"программирования."

#: ../doc/dev_guide/c_style_guide.rst:692
msgid "Chapter 10: Kconfig configuration files"
msgstr "Глава 10: Конфигурационные файлы Kconfig"

#: ../doc/dev_guide/c_style_guide.rst:694
msgid ""
"For all of the Kconfig* configuration files throughout the source tree, "
"the indentation is somewhat different.  Lines under a \"config\" "
"definition are indented with one tab, while help text is indented an "
"additional two spaces. Example:"
msgstr ""
"Для всех конфигурационных файлов Kconfig* в дереве источников отступы "
"несколько отличаются. Строки под определением \"config\" имеют отступы на"
" позицию табуляции, а текст справки с отступом еще на два пробела. "
"Пример:"

#: ../doc/dev_guide/c_style_guide.rst:699
msgid ""
"config AUDIT\n"
"    bool \"Auditing support\"\n"
"    depends on NET\n"
"    help\n"
"    Enable auditing infrastructure that can be used with another\n"
"    kernel subsystem, such as SELinux (which requires this for\n"
"    logging of avc messages output).  Does not do system-call\n"
"    auditing without CONFIG_AUDITSYSCALL."
msgstr ""
"config AUDIT\n"
"    bool \"Auditing support\"\n"
"    depends on NET\n"
"    help\n"
"    Enable auditing infrastructure that can be used with another\n"
"    kernel subsystem, such as SELinux (which requires this for\n"
"    logging of avc messages output).  Does not do system-call\n"
"    auditing without CONFIG_AUDITSYSCALL."

#: ../doc/dev_guide/c_style_guide.rst:710
msgid ""
"Features that might still be considered unstable should be defined as "
"dependent on \"EXPERIMENTAL\":"
msgstr ""
"Функции, которые все еще могут считаться нестабильными, должны "
"определяться как зависящие от \"EXPERIMENTAL\":"

#: ../doc/dev_guide/c_style_guide.rst:713
msgid ""
"config SLUB\n"
"    depends on EXPERIMENTAL && !ARCH_USES_SLAB_PAGE_STRUCT\n"
"    bool \"SLUB (Unqueued Allocator)\"\n"
"    ..."
msgstr ""
"config SLUB\n"
"    depends on EXPERIMENTAL && !ARCH_USES_SLAB_PAGE_STRUCT\n"
"    bool \"SLUB (Unqueued Allocator)\"\n"
"    ..."

#: ../doc/dev_guide/c_style_guide.rst:720
msgid ""
"while seriously dangerous features (such as write support for certain "
"filesystems) should advertise this prominently in their prompt string:"
msgstr ""
"тогда как крайне опасные функции (например, поддержка записи для "
"определенных файловых систем) должны подчеркнуть это в строке "
"приглашения:"

#: ../doc/dev_guide/c_style_guide.rst:723
msgid ""
"config ADFS_FS_RW\n"
"    bool \"ADFS write support (DANGEROUS)\"\n"
"    depends on ADFS_FS\n"
"    ..."
msgstr ""
"config ADFS_FS_RW\n"
"    bool \"ADFS write support (DANGEROUS)\"\n"
"    depends on ADFS_FS\n"
"    ..."

#: ../doc/dev_guide/c_style_guide.rst:730
msgid ""
"For full documentation on the configuration files, see the file "
"Documentation/kbuild/kconfig-language.txt."
msgstr ""
"Полную документацию по файлам конфигурации см. в файле "
"Documentation/kbuild/kconfig-language.txt."

#: ../doc/dev_guide/c_style_guide.rst:736
msgid "Chapter 11: Data structures"
msgstr "Глава 11: Структуры данных"

#: ../doc/dev_guide/c_style_guide.rst:738
msgid ""
"Data structures that have visibility outside the single-threaded "
"environment they are created and destroyed in should always have "
"reference counts.  In the kernel, garbage collection doesn't exist (and "
"outside the kernel garbage collection is slow and inefficient), which "
"means that you absolutely _have_ to reference count all your uses."
msgstr ""
"Для структур данных, которые видимы за пределами однопотоковой среды, в "
"которой они создаются и удаляются, всегда должен выполняться подсчет "
"ссылок. В ядре нет сборки мусора (и за пределами ядра сборка мусора "
"производится медленно и неэффективно), а это означает, что абсолютно "
"_необходимо_ подсчитывать ссылки на каждый случай использования."

#: ../doc/dev_guide/c_style_guide.rst:744
msgid ""
"Reference counting means that you can avoid locking, and allows multiple "
"users to have access to the data structure in parallel - and not having "
"to worry about the structure suddenly going away from under them just "
"because they slept or did something else for a while."
msgstr ""
"Подсчет ссылок означает, что можно избежать блокировки и позволить "
"нескольким пользователям получать доступ к структуре данных одновременно "
"-- и не нужно беспокоиться о том, что структура внезапно исчезнет только "
"потому, что они спали или делали что-то еще."

#: ../doc/dev_guide/c_style_guide.rst:749
msgid ""
"Note that locking is _not_ a replacement for reference counting. Locking "
"is used to keep data structures coherent, while reference counting is a "
"memory management technique.  Usually both are needed, and they are not "
"to be confused with each other."
msgstr ""
"Обратите внимание, что блокировка _не_ является заменой для подсчета "
"ссылок. Блокировка используется для обеспечения целостности структур "
"данных, а подсчет ссылок -- это метод управления памятью. Обычно "
"необходимо и то, и другое, и их нельзя путать друг с другом."

#: ../doc/dev_guide/c_style_guide.rst:754
msgid ""
"Many data structures can indeed have two levels of reference counting, "
"when there are users of different \"classes\".  The subclass count counts"
" the number of subclass users, and decrements the global count just once "
"when the subclass count goes to zero."
msgstr ""
"Для многих структур данных действительно могут быть два уровня подсчета "
"ссылок, когда есть пользователи разных \"классов\". Подсчет подкласса "
"подсчитывает количество пользователей подкласса и уменьшает глобальный "
"счетчик только один раз, когда подсчет подкласса равен нулю."

#: ../doc/dev_guide/c_style_guide.rst:759
msgid ""
"Examples of this kind of \"multi-level-reference-counting\" can be found "
"in memory management (\"struct mm_struct\": mm_users and mm_count), and "
"in filesystem code (\"struct super_block\": s_count and s_active)."
msgstr ""
"Примеры такого многоуровневого подсчета ссылок можно найти в управлении "
"памятью (\"struct mm_struct\": mm_users и mm_count) и в коде файловой "
"системы (\"struct super_block\": s_count и s_active)."

#: ../doc/dev_guide/c_style_guide.rst:763
msgid ""
"Remember: if another thread can find your data structure, and you don't "
"have a reference count on it, you almost certainly have a bug."
msgstr ""
"Следует помнить, что если другой поток может найти вашу структуру данных,"
" и у вас нет счетчика ссылок, почти наверняка возникнет ошибка."

#: ../doc/dev_guide/c_style_guide.rst:768
msgid "Chapter 12: Macros, Enums and RTL"
msgstr "Глава 12: Макросы, перечисления и уровни регистровых передач (RTL)"

#: ../doc/dev_guide/c_style_guide.rst:770
msgid "Names of macros defining constants and labels in enums are capitalized."
msgstr ""
"Имена макросов, определяющих постоянные и метки в перечислениях, пишутся "
"заглавными буквами."

#: ../doc/dev_guide/c_style_guide.rst:772
msgid "#define CONSTANT 0x12345"
msgstr "#define CONSTANT 0x12345"

#: ../doc/dev_guide/c_style_guide.rst:776
msgid "Enums are preferred when defining several related constants."
msgstr ""
"Рекомендуется использовать перечисления при определении нескольких "
"связанных постоянных."

#: ../doc/dev_guide/c_style_guide.rst:778
msgid ""
"CAPITALIZED macro names are appreciated but macros resembling functions "
"may be named in lower case."
msgstr ""
"Ценятся имена макросов, написанные ЗАГЛАВНЫМИ буквами, но похожие на "
"функции макросы можно называть, используя буквы в нижнем регистре."

#: ../doc/dev_guide/c_style_guide.rst:781
msgid "Generally, inline functions are preferable to macros resembling functions."
msgstr ""
"Как правило, рекомендуется использовать встроенные функции для макросов, "
"похожих на функции."

#: ../doc/dev_guide/c_style_guide.rst:783
msgid "Macros with multiple statements should be enclosed in a do - while block:"
msgstr "Макросы с несколькими операторами должны быть заключены в блок do - while:"

#: ../doc/dev_guide/c_style_guide.rst:785
msgid ""
"#define macrofun(a, b, c)   \\\n"
"    do {                    \\\n"
"        if (a == 5)         \\\n"
"            do_this(b, c);  \\\n"
"    } while (0)"
msgstr ""
"#define macrofun(a, b, c)   \\\n"
"    do {                    \\\n"
"        if (a == 5)         \\\n"
"            do_this(b, c);  \\\n"
"    } while (0)"

#: ../doc/dev_guide/c_style_guide.rst:793
msgid "Things to avoid when using macros:"
msgstr "Во время использования макросов постарайтесь избегать следующего:"

#: ../doc/dev_guide/c_style_guide.rst:795
msgid "macros that affect control flow:"
msgstr "макросы, которые влияют на поток управления:"

#: ../doc/dev_guide/c_style_guide.rst:797
msgid ""
"#define FOO(x)                  \\\n"
"    do {                        \\\n"
"        if (blah(x) < 0)        \\\n"
"            return -EBUGGERED;  \\\n"
"    } while(0)"
msgstr ""
"#define FOO(x)                  \\\n"
"    do {                        \\\n"
"        if (blah(x) < 0)        \\\n"
"            return -EBUGGERED;  \\\n"
"    } while(0)"

#: ../doc/dev_guide/c_style_guide.rst:805
msgid ""
"is a _very_ bad idea.  It looks like a function call but exits the "
"\"calling\" function; don't break the internal parsers of those who will "
"read the code."
msgstr ""
"это _очень_ плохая идея. Он выглядит как вызов функции, но выходит из "
"вызывающей функции; не ломайте внутреннего анализатора у тех, кто "
"прочитает код."

#: ../doc/dev_guide/c_style_guide.rst:808
msgid "macros that depend on having a local variable with a magic name:"
msgstr ""
"макросы, которые зависят от наличия локальной переменной с магическим "
"именем:"

#: ../doc/dev_guide/c_style_guide.rst:810
msgid "#define FOO(val) bar(index, val)"
msgstr "#define FOO(val) bar(index, val)"

#: ../doc/dev_guide/c_style_guide.rst:814
msgid ""
"might look like a good thing, but it's confusing as hell when one reads "
"the code and it's prone to breakage from seemingly innocent changes."
msgstr ""
"могут показаться хорошей идеей, но они сбивают с толку, когда читаешь "
"код, и такой код склонен ломаться от, казалось бы, невинных изменений."

#: ../doc/dev_guide/c_style_guide.rst:817
msgid ""
"macros with arguments that are used as l-values: FOO(x) = y; will bite "
"you if somebody e.g. turns FOO into an inline function."
msgstr ""
"макросы с аргументами, которые используются как l-значения: FOO(x) = y; "
"это вам аукнется, если кто-то, например. сделает FOO встроенной функцией."

#: ../doc/dev_guide/c_style_guide.rst:820
msgid ""
"forgetting about precedence: macros defining constants using expressions "
"must enclose the expression in parentheses. Beware of similar issues with"
" macros using parameters."
msgstr ""
"потеря приоритета: макросы, определяющие постоянные с использованием "
"выражений, должны заключать выражение в круглые скобки. Остерегайтесь "
"аналогичных проблем с макросами с использованием параметров."

#: ../doc/dev_guide/c_style_guide.rst:824
msgid ""
"#define CONSTANT 0x4000\n"
"#define CONSTEXP (CONSTANT | 3)"
msgstr ""
"#define CONSTANT 0x4000\n"
"#define CONSTEXP (CONSTANT | 3)"

#: ../doc/dev_guide/c_style_guide.rst:829
msgid ""
"The cpp manual deals with macros exhaustively. The gcc internals manual "
"also covers RTL which is used frequently with assembly language in the "
"kernel."
msgstr ""
"В руководстве cpp подробно рассматриваются макросы. Руководство по "
"внутреннему устройству gcc также рассматривает уровни регистровых передач"
" (RTL), которые часто используются с языком ассемблера в ядре."

#: ../doc/dev_guide/c_style_guide.rst:834
msgid "Chapter 13: Printing kernel messages"
msgstr "Глава 13: Вывод сообщений ядра"

#: ../doc/dev_guide/c_style_guide.rst:836
msgid ""
"Kernel developers like to be seen as literate. Do mind the spelling of "
"kernel messages to make a good impression. Do not use crippled words like"
" \"dont\"; use \"do not\" or \"don't\" instead.  Make the messages "
"concise, clear, and unambiguous."
msgstr ""
"Разработчики ядра любят выглядеть грамотными. Обращайте внимание на "
"орфографию в сообщениях ядра, чтобы произвести хорошее впечатление. Не "
"используйте искаженные слова типа \"dont\"; вместо этого используйте \"do"
" not\" или \"don't\". Пусть сообщения будут краткими, ясными и "
"недвусмысленными."

#: ../doc/dev_guide/c_style_guide.rst:841
msgid "Kernel messages do not have to be terminated with a period."
msgstr "Сообщения ядра не должны заканчиваться точкой."

#: ../doc/dev_guide/c_style_guide.rst:843
#, python-format
msgid "Printing numbers in parentheses (%d) adds no value and should be avoided."
msgstr ""
"Вывод номеров в круглых скобках (%d) не повышает их ценность, и его "
"следует избегать."

#: ../doc/dev_guide/c_style_guide.rst:845
msgid ""
"There are a number of driver model diagnostic macros in <linux/device.h> "
"which you should use to make sure messages are matched to the right "
"device and driver, and are tagged with the right level:  dev_err(), "
"dev_warn(), dev_info(), and so forth.  For messages that aren't "
"associated with a particular device, <linux/kernel.h> defines pr_debug() "
"and pr_info()."
msgstr ""
"В <linux/device.h> есть несколько макросов для диагностики модели "
"драйвера, которые следует использовать, чтобы убедиться, что сообщения "
"соотнесены с правильным устройством и драйвером и помечены правильным "
"уровнем: dev_err(), dev_warn(), dev_info() и так далее. Для сообщений, не"
" связанных с определенным устройством, <linux/kernel.h> определяет "
"pr_debug() и pr_info()."

#: ../doc/dev_guide/c_style_guide.rst:851
msgid ""
"Coming up with good debugging messages can be quite a challenge; and once"
" you have them, they can be a huge help for remote troubleshooting.  Such"
" messages should be compiled out when the DEBUG symbol is not defined "
"(that is, by default they are not included).  When you use dev_dbg() or "
"pr_debug(), that's automatic.  Many subsystems have Kconfig options to "
"turn on -DDEBUG. A related convention uses VERBOSE_DEBUG to add "
"dev_vdbg() messages to the ones already enabled by DEBUG."
msgstr ""
"Придумать хорошие сообщения отладки может быть довольно сложно; и как "
"только у вас будут такие, они могут стать огромным подспорьем для "
"удаленного устранения неполадок. Такие сообщения должны быть "
"скомпилированы, когда символ DEBUG не определен (то есть, по умолчанию "
"они не включены). Если вы используете dev_dbg() или pr_debug(), это "
"сработает автоматически. Во многих подсистемах есть опции Kconfig для "
"включения -DDEBUG. В соответствующем соглашении VERBOSE_DEBUG "
"используется для добавления сообщений dev_vdbg() в сообщения, которые уже"
" включены с помощью DEBUG."

#: ../doc/dev_guide/c_style_guide.rst:861
msgid "Chapter 14: Allocating memory"
msgstr "Глава 14: Выделение памяти"

#: ../doc/dev_guide/c_style_guide.rst:863
msgid ""
"The kernel provides the following general purpose memory allocators: "
"kmalloc(), kzalloc(), kcalloc(), and vmalloc().  Please refer to the API "
"documentation for further information about them."
msgstr ""
"В ядре поддерживаются следующие распределители памяти широкого "
"применения: kmalloc(), kzalloc(), kcalloc(), and vmalloc().  Для "
"получения дополнительной информации обратитесь к документации по API."

#: ../doc/dev_guide/c_style_guide.rst:867
msgid "The preferred form for passing a size of a struct is the following:"
msgstr "Предпочтительна следующая форма передачи размера структуры:"

#: ../doc/dev_guide/c_style_guide.rst:869
msgid "p = kmalloc(sizeof(*p), ...);"
msgstr "p = kmalloc(sizeof(*p), ...);"

#: ../doc/dev_guide/c_style_guide.rst:873
msgid ""
"The alternative form where struct name is spelled out hurts readability "
"and introduces an opportunity for a bug when the pointer variable type is"
" changed but the corresponding sizeof that is passed to a memory "
"allocator is not."
msgstr ""
"Другая форма, в которой прописывается название структуры, ухудшает "
"читаемость и дает дополнительные возможности для возникновения ошибок при"
" изменении типа переменной указателя, когда соответствующий sizeof, "
"который передается в распределитель ресурсов, не меняется."

#: ../doc/dev_guide/c_style_guide.rst:877
msgid ""
"Casting the return value which is a void pointer is redundant. The "
"conversion from void pointer to any other pointer type is guaranteed by "
"the C programming language."
msgstr ""
"Не нужно отбрасывать возвращаемое значение, представляющее собой "
"указатель на объект, тип которого неизвестен. Язык программирования C "
"обеспечивает преобразование из указателя на объект, тип которого "
"неизвестен, на любой другой тип указателя."

#: ../doc/dev_guide/c_style_guide.rst:883
msgid "Chapter 15: The inline disease"
msgstr "Глава 15: Болезнь встраивания (inline)"

#: ../doc/dev_guide/c_style_guide.rst:885
msgid ""
"There appears to be a common misperception that gcc has a magic \"make me"
" faster\" speedup option called \"inline\". While the use of inlines can "
"be appropriate (for example as a means of replacing macros, see Chapter "
"12), it very often is not. Abundant use of the inline keyword leads to a "
"much bigger kernel, which in turn slows the system as a whole down, due "
"to a bigger icache footprint for the CPU and simply because there is less"
" memory available for the pagecache. Just think about it; a pagecache "
"miss causes a disk seek, which easily takes 5 milliseconds. There are a "
"LOT of cpu cycles that can go into these 5 milliseconds."
msgstr ""
"Похоже, что распространено ошибочное представление о том, что в gcc есть "
"волшебная опция ускорения, называемая встраиванием \"inline\". Хотя "
"использование встроенных строк может быть оправдано (например, как "
"средство замены макросов, см. Главу 12), довольно часто это не так. "
"Избыток ключевого слова inline приводит к увеличению ядра, что в свою "
"очередь, замедляет работу системы в целом из-за большего объема отпечатка"
" icache для процессора и просто потому, что для pagecache доступно  "
"меньше памяти. Просто подумайте: непопадание в pagecache вызывает поиск "
"по диску, который легко занимает 5 миллисекунд. Есть МНОГО циклов "
"процессора, которые могут пройти в эти 5 миллисекунд."

#: ../doc/dev_guide/c_style_guide.rst:895
msgid ""
"A reasonable rule of thumb is to not put inline at functions that have "
"more than 3 lines of code in them. An exception to this rule are the "
"cases where a parameter is known to be a compiletime constant, and as a "
"result of this constantness you *know* the compiler will be able to "
"optimize most of your function away at compile time. For a good example "
"of this later case, see the kmalloc() inline function."
msgstr ""
"Общее правило состоит в том, чтобы не вводить встраивание в функции, "
"содержащие больше трех строк кода. Исключением из этого правила являются "
"случаи, когда параметр известен как постоянная времени компиляции, и в "
"результате вы *знаете*, что компилятор сможет оптимизировать большую "
"часть ваших функций во время компиляции. Хороший пример последнего случая"
" -- встроенная функция kmalloc()."

#: ../doc/dev_guide/c_style_guide.rst:902
msgid ""
"Often people argue that adding inline to functions that are static and "
"used only once is always a win since there is no space tradeoff. While "
"this is technically correct, gcc is capable of inlining these "
"automatically without help, and the maintenance issue of removing the "
"inline when a second user appears outweighs the potential value of the "
"hint that tells gcc to do something it would have done anyway."
msgstr ""
"Часто утверждают, что беспроигрышным вариантом будет встраивание "
"статических функций, используемых только один раз, поскольку нет "
"компромиссов пространства. Хотя это технически правильно, gcc способен "
"автоматически встраивать их, а проблема удаления встроенного, если "
"появляется второй пользователь, перевешивает потенциальную ценность "
"подсказки для gcc делать что-то, что он сделал бы в любом случае."

#: ../doc/dev_guide/c_style_guide.rst:911
msgid "Chapter 16: Function return values and names"
msgstr "Глава 16: Возвращаемые значения и имена функций"

#: ../doc/dev_guide/c_style_guide.rst:913
msgid ""
"Functions can return values of many different kinds, and one of the most "
"common is a value indicating whether the function succeeded or failed.  "
"Such a value can be represented as an error-code integer (-Exxx = "
"failure, 0 = success) or a \"succeeded\" boolean (0 = failure, non-zero ="
" success)."
msgstr ""
"Функции могут возвращать значения множества различных типов, и одним из "
"наиболее распространенных является значение, которое указывает, была "
"функция выполнена или нет. Такое значение может быть представлено как "
"целое число с кодом ошибки (-Exxx = сбой, 0 = выполнено) или логическое "
"значение выполнения (0 = сбой, ненулевое значение = выполнено)."

#: ../doc/dev_guide/c_style_guide.rst:919
msgid ""
"Mixing up these two sorts of representations is a fertile source of "
"difficult-to-find bugs.  If the C language included a strong distinction "
"between integers and booleans then the compiler would find these mistakes"
" for us... but it doesn't.  To help prevent such bugs, always follow this"
" convention:"
msgstr ""
"Смешение этих двух видов дает богатую пищу для появления сложных для "
"обнаружения ошибок. Если бы в языке C были явные различия между целыми "
"числами и логическими значениями, тогда компилятор нашел бы для нас эти "
"ошибки... но это не так. Чтобы предотвратить такие ошибки, всегда "
"следуйте этому соглашению:"

#: ../doc/dev_guide/c_style_guide.rst:961
msgid ""
"If the name of a function is an action or an imperative command,\n"
"the function should return an error-code integer.  If the name\n"
"is a predicate, the function should return a \"succeeded\" boolean."
msgstr ""
"Если имя функции представляет собой действие или команду,\n"
"функция должна возвращать целое число с кодом ошибки.  Если имя функции\n"
"является утверждением, функция должна возвращать логическое значение "
"выполнения."

#: ../doc/dev_guide/c_style_guide.rst:931
msgid ""
"For example, \"add work\" is a command, and the add_work() function "
"returns 0 for success or -EBUSY for failure.  In the same way, \"PCI "
"device present\" is a predicate, and the pci_dev_present() function "
"returns 1 if it succeeds in finding a matching device or 0 if it doesn't."
msgstr ""
"Например, \"add work\" (добавить работу) -- это команда, а функция "
"add_work() возвращает 0 в случае выполнения или -EBUSY при сбое. Точно "
"так же \"PCI device present\" (есть PCI-устройство) представляет собой "
"утверждение, а функция pci_dev_present() возвращает 1, если ей удается "
"найти подходящее устройство, или 0, если это не так."

#: ../doc/dev_guide/c_style_guide.rst:936
msgid ""
"All EXPORTed functions must respect this convention, and so should all "
"public functions.  Private (static) functions need not, but it is "
"recommended that they do."
msgstr ""
"Все экспортируемые функции (EXPORT) должны подчиняться этому соглашению, "
"то же относится и ко всем доступным функциям. Закрытые (статические) "
"функции не должны подчиняться, но это рекомендуется."

#: ../doc/dev_guide/c_style_guide.rst:940
msgid ""
"Functions whose return value is the actual result of a computation, "
"rather than an indication of whether the computation succeeded, are not "
"subject to this rule.  Generally they indicate failure by returning some "
"out-of-range result.  Typical examples would be functions that return "
"pointers; they use NULL or the ERR_PTR mechanism to report failure."
msgstr ""
"Функции, возвращаемое значение которых является фактическим результатом "
"вычисления, а не указанием того, удалось ли выполнить вычисление, не "
"подпадают под это правило. Обычно они указывают на сбой, возвращая некое "
"недопустимое значение. Типичными примерами будут функции, возвращающие "
"указатели; чтобы сообщить об ошибке, они используют NULL или механизм "
"ERR_PTR."

#: ../doc/dev_guide/c_style_guide.rst:949
msgid "Chapter 17:  Don't re-invent the kernel macros"
msgstr "Глава 17: Не изобретайте макросы снова"

#: ../doc/dev_guide/c_style_guide.rst:951
msgid ""
"The header file include/linux/kernel.h contains a number of macros that "
"you should use, rather than explicitly coding some variant of them "
"yourself. For example, if you need to calculate the length of an array, "
"take advantage of the macro"
msgstr ""
"В файле заголовка include/linux/kernel.h содержатся несколько макросов, "
"которые следует использовать, а не программировать их самостоятельно. "
"Например, если необходимо рассчитать длину массива, воспользуйтесь "
"макросом"

#: ../doc/dev_guide/c_style_guide.rst:956
msgid "#define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))"
msgstr "#define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))"

#: ../doc/dev_guide/c_style_guide.rst:960
msgid "Similarly, if you need to calculate the size of some structure member, use"
msgstr ""
"Аналогичным образом, если необходимо рассчитать размер какого-либо "
"элемента структуры, используйте"

#: ../doc/dev_guide/c_style_guide.rst:962
msgid "#define FIELD_SIZEOF(t, f) (sizeof(((t*)0)->f))"
msgstr "#define FIELD_SIZEOF(t, f) (sizeof(((t*)0)->f))"

#: ../doc/dev_guide/c_style_guide.rst:966
msgid ""
"There are also min() and max() macros that do strict type checking if you"
" need them.  Feel free to peruse that header file to see what else is "
"already defined that you shouldn't reproduce in your code."
msgstr ""
"Есть также макросы min() и max(), которые выполняют строгую проверку "
"типов, если понадобится. Не стесняйтесь ознакомиться с этим файлом "
"заголовка, чтобы узнать, что еще не нужно воспроизводить в своем коде."

#: ../doc/dev_guide/c_style_guide.rst:972
msgid "Chapter 18:  Editor modelines and other cruft"
msgstr "Глава 18: Редакторские строки режима (modelines) и прочий хлам"

#: ../doc/dev_guide/c_style_guide.rst:974
msgid ""
"Some editors can interpret configuration information embedded in source "
"files, indicated with special markers.  For example, emacs interprets "
"lines marked like this:"
msgstr ""
"Некоторые редакторы могут интерпретировать встроенную в исходные файлы "
"информацию о конфигурации, указанную специальными маркерами. Например, "
"emacs интерпретирует строки, помеченные следующим образом:"

#: ../doc/dev_guide/c_style_guide.rst:978
msgid "-*- mode: c -*-"
msgstr "-*- mode: c -*-"

#: ../doc/dev_guide/c_style_guide.rst:982
msgid "Or like this:"
msgstr "Или так:"

#: ../doc/dev_guide/c_style_guide.rst:984
msgid ""
"/*\n"
"Local Variables:\n"
"compile-command: \"gcc -DMAGIC_DEBUG_FLAG foo.c\"\n"
"End:\n"
"*/"
msgstr ""
"/*\n"
"Local Variables:\n"
"compile-command: \"gcc -DMAGIC_DEBUG_FLAG foo.c\"\n"
"End:\n"
"*/"

#: ../doc/dev_guide/c_style_guide.rst:992
msgid "Vim interprets markers that look like this:"
msgstr "Vim интерпретирует маркеры, которые выглядят так:"

#: ../doc/dev_guide/c_style_guide.rst:994
msgid "/* vim:set sw=8 noet */"
msgstr "/* vim:set sw=8 noet */"

#: ../doc/dev_guide/c_style_guide.rst:998
msgid ""
"Do not include any of these in source files.  People have their own "
"personal editor configurations, and your source files should not override"
" them.  This includes markers for indentation and mode configuration.  "
"People may use their own custom mode, or may have some other magic method"
" for making indentation work correctly."
msgstr ""
"Не включайте их в исходные файлы. У людей есть свои собственные настройки"
" редакторов, и ваши исходные файлы не должны их переопределять. Это "
"относится к маркерам для отступов и конфигурации режима. У других людей "
"могут быть свои собственные режимы или  другие волшебные методы для "
"правильной работы отступов."

#: ../doc/dev_guide/c_style_guide.rst:1006
msgid "Appendix I: References"
msgstr "Приложение I: Источники"

#: ../doc/dev_guide/c_style_guide.rst:1008
msgid ""
"`The C Programming Language, Second Edition "
"<https://en.wikipedia.org/wiki/The_C_Programming_Language>`_ by Brian W. "
"Kernighan and Dennis M. Ritchie. |br| Prentice Hall, Inc., 1988. |br| "
"ISBN 0-13-110362-8 (paperback), 0-13-110370-9 (hardback)."
msgstr ""
"Керниган Брайан В., Ричи Деннис М. `Язык программирования Си "
"<https://ru.wikipedia.org/wiki/%D0%AF%D0%B7%D1%8B%D0%BA_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F_%D0%A1%D0%B8_(%D0%BA%D0%BD%D0%B8%D0%B3%D0%B0)>`_."
" |br| Prentice Hall, Inc., 1988. |br| ISBN 0-13-110362-8 (в мягкой "
"обложке), 0-13-110370-9 (в твердом переплете)."

#: ../doc/dev_guide/c_style_guide.rst:1013
msgid ""
"`The Practice of Programming "
"<https://en.wikipedia.org/wiki/The_Practice_of_Programming>`_ by Brian W."
" Kernighan and Rob Pike. |br| Addison-Wesley, Inc., 1999. |br| ISBN "
"0-201-61586-X."
msgstr ""
"Керниган Брайан В., Пайк Роб. `Практика программирования "
"<https://en.wikipedia.org/wiki/The_Practice_of_Programming>`_. |br| "
"Addison-Wesley, Inc., 1999. |br| ISBN 0-201-61586-X."

#: ../doc/dev_guide/c_style_guide.rst:1018
msgid ""
"`GNU manuals <http://www.gnu.org/manual/>`_ - where in compliance with "
"K&R and this text - for **cpp**, **gcc**, **gcc internals** and "
"**indent**"
msgstr ""
"`Рекомендации GNU <http://www.gnu.org/manual/>`_ в соответствии с K&R и "
"данным текстом -- для **cpp**, **gcc**, **gcc internals** и **indent**"

#: ../doc/dev_guide/c_style_guide.rst:1021
msgid ""
"`WG14 International standardization workgroup for the programming "
"language C <http://www.open-std.org/JTC1/SC22/WG14/>`_"
msgstr ""
"`Рабочая группа по международной стандартизации языка программирования C "
"WG14 <http://www.open-std.org/JTC1/SC22/WG14/>`_"

#: ../doc/dev_guide/c_style_guide.rst:1024
msgid ""
"`Kernel CodingStyle, by greg@kroah.com at OLS 2002 "
"<http://www.kroah.com/linux/talks/ols_2002_kernel_codingstyle_talk/html/>`_"
msgstr ""
"`Стиль программирования ядра, автор greg@kroah.com, презентация на OLS "
"2002 "
"<http://www.kroah.com/linux/talks/ols_2002_kernel_codingstyle_talk/html/>`_"

#: ../doc/dev_guide/developer_guidelines.rst:3
msgid "Developer guidelines"
msgstr "Рекомендации для разработчиков"

#: ../doc/dev_guide/developer_guidelines.rst:9
msgid "How to work on a bug"
msgstr "Как работать над дефектами"

#: ../doc/dev_guide/developer_guidelines.rst:11
msgid ""
"Any defect, even minor, if it changes the user-visible server behavior, "
"needs a bug report. Report a bug at "
"http://github.com/tarantool/tarantool/issues."
msgstr ""
"На любой дефект, даже незначительный, если он изменяет доступное "
"пользователю поведение сервера, необходимо составить отчет об ошибке. "
"Сообщите о дефекте по ссылке "
"http://github.com/tarantool/tarantool/issues."

#: ../doc/dev_guide/developer_guidelines.rst:14
msgid ""
"When reporting a bug, try to come up with a test case right away. Set the"
" current maintenance milestone for the bug fix, and specify the series. "
"Assign the bug to yourself. Put the status to 'In progress' Once the "
"patch is ready, put the bug the bug to 'In review' and solicit a review "
"for the fix."
msgstr ""
"Когда вы сообщаете об ошибке, постарайтесь сразу же приступить к "
"тестовому сценарию. Установите текущую контрольную точку для исправления "
"ошибки и укажите серию. Назначьте задачу на себя. Укажите статус \"In "
"progress\" (выполняется). Как только патч готов, укажите статус ошибки "
"\"In review\" (на рассмотрении) и отправьте версию с исправленными "
"ошибками на рассмотрение."

#: ../doc/dev_guide/developer_guidelines.rst:19
msgid ""
"Once there is a positive code review, push the patch and set the status "
"to 'Closed'"
msgstr ""
"После успешного рассмотрения кода опубликуйте патч и укажите статус "
"\"Closed\" (закрыт)."

#: ../doc/dev_guide/developer_guidelines.rst:21
msgid ""
"Patches for bugs should contain a reference to the respective Launchpad "
"bug page or at least bug id. Each patch should have a test, unless coming"
" up with one is difficult in the current framework, in which case QA "
"should be alerted."
msgstr ""
"Патчи для исправления ошибок должны содержать ссылку на соответствующую "
"страницу дефекта Launchpad или хотя бы идентификатор дефекта. Каждому "
"патча должен соответствовать отдельный тест, если только это не слишком "
"трудно сделать в текущем окружении, и в этом случае следует предупредить "
"тестировщиков."

#: ../doc/dev_guide/developer_guidelines.rst:25
msgid ""
"There are two things you need to do when your patch makes it into the "
"master:"
msgstr "Когда ваш патч доходит до главной ветки проекта, нужно сделать следующее:"

#: ../doc/dev_guide/developer_guidelines.rst:27
msgid "put the bug to 'fix committed',"
msgstr "перевести статус ошибки в 'fix committed' (исправлено),"

#: ../doc/dev_guide/developer_guidelines.rst:28
msgid "delete the remote branch."
msgstr "удалить отдельную ветку."

#: ../doc/dev_guide/developer_guidelines.rst:34
msgid "How to write a commit message"
msgstr "Как писать сообщение о коммите"

#: ../doc/dev_guide/developer_guidelines.rst:36
msgid ""
"Any commit needs a helpful message. Mind the following guidelines when "
"committing to any of Tarantool repositories at GitHub."
msgstr ""
"Любой коммит следует описать в полезном сообщении. Следуйте "
"нижеприведенным рекомендациям при коммитах в любой репозиторий "
"Tarantool'а на GitHub."

#: ../doc/dev_guide/developer_guidelines.rst:39
msgid "Separate subject from body with a blank line."
msgstr "Отделяйте тему от тела сообщения пустой строкой."

#: ../doc/dev_guide/developer_guidelines.rst:40
msgid "Try to limit the subject line to **50 characters** or so."
msgstr "Постарайтесь ограничить тему сообщения примерно **50 символами**."

#: ../doc/dev_guide/developer_guidelines.rst:41
msgid ""
"Start the subject line with a capital letter unless it prefixed with a "
"subsystem name and semicolon:"
msgstr ""
"Начните тему сообщения с прописной буквы, если ей не предшествует префикс"
" с именем подсистемы и точка с запятой:"

#: ../doc/dev_guide/developer_guidelines.rst:44
msgid "memtx:"
msgstr "memtx:"

#: ../doc/dev_guide/developer_guidelines.rst:45
msgid "vinyl:"
msgstr "vinyl:"

#: ../doc/dev_guide/developer_guidelines.rst:46
msgid "xlog:"
msgstr "xlog:"

#: ../doc/dev_guide/developer_guidelines.rst:47
msgid "replication:"
msgstr "replication:"

#: ../doc/dev_guide/developer_guidelines.rst:48
msgid "recovery:"
msgstr "recovery:"

#: ../doc/dev_guide/developer_guidelines.rst:49
msgid "iproto:"
msgstr "iproto:"

#: ../doc/dev_guide/developer_guidelines.rst:50
msgid "net.box:"
msgstr "net.box:"

#: ../doc/dev_guide/developer_guidelines.rst:51
msgid "lua:"
msgstr "lua:"

#: ../doc/dev_guide/developer_guidelines.rst:52
msgid "sql:"
msgstr "sql:"

#: ../doc/dev_guide/developer_guidelines.rst:54
msgid "Do not end the subject line with a period."
msgstr "Не заканчивайте тему сообщения точкой."

#: ../doc/dev_guide/developer_guidelines.rst:55
msgid "Do not put \"gh-xx\", \"closes #xxx\" to the subject line."
msgstr "Не пишите \"gh-xx\", \"closes #xxx\" в строке темы."

#: ../doc/dev_guide/developer_guidelines.rst:56
msgid ""
"Use the imperative mood in the subject line. A properly formed Git commit"
" subject line should always be able to complete the following sentence: "
"\"If applied, this commit will */your subject line here/*\"."
msgstr ""
"В теме сообщения используйте повелительное наклонение. Правильно "
"оформленная тема Git-коммита должна корректно дополнять следующее "
"предложение: \"Если применить, коммит */здесь тема сообщения/*\"."

#: ../doc/dev_guide/developer_guidelines.rst:59
msgid "Wrap the body to **72 characters** or so."
msgstr "Уместите тело сообщения в примерно **72 символа**."

#: ../doc/dev_guide/developer_guidelines.rst:60
msgid "Use the body to explain **what and why** vs. how."
msgstr "Используйте тело сообщения, чтобы объяснить, **что и почему**, а не как."

#: ../doc/dev_guide/developer_guidelines.rst:61
msgid ""
"Link GitHub issues on the lasts lines (`see how "
"<https://help.github.com/articles/closing-issues-via-commit-messages>`_)."
msgstr ""
"Привяжите задачи на GitHub в последних строках (`см. как "
"<https://help.github.com/articles/closing-issues-via-commit-messages>`_)."

#: ../doc/dev_guide/developer_guidelines.rst:63
msgid ""
"Use your real name and real email address. For Tarantool team members, "
"**@tarantool.org** email is preferred, but not mandatory."
msgstr ""
"Используйте настоящие имя и адрес электронной почты. Членам проектной "
"команды Tarantool'а рекомендуется указывать почту на **@tarantool.org**, "
"но это необязательно."

#: ../doc/dev_guide/developer_guidelines.rst:67
msgid "A template:"
msgstr "Шаблон:"

#: ../doc/dev_guide/developer_guidelines.rst:69
msgid ""
"Summarize changes in 50 characters or less\n"
"\n"
"More detailed explanatory text, if necessary.\n"
"Wrap it to 72 characters or so.\n"
"In some contexts, the first line is treated as the subject of the\n"
"commit, and the rest of the text as the body.\n"
"The blank line separating the summary from the body is critical\n"
"(unless you omit the body entirely); various tools like `log`,\n"
"`shortlog` and `rebase` can get confused if you run the two together.\n"
"\n"
"Explain the problem that this commit is solving. Focus on why you\n"
"are making this change as opposed to how (the code explains that).\n"
"Are there side effects or other unintuitive consequences of this\n"
"change? Here's the place to explain them.\n"
"\n"
"Further paragraphs come after blank lines.\n"
"\n"
"- Bullet points are okay, too.\n"
"\n"
"- Typically a hyphen or asterisk is used for the bullet, preceded\n"
"  by a single space, with blank lines in between, but conventions\n"
"  vary here.\n"
"\n"
"Fixes: #123\n"
"Closes: #456\n"
"Needed for: #859\n"
"See also: #343, #789"
msgstr ""
"Кратко сформулируйте изменения в пределах 50 символов.\n"
"\n"
"При необходимости, более подробные объяснения.\n"
"Уместите детали в примерно 72 символов.\n"
"Иногда первая строка считается темой\n"
"коммита, а остальной текст -- телом сообщения.\n"
"Критически важна пустая строка, которая отделяет тему от тела сообщения\n"
"(если только тело не отсутствует совсем); различные средства, такие как "
"`log`,\n"
"`shortlog` и `rebase` могут их перепутать, если нет разделения.\n"
"\n"
"Объясните проблему, которую решает данный коммит. Уделите внимание тому, "
"почему\n"
"вы вносите эти изменения, а не как (это объясняется в коде).\n"
"Есть ли побочные эффекты или другие неочевидные последствия применения "
"этих\n"
"изменений? Здесь можно объяснить их.\n"
"\n"
"Следующие абзацы идут после пустых строк.\n"
"\n"
"- Можно также использовать элементы в списке.\n"
"\n"
"- Как правило, в качестве маркера применяется дефис или звездочка, "
"которой предшествует\n"
"  пробел, а между строками вставляются пустые строки, но в данном случае\n"
"  условные обозначения могут разниться.\n"
"\n"
"Исправляет: #123\n"
"Закрывает: #456\n"
"Необходим для: #859\n"
"См. также: #343, #789"

#: ../doc/dev_guide/developer_guidelines.rst:99
msgid "Some real-world examples:"
msgstr "Некоторые реальные примеры:"

#: ../doc/dev_guide/developer_guidelines.rst:101
msgid ""
"`tarantool/tarantool@2993a75 "
"<https://github.com/tarantool/tarantool/commit/2993a75858352f101deb4a15cefd497ae6a78cf7>`_"
msgstr ""
"`tarantool/tarantool@2993a75 "
"<https://github.com/tarantool/tarantool/commit/2993a75858352f101deb4a15cefd497ae6a78cf7>`_"

#: ../doc/dev_guide/developer_guidelines.rst:102
msgid ""
"`tarantool/tarantool@ccacba2 "
"<https://github.com/tarantool/tarantool/commit/ccacba28f813fb99fd9eaf07fb41bf604dd341bc>`_"
msgstr ""
"`tarantool/tarantool@ccacba2 "
"<https://github.com/tarantool/tarantool/commit/ccacba28f813fb99fd9eaf07fb41bf604dd341bc>`_"

#: ../doc/dev_guide/developer_guidelines.rst:103
msgid ""
"`tarantool/tarantool@386df3d "
"<https://github.com/tarantool/tarantool/commit/386df3d3eb9c5239fc83fd4dd3292d1b49446b89>`_"
msgstr ""
"`tarantool/tarantool@386df3d "
"<https://github.com/tarantool/tarantool/commit/386df3d3eb9c5239fc83fd4dd3292d1b49446b89>`_"

#: ../doc/dev_guide/developer_guidelines.rst:104
msgid ""
"`tarantool/tarantool@076a842 "
"<https://github.com/tarantool/tarantool/commit/076a842011e09c84c25fb5e68f1b23c9917a3750>`_"
msgstr ""
"`tarantool/tarantool@076a842 "
"<https://github.com/tarantool/tarantool/commit/076a842011e09c84c25fb5e68f1b23c9917a3750>`_"

#: ../doc/dev_guide/developer_guidelines.rst:106
msgid "Based on [1_] and [2_]."
msgstr "Основано на [1_] и [2_]."

#: ../doc/dev_guide/developer_guidelines.rst:112
msgid "How to submit a patch for review"
msgstr "Как отправить патч на рассмотрение"

#: ../doc/dev_guide/developer_guidelines.rst:114
msgid ""
"We don't accept GitHub pull requests. Instead, all patches should be sent"
" as plain-text messages to tarantool-patches@dev.tarantool.org. Please "
"subscribe to our mailing list at "
"https://lists.tarantool.org/mailman/listinfo/tarantool-patches to ensure "
"that your messages are added to the archive."
msgstr ""
"Мы не принимаем запросы на включение в проект на GitHub. Вместо этого все"
" патчи следует отправлять в виде обычного текстового сообщения по адресу "
"tarantool-patches@dev.tarantool.org. Подпишитесь на рассылку "
"https://lists.tarantool.org/mailman/listinfo/tarantool-patches, чтобы "
"убедиться, что ваши сообщения добавляются в архив."

#: ../doc/dev_guide/developer_guidelines.rst:120
msgid "**Preparing a patch**"
msgstr "**Подготовка патча**"

#: ../doc/dev_guide/developer_guidelines.rst:122
msgid ""
"Once you have committed a patch to your local git repository, you can "
"submit it for review."
msgstr ""
"После коммита патча в локальный репозиторий git вы можете отправить его "
"на рассмотрение."

#: ../doc/dev_guide/developer_guidelines.rst:125
msgid "To prepare an email, use ``git format-patch`` command:"
msgstr "Чтобы подготовить сообщение, воспользуйтесь командой ``git format-patch``:"

#: ../doc/dev_guide/developer_guidelines.rst:127
msgid "$ git format-patch -1"
msgstr "$ git format-patch -1"

#: ../doc/dev_guide/developer_guidelines.rst:131
msgid ""
"It will format the commit at the top of your local git repository as a "
"plain-text email and write it to a file in the current directory. The "
"file name will look like ``0001-your-commit-subject-line.patch``. To "
"specify a different directory, use ``-o`` option:"
msgstr ""
"В результате последний коммит в локальном репозитории git будет "
"отформатирован в виде обычного текстового сообщения в файл в текущей "
"директории. Название файла будет выглядеть так: "
"``0001-тема-коммита.patch``. Чтобы указать другую директорию, используйте"
" опцию ``-o``:"

#: ../doc/dev_guide/developer_guidelines.rst:136
msgid "$ git format-patch -1 -o ~/patches-to-send"
msgstr "$ git format-patch -1 -o ~/patches-to-send"

#: ../doc/dev_guide/developer_guidelines.rst:140
msgid ""
"Once the patch has been formatted, you can view and edit it with your "
"favorite text editor (after all, it is a plain-text file!). We strongly "
"recommend adding:"
msgstr ""
"После форматирования патча его можно просмотреть и отредактировать в "
"вашем любимом текстовом редакторе (всё-таки это файл с обычным текстом!) "
"Мы настоятельно рекомендуем добавить следующее:"

#: ../doc/dev_guide/developer_guidelines.rst:144
msgid "a hyperlink to the branch where this patch can be found at GitHub, and"
msgstr "ссылка на ветку, где можно найти этот патч на GitHub, а также"

#: ../doc/dev_guide/developer_guidelines.rst:145
msgid "a hyperlink to the GitHub issue your patch is supposed to fix, if any."
msgstr "ссылку на проблему на GitHub, которую решает ваш патч."

#: ../doc/dev_guide/developer_guidelines.rst:147
msgid ""
"If there is just one patch, the change log should go right after ``---`` "
"in the message body (it will be ignored by ``git am`` then)."
msgstr ""
"Если патч всего один, журнал изменений должен идти сразу после ``---`` в "
"теле сообщения (тогда ``git am`` проигнорирует его)."

#: ../doc/dev_guide/developer_guidelines.rst:150
msgid ""
"If there are multiple patches you want to submit in one go (e.g. this is "
"a big feature which requires some preparatory patches to be committed "
"first), you should send each patch in a separate email in reply to a "
"cover letter. To format a patch series accordingly, pass the following "
"options to ``git format-patch``:"
msgstr ""
"Если же вы хотите отправить сразу несколько патчей (например, это важная "
"функция, для которой нужны несколько предварительных патчей), каждый из "
"них следует отправлять в отдельном сообщении в ответ на сопроводительное "
"письмо. Чтобы соответствующим образом отформатировать серию патчей, "
"передайте следующие опции в ``git format-patch``:"

#: ../doc/dev_guide/developer_guidelines.rst:156
msgid "$ git format-patch --cover-letter --thread=shallow HEAD~2"
msgstr "$ git format-patch --cover-letter --thread=shallow HEAD~2"

#: ../doc/dev_guide/developer_guidelines.rst:160
msgid "where:"
msgstr "где:"

#: ../doc/dev_guide/developer_guidelines.rst:162
msgid "``--cover-letter`` will make ``git format-patch`` generate a cover letter;"
msgstr ""
"``--cover-letter`` заставит ``git format-patch`` сгенерировать "
"сопроводительное письмо;"

#: ../doc/dev_guide/developer_guidelines.rst:163
msgid ""
"``--thread=shallow`` will mark each formatted patch email to be sent in "
"reply to the cover letter;"
msgstr ""
"``--thread=shallow`` отметит каждое сообщение с отформатированными "
"патчами, которые следует отправить в ответ на сопроводительное письмо;"

#: ../doc/dev_guide/developer_guidelines.rst:165
msgid ""
"``HEAD~2`` (we now use it instead of ``-1``) will make ``git format-"
"patch`` format the first two patches at the top of your local git branch "
"instead of just one. To format three patches, use ``HEAD~3``, and so "
"forth."
msgstr ""
"``HEAD~2`` (мы используем вместо ``-1``) заставит ``git format-patch`` "
"форматировать последние два патча в локальной ветке git, а не один. Чтобы"
" форматировать три патча, используйте ``HEAD~3``, и так далее."

#: ../doc/dev_guide/developer_guidelines.rst:169
msgid ""
"After the command has been successfully executed, you will find all your "
"patches formatted as separate emails in your current directory (or in the"
" directory specified via ``-o`` option):"
msgstr ""
"После успешного выполнения этой команды все ваши патчи будут "
"отформатированы в виде отдельных сообщений в текущей директории (или в "
"директории, указанной с помощью опции ``-o``):"

#: ../doc/dev_guide/developer_guidelines.rst:173
msgid ""
"0000-cover-letter.patch\n"
"0001-first-commit.patch\n"
"0002-second-commit.patch\n"
"..."
msgstr ""
"0000-cover-letter.patch\n"
"0001-first-commit.patch\n"
"0002-second-commit.patch\n"
"..."

#: ../doc/dev_guide/developer_guidelines.rst:180
msgid ""
"The cover letter will have BLURB in its subject and body. You'll have to "
"edit it before submitting (again, it is a plain text file). Please write:"
msgstr ""
"В теме и теле сопроводительного письма будут рекламные аннотации. Вам "
"нужно их отредактировать перед отправкой (опять же, это обычный текст). "
"Просьба указать следующее:"

#: ../doc/dev_guide/developer_guidelines.rst:183
msgid "a short series description in the subject line;"
msgstr "короткое описание в теме сообщения;"

#: ../doc/dev_guide/developer_guidelines.rst:184
msgid "a few words about each patch of the series in the body."
msgstr "несколько слов о каждом патче в теле сообщения."

#: ../doc/dev_guide/developer_guidelines.rst:186
msgid ""
"And don't forget to add hyperlinks to the GitHub issue and branch where "
"your series can be found. In this case you don't need to put links or any"
" additional information to each individual email -- the cover letter will"
" cover everything."
msgstr ""
"Кроме того, не забудьте добавить ссылки на проблему на GitHub и на ветку,"
" где можно найти серию патчей. В таком случае нет необходимости указывать"
" ссылки или дополнительную информацию в каждом отдельном письме, "
"поскольку всё необходимое уже будет в сопроводительном письме."

#: ../doc/dev_guide/developer_guidelines.rst:193
msgid ""
"To omit ``--cover-letter`` and ``--thread=shallow`` options, you can add "
"the following lines to your gitconfig:"
msgstr ""
"Чтобы не указывать опции ``--cover-letter`` и ``--thread=shallow``, можно"
" добавить в gitconfig следующие строки:"

#: ../doc/dev_guide/developer_guidelines.rst:196
msgid ""
"[format]\n"
"    thread = shallow\n"
"    coverLetter = auto"
msgstr ""
"[format]\n"
"    thread = shallow\n"
"    coverLetter = auto"

#: ../doc/dev_guide/developer_guidelines.rst:202
msgid "**Sending a patch**"
msgstr "**Отправка патча**"

#: ../doc/dev_guide/developer_guidelines.rst:204
msgid ""
"Once you have formatted your patches, they are ready to be sent via "
"email. Of course, you can send them with your favorite mail agent, but it"
" is much easier to use ``git send-email`` for this. Before using this "
"command, you need to configure it."
msgstr ""
"После форматирования патчей их можно отправлять по электронной почте. "
"Конечно, можно воспользоваться и любимым почтовым клиентом, но гораздо "
"проще отправить их с помощью ``git send-email``. Перед использованием "
"команды ее необходимо настроить."

#: ../doc/dev_guide/developer_guidelines.rst:209
msgid "If you use a GMail account, add the following code to your ``.gitconfig``:"
msgstr ""
"Если используется учетная запись GMail, добавьте следующий код в "
"``.gitconfig``:"

#: ../doc/dev_guide/developer_guidelines.rst:211
msgid ""
"[sendemail]\n"
"    smtpencryption = tls\n"
"    smtpserver = smtp.gmail.com\n"
"    smtpserverport = 587\n"
"    smtpuser = your.name@gmail.com\n"
"    smtppass = topsecret"
msgstr ""
"[sendemail]\n"
"    smtpencryption = tls\n"
"    smtpserver = smtp.gmail.com\n"
"    smtpserverport = 587\n"
"    smtpuser = your.name@gmail.com\n"
"    smtppass = topsecret"

#: ../doc/dev_guide/developer_guidelines.rst:220
msgid "For mail.ru users, the configuration will be slightly different:"
msgstr "Для пользователей mail.ru настройки будут слегка отличаться:"

#: ../doc/dev_guide/developer_guidelines.rst:222
msgid ""
"[sendemail]\n"
"    smtpencryption = ssl\n"
"    smtpserver = smtp.mail.ru\n"
"    smtpserverport = 465\n"
"    smtpuser = your.name@mail.ru\n"
"    smtppass = topsecret"
msgstr ""
"[sendemail]\n"
"    smtpencryption = ssl\n"
"    smtpserver = smtp.mail.ru\n"
"    smtpserverport = 465\n"
"    smtpuser = your.name@mail.ru\n"
"    smtppass = topsecret"

#: ../doc/dev_guide/developer_guidelines.rst:231
msgid ""
"If your email account is hosted by another service, consult your service "
"provider about your SMTP settings."
msgstr ""
"Если ваша учетная запись электронной почты находится на другом ресурсе, "
"уточните SMTP-настройки у поставщика услуг."

#: ../doc/dev_guide/developer_guidelines.rst:234
msgid "Once configured, use the following command to send your patches:"
msgstr "После настройки используйте следующую команду для отправки патчей:"

#: ../doc/dev_guide/developer_guidelines.rst:236
msgid "$ git send-email --to tarantool-patches@dev.tarantool.org 00*"
msgstr "$ git send-email --to tarantool-patches@dev.tarantool.org 00*"

#: ../doc/dev_guide/developer_guidelines.rst:240
msgid ""
"(``00*`` wildcard will be expanded by your shell to the list of patches "
"generated at the previous step.)"
msgstr ""
"(подстановочный символ ``00*`` будет распространяться на список патчей, "
"сгенерированных в предыдущем шаге.)"

#: ../doc/dev_guide/developer_guidelines.rst:243
msgid ""
"If you want someone in particular to review your patch, add them to the "
"list of recipients by passing ``--to`` or ``--cc`` once per each "
"recipient."
msgstr ""
"Если вы бы хотели, чтобы определенный человек рассматривал ваш патч, "
"добавьте его в список получателей, передав ``--to`` или ``--cc`` для "
"каждого получателя."

#: ../doc/dev_guide/developer_guidelines.rst:248
msgid ""
"It is useful to check that ``git send-email`` will work as expected "
"without sending anything to the world. Use ``--dry-run`` option for that."
msgstr ""
"Неплохо проверить, что ``git send-email`` будет работать должным образом,"
" не отправив ничего на весь мир. Для этого воспользуйтесь опцией ``--dry-"
"run``."

#: ../doc/dev_guide/developer_guidelines.rst:251
msgid "**Review process**"
msgstr "**Процесс рассмотрения**"

#: ../doc/dev_guide/developer_guidelines.rst:253
msgid ""
"After having sent your patches, you just wait for a review. The reviewer "
"will send their comments back to you in reply to the email that contains "
"the patch that in their opinion needs to be fixed."
msgstr ""
"После отправки патчей вы ожидаете их рассмотрения. Редактор отправит свои"
" комментарии в ответ на сообщение с патчем, который нуждается в "
"доработке, по его мнению."

#: ../doc/dev_guide/developer_guidelines.rst:257
msgid ""
"Upon receiving an email with review remarks, you carefully read it and "
"reply about whether you agree or disagree with. Please note that we use "
"the interleaved reply style (aka \"inline reply\") for communications "
"over email."
msgstr ""
"Получив электронное письмо с примечаниями, вы внимательно читаете его и "
"отвечаете, согласны вы или нет. Обратите внимание, что мы используем "
"стиль ответа с чередованием (он же \"встроенный ответ\") в сообщениях "
"электронной почты."

#: ../doc/dev_guide/developer_guidelines.rst:261
msgid ""
"Upon reaching an agreement, you send a fixed patch in reply to the email "
"that ended the discussion. To send a patch, you can either attach a plain"
" diff (created by ``git diff`` or ``git format-patch``) to email and send"
" it with your favorite mail agent, or use ``--in-reply-to`` option of "
"``git send-email`` command."
msgstr ""
"Достигнув соглашения, вы отправляете доработанный патч в ответ на "
"последнее сообщение в обсуждении. Чтобы отправить патч, вы можете либо "
"вложить простой diff (созданный с помощью ``git diff`` или ``git format-"
"patch``) в сообщение электронной почте и отправить его с помощью вашего "
"любимого почтового клиента, либо использовать опцию ``--in-reply-to`` "
"команды ``git send-email``."

#: ../doc/dev_guide/developer_guidelines.rst:267
msgid ""
"If you feel that the accumulated change set is large enough to send the "
"whole series anew and restart the review process in a different thread, "
"you generate the patch email(s) again with ``git format-patch``, this "
"time adding v2 (then v3, v4, and so forth) to the subject and a change "
"log to the message body. To modify the subject line accordingly, use the "
"``--subject-prefix`` option to ``git format-patch`` command:"
msgstr ""
"Если вы считаете, что общий набор изменений достаточно велик, чтобы "
"отправить всю серию заново и перезапустить процесс рассмотрения в рамках "
"нового обсуждения, вы снова генерируете сообщения с патчами с помощью "
"``git format-patch``, на этот раз добавив v2 (затем v3, v4 и так далее) в"
" тему и журнал изменений в тело сообщения. Чтобы соответствующим образом "
"изменить тему сообщения, используйте опцию ``--subject-prefix`` в команде"
" ``git format-patch``:"

#: ../doc/dev_guide/developer_guidelines.rst:274
msgid "$ git format-patch -1 --subject-prefix='PATCH v2'"
msgstr "$ git format-patch -1 --subject-prefix='PATCH v2'"

#: ../doc/dev_guide/developer_guidelines.rst:278
msgid ""
"To add a change log, open the generated email with you favorite text "
"editor and edit the message body. If there is just one patch, the change "
"log should go right after ``---`` in the message body (it will be ignored"
" by ``git am`` then). If there is more than one patch, the change log "
"should be added to the cover letter. Here is an example of a good change "
"log:"
msgstr ""
"Чтобы добавить журнал изменений, откройте созданное сообщение с помощью "
"любимого текстового редактора и отредактируйте тело сообщения. Если патч "
"всего один, журнал изменений должен идти сразу после ``---`` в теле "
"сообщения (тогда ``git am`` проигнорирует его). Если патчей несколько, "
"журнал изменений следует добавить в сопроводительное письмо. Хороший "
"пример журнала изменений:"

#: ../doc/dev_guide/developer_guidelines.rst:284
msgid ""
"Changes in v3:\n"
"  - Fixed comments as per review by Alex\n"
"  - Added more tests\n"
"Changes in v2:\n"
"  - Fixed a crash if the user passes invalid options\n"
"  - Fixed a memory leak at exit"
msgstr ""
"Changes in v3:\n"
"  - Fixed comments as per review by Alex\n"
"  - Added more tests\n"
" Changes in v2:\n"
"  - Fixed a crash if the user passes invalid options\n"
"  - Fixed a memory leak at exit"

#: ../doc/dev_guide/developer_guidelines.rst:293
msgid ""
"It is also a good practice to add a reference to the previous version of "
"your patch set (via a hyperlink or message id)."
msgstr ""
"Также правильно будет добавить ссылку на предыдущую версию набора патчей "
"(гиперссылку или идентификатор сообщения)."

#: ../doc/dev_guide/developer_guidelines.rst:298
msgid ""
"Do not disagree with the reviewer without providing a good argument "
"supporting your point of view."
msgstr "Не спорьте с редактором без веских аргументов в свою поддержку."

#: ../doc/dev_guide/developer_guidelines.rst:300
msgid ""
"Do not take every word the reviewer says for granted. Reviewers are "
"humans too, hence fallible."
msgstr ""
"Не принимайте любые слова редактора без доказательств. Редакторы -- тоже "
"люди, которые могут ошибаться."

#: ../doc/dev_guide/developer_guidelines.rst:302
msgid ""
"Do not expect that the reviewer will tell you how to do your thing. It is"
" not their job. The reviewer might suggest alternative ways to tackle the"
" problem, but in general it is your responsibility."
msgstr ""
"Не ждите, что редактор скажет вам, как что делать. Это не их работа. "
"Редактор может предложить пути решения проблемы, но вообще говоря, это "
"ваша обязанность."

#: ../doc/dev_guide/developer_guidelines.rst:305
msgid ""
"Do not forget to update your remote git branch every time you send a new "
"version of your patch."
msgstr ""
"Не забывайте обновлять удаленную ветку git каждый раз, когда отправляете "
"новую версию патча."

#: ../doc/dev_guide/developer_guidelines.rst:307
msgid ""
"Do follow the guidelines above. If you do not comply, your patches are "
"likely to be silently ignored."
msgstr ""
"Соблюдайте вышеуказанные рекомендации. Если вы не будете их соблюдать, "
"ваши патчи могут быть молча проигнорированы."

#: ../doc/dev_guide/documentation_guidelines.rst:5
msgid "Documentation guidelines"
msgstr "Рекомендации по написанию документации"

#: ../doc/dev_guide/documentation_guidelines.rst:7
msgid ""
"These guidelines are updated on the on-demand basis, covering only those "
"issues that cause pains to the existing writers. At this point, we do not"
" aim to come up with an exhaustive Documentation Style Guide for the "
"Tarantool project."
msgstr ""
"Данные рекомендации обновляются по запросу, охватывая только те проблемы,"
" которые вызывают вопросы у авторов документации. На данный момент мы не "
"стремимся разработать исчерпывающее руководство по написанию документации"
" для проекта Tarantool."

#: ../doc/dev_guide/documentation_guidelines.rst:13
msgid "Markup issues"
msgstr "Вопросы по разметке"

#: ../doc/dev_guide/documentation_guidelines.rst:17
msgid "Wrapping text"
msgstr "Перенос текста"

#: ../doc/dev_guide/documentation_guidelines.rst:19
msgid ""
"The limit is 80 characters per line for plain text, and no limit for any "
"other constructions when wrapping affects ReST readability and/or HTML "
"output. Also, it makes no sense to wrap text into lines shorter than 80 "
"characters unless you have a good reason to do so."
msgstr ""
"Строка ограничена 80 символами для обычного текста и никак не ограничена "
"для любых других конструкций, когда обтекание влияет на читаемость ReST и"
" / или HTML-вывод. Кроме того, нет смысла переносить текст в строках "
"короче 80 символов, если у вас для этого нет веских оснований."

#: ../doc/dev_guide/documentation_guidelines.rst:24
msgid ""
"The 80-character limit comes from the ISO/ANSI 80x24 screen resolution, "
"and it's unlikely that readers/writers will use 80-character consoles. "
"Yet it's still a standard for many coding guidelines (including "
"Tarantool). As for writers, the benefit is that an 80-character page "
"guide allows keeping the text window rather narrow most of the time, "
"leaving more space for other applications in a wide-screen environment."
msgstr ""
"Ограничение в 80 символов исходит из разрешения экрана ISO/ANSI 80x24, и "
"маловероятно, что читатели/писатели будут использовать 80-символьные "
"консоли. Тем не менее, такое ограничение по-прежнему является стандартом "
"во многих рекомендациях по программированию (включая Tarantool). Что "
"касается писателей, то благодаря ограничению размера страницы окно с "
"текстом может быть довольно узким, оставляя больше места для других "
"приложений в широкоэкранном окружении."

#: ../doc/dev_guide/documentation_guidelines.rst:33
msgid "Formatting code snippets"
msgstr "Форматирование фрагментов кода"

#: ../doc/dev_guide/documentation_guidelines.rst:35
msgid ""
"For code snippets, we mainly use the ``code-block`` directive with an "
"appropriate highlighting language. The most commonly used highlighting "
"languages are:"
msgstr ""
"Для фрагментов коды мы обычно используем директиву ``code-block`` с "
"соответствующей подсветкой синтаксиса языка. Чаще всего используем "
"следующее:"

#: ../doc/dev_guide/documentation_guidelines.rst:39
msgid "``.. code-block:: tarantoolsession``"
msgstr "``.. code-block:: tarantoolsession``"

#: ../doc/dev_guide/documentation_guidelines.rst:40
msgid "``.. code-block:: console``"
msgstr "``.. code-block:: console``"

#: ../doc/dev_guide/documentation_guidelines.rst:41
msgid "``.. code-block:: lua``"
msgstr "``.. code-block:: lua``"

#: ../doc/dev_guide/documentation_guidelines.rst:43
msgid "For example (a code snippet in Lua):"
msgstr "Например (фрагмент Lua-кода):"

#: ../doc/dev_guide/documentation_guidelines.rst:45
msgid ""
"for page in paged_iter(\"X\", 10) do\n"
"  print(\"New Page. Number Of Tuples = \" .. #page)\n"
"  for i=1,#page,1 do print(page[i]) end\n"
"end"
msgstr ""
"for page in paged_iter(\"X\", 10) do\n"
"  print(\"New Page. Number Of Tuples = \" .. #page)\n"
"  for i=1,#page,1 do print(page[i]) end\n"
"end"

#: ../doc/dev_guide/documentation_guidelines.rst:52
msgid ""
"In rare cases, when we need custom highlight for specific parts of a code"
" snippet and the ``code-block`` directive is not enough, we use the per-"
"line ``codenormal`` directive together and explicit output formatting "
"(defined in :file:`doc/sphinx/_static/sphinx_design.css`)."
msgstr ""
"В редких случаях при необходимости подсветить отдельные части фрагмента "
"кода, когда директивы ``code-block`` недостаточно, мы используем "
"директиву ``codenormal`` построчно вместе с явным форматированием вывода "
"(как указано в :file:`doc/sphinx/_static/sphinx_design.css`)."

#: ../doc/dev_guide/documentation_guidelines.rst:57
msgid "Examples:"
msgstr "Примеры:"

#: ../doc/dev_guide/documentation_guidelines.rst:59
msgid "Function syntax (the placeholder `space-name` is displayed in italics):"
msgstr "Синтаксис функции (объект-заполнитель `имя-спейса` отображается курсивом):"

#: ../doc/dev_guide/documentation_guidelines.rst:61
msgid ""
":codenormal:`box.space.`:codeitalic:`space-"
"name`:codenormal:`:create_index('index-name')`"
msgstr ""
":codenormal:`box.space.`:codeitalic:`имя-спейса`:codenormal:`:create_index"
"('index-name')`"

#: ../doc/dev_guide/documentation_guidelines.rst:63
msgid ""
"A tdb session (user input is in bold, command prompt is in blue, computer"
" output is in green):"
msgstr ""
"Сессия tdb (ввод информации пользователем выделяется жирным шрифтом, "
"приглашение на ввод команды -- синим, вывод -- зеленым):"

#: ../doc/dev_guide/documentation_guidelines.rst:103
msgid ""
"$ :codebold:`tarantool example.lua`\n"
":codeblue:`(TDB)`  :codegreen:`Tarantool debugger v.0.0.3. Type h for "
"help`\n"
"example.lua\n"
":codeblue:`(TDB)`  :codegreen:`[example.lua]`\n"
":codeblue:`(TDB)`  :codenormal:`3: i = 1`"
msgstr ""
"$ :codebold:`tarantool example.lua`\n"
":codeblue:`(TDB)`  :codegreen:`Tarantool debugger v.0.0.3. Type h for "
"help`\n"
"example.lua\n"
":codeblue:`(TDB)`  :codegreen:`[example.lua]`\n"
":codeblue:`(TDB)`  :codenormal:`3: i = 1`"

#: ../doc/dev_guide/documentation_guidelines.rst:75
msgid ""
"Warning: Every entry of explicit output formatting (``codenormal``, "
"``codebold``, etc) tends to cause troubles when this documentation is "
"translated to other languages. Please avoid using explicit output "
"formatting unless it is REALLY needed."
msgstr ""
"Внимание: Каждая запись с явным форматированием вывода (``codenormal``, "
"``codebold`` и т.п.) часто вызывает трудности при переводе документации "
"на другие языки. Постарайтесь избегать специального форматирования, если "
"только без него никак НЕЛЬЗЯ обойтись."

#: ../doc/dev_guide/documentation_guidelines.rst:82
msgid "Using separated links"
msgstr "Использование разделенных ссылок"

#: ../doc/dev_guide/documentation_guidelines.rst:84
msgid "Avoid separating the link and the target definition (ref), like this:"
msgstr "Избегайте разделения ссылки и определения цели (ref), например:"

#: ../doc/dev_guide/documentation_guidelines.rst:86
msgid ""
"This is a paragraph that contains `a link`_.\n"
"\n"
".. _a link: http://example.com/"
msgstr ""
"Это абзац, который содержит `ссылку`_.\n"
" \n"
" .. ссылка: http://example.com/"

#: ../doc/dev_guide/documentation_guidelines.rst:92
msgid "Use non-separated links instead:"
msgstr "Используйте неразделенные ссылки:"

#: ../doc/dev_guide/documentation_guidelines.rst:94
msgid "This is a paragraph that contains `a link <http://example.com/>`_."
msgstr "Это абзац, который содержит `ссылку <http://example.com/>`_."

#: ../doc/dev_guide/documentation_guidelines.rst:98
msgid ""
"Warning: Every separated link tends to cause troubles when this "
"documentation is translated to other languages. Please avoid using "
"separated links unless it is REALLY needed (e.g. in tables)."
msgstr ""
"Внимание: Каждая разделенная ссылка часто вызывает трудности при переводе"
" документации на другие языки. Постарайтесь избегать разделенных ссылок, "
"если только без них никак НЕЛЬЗЯ обойтись (например, в таблицах)."

#: ../doc/dev_guide/documentation_guidelines.rst:104
msgid "Creating labels for local links"
msgstr "Создание меток для локальных ссылок"

#: ../doc/dev_guide/documentation_guidelines.rst:106
msgid ""
"We avoid using links that sphinx generates automatically for most "
"objects. Instead, we add our own labels for linking to any place in this "
"documentation."
msgstr ""
"Мы стараемся не использовать автоматически сгенерированные sphinx ссылки "
"для большинства объектов. Вместо них мы добавляем собственные метки для "
"ссылок на любое место в документации."

#: ../doc/dev_guide/documentation_guidelines.rst:109
msgid "Our naming convention is as follows:"
msgstr "Соглашение об именовании заключается в следующем:"

#: ../doc/dev_guide/documentation_guidelines.rst:111
msgid "Character set: a through z, 0 through 9, dash, underscore."
msgstr "Набор символов: от a до z, от 0 до 9, дефис, подчеркивание."

#: ../doc/dev_guide/documentation_guidelines.rst:113
msgid "Format: ``path dash filename dash tag``"
msgstr "Формат: ``путь дефис имя файла дефис тег``"

#: ../doc/dev_guide/documentation_guidelines.rst:115
msgid ""
"Example: ``_c_api-box_index-iterator_type`` |br| where: |br| ``c_api`` is"
" the directory name, |br| ``box_index`` is the file name (without "
"\".rst\"), and |br| ``iterator_type`` is the tag."
msgstr ""
"Пример: ``_c_api-box_index-iterator_type`` |br| где: |br| ``c_api`` -- "
"имя директории, |br| ``box_index`` -- имя файла (без \".rst\"), а |br| "
"``iterator_type`` -- тег."

#: ../doc/dev_guide/documentation_guidelines.rst:121
msgid ""
"The file name is useful for knowing, when you see \"ref\", where it is "
"pointing to. And if the file name is meaningful, you see that better."
msgstr ""
"Имя файла используется для того, чтобы понять, куда указывает \"ref\". И "
"если имя файла имеет смысл, это гораздо понятнее."

#: ../doc/dev_guide/documentation_guidelines.rst:124
msgid ""
"The file name alone, without a path, is enough when the file name is "
"unique within ``doc/sphinx``. So, for ``fiber.rst`` it should be just "
"\"fiber\", not \"reference-fiber\". While for \"index.rst\" (we have a "
"handful of \"index.rst\" in different directories) please specify the "
"path before the file name, e.g. \"reference-index\"."
msgstr ""
"Имени файла без пути достаточно, когда оно уникально в пределах "
"``doc/sphinx``. Поэтому для файла ``fiber.rst`` достаточно будет "
"\"fiber\", а не \"reference-fiber\". Тогда как для \"index.rst\" (а у нас"
" множество файлов \"index.rst\" в разных директориях) необходимо указать "
"путь до имени файла, например, \"reference-index\"."

#: ../doc/dev_guide/documentation_guidelines.rst:131
msgid ""
"Use a dash \"-\" to delimit the path and the file name. In the "
"documentation source, we use only underscores \"_\" in paths and file "
"names, reserving dash \"-\" as the delimiter for local links."
msgstr ""
"Используйте дефис \"-\", чтобы разграничить путь и имя файла. В исходном "
"коде документации мы пользуемся только символами подчеркивания \"_\" при "
"указании пути и имени файла, оставляя дефисы \"-\" для разграничения в "
"локальных ссылках."

#: ../doc/dev_guide/documentation_guidelines.rst:135
msgid ""
"The tag can be anything meaningful. The only guideline is for Tarantool "
"syntax items (such as members), where the preferred tag syntax is "
"``module_or_object_name dash member_name``. For example, ``box_space-"
"drop``."
msgstr ""
"Тег может содержать любую значимую информацию. Единственная рекомендация "
"дается для элементов синтаксиса Tarantool'а, где предпочтительно "
"использовать следующий синтаксис в тегах: ``имя_объекта_или_модуля дефис "
"имя_элемента``. Например, ``box_space-drop``."

#: ../doc/dev_guide/documentation_guidelines.rst:141
msgid "Making comments"
msgstr "Добавление комментариев"

#: ../doc/dev_guide/documentation_guidelines.rst:143
msgid ""
"Sometimes we may need to leave comments in a ReST file. To make sphinx "
"ignore some text during processing, use the following per-line notation "
"with \".. //\" as the comment marker:"
msgstr ""
"Иногда могут потребоваться комментарии в файле ReST. Чтобы sphinx не "
"учитывал этот текст во время обработки, используйте следующую запись в "
"каждой строке в качестве маркера комментария (\".. //\"):"

#: ../doc/dev_guide/documentation_guidelines.rst:147
msgid ".. // your comment here"
msgstr ".. // здесь комментарий"

#: ../doc/dev_guide/documentation_guidelines.rst:151
msgid ""
"The starting symbols \".. //\" do not interfere with the other ReST "
"markup, and they are easy to find both visually and using grep. There are"
" no symbols to escape in grep search, just go ahead with something like "
"this:"
msgstr ""
"Начальные символы \".. //\" не пересекаются с другими символами разметки "
"ReST, и их легко обнаружить как визуально, так и с помощью grep. В поиске"
" grep нет символов, которые нужно избегать, просто выполните примерно "
"следующее:"

#: ../doc/dev_guide/documentation_guidelines.rst:155
msgid "$ grep \".. //\" doc/sphinx/dev_guide/*.rst"
msgstr "$ grep \".. //\" doc/sphinx/dev_guide/*.rst"

#: ../doc/dev_guide/documentation_guidelines.rst:159
msgid ""
"These comments don't work properly in nested documentation, though (e.g. "
"if you leave a comment in module -> object -> method, sphinx ignores the "
"comment and all nested content that follows in the method description)."
msgstr ""
"Тем не менее, эти комментарии не сработают должным образом во вложенной "
"документации (например, если оставить комментарий в модуле -> объекте -> "
"методе, sphinx игнорирует комментарий и всё вложенное содержимое, который"
" следует в описании метода)."

#: ../doc/dev_guide/documentation_guidelines.rst:165
msgid "Language and style issues"
msgstr "Вопросы по стилю и языку"

#: ../doc/dev_guide/documentation_guidelines.rst:169
msgid "US vs British spelling"
msgstr "Британский или американский вариант английского"

#: ../doc/dev_guide/documentation_guidelines.rst:171
msgid "We use English US spelling."
msgstr ""
"В английской версии документации мы придерживаемся американского варианта"
" английского языка."

#: ../doc/dev_guide/documentation_guidelines.rst:175
msgid "Instance vs server"
msgstr "Экземпляр или сервер"

#: ../doc/dev_guide/documentation_guidelines.rst:177
msgid ""
"We say \"instance\" rather than \"server\" to refer to an instance of "
"Tarantool server. This keeps the manual terminology consistent with names"
" like ``/etc/tarantool/instances.enabled`` in the Tarantool environment."
msgstr ""
"Ссылаясь на экземпляр Tarantool-сервера, мы говорим \"экземпляр\", а не "
"\"сервер\". Это обеспечивает однородность терминологии в руководстве и "
"именами в окружении Tarantool'а (например, "
"``/etc/tarantool/instances.enabled`` -- активные экземпляры)."

#: ../doc/dev_guide/documentation_guidelines.rst:181
msgid ""
"Wrong usage: \"Replication allows multiple Tarantool *servers* to work on"
" copies of the same databases.\""
msgstr ""
"Неправильно: \"С помощью репликации несколько *серверов* Tarantool’а "
"могут работать на копиях одинаковых баз данных.\""

#: ../doc/dev_guide/documentation_guidelines.rst:184
msgid ""
"Correct usage: \"Replication allows multiple Tarantool *instances* to "
"work on copies of the same databases.\""
msgstr ""
"Правильно: \"С помощью репликации несколько *экземпляров* Tarantool’а "
"могут работать на копиях одинаковых баз данных.\""

#: ../doc/dev_guide/documentation_guidelines.rst:189
msgid "Examples and templates"
msgstr "Примеры и шаблоны"

#: ../doc/dev_guide/documentation_guidelines.rst:193
msgid "Module and function"
msgstr "Модуль и функция"

#: ../doc/dev_guide/documentation_guidelines.rst:195
msgid ""
"Here is an example of documenting a module (``my_fiber``) and a function "
"(``my_fiber.create``)."
msgstr ""
"Ниже приводится пример документирования модуля (``my_fiber``) и функции "
"(``my_fiber.create``)."

#: ../doc/dev_guide/documentation_guidelines.rst:202
msgid ""
"Create and start a ``my_fiber`` object. The object is created and begins "
"to run immediately."
msgstr ""
"Создание и запуск ``my_fiber``. Происходит создание объекта, который "
"незамедлительно начинает работу."

#: ../doc/dev_guide/documentation_guidelines.rst
#: ../doc/dev_guide/reference_capi/box.rst
#: ../doc/dev_guide/reference_capi/box_index.rst
#: ../doc/dev_guide/reference_capi/coio.rst
#: ../doc/dev_guide/reference_capi/error.rst
#: ../doc/dev_guide/reference_capi/fiber.rst
#: ../doc/dev_guide/reference_capi/latch.rst
#: ../doc/dev_guide/reference_capi/say.rst
#: ../doc/dev_guide/reference_capi/tuple.rst
#: ../doc/dev_guide/reference_capi/utils.rst
msgid "Parameters"
msgstr "Параметры"

#: ../doc/dev_guide/documentation_guidelines.rst:205
msgid "the function to be associated with the ``my_fiber`` object"
msgstr "функция, которая будет связана с ``my_fiber``"

#: ../doc/dev_guide/documentation_guidelines.rst:206
msgid "what will be passed to function"
msgstr "что передается в функцию"

#: ../doc/dev_guide/documentation_guidelines.rst
msgid "return"
msgstr "возвращает"

#: ../doc/dev_guide/documentation_guidelines.rst:208
msgid "created ``my_fiber`` object"
msgstr "созданный объект ``my_fiber``"

#: ../doc/dev_guide/documentation_guidelines.rst
msgid "rtype"
msgstr "тип возвращаемого значения"

#: ../doc/dev_guide/documentation_guidelines.rst:209
msgid "userdata"
msgstr "пользовательские данные"

#: ../doc/dev_guide/documentation_guidelines.rst:211
#: ../doc/dev_guide/documentation_guidelines.rst:249
#: ../doc/dev_guide/reference_capi/coio.rst:48
#: ../doc/dev_guide/reference_capi/say.rst:52
#: ../doc/dev_guide/reference_capi/tuple.rst:241
msgid "**Example:**"
msgstr "**Пример:**"

#: ../doc/dev_guide/documentation_guidelines.rst:213
msgid ""
"tarantool> my_fiber = require('my_fiber')\n"
"---\n"
"...\n"
"tarantool> function function_name()\n"
"         >   my_fiber.sleep(1000)\n"
"         > end\n"
"---\n"
"...\n"
"tarantool> my_fiber_object = my_fiber.create(function_name)\n"
"---\n"
"..."
msgstr ""
"tarantool> my_fiber = require('my_fiber')\n"
"---\n"
"...\n"
"tarantool> function function_name()\n"
"         >   my_fiber.sleep(1000)\n"
"         > end\n"
"---\n"
"...\n"
"tarantool> my_fiber_object = my_fiber.create(function_name)\n"
"---\n"
"..."

#: ../doc/dev_guide/documentation_guidelines.rst:229
msgid "Module, class and method"
msgstr "Модуль, класс и метод"

#: ../doc/dev_guide/documentation_guidelines.rst:231
msgid ""
"Here is an example of documenting a module (``my_box.index``), a class "
"(``my_index_object``) and a function (``my_index_object.rename``)."
msgstr ""
"Ниже приводится пример документирования модуля (``my_box.index``), класса"
" (``my_index_object``) и функции (``my_index_object.rename``)."

#: ../doc/dev_guide/documentation_guidelines.rst:240
msgid "Rename an index."
msgstr "Переименование индекса."

#: ../doc/dev_guide/documentation_guidelines.rst:242
msgid "an object reference"
msgstr "ссылка на объект"

#: ../doc/dev_guide/documentation_guidelines.rst:243
msgid "a new name for the index (type = string)"
msgstr "новое имя для индекса (тип = строка)"

#: ../doc/dev_guide/documentation_guidelines.rst:245
msgid "nil"
msgstr "nil"

#: ../doc/dev_guide/documentation_guidelines.rst:247
msgid "Possible errors: index_object does not exist."
msgstr "Возможные ошибки: index_object не существует."

#: ../doc/dev_guide/documentation_guidelines.rst:251
msgid ""
"tarantool> box.space.space55.index.primary:rename('secondary')\n"
"---\n"
"..."
msgstr ""
"tarantool> box.space.space55.index.primary:rename('secondary')\n"
"---\n"
"..."

#: ../doc/dev_guide/documentation_guidelines.rst:257
msgid "Complexity Factors: Index size, Index type, Number of tuples accessed."
msgstr ""
"Факторы сложности: Размер индекса, тип индекса, количество кортежей, к "
"которым получен доступ."

#: ../doc/dev_guide/guidelines_index.rst:3
msgid "Guidelines"
msgstr "Рекомендации"

#: ../doc/dev_guide/index.rst:5
msgid "Contributor's Guide"
msgstr "Руководство разработчика"

#: ../doc/dev_guide/internals_index.rst:3
msgid "Internals"
msgstr "Внутреннее устройство"

#: ../doc/dev_guide/box_protocol.rst:5
msgid "Tarantool's binary protocol"
msgstr "Бинарный протокол Tarantool'а"

#: ../doc/dev_guide/box_protocol.rst:7
msgid "Tarantool's binary protocol is a binary request/response protocol."
msgstr ""
"Бинарный протокол Tarantool'а представляет собой бинарный "
"запросно-ответный протокол."

#: ../doc/dev_guide/box_protocol.rst:11
msgid "Notation in diagrams"
msgstr "Система обозначений в схематическом представлении"

#: ../doc/dev_guide/box_protocol.rst:13
msgid ""
"0    X\n"
"+----+\n"
"|    | - X + 1 bytes\n"
"+----+\n"
" TYPE - type of MsgPack value (if it is a MsgPack object)\n"
"\n"
"+====+\n"
"|    | - Variable size MsgPack object\n"
"+====+\n"
" TYPE - type of MsgPack value\n"
"\n"
"+~~~~+\n"
"|    | - Variable size MsgPack Array/Map\n"
"+~~~~+\n"
" TYPE - type of MsgPack value"
msgstr ""
"0    X\n"
"+----+\n"
"|    | - X + 1 байт\n"
"+----+\n"
" TYPE - тип MsgPack-значения (если это MsgPack-объект)\n"
"\n"
"+====+\n"
"|    | - MsgPack-объект изменяемого размера\n"
"+====+\n"
" TYPE - тип MsgPack-значения\n"
"\n"
"+~~~~+\n"
"|    | - Массив или ассоциативный массив в формате MsgPack изменяемого "
"размера\n"
"+~~~~+\n"
" TYPE - тип MsgPack-значения"

#: ../doc/dev_guide/box_protocol.rst:32
msgid "MsgPack data types:"
msgstr "Типы MsgPack-данных:"

#: ../doc/dev_guide/box_protocol.rst:34
msgid "**MP_INT** - Integer"
msgstr "**MP_INT** - целое число"

#: ../doc/dev_guide/box_protocol.rst:35
msgid "**MP_MAP** - Map"
msgstr "**MP_MAP** - ассоциативный массив"

#: ../doc/dev_guide/box_protocol.rst:36
msgid "**MP_ARR** - Array"
msgstr "**MP_ARR** - массив"

#: ../doc/dev_guide/box_protocol.rst:37
msgid "**MP_STRING** - String"
msgstr "**MP_STRING** - строка"

#: ../doc/dev_guide/box_protocol.rst:38
msgid "**MP_FIXSTR** - Fixed size string"
msgstr "**MP_FIXSTR** - строка фиксированной длины"

#: ../doc/dev_guide/box_protocol.rst:39
msgid "**MP_OBJECT** - Any MsgPack object"
msgstr "**MP_OBJECT** - любой MsgPack-объект"

#: ../doc/dev_guide/box_protocol.rst:40
msgid "**MP_BIN** - MsgPack binary format"
msgstr "**MP_BIN** - бинарный формат MsgPack"

#: ../doc/dev_guide/box_protocol.rst:44
msgid "Greeting packet"
msgstr "Пакет приветствия"

#: ../doc/dev_guide/box_protocol.rst:46
msgid ""
"TARANTOOL'S GREETING:\n"
"\n"
"0                                     63\n"
"+--------------------------------------+\n"
"|                                      |\n"
"| Tarantool Greeting (server version)  |\n"
"|               64 bytes               |\n"
"+---------------------+----------------+\n"
"|                     |                |\n"
"| BASE64 encoded SALT |      NULL      |\n"
"|      44 bytes       |                |\n"
"+---------------------+----------------+\n"
"64                  107              127"
msgstr ""
"ПРИВЕТСТВИЕ TARANTOOL'А:\n"
" \n"
" 0                                     63\n"
" +--------------------------------------+\n"
" |                                      |\n"
" | Приветствие Tarantool'а (версия сервера)  |\n"
" |               64 байта               |\n"
" +---------------------+----------------+\n"
" |                     |                |\n"
" | СОЛЬ в кодировке BASE64 |      NULL      |\n"
" |      44 байта       |                |\n"
" +---------------------+----------------+\n"
" 64                  107              127"

#: ../doc/dev_guide/box_protocol.rst:62
msgid ""
"The server instance begins the dialogue by sending a fixed-size "
"(128-byte) text greeting to the client. The greeting always contains two "
"64-byte lines of ASCII text, each line ending with a newline character "
"(:code:`\\n`). The first line contains the instance version and protocol "
"type. The second line contains up to 44 bytes of base64-encoded random "
"string, to use in the authentication packet, and ends with up to 23 "
"spaces."
msgstr ""
"Экземпляр сервера начинает диалог с отправки клиенту текста приветствия "
"фиксированного размера (128 байтов). Приветствие всегда содержит две "
"64-байтные строки текста в формате ASCII, каждая строка заканчивается "
"символом разрыва строки (:code:`\\n`). Первая строка описывает версию "
"экземпляра и тип протокола. Вторая строка содержит случайную строку в "
"кодировке base64 размером до 44 байтов для использования в пакете "
"аутентификации и заканчивается на пробелы (до 23)."

#: ../doc/dev_guide/box_protocol.rst:70
msgid "Unified packet structure"
msgstr "Унифицированная структура пакета"

#: ../doc/dev_guide/box_protocol.rst:72
msgid ""
"Once a greeting is read, the protocol becomes pure request/response and "
"features a complete access to Tarantool functionality, including:"
msgstr ""
"После того, как приветствие прочитано, протокол становится простым "
"запросно-ответным протоколом и предоставляет полный доступ к функциям "
"Tarantool'а, включая:"

#: ../doc/dev_guide/box_protocol.rst:75
msgid ""
"request multiplexing, e.g. ability to asynchronously issue multiple "
"requests via the same connection"
msgstr ""
"мультиплексирование запросов, т.е. возможность асинхронной отправки "
"множества запросов по одному соединению;"

#: ../doc/dev_guide/box_protocol.rst:77
msgid "response format that supports zero-copy writes"
msgstr ""
"формат ответа, который поддерживает запись в режиме без копирования "
"(zero-copy)."

#: ../doc/dev_guide/box_protocol.rst:79
msgid ""
"The protocol uses `msgpack <http://msgpack.org>`_ for data structures and"
" encoding."
msgstr ""
"Для структуризации и кодирования данных протокол использует формат данных"
" `msgpack <http://msgpack.org>`_."

#: ../doc/dev_guide/box_protocol.rst:82
msgid ""
"The protocol uses maps that contain some integer constants as keys. These"
" constants are defined in `src/box/iproto_constants.h "
"<https://github.com/tarantool/tarantool/blob/1.9/src/box/iproto_constants.h>`_."
" We list common constants here:"
msgstr ""
"Протокол использует ассоциативные массивы, которые содержат несколько "
"целочисленных постоянных, в качестве ключей. Эти постоянные указаны по "
"ссылке `src/box/iproto_constants.h "
"<https://github.com/tarantool/tarantool/blob/1.9/src/box/iproto_constants.h>`_."
" Ниже приведены часто используемые постоянные:"

#: ../doc/dev_guide/box_protocol.rst:87
msgid ""
"-- user keys\n"
"<iproto_sync>          ::= 0x01\n"
"<iproto_schema_id>     ::= 0x05  /* also known as schema_version */\n"
"<iproto_space_id>      ::= 0x10\n"
"<iproto_index_id>      ::= 0x11\n"
"<iproto_limit>         ::= 0x12\n"
"<iproto_offset>        ::= 0x13\n"
"<iproto_iterator>      ::= 0x14\n"
"<iproto_key>           ::= 0x20\n"
"<iproto_tuple>         ::= 0x21\n"
"<iproto_function_name> ::= 0x22\n"
"<iproto_username>      ::= 0x23\n"
"<iproto_expr>          ::= 0x27 /* also known as expression */\n"
"<iproto_ops>           ::= 0x28\n"
"<iproto_data>          ::= 0x30\n"
"<iproto_error>         ::= 0x31"
msgstr ""
"-- пользовательские ключи\n"
"<iproto_sync>          ::= 0x01\n"
"<iproto_schema_id>     ::= 0x05  /* также schema_version */\n"
"<iproto_space_id>      ::= 0x10\n"
"<iproto_index_id>      ::= 0x11\n"
"<iproto_limit>         ::= 0x12\n"
"<iproto_offset>        ::= 0x13\n"
"<iproto_iterator>      ::= 0x14\n"
"<iproto_key>           ::= 0x20\n"
"<iproto_tuple>         ::= 0x21\n"
"<iproto_function_name> ::= 0x22\n"
"<iproto_username>      ::= 0x23\n"
"<iproto_expr>          ::= 0x27 /* также expression */\n"
"<iproto_ops>           ::= 0x28\n"
"<iproto_data>          ::= 0x30\n"
"<iproto_error>         ::= 0x31"

#: ../doc/dev_guide/box_protocol.rst:106
msgid ""
"-- -- Value for <code> key in request can be:\n"
"-- User command codes\n"
"<iproto_select>       ::= 0x01\n"
"<iproto_insert>       ::= 0x02\n"
"<iproto_replace>      ::= 0x03\n"
"<iproto_update>       ::= 0x04\n"
"<iproto_delete>       ::= 0x05\n"
"<iproto_call_16>      ::= 0x06 /* as used in version 1.6 */\n"
"<iproto_auth>         ::= 0x07\n"
"<iproto_eval>         ::= 0x08\n"
"<iproto_upsert>       ::= 0x09\n"
"<iproto_call>         ::= 0x0a\n"
"-- Admin command codes\n"
"-- (including codes for replica-set initialization and master election)\n"
"<iproto_ping>         ::= 0x40\n"
"<iproto_join>         ::= 0x41 /* i.e. replication join */\n"
"<iproto_subscribe>    ::= 0x42\n"
"<iproto_request_vote> ::= 0x43\n"
"\n"
"-- -- Value for <code> key in response can be:\n"
"<iproto_ok>           ::= 0x00\n"
"<iproto_type_error>   ::= 0x8XXX /* where XXX is a value in errcode.h */"
msgstr ""
"-- -- Значение ключа <code> в запросе может быть следующим:\n"
"-- Ключи для команд пользователя\n"
"<iproto_select>       ::= 0x01\n"
"<iproto_insert>       ::= 0x02\n"
"<iproto_replace>      ::= 0x03\n"
"<iproto_update>       ::= 0x04\n"
"<iproto_delete>       ::= 0x05\n"
"<iproto_call_16>      ::= 0x06 /* as used in version 1.6 */\n"
"<iproto_auth>         ::= 0x07\n"
"<iproto_eval>         ::= 0x08\n"
"<iproto_upsert>       ::= 0x09\n"
"<iproto_call>         ::= 0x0a\n"
"-- Коды для команд администратора\n"
"-- (включая коды для инициализации набора реплик и выбора мастера)\n"
"<iproto_ping>         ::= 0x40\n"
"<iproto_join>         ::= 0x41 /* i.e. replication join */\n"
"<iproto_subscribe>    ::= 0x42\n"
"<iproto_request_vote> ::= 0x43\n"
"\n"
"-- -- Значение для ключа <code> в ответе может быть следующим:\n"
"<iproto_ok>           ::= 0x00\n"
"<iproto_type_error>   ::= 0x8XXX /* где XXX -- это значение в errcode.h */"

#: ../doc/dev_guide/box_protocol.rst:132
msgid "Both :code:`<header>` and :code:`<body>` are msgpack maps:"
msgstr ""
"И заголовок :code:`<header>` и тело сообщения :code:`<body>` представляют"
" собой ассоциативные массивы в формате msgpack:"

#: ../doc/dev_guide/box_protocol.rst:134
msgid ""
"Request/Response:\n"
"\n"
"0        5\n"
"+--------+ +============+ +===================================+\n"
"| BODY + | |            | |                                   |\n"
"| HEADER | |   HEADER   | |               BODY                |\n"
"|  SIZE  | |            | |                                   |\n"
"+--------+ +============+ +===================================+\n"
"  MP_INT       MP_MAP                     MP_MAP"
msgstr ""
"Запрос / ответ:\n"
" \n"
"0        5\n"
"+--------+ +============+ +===================================+\n"
"| BODY + | |            | |                                   |\n"
"| HEADER | |   HEADER   | |               BODY                |\n"
"|  SIZE  | |            | |                                   |\n"
"+--------+ +============+ +===================================+\n"
"  MP_INT       MP_MAP                     MP_MAP"

#: ../doc/dev_guide/box_protocol.rst:146
msgid ""
"UNIFIED HEADER:\n"
"\n"
"+================+================+=====================+\n"
"|                |                |                     |\n"
"|   0x00: CODE   |   0x01: SYNC   |    0x05: SCHEMA_ID  |\n"
"| MP_INT: MP_INT | MP_INT: MP_INT |  MP_INT: MP_INT     |\n"
"|                |                |                     |\n"
"+================+================+=====================+\n"
"                          MP_MAP"
msgstr ""
"УНИФИЦИРОВАННЫЙ ЗАГОЛОВОК:\n"
"\n"
"+================+================+=====================+\n"
"|                |                |                     |\n"
"|   0x00: CODE   |   0x01: SYNC   |    0x05: SCHEMA_ID  |\n"
"| MP_INT: MP_INT | MP_INT: MP_INT |  MP_INT: MP_INT     |\n"
"|                |                |                     |\n"
"+================+================+=====================+\n"
"                          MP_MAP"

#: ../doc/dev_guide/box_protocol.rst:158
msgid ""
"They only differ in the allowed set of keys and values. The key defines "
"the type of value that follows. If a body has no keys, the entire msgpack"
" map for the body may be missing. Such is the case, for example, for a "
"<ping> request. ``schema_id`` may be absent in the request's header, "
"meaning that there will be no version checking, but it must be present in"
" the response. If ``schema_id`` is sent in the header, then it will be "
"checked."
msgstr ""
"Они различаются лишь набором допустимых ключей и значений. Ключ "
"определяет тип следующего за ним значения. Если в теле сообщения нет "
"ключей, может отсутствовать весь ассоциативный массив в формате msgpack "
"для тела сообщения. Так и случится при запросе проверки связи <ping>. "
"``schema_id`` может отсутствовать в заголовке запроса, что означает "
"отсутствие проверки версии, но этот ключ обязательно должен "
"присутствовать в ответе. Если ``schema_id`` отправляется в заголовке, "
"будет выполнена соответствующая проверка."

#: ../doc/dev_guide/box_protocol.rst:169
msgid "Authentication"
msgstr "Аутентификация"

#: ../doc/dev_guide/box_protocol.rst:171
msgid ""
"When a client connects to the server instance, the instance responds with"
" a 128-byte text greeting message. Part of the greeting is base-64 "
"encoded session salt - a random string which can be used for "
"authentication. The length of decoded salt (44 bytes) exceeds the amount "
"necessary to sign the authentication message (first 20 bytes). An excess "
"is reserved for future authentication schemas."
msgstr ""
"Когда клиент подключается к экземпляру сервера, экземпляр отвечает "
"128-байтным текстовым сообщением приветствия. Часть приветствия "
"представляет собой закодированное в формате base-64 значение соль для "
"сессии (случайная строка), которое можно использовать для аутентификации."
" Длина расшифрованного значения соль (44 байта) выходит за пределы "
"сообщения для аутентификации (первые 20 байтов). Остаток предназначается "
"для будущих схем аутентификации."

#: ../doc/dev_guide/box_protocol.rst:178
msgid ""
"PREPARE SCRAMBLE:\n"
"\n"
"    LEN(ENCODED_SALT) = 44;\n"
"    LEN(SCRAMBLE)     = 20;\n"
"\n"
"prepare 'chap-sha1' scramble:\n"
"\n"
"    salt = base64_decode(encoded_salt);\n"
"    step_1 = sha1(password);\n"
"    step_2 = sha1(step_1);\n"
"    step_3 = sha1(salt, step_2);\n"
"    scramble = xor(step_1, step_3);\n"
"    return scramble;\n"
"\n"
"AUTHORIZATION BODY: CODE = 0x07\n"
"\n"
"+==================+====================================+\n"
"|                  |        +-------------+-----------+ |\n"
"|  (KEY)           | (TUPLE)|  len == 9   | len == 20 | |\n"
"|   0x23:USERNAME  |   0x21:| \"chap-sha1\" |  SCRAMBLE | |\n"
"| MP_INT:MP_STRING | MP_INT:|  MP_STRING  |  MP_BIN   | |\n"
"|                  |        +-------------+-----------+ |\n"
"|                  |                   MP_ARRAY         |\n"
"+==================+====================================+\n"
"                        MP_MAP"
msgstr ""
"ПОДГОТОВКА КОДИРОВАНИЯ:\n"
"\n"
"    LEN(ENCODED_SALT) = 44;\n"
"    LEN(SCRAMBLE)     = 20;\n"
"\n"
"подготовить кодирование 'chap-sha1':\n"
"\n"
"    salt = base64_decode(encoded_salt);\n"
"    step_1 = sha1(password);\n"
"    step_2 = sha1(step_1);\n"
"    step_3 = sha1(salt, step_2);\n"
"    scramble = xor(step_1, step_3);\n"
"    return scramble;\n"
"\n"
"ТЕЛО СООБЩЕНИЯ АВТОРИЗАЦИИ: CODE = 0x07\n"
"\n"
"+==================+====================================+\n"
"|                  |        +-------------+-----------+ |\n"
"|  (KEY)           | (TUPLE)|  len == 9   | len == 20 | |\n"
"|   0x23:USERNAME  |   0x21:| \"chap-sha1\" |  SCRAMBLE | |\n"
"| MP_INT:MP_STRING | MP_INT:|  MP_STRING  |  MP_BIN   | |\n"
"|                  |        +-------------+-----------+ |\n"
"|                  |                   MP_ARRAY         |\n"
"+==================+====================================+\n"
"                        MP_MAP"

#: ../doc/dev_guide/box_protocol.rst:206
msgid ""
":code:`<key>` holds the user name. :code:`<tuple>` must be an array of 2 "
"fields: authentication mechanism (\"chap-sha1\" is the only supported "
"mechanism right now) and password, encrypted according to the specified "
"mechanism. Authentication in Tarantool is optional, if no authentication "
"is performed, session user is 'guest'. The instance responds to "
"authentication packet with a standard response with 0 tuples."
msgstr ""
":code:`<key>` содержит имя пользователя. :code:`<tuple>` должен "
"представлять собой массив из 2 полей: механизм аутентификации (в данный "
"момент поддерживается только механизм \"chap-sha1\") и пароль, "
"закодированный в соответствии с указанным механизмом. Аутентификация в "
"Tarantool'е необязательна: если аутентификация не проводится, то "
"пользователем в сессии будет 'guest'. Экземпляр отвечает на пакет "
"аутентификации стандартным ответом с 0 кортежей."

#: ../doc/dev_guide/box_protocol.rst:214
msgid "Requests"
msgstr "Запросы"

#: ../doc/dev_guide/box_protocol.rst:216
msgid "SELECT: CODE - 0x01 Find tuples matching the search pattern"
msgstr "SELECT: CODE - 0x01 Поиск кортежей, соответствующих шаблону поиска"

#: ../doc/dev_guide/box_protocol.rst:219
msgid ""
"SELECT BODY:\n"
"\n"
"+==================+==================+==================+\n"
"|                  |                  |                  |\n"
"|   0x10: SPACE_ID |   0x11: INDEX_ID |   0x12: LIMIT    |\n"
"| MP_INT: MP_INT   | MP_INT: MP_INT   | MP_INT: MP_INT   |\n"
"|                  |                  |                  |\n"
"+==================+==================+==================+\n"
"|                  |                  |                  |\n"
"|   0x13: OFFSET   |   0x14: ITERATOR |   0x20: KEY      |\n"
"| MP_INT: MP_INT   | MP_INT: MP_INT   | MP_INT: MP_ARRAY |\n"
"|                  |                  |                  |\n"
"+==================+==================+==================+\n"
"                          MP_MAP"
msgstr ""
"ТЕЛО СООБЩЕНИЯ ВЫБОРКИ SELECT:\n"
"\n"
"+==================+==================+==================+\n"
"|                  |                  |                  |\n"
"|   0x10: SPACE_ID |   0x11: INDEX_ID |   0x12: LIMIT    |\n"
"| MP_INT: MP_INT   | MP_INT: MP_INT   | MP_INT: MP_INT   |\n"
"|                  |                  |                  |\n"
"+==================+==================+==================+\n"
"|                  |                  |                  |\n"
"|   0x13: OFFSET   |   0x14: ITERATOR |   0x20: KEY      |\n"
"| MP_INT: MP_INT   | MP_INT: MP_INT   | MP_INT: MP_ARRAY |\n"
"|                  |                  |                  |\n"
"+==================+==================+==================+\n"
"                          MP_MAP"

#: ../doc/dev_guide/box_protocol.rst:236
msgid ""
"INSERT:  CODE - 0x02 Inserts tuple into the space, if no tuple with same "
"unique keys exists. Otherwise throw *duplicate key* error."
msgstr ""
"INSERT:  CODE - 0x02 Вставка кортежа в спейс, если нет кортежей с такими "
"же уникальными ключами. Если есть, выдать ошибку *duplicate key* "
"(повторяющееся значение ключа)."

#: ../doc/dev_guide/box_protocol.rst:238
msgid ""
"REPLACE: CODE - 0x03 Insert a tuple into the space or replace an existing"
" one."
msgstr ""
"REPLACE: CODE - 0x03 Вставка кортежа в спейс или замена существующего "
"кортежа."

#: ../doc/dev_guide/box_protocol.rst:241
msgid ""
"INSERT/REPLACE BODY:\n"
"\n"
"+==================+==================+\n"
"|                  |                  |\n"
"|   0x10: SPACE_ID |   0x21: TUPLE    |\n"
"| MP_INT: MP_INT   | MP_INT: MP_ARRAY |\n"
"|                  |                  |\n"
"+==================+==================+\n"
"                 MP_MAP"
msgstr ""
"ТЕЛО СООБЩЕНИЯ ВСТАВКИ/ЗАМЕНЫ INSERT/REPLACE:\n"
"\n"
"+==================+==================+\n"
"|                  |                  |\n"
"|   0x10: SPACE_ID |   0x21: TUPLE    |\n"
"| MP_INT: MP_INT   | MP_INT: MP_ARRAY |\n"
"|                  |                  |\n"
"+==================+==================+\n"
"                 MP_MAP"

#: ../doc/dev_guide/box_protocol.rst:254
msgid "UPDATE: CODE - 0x04 Update a tuple"
msgstr "UPDATE: CODE - 0x04 Обновление кортежа"

#: ../doc/dev_guide/box_protocol.rst:257
msgid ""
"UPDATE BODY:\n"
"\n"
"+==================+=======================+\n"
"|                  |                       |\n"
"|   0x10: SPACE_ID |   0x11: INDEX_ID      |\n"
"| MP_INT: MP_INT   | MP_INT: MP_INT        |\n"
"|                  |                       |\n"
"+==================+=======================+\n"
"|                  |          +~~~~~~~~~~+ |\n"
"|                  |          |          | |\n"
"|                  | (TUPLE)  |    OP    | |\n"
"|   0x20: KEY      |    0x21: |          | |\n"
"| MP_INT: MP_ARRAY |  MP_INT: +~~~~~~~~~~+ |\n"
"|                  |            MP_ARRAY   |\n"
"+==================+=======================+\n"
"                 MP_MAP"
msgstr ""
"ТЕЛО СООБЩЕНИЯ ОБНОВЛЕНИЯ UPDATE:\n"
"\n"
"+==================+=======================+\n"
"|                  |                       |\n"
"|   0x10: SPACE_ID |   0x11: INDEX_ID      |\n"
"| MP_INT: MP_INT   | MP_INT: MP_INT        |\n"
"|                  |                       |\n"
"+==================+=======================+\n"
"|                  |          +~~~~~~~~~~+ |\n"
"|                  |          |          | |\n"
"|                  | (TUPLE)  |    OP    | |\n"
"|   0x20: KEY      |    0x21: |          | |\n"
"| MP_INT: MP_ARRAY |  MP_INT: +~~~~~~~~~~+ |\n"
"|                  |            MP_ARRAY   |\n"
"+==================+=======================+\n"
"                 MP_MAP"

#: ../doc/dev_guide/box_protocol.rst:276
msgid ""
"OP:\n"
"    Works only for integer fields:\n"
"    * Addition    OP = '+' . space[key][field_no] += argument\n"
"    * Subtraction OP = '-' . space[key][field_no] -= argument\n"
"    * Bitwise AND OP = '&' . space[key][field_no] &= argument\n"
"    * Bitwise XOR OP = '^' . space[key][field_no] ^= argument\n"
"    * Bitwise OR  OP = '|' . space[key][field_no] |= argument\n"
"    Works on any fields:\n"
"    * Delete      OP = '#'\n"
"      delete <argument> fields starting\n"
"      from <field_no> in the space[<key>]\n"
"\n"
"0           2\n"
"+-----------+==========+==========+\n"
"|           |          |          |\n"
"|    OP     | FIELD_NO | ARGUMENT |\n"
"| MP_FIXSTR |  MP_INT  |  MP_INT  |\n"
"|           |          |          |\n"
"+-----------+==========+==========+\n"
"              MP_ARRAY"
msgstr ""
"OP:\n"
"    Работает только для целочисленных полей:\n"
"    * Сложение    OP = '+' . space[key][field_no] += argument\n"
"    * Вычитание OP = '-' . space[key][field_no] -= argument\n"
"    * Побитовое И OP = '&' . space[key][field_no] &= argument\n"
"    * Исключающее ИЛИ OP = '^' . space[key][field_no] ^= argument\n"
"    * Побитовое ИЛИ  OP = '|' . space[key][field_no] |= аргумент\n"
"    Работает для любых полей:\n"
"    * Удаление      OP = '#'\n"
"      удалить поля <argument>, начиная\n"
"      с поля <field_no> в спейсе с ключом space[<key>]\n"
"\n"
"0           2\n"
"+-----------+==========+==========+\n"
"|           |          |          |\n"
"|    OP     | FIELD_NO | ARGUMENT |\n"
"| MP_FIXSTR |  MP_INT  |  MP_INT  |\n"
"|           |          |          |\n"
"+-----------+==========+==========+\n"
"              MP_ARRAY"

#: ../doc/dev_guide/box_protocol.rst:299
msgid ""
"    * Insert      OP = '!'\n"
"      insert <argument> before <field_no>\n"
"    * Assign      OP = '='\n"
"      assign <argument> to field <field_no>.\n"
"      will extend the tuple if <field_no> == <max_field_no> + 1\n"
"\n"
"0           2\n"
"+-----------+==========+===========+\n"
"|           |          |           |\n"
"|    OP     | FIELD_NO | ARGUMENT  |\n"
"| MP_FIXSTR |  MP_INT  | MP_OBJECT |\n"
"|           |          |           |\n"
"+-----------+==========+===========+\n"
"              MP_ARRAY\n"
"\n"
"    Works on string fields:\n"
"    * Splice      OP = ':'\n"
"      take the string from space[key][field_no] and\n"
"      substitute <offset> bytes from <position> with <argument>"
msgstr ""
"    * Вставка      OP = '!'\n"
"      вставить <argument> до поля <field_no>\n"
"    * Присвоение      OP = '='\n"
"      присвоить <argument> полю <field_no>.\n"
"      увеличит кортеж, если <field_no> == <max_field_no> + 1\n"
"\n"
"0           2\n"
"+-----------+==========+===========+\n"
"|           |          |           |\n"
"|    OP     | FIELD_NO | ARGUMENT  |\n"
"| MP_FIXSTR |  MP_INT  | MP_OBJECT |\n"
"|           |          |           |\n"
"+-----------+==========+===========+\n"
"              MP_ARRAY\n"
"\n"
"    Работает со строковыми полями:\n"
"    * Разделение      OP = ':'\n"
"      взять строку из space[key][field_no] и\n"
"      заменить <offset> байтов из положения <position> на <argument>"

#: ../doc/dev_guide/box_protocol.rst:321
msgid ""
"0           2\n"
"+-----------+==========+==========+========+==========+\n"
"|           |          |          |        |          |\n"
"|    ':'    | FIELD_NO | POSITION | OFFSET | ARGUMENT |\n"
"| MP_FIXSTR |  MP_INT  |  MP_INT  | MP_INT |  MP_STR  |\n"
"|           |          |          |        |          |\n"
"+-----------+==========+==========+========+==========+\n"
"                         MP_ARRAY"
msgstr ""
"0           2\n"
"+-----------+==========+==========+========+==========+\n"
"|           |          |          |        |          |\n"
"|    ':'    | FIELD_NO | POSITION | OFFSET | ARGUMENT |\n"
"| MP_FIXSTR |  MP_INT  |  MP_INT  | MP_INT |  MP_STR  |\n"
"|           |          |          |        |          |\n"
"+-----------+==========+==========+========+==========+\n"
"                         MP_ARRAY"

#: ../doc/dev_guide/box_protocol.rst:333
msgid ""
"It is an error to specify an argument of a type that differs from the "
"expected type."
msgstr ""
"Указать аргумент типа, который отличается от ожидаемого типа, будет "
"ошибкой."

#: ../doc/dev_guide/box_protocol.rst:335
msgid "DELETE: CODE - 0x05 Delete a tuple"
msgstr "DELETE: CODE - 0x05 Удаление кортежа"

#: ../doc/dev_guide/box_protocol.rst:338
msgid ""
"DELETE BODY:\n"
"\n"
"+==================+==================+==================+\n"
"|                  |                  |                  |\n"
"|   0x10: SPACE_ID |   0x11: INDEX_ID |   0x20: KEY      |\n"
"| MP_INT: MP_INT   | MP_INT: MP_INT   | MP_INT: MP_ARRAY |\n"
"|                  |                  |                  |\n"
"+==================+==================+==================+\n"
"                          MP_MAP"
msgstr ""
"ТЕЛО СООБЩЕНИЯ УДАЛЕНИЯ DELETE:\n"
"\n"
"+==================+==================+==================+\n"
"|                  |                  |                  |\n"
"|   0x10: SPACE_ID |   0x11: INDEX_ID |   0x20: KEY      |\n"
"| MP_INT: MP_INT   | MP_INT: MP_INT   | MP_INT: MP_ARRAY |\n"
"|                  |                  |                  |\n"
"+==================+==================+==================+\n"
"                          MP_MAP"

#: ../doc/dev_guide/box_protocol.rst:351
msgid ""
"CALL_16: CODE - 0x06 Call a stored function, returning an array of "
"tuples. This is deprecated; CALL (0x0a) is recommended instead."
msgstr ""
"CALL_16: CODE - 0x06 Вызов хранимой функции с возвратом массива кортежей."
" Объявлен устаревшим; рекомендуется использовать CALL (0x0a)."

#: ../doc/dev_guide/box_protocol.rst:354
msgid ""
"CALL_16 BODY:\n"
"\n"
"+=======================+==================+\n"
"|                       |                  |\n"
"|   0x22: FUNCTION_NAME |   0x21: TUPLE    |\n"
"| MP_INT: MP_STRING     | MP_INT: MP_ARRAY |\n"
"|                       |                  |\n"
"+=======================+==================+\n"
"                    MP_MAP"
msgstr ""
"ТЕЛО СООБЩЕНИЯ CALL_16:\n"
"\n"
"+=======================+==================+\n"
"|                       |                  |\n"
"|   0x22: FUNCTION_NAME |   0x21: TUPLE    |\n"
"| MP_INT: MP_STRING     | MP_INT: MP_ARRAY |\n"
"|                       |                  |\n"
"+=======================+==================+\n"
"                    MP_MAP"

#: ../doc/dev_guide/box_protocol.rst:368
msgid "EVAL: CODE - 0x08 Evaulate Lua expression"
msgstr "EVAL: CODE - 0x08 Оценка Lua-выражения"

#: ../doc/dev_guide/box_protocol.rst:371
msgid ""
"EVAL BODY:\n"
"\n"
"+=======================+==================+\n"
"|                       |                  |\n"
"|   0x27: EXPRESSION    |   0x21: TUPLE    |\n"
"| MP_INT: MP_STRING     | MP_INT: MP_ARRAY |\n"
"|                       |                  |\n"
"+=======================+==================+\n"
"                    MP_MAP"
msgstr ""
"ТЕЛО СООБЩЕНИЯ EVAL:\n"
"\n"
"+=======================+==================+\n"
"|                       |                  |\n"
"|   0x27: EXPRESSION    |   0x21: TUPLE    |\n"
"| MP_INT: MP_STRING     | MP_INT: MP_ARRAY |\n"
"|                       |                  |\n"
"+=======================+==================+\n"
"                    MP_MAP"

#: ../doc/dev_guide/box_protocol.rst:384
msgid ""
"UPSERT: CODE - 0x09 Update tuple if it would be found elsewhere try to "
"insert tuple. Always use primary index for key."
msgstr ""
"UPSERT: CODE - 0x09 Обновление кортежа, если он уже существует, попытка "
"вставить кортеж. Всегда используйте первичный индекс."

#: ../doc/dev_guide/box_protocol.rst:387
msgid ""
"UPSERT BODY:\n"
"\n"
"+==================+==================+==========================+\n"
"|                  |                  |             +~~~~~~~~~~+ |\n"
"|                  |                  |             |          | |\n"
"|   0x10: SPACE_ID |   0x21: TUPLE    |       (OPS) |    OP    | |\n"
"| MP_INT: MP_INT   | MP_INT: MP_ARRAY |       0x28: |          | |\n"
"|                  |                  |     MP_INT: +~~~~~~~~~~+ |\n"
"|                  |                  |               MP_ARRAY   |\n"
"+==================+==================+==========================+\n"
"                                MP_MAP\n"
"\n"
"Operations structure same as for UPDATE operation.\n"
"   0           2\n"
"+-----------+==========+==========+\n"
"|           |          |          |\n"
"|    OP     | FIELD_NO | ARGUMENT |\n"
"| MP_FIXSTR |  MP_INT  |  MP_INT  |\n"
"|           |          |          |\n"
"+-----------+==========+==========+\n"
"              MP_ARRAY\n"
"\n"
"Supported operations:\n"
"\n"
"'+' - add a value to a numeric field. If the filed is not numeric, it's\n"
"      changed to 0 first. If the field does not exist, the operation is\n"
"      skipped. There is no error in case of overflow either, the value\n"
"      simply wraps around in C style. The range of the integer is "
"MsgPack:\n"
"      from -2^63 to 2^64-1\n"
"'-' - same as the previous, but subtract a value\n"
"'=' - assign a field to a value. The field must exist, if it does not "
"exist,\n"
"      the operation is skipped.\n"
"'!' - insert a field. It's only possible to insert a field if this create"
" no\n"
"      nil \"gaps\" between fields. E.g. it's possible to add a field "
"between\n"
"      existing fields or as the last field of the tuple.\n"
"'#' - delete a field. If the field does not exist, the operation is "
"skipped.\n"
"      It's not possible to change with update operations a part of the "
"primary\n"
"      key (this is validated before performing upsert)."
msgstr ""
"ТЕЛО СООБЩЕНИЯ ОБНОВЛЕНИЯ И ВСТАВКИ UPSERT:\n"
"\n"
"+==================+==================+==========================+\n"
"|                  |                  |             +~~~~~~~~~~+ |\n"
"|                  |                  |             |          | |\n"
"|   0x10: SPACE_ID |   0x21: TUPLE    |       (OPS) |    OP    | |\n"
"| MP_INT: MP_INT   | MP_INT: MP_ARRAY |       0x28: |          | |\n"
"|                  |                  |     MP_INT: +~~~~~~~~~~+ |\n"
"|                  |                  |               MP_ARRAY   |\n"
"+==================+==================+==========================+\n"
"                                MP_MAP\n"
"\n"
"Структура операции аналогична структуре операции обновления UPDATE.\n"
"   0           2\n"
"+-----------+==========+==========+\n"
"|           |          |          |\n"
"|    OP     | FIELD_NO | ARGUMENT |\n"
"| MP_FIXSTR |  MP_INT  |  MP_INT  |\n"
"|           |          |          |\n"
"+-----------+==========+==========+\n"
"              MP_ARRAY\n"
"\n"
"Поддерживаются следующие операции:\n"
"\n"
"'+' - прибавление значения к числовому полю. Если поле не является "
"числовым, оно\n"
"      сначала изменяется на 0. Если поле отсутствует, операция\n"
"      пропускается. В случае переполнения ошибки также не будет, значение"
"\n"
"      просто переносится в стиле языка C. Диапазон целых чисел в формате "
"MsgPack:\n"
"      от -2^63 до 2^64-1\n"
"'-' - как в предыдущей операции, но значение вычитается\n"
"'=' - присвоение значения полю. Если поле отсутствует,\n"
"      операция пропускается.\n"
"'!' - вставка поля. Можно вставить поле, если при этом не будут созданы\n"
"      промежутки с нулевым значением nil между полями. Например, можно "
"добавить поле между\n"
"      существующими полями или последнее поле в кортеже.\n"
"'#' - удаление поля. Если поле отсутствует, операция пропускается.\n"
"      Нельзя с помощью операции обновления update изменить компонент "
"первичного\n"
"      ключа (это проверяется перед выполнением операции upsert)."

#: ../doc/dev_guide/box_protocol.rst:428
msgid ""
"CALL: CODE - 0x0a Similar to CALL_16, but -- like EVAL, CALL returns a "
"list of values, unconverted"
msgstr ""
"CALL: CODE - 0x0a Аналог CALL_16, но как и операция EVAL, CALL возвращает"
" список неконвертированных значений"

#: ../doc/dev_guide/box_protocol.rst:431
msgid ""
"CALL BODY:\n"
"\n"
"+=======================+==================+\n"
"|                       |                  |\n"
"|   0x22: FUNCTION_NAME |   0x21: TUPLE    |\n"
"| MP_INT: MP_STRING     | MP_INT: MP_ARRAY |\n"
"|                       |                  |\n"
"+=======================+==================+\n"
"                    MP_MAP"
msgstr ""
"ТЕЛО СООБЩЕНИЯ CALL:\n"
"\n"
"+=======================+==================+\n"
"|                       |                  |\n"
"|   0x22: FUNCTION_NAME |   0x21: TUPLE    |\n"
"| MP_INT: MP_STRING     | MP_INT: MP_ARRAY |\n"
"|                       |                  |\n"
"+=======================+==================+\n"
"                    MP_MAP"

#: ../doc/dev_guide/box_protocol.rst:446
msgid "Response packet structure"
msgstr "Структура пакета ответа"

#: ../doc/dev_guide/box_protocol.rst:448
msgid "We will show whole packets here:"
msgstr "Здесь мы продемонстрируем пакеты полностью:"

#: ../doc/dev_guide/box_protocol.rst:450
msgid ""
"OK:    LEN + HEADER + BODY\n"
"\n"
"0      5                                          OPTIONAL\n"
"+------++================+================++===================+\n"
"|      ||                |                ||                   |\n"
"| BODY ||   0x00: 0x00   |   0x01: SYNC   ||   0x30: DATA      |\n"
"|HEADER|| MP_INT: MP_INT | MP_INT: MP_INT || MP_INT: MP_OBJECT |\n"
"| SIZE ||                |                ||                   |\n"
"+------++================+================++===================+\n"
" MP_INT                MP_MAP                      MP_MAP"
msgstr ""
"OK:    LEN + HEADER + BODY\n"
"\n"
"0      5                                          OPTIONAL\n"
"+------++================+================++===================+\n"
"|      ||                |                ||                   |\n"
"| BODY ||   0x00: 0x00   |   0x01: SYNC   ||   0x30: DATA      |\n"
"|HEADER|| MP_INT: MP_INT | MP_INT: MP_INT || MP_INT: MP_OBJECT |\n"
"| SIZE ||                |                ||                   |\n"
"+------++================+================++===================+\n"
" MP_INT                MP_MAP                      MP_MAP"

#: ../doc/dev_guide/box_protocol.rst:464
msgid ""
"Set of tuples in the response :code:`<data>` expects a msgpack array of "
"tuples as value EVAL command returns arbitrary `MP_ARRAY` with arbitrary "
"MsgPack values."
msgstr ""
"Предполагается, что набор кортежей в ответе :code:`<data>` будет "
"представлять собой msgpack-массив кортежей, поскольку команда EVAL "
"возвращается произвольный MsgPack-массив `MP_ARRAY` с произвольными "
"MsgPack-значениями."

#: ../doc/dev_guide/box_protocol.rst:467
msgid ""
"ERROR: LEN + HEADER + BODY\n"
"\n"
"0      5\n"
"+------++================+================++===================+\n"
"|      ||                |                ||                   |\n"
"| BODY ||   0x00: 0x8XXX |   0x01: SYNC   ||   0x31: ERROR     |\n"
"|HEADER|| MP_INT: MP_INT | MP_INT: MP_INT || MP_INT: MP_STRING |\n"
"| SIZE ||                |                ||                   |\n"
"+------++================+================++===================+\n"
" MP_INT                MP_MAP                      MP_MAP\n"
"\n"
"Where 0xXXX is ERRCODE."
msgstr ""
"ОШИБКА: LEN + HEADER + BODY\n"
"\n"
"0      5\n"
"+------++================+================++===================+\n"
"|      ||                |                ||                   |\n"
"| BODY ||   0x00: 0x8XXX |   0x01: SYNC   ||   0x31: ERROR     |\n"
"|HEADER|| MP_INT: MP_INT | MP_INT: MP_INT || MP_INT: MP_STRING |\n"
"| SIZE ||                |                ||                   |\n"
"+------++================+================++===================+\n"
" MP_INT                MP_MAP                      MP_MAP\n"
"\n"
"Где 0xXXX -- это код ошибки ERRCODE."

#: ../doc/dev_guide/box_protocol.rst:482
msgid ""
"An error message is present in the response only if there is an error; "
":code:`<error>` expects as value a msgpack string."
msgstr ""
"Сообщение об ошибке будет включено в ответ только в случае ошибки; "
"предполагается, что значение :code:`<error>` будет msgpack-строкой."

#: ../doc/dev_guide/box_protocol.rst:485
msgid ""
"Convenience macros which define hexadecimal constants for return codes "
"can be found in `src/box/errcode.h "
"<https://github.com/tarantool/tarantool/blob/1.10/src/box/errcode.h>`_"
msgstr ""
"Удобные макросы для определения шестнадцатеричных постоянных для "
"возвращаемых кодов можно найти по ссылке `src/box/errcode.h "
"<https://github.com/tarantool/tarantool/blob/1.10/src/box/errcode.h>`_"

#: ../doc/dev_guide/box_protocol.rst:491
msgid "Replication packet structure"
msgstr "Структура пакета при репликации"

#: ../doc/dev_guide/box_protocol.rst:493
msgid ""
"-- replication keys\n"
"<server_id>     ::= 0x02\n"
"<lsn>           ::= 0x03\n"
"<timestamp>     ::= 0x04\n"
"<server_uuid>   ::= 0x24\n"
"<cluster_uuid>  ::= 0x25\n"
"<vclock>        ::= 0x26"
msgstr ""
"-- ключи для репликации\n"
" <server_id>     ::= 0x02\n"
" <lsn>           ::= 0x03\n"
" <timestamp>     ::= 0x04\n"
" <server_uuid>   ::= 0x24\n"
" <cluster_uuid>  ::= 0x25\n"
" <vclock>        ::= 0x26"

#: ../doc/dev_guide/box_protocol.rst:503
msgid ""
"-- replication codes\n"
"<join>      ::= 0x41\n"
"<subscribe> ::= 0x42"
msgstr ""
"-- коды для репликации\n"
"<join>      ::= 0x41\n"
"<subscribe> ::= 0x42"

#: ../doc/dev_guide/box_protocol.rst:510
msgid ""
"JOIN:\n"
"\n"
"In the beginning you must send initial JOIN\n"
"               HEADER                      BODY\n"
"+================+================++===================+\n"
"|                |                ||   SERVER_UUID     |\n"
"|   0x00: 0x41   |   0x01: SYNC   ||   0x24: UUID      |\n"
"| MP_INT: MP_INT | MP_INT: MP_INT || MP_INT: MP_STRING |\n"
"|                |                ||                   |\n"
"+================+================++===================+\n"
"               MP_MAP                     MP_MAP\n"
"\n"
"Then instance, which we connect to, will send last SNAP file by, simply,\n"
"creating a number of INSERTs (with additional LSN and ServerID)\n"
"(don't reply). Then it'll send a vclock's MP_MAP and close a socket.\n"
"\n"
"+================+================++============================+\n"
"|                |                ||        +~~~~~~~~~~~~~~~~~+ |\n"
"|                |                ||        |                 | |\n"
"|   0x00: 0x00   |   0x01: SYNC   ||   0x26:| SRV_ID: SRV_LSN | |\n"
"| MP_INT: MP_INT | MP_INT: MP_INT || MP_INT:| MP_INT: MP_INT  | |\n"
"|                |                ||        +~~~~~~~~~~~~~~~~~+ |\n"
"|                |                ||               MP_MAP       |\n"
"+================+================++============================+\n"
"               MP_MAP                      MP_MAP\n"
"\n"
"SUBSCRIBE:\n"
"\n"
"Then you must send SUBSCRIBE:\n"
"\n"
"                              HEADER\n"
"+===================+===================+\n"
"|                   |                   |\n"
"|     0x00: 0x42    |    0x01: SYNC     |\n"
"|   MP_INT: MP_INT  |  MP_INT: MP_INT   |\n"
"|                   |                   |\n"
"+===================+===================+\n"
"|    SERVER_UUID    |    CLUSTER_UUID   |\n"
"|   0x24: UUID      |   0x25: UUID      |\n"
"| MP_INT: MP_STRING | MP_INT: MP_STRING |\n"
"|                   |                   |\n"
"+===================+===================+\n"
"                 MP_MAP\n"
"\n"
"      BODY\n"
"+================+\n"
"|                |\n"
"|   0x26: VCLOCK |\n"
"| MP_INT: MP_INT |\n"
"|                |\n"
"+================+\n"
"      MP_MAP\n"
"\n"
"Then you must process every query that'll came through other masters.\n"
"Every request between masters will have Additional LSN and SERVER_ID."
msgstr ""
"JOIN:\n"
"\n"
"Сначала необходимо отправить изначальный запрос JOIN\n"
"               HEADER                      BODY\n"
"+================+================++===================+\n"
"|                |                ||   SERVER_UUID     |\n"
"|   0x00: 0x41   |   0x01: SYNC   ||   0x24: UUID      |\n"
"| MP_INT: MP_INT | MP_INT: MP_INT || MP_INT: MP_STRING |\n"
"|                |                ||                   |\n"
"+================+================++===================+\n"
"               MP_MAP                     MP_MAP\n"
"\n"
"Затем экземпляр, к которому мы подключаемся, отправит последний файл "
"снимка SNAP,\n"
"просто создав количество запросов вставки INSERT (с дополнительным LSN и "
"ServerID)\n"
"(не отвечайте). Затем он отправит MP_MAP из vclock и закроет сокет.\n"
"\n"
"+================+================++============================+\n"
"|                |                ||        +~~~~~~~~~~~~~~~~~+ |\n"
"|                |                ||        |                 | |\n"
"|   0x00: 0x00   |   0x01: SYNC   ||   0x26:| SRV_ID: SRV_LSN | |\n"
"| MP_INT: MP_INT | MP_INT: MP_INT || MP_INT:| MP_INT: MP_INT  | |\n"
"|                |                ||        +~~~~~~~~~~~~~~~~~+ |\n"
"|                |                ||               MP_MAP       |\n"
"+================+================++============================+\n"
"               MP_MAP                      MP_MAP\n"
"\n"
"SUBSCRIBE:\n"
"\n"
"Далее необходимо отправить запрос SUBSCRIBE:\n"
"\n"
"                              HEADER\n"
"+===================+===================+\n"
"|                   |                   |\n"
"|     0x00: 0x42    |    0x01: SYNC     |\n"
"|   MP_INT: MP_INT  |  MP_INT: MP_INT   |\n"
"|                   |                   |\n"
"+===================+===================+\n"
"|    SERVER_UUID    |    CLUSTER_UUID   |\n"
"|   0x24: UUID      |   0x25: UUID      |\n"
"| MP_INT: MP_STRING | MP_INT: MP_STRING |\n"
"|                   |                   |\n"
"+===================+===================+\n"
"                 MP_MAP\n"
"\n"
"      BODY\n"
"+================+\n"
"|                |\n"
"|   0x26: VCLOCK |\n"
"| MP_INT: MP_INT |\n"
"|                |\n"
"+================+\n"
"      MP_MAP\n"
"\n"
" Затем следует обработать каждый запрос, который пришел от других "
"мастеров.\n"
" Каждый запрос между мастерами получит дополнительный LSN и SERVER_ID."

#: ../doc/dev_guide/box_protocol.rst:570
msgid "XLOG / SNAP"
msgstr "XLOG / SNAP"

#: ../doc/dev_guide/box_protocol.rst:572
msgid "XLOG and SNAP files have nearly the same format. The header looks like:"
msgstr ""
"Файлы форматов XLOG и SNAP выглядят практически одинаково. Заголовок "
"выглядит следующим образом:"

#: ../doc/dev_guide/box_protocol.rst:574
msgid ""
"<type>\\n                  SNAP\\n or XLOG\\n\n"
"<version>\\n               currently 0.13\\n\n"
"Server: <server_uuid>\\n   where UUID is a 36-byte string\n"
"VClock: <vclock_map>\\n    e.g. {1: 0}\\n\n"
"\\n"
msgstr ""
"<type>\\n                  SNAP\\n или XLOG\\n\n"
"<version>\\n               в данный момент 0.13\\n\n"
"Server: <server_uuid>\\n   где UUID -- это 36-байтная строка\n"
"VClock: <vclock_map>\\n    например, {1: 0}\\n\n"
"\\n"

#: ../doc/dev_guide/box_protocol.rst:582
msgid ""
"After the file header come the data tuples. Tuples begin with a row "
"marker ``0xd5ba0bab`` and the last tuple may be followed by an EOF marker"
" ``0xd510aded``. Thus, between the file header and the EOF marker, there "
"may be data tuples that have this form:"
msgstr ""
"После файла заголовка идут кортежи с данными. Кортежи начинаются с "
"маркера строки ``0xd5ba0bab``, а после последнего кортежа может стоять "
"маркер конца файла ``0xd510aded``. Таким образом, между заголовком файла "
"и маркером конца файла могут быть кортежи с данными в следующем виде:"

#: ../doc/dev_guide/box_protocol.rst:589
msgid ""
"0            3 4                                         17\n"
"+-------------+========+============+===========+=========+\n"
"|             |        |            |           |         |\n"
"| 0xd5ba0bab  | LENGTH | CRC32 PREV | CRC32 CUR | PADDING |\n"
"|             |        |            |           |         |\n"
"+-------------+========+============+===========+=========+\n"
"  MP_FIXEXT2    MP_INT     MP_INT       MP_INT      ---\n"
"\n"
"+============+ +===================================+\n"
"|            | |                                   |\n"
"|   HEADER   | |                BODY               |\n"
"|            | |                                   |\n"
"+============+ +===================================+\n"
"    MP_MAP                     MP_MAP"
msgstr ""
"0            3 4                                         17\n"
"+-------------+========+============+===========+=========+\n"
"|             |        |            |           |         |\n"
"| 0xd5ba0bab  | LENGTH | CRC32 PREV | CRC32 CUR | PADDING |\n"
"|             |        |            |           |         |\n"
"+-------------+========+============+===========+=========+\n"
"  MP_FIXEXT2    MP_INT     MP_INT       MP_INT      ---\n"
"\n"
"+============+ +===================================+\n"
"|            | |                                   |\n"
"|   HEADER   | |                BODY               |\n"
"|            | |                                   |\n"
"+============+ +===================================+\n"
"    MP_MAP                     MP_MAP"

#: ../doc/dev_guide/box_protocol.rst:606
msgid "See the example in the following section."
msgstr "См. пример в предыдущем разделе."

#: ../doc/dev_guide/internals.rst:9
msgid "Data persistence and the WAL file format"
msgstr "Персистентность данных и формат WAL-файла"

#: ../doc/dev_guide/internals.rst:11
msgid ""
"To maintain data persistence, Tarantool writes each data change request "
"(insert, update, delete, replace, upsert) into a write-ahead log (WAL) "
"file in the :ref:`wal_dir <cfg_basic-wal_dir>` directory. A new WAL file "
"is created for every :ref:`rows_per_wal <cfg_binary_logging_snapshots-"
"rows_per_wal>` records, or for every :ref:`wal_max_size "
"<cfg_binary_logging_snapshots-wal_max_size>` bytes. Each data change "
"request gets assigned a continuously growing 64-bit log sequence number. "
"The name of the WAL file is based on the log sequence number of the first"
" record in the file, plus an extension ``.xlog``."
msgstr ""
"Чтобы поддерживать персистентность данных, Tarantool записывает каждый "
"запрос изменения данных (insert, update, delete, replace, upsert) в файл "
"журнала упреждающей записи (WAL-файл) в директорию :ref:`wal_dir "
"<cfg_basic-wal_dir>`. Новый WAL-файл создается для количества записей, "
"определенного в параметре :ref:`rows_per_wal "
"<cfg_binary_logging_snapshots-rows_per_wal>`, или для количества байтов, "
"указанного в :ref:`wal_max_size <cfg_binary_logging_snapshots-"
"wal_max_size>` . Каждому запросу на изменение данных присваивается "
"постоянно возрастающее 64-битное число, представляющее собой "
"регистрационный номер в журнале (LSN). Название WAL-файла состоит из LSN "
"первой записи в файле плюс расширение ``.xlog``."

#: ../doc/dev_guide/internals.rst:20
msgid ""
"Apart from a log sequence number and the data change request (formatted "
"as in :ref:`Tarantool's binary protocol <box_protocol-iproto_protocol>`),"
" each WAL record contains a header, some metadata, and then the data "
"formatted according to `msgpack "
"<https://en.wikipedia.org/wiki/MessagePack>`_ rules. For example, this is"
" what the WAL file looks like after the first INSERT request "
"(\"s:insert({1})\") for the sandbox database created in our "
":ref:`\"Getting started\" exercises <getting_started>`. On the left are "
"the hexadecimal bytes that you would see with:"
msgstr ""
"Помимо номера записи в журнале (LSN) и запроса на изменение данных (в "
"формате :ref:`бинарного протокола Tarantool'а <box_protocol-"
"iproto_protocol>`), каждая запись в WAL-файле содержит заголовок, "
"некоторые метаданные, а также данные, форматированные по правилам "
"`msgpack <https://en.wikipedia.org/wiki/MessagePack>`_. Например, так "
"выглядит WAL-файл после первого запроса вставки INSERT "
"(\"s:insert({1})\") для базы данных из песочницы, созданной в упражнениях"
" в :ref:`\"Руководстве для начинающих\" <getting_started>`. Слева "
"представлены шестнадцатеричные байты, которые можно просмотреть с "
"помощью:"

#: ../doc/dev_guide/internals.rst:29
msgid "$ hexdump 00000000000000000000.xlog"
msgstr "$ hexdump 00000000000000000000.xlog"

#: ../doc/dev_guide/internals.rst:33
msgid "and on the right are comments."
msgstr "а справа -- комментарии."

#: ../doc/dev_guide/internals.rst:35
msgid ""
"Hex dump of WAL file       Comment\n"
"--------------------       -------\n"
"58 4c 4f 47 0a             \"XLOG\\n\"\n"
"30 2e 31 33 0a             \"0.13\\n\" = version\n"
"53 65 72 76 65 72 3a 20    \"Server: \"\n"
"38 62 66 32 32 33 65 30 2d [Server UUID]\\n\n"
"36 39 31 34 2d 34 62 35 35\n"
"2d 39 34 64 32 2d 64 32 62\n"
"36 64 30 39 62 30 31 39 36\n"
"0a\n"
"56 43 6c 6f 63 6b 3a 20    \"Vclock: \"\n"
"7b 7d                      \"{}\" = vclock value, initially blank\n"
"...                        (not shown = tuples for system spaces)\n"
"d5 ba 0b ab                Magic row marker always = 0xab0bbad5\n"
"19                         Length, not including length of header, = 25 "
"bytes\n"
"00                           Record header: previous crc32\n"
"ce 8c 3e d6 70               Record header: current crc32\n"
"a7 cc 73 7f 00 00 66 39      Record header: padding\n"
"84                         msgpack code meaning \"Map of 4 elements\" "
"follows\n"
"00 02                         element#1: tag=request type, "
"value=0x02=IPROTO_INSERT\n"
"02 01                         element#2: tag=server id, value=0x01\n"
"03 04                         element#3: tag=lsn, value=0x04\n"
"04 cb 41 d4 e2 2f 62 fd d5 d4 element#4: tag=timestamp, value=an 8-byte "
"\"Float64\"\n"
"82                         msgpack code meaning \"map of 2 elements\" "
"follows\n"
"10 cd 02 00                   element#1: tag=space id, value=512, big "
"byte first\n"
"21 91 01                      element#2: tag=tuple, value=1-element fixed"
" array={1}"
msgstr ""
"Шестнадцатеричный дамп WAL-файла       Комментарий\n"
"--------------------       -------\n"
"58 4c 4f 47 0a             \"XLOG\\n\"\n"
"30 2e 31 33 0a             \"0.13\\n\" = version\n"
"53 65 72 76 65 72 3a 20    \"Server: \"\n"
"38 62 66 32 32 33 65 30 2d [Server UUID]\\n\n"
"36 39 31 34 2d 34 62 35 35\n"
"2d 39 34 64 32 2d 64 32 62\n"
"36 64 30 39 62 30 31 39 36\n"
"0a\n"
"56 43 6c 6f 63 6b 3a 20    \"Vclock: \"\n"
"7b 7d                      \"{}\" = vclock value, initially blank\n"
"...                        (not shown = tuples for system spaces)\n"
"d5 ba 0b ab                Magic row marker always = 0xab0bbad5\n"
"19                         Length, not including length of header, = 25 "
"bytes\n"
"00                           Record header: previous crc32\n"
"ce 8c 3e d6 70               Record header: current crc32\n"
"a7 cc 73 7f 00 00 66 39      Record header: padding\n"
"84                         msgpack code meaning \"Map of 4 elements\" "
"follows\n"
"00 02                         element#1: tag=request type, "
"value=0x02=IPROTO_INSERT\n"
"02 01                         element#2: tag=server id, value=0x01\n"
"03 04                         element#3: tag=lsn, value=0x04\n"
"04 cb 41 d4 e2 2f 62 fd d5 d4 element#4: tag=timestamp, value=an 8-byte "
"\"Float64\"\n"
"82                         msgpack code meaning \"map of 2 elements\" "
"follows\n"
"10 cd 02 00                   element#1: tag=space id, value=512, big "
"byte first\n"
"21 91 01                      element#2: tag=tuple, value=1-element fixed"
" array={1}"

#: ../doc/dev_guide/internals.rst:64
msgid "A tool for reading .xlog files is Tarantool's :ref:`xlog module <xlog>`."
msgstr ""
"Для чтения файлов в формате .xlog в Tarantool'е предусмотрен :ref:`модуль"
" xlog <xlog>`."

#: ../doc/dev_guide/internals.rst:66
msgid ""
"Tarantool processes requests atomically: a change is either accepted and "
"recorded in the WAL, or discarded completely. Let's clarify how this "
"happens, using the REPLACE request as an example:"
msgstr ""
"Tarantool обрабатывает запросы атомарно: изменение либо принимается и "
"записывается в WAL-файл, или полностью исключается. Проясним, как этом "
"работает, используя в качестве примера REPLACE-запрос:"

#: ../doc/dev_guide/internals.rst:70
msgid ""
"The server instance attempts to locate the original tuple by primary key."
" If found, a reference to the tuple is retained for later use."
msgstr ""
"Экземпляр сервера пытается найти оригинальный кортеж по первичному ключу."
" Если кортеж найден, ссылка на него сохраняется для дальнейшего "
"использования."

#: ../doc/dev_guide/internals.rst:73
msgid ""
"The new tuple is validated. If for example it does not contain an indexed"
" field, or it has an indexed field whose type does not match the type "
"according to the index definition, the change is aborted."
msgstr ""
"Происходит проверка нового кортежа. Например, если в нем нет "
"проиндексированного поля, или же тип проиндексированного поля не "
"совпадает с типом в определении индекса, изменение прерывается."

#: ../doc/dev_guide/internals.rst:77
msgid "The new tuple replaces the old tuple in all existing indexes."
msgstr "Новый кортеж заменяет старый кортеж во всех существующих индексах."

#: ../doc/dev_guide/internals.rst:79
msgid ""
"A message is sent to the writer process running in the WAL thread, "
"requesting that the change be recorded in the WAL. The instance switches "
"to work on the next request until the write is acknowledged."
msgstr ""
"В процесс записи, запущенный в потоке журнала упреждающей записи, "
"отправляется сообщение о необходимости внесения записи в WAL-файл. "
"Экземпляр переключается на работу со следующим запросом, пока запись не "
"будет подтверждена."

#: ../doc/dev_guide/internals.rst:83
msgid ""
"On success, a confirmation is sent to the client. On failure, a rollback "
"procedure is begun. During the rollback procedure, the transaction "
"processor rolls back all changes to the database which occurred after the"
" first failed change, from latest to oldest, up to the first failed "
"change. All rolled back requests are aborted with :errcode:`ER_WAL_IO "
"<ER_WAL_IO>` error. No new change is applied while rollback is in "
"progress. When the rollback procedure is finished, the server restarts "
"the processing pipeline."
msgstr ""
"При успешном выполнении на клиент отправляется подтверждение. В случае "
"ошибки начинается процедура отката. Во время процедуры отката поток "
"обработки транзакций откатывается все изменения в базу данных, которые "
"произошли после первого невыполненного изменения, от последнего с "
"первому, вплоть до первого невыполненного изменения. Все запросы, которые"
" подверглись откату, прерываются с ошибкой :errcode:`ER_WAL_IO "
"<ER_WAL_IO>`. Новые изменения не применяются во время отката. По "
"окончании процедуры отката сервер повторно запускает конвейер обработки "
"операций."

#: ../doc/dev_guide/internals.rst:91
msgid ""
"One advantage of the described algorithm is that complete request "
"pipelining is achieved, even for requests on the same value of the "
"primary key. As a result, database performance doesn't degrade even if "
"all requests refer to the same key in the same space."
msgstr ""
"Одно из преимуществ описанного алгоритма заключается в том, что "
"достигается полная обработка запроса по конвейеру даже для запросов с "
"одинаковым значением первичного ключа. В результате производительность "
"базы данных не падает, даже если все запросы относятся к одному ключу в "
"одном спейсе."

#: ../doc/dev_guide/internals.rst:96
msgid ""
"The transaction processor thread communicates with the WAL writer thread "
"using asynchronous (yet reliable) messaging; the transaction processor "
"thread, not being blocked on WAL tasks, continues to handle requests "
"quickly even at high volumes of disk I/O. A response to a request is sent"
" as soon as it is ready, even if there were earlier incomplete requests "
"on the same connection. In particular, SELECT performance, even for "
"SELECTs running on a connection packed with UPDATEs and DELETEs, remains "
"unaffected by disk load."
msgstr ""
"Поток обработки транзакций взаимодействует с потоком записи в журнал "
"упреждающей записи с помощью асинхронного (однако надежного) обмена "
"сообщениями. Поток обработки транзакций, который не блокируется при "
"задачах записи в журнал, продолжает быстро обрабатывать запрос даже при "
"большом объеме дискового ввода-вывода. Ответ на запрос отправляется по "
"готовности, даже если ранее на том же соединении были незавершенные "
"запросы. В частности, на производительность выборки не влияет загрузка "
"диска, даже если SELECT-запросы передаются вместе с запросами UPDATE и "
"DELETE."

#: ../doc/dev_guide/internals.rst:104
msgid ""
"The WAL writer employs a number of durability modes, as defined in "
"configuration variable :ref:`wal_mode <index-wal_mode>`. It is possible "
"to turn the write-ahead log completely off, by setting :ref:`wal_mode "
"<cfg_binary_logging_snapshots-wal_mode>` to *none*. Even without the "
"write-ahead log it's still possible to take a persistent copy of the "
"entire data set with the :ref:`box.snapshot() <box-snapshot>` request."
msgstr ""
"При записи в WAL можно применять различные режимы долговечности, что "
"определяет конфигурационная переменная :ref:`wal_mode <index-wal_mode>`. "
"Можно полностью отключить журнал упреждающей записи, присвоив "
":ref:`wal_mode <cfg_binary_logging_snapshots-wal_mode>` значение *none*. "
"Даже без журнала упреждающей записи возможно сделать персистентную копию "
"всего набора данных с помощью запроса :ref:`box.snapshot() <box-"
"snapshot>`."

#: ../doc/dev_guide/internals.rst:111
msgid ""
"An .xlog file always contains changes based on the primary key. Even if "
"the client requested an update or delete using a secondary key, the "
"record in the .xlog file will contain the primary key."
msgstr ""
"Файл в формате .xlog всегда содержит изменения на основании первичного "
"ключа. Даже если клиент запрашивает обновление или удаление по вторичному"
" ключу, запись в файле в формате .xlog будет содержать первичный ключ."

#: ../doc/dev_guide/internals.rst:119
msgid "The snapshot file format"
msgstr "Формат файла снимка"

#: ../doc/dev_guide/internals.rst:121
msgid ""
"The format of a snapshot .snap file is nearly the same as the format of a"
" WAL .xlog file. However, the snapshot header differs: it contains the "
"instance's global unique identifier and the snapshot file's position in "
"history, relative to earlier snapshot files. Also, the content differs: "
"an .xlog file may contain records for any data-change requests (inserts, "
"updates, upserts, and deletes), a .snap file may only contain records of "
"inserts to memtx spaces."
msgstr ""
"Формат файла снимка .snap практически такой же, что и формат WAL-файла "
".xlog. Тем не менее, заголовок снимка отличается: он содержит глобально "
"уникальный идентификатор экземпляра и положения файла снимка в истории "
"относительно более ранних файлов снимка. Кроме того, отличается "
"содержание: .xlog-файл может содержать записи о любых запросах изменения "
"данных (вставка, обновление, обновление и вставка и удаление), а "
".snap-файл может содержать лишь записи о вставках в спейсы memtx'а."

#: ../doc/dev_guide/internals.rst:128
msgid ""
"Primarily, the .snap file's records are ordered by space id. Therefore "
"the records of system spaces -- such as ``_schema``, ``_space``, "
"``_index``, ``_func``, ``_priv`` and ``_cluster`` -- will be at the start"
" of the .snap file, before the records of any spaces that were created by"
" users."
msgstr ""
"В первую очередь записи в .snap-файле упорядочены по идентификатору "
"спейса. Таким образом, записи в системные спейсы -- такие как "
"``_schema``, ``_space``, ``_index``, ``_func``, ``_priv`` и ``_cluster`` "
"-- будут находиться в начале .snap-файла до записей в другие спейсы, "
"созданные пользователями."

#: ../doc/dev_guide/internals.rst:133
msgid ""
"Secondarily, the .snap file's records are ordered by primary key within "
"space id."
msgstr "Во вторую очередь записи в .snap-файле упорядочены по первичному ключу."

#: ../doc/dev_guide/internals.rst:139
msgid "The recovery process"
msgstr "Процесс восстановления"

#: ../doc/dev_guide/internals.rst:141
msgid ""
"The recovery process begins when box.cfg{} happens for the first time "
"after the Tarantool server instance starts."
msgstr ""
"Процесс восстановления начинается, когда box.cfg{} впервые используется "
"после запуска экземпляра Tarantool-сервера."

#: ../doc/dev_guide/internals.rst:144
msgid ""
"The recovery process must recover the databases as of the moment when the"
" instance was last shut down. For this it may use the latest snapshot "
"file and any WAL files that were written after the snapshot. One "
"complicating factor is that Tarantool has two engines -- the memtx data "
"must be reconstructed entirely from the snapshot and the WAL files, while"
" the vinyl data will be on disk but might require updating around the "
"time of a checkpoint. (When a snapshot happens, Tarantool tells the vinyl"
" engine to make a checkpoint, and the snapshot operation is rolled back "
"if anything goes wrong, so vinyl's checkpoint is at least as fresh as the"
" snapshot file.)"
msgstr ""
"Процесс восстановления должен восстановить базы данных на момент "
"последнего отключения экземпляра. Для этого можно использовать последний "
"файл снимка и любые WAL-файлы, которые были записаны после создания "
"снимка. Ситуацию осложняет фактор того, что в Tarantool'е используются "
"два движка -- данные memtx'а должны быть реконструированы полностью из "
"снимка и WAL-файлов, тогда как данные vinyl'а будут находиться на диске, "
"но может потребоваться их обновление на время создания контрольной точки."
" (При создании снимка Tarantool передает движку vinyl команду создания "
"контрольной точки, а операция создания снимка откатывается в случае "
"какой-либо ошибки, поэтому контрольная точка vinyl'а будет настолько же "
"актуальной, как и файл снимка.)"

#: ../doc/dev_guide/internals.rst:161
msgid "Step 1"
msgstr "Шаг 1"

#: ../doc/dev_guide/internals.rst:157
msgid ""
"Read the configuration parameters in the ``box.cfg{}`` request. "
"Parameters which affect recovery may include :ref:`work_dir <cfg_basic-"
"work_dir>`, :ref:`wal_dir <cfg_basic-wal_dir>`, :ref:`memtx_dir "
"<cfg_basic-memtx_dir>`, :ref:`vinyl_dir <cfg_basic-vinyl_dir>` and "
":ref:`force_recovery <cfg_binary_logging_snapshots-force_recovery>`."
msgstr ""
"Выполнить чтение конфигурационных параметров из запроса ``box.cfg{}``. "
"Параметры, которые могут повлиять на восстановление: :ref:`work_dir "
"<cfg_basic-work_dir>`, :ref:`wal_dir <cfg_basic-wal_dir>`, "
":ref:`memtx_dir <cfg_basic-memtx_dir>`, :ref:`vinyl_dir <cfg_basic-"
"vinyl_dir>` и :ref:`force_recovery <cfg_binary_logging_snapshots-"
"force_recovery>`."

#: ../doc/dev_guide/internals.rst:181
msgid "Step 2"
msgstr "Шаг 2"

#: ../doc/dev_guide/internals.rst:164
msgid ""
"Find the latest snapshot file. Use its data to reconstruct the in-memory "
"databases. Instruct the vinyl engine to recover to the latest checkpoint."
msgstr ""
"Найти последний файл снимка. Использовать данные для реконструкции in-"
"memory баз данных. Передать команду vinyl'у о восстановлении до последней"
" контрольной точки."

#: ../doc/dev_guide/internals.rst:167
msgid ""
"There are actually two variations of the reconstruction procedure for "
"memtx databases, depending on whether the recovery process is "
"\"default\"."
msgstr ""
"На самом деле, есть два варианта реконструкции баз данных memtx'а в "
"зависимости от того, выполняется ли стандартная процедура."

#: ../doc/dev_guide/internals.rst:170
msgid ""
"If the recovery process is default (``force_recovery`` is ``false``), "
"memtx can read data in the snapshot with all indexes disabled. First, all"
" tuples are read into memory. Then, primary keys are built in bulk, "
"taking advantage of the fact that the data is already sorted by primary "
"key within each space."
msgstr ""
"Если выполняется стандартная процедура (``force_recovery`` = ``false``), "
"memtx может выполнить чтение данных из снимка с отключенными индексами. "
"Сначала все кортежи считываются в память. Затем происходит массовая "
"загрузка первичных ключей с учетом того, что данные уже отсортированы по "
"первичному ключу в каждом спейсе."

#: ../doc/dev_guide/internals.rst:176
msgid ""
"If the recovery process is non-default (``force_recovery`` is ``true``), "
"Tarantool performs additional checking. Indexes are enabled at the start,"
" and tuples are added one by one. This means that any unique-key "
"constraint violations will be caught, and any duplicates will be skipped."
" Normally there will be no constraint violations or duplicates, so these "
"checks are only made if an error has occurred."
msgstr ""
"Если выполняется нестандартная процедура принудительного восстановления "
"(``force_recovery`` = ``true``), Tarantool проводит дополнительную "
"проверку. Сначала индексы активны, и кортежи добавляются по одному. Это "
"означает, что будут выявлены любые нарушения ограничений уникальности "
"ключей, и все повторяющиеся значения пропускаются. Как правило, не будет "
"нарушений ограничений или повторяющихся значений, поэтому такие проверки "
"проводятся только в случае ошибки."

#: ../doc/dev_guide/internals.rst:188
msgid "Step 3"
msgstr "Шаг 3"

#: ../doc/dev_guide/internals.rst:184
msgid ""
"Find the WAL file that was made at the time of, or after, the snapshot "
"file. Read its log entries until the log-entry LSN is greater than the "
"LSN of the snapshot, or greater than the LSN of the vinyl checkpoint. "
"This is the recovery process's \"start position\"; it matches the current"
" state of the engines."
msgstr ""
"Найти WAL-файл, который был создан во время создания файла снимка или "
"позже. Выполнить чтение записей журнала до тех пор, пока LSN записи в "
"журнале не будет больше LSN снимка или больше LSN контрольной точки в "
"vinyl'е. Это и будет начальной точкой для процесса восстановления, "
"которая соответствует текущему состоянию движков."

#: ../doc/dev_guide/internals.rst:192
msgid "Step 4"
msgstr "Шаг 4"

#: ../doc/dev_guide/internals.rst:191
msgid ""
"Redo the log entries, from the start position to the end of the WAL. The "
"engine skips a redo instruction if it is older than the engine's "
"checkpoint."
msgstr ""
"Повторить записи журнала с начальной точки до конца WAL. Движок "
"пропускает команду повторения, если данные старше контрольной точки "
"движка."

#: ../doc/dev_guide/internals.rst:196
msgid "Step 5"
msgstr "Шаг 5"

#: ../doc/dev_guide/internals.rst:195
msgid "For the memtx engine, re-create all secondary indexes."
msgstr "Повторно создать все вторичные индексы для движка memtx."

#: ../doc/dev_guide/lua_style_guide.rst:3
msgid "Lua Style Guide"
msgstr "Руководство по написанию кода на Lua"

#: ../doc/dev_guide/lua_style_guide.rst:5
msgid "Inspiration:"
msgstr "Для вдохновения:"

#: ../doc/dev_guide/lua_style_guide.rst:7
msgid "https://github.com/Olivine-Labs/lua-style-guide"
msgstr "https://github.com/Olivine-Labs/lua-style-guide"

#: ../doc/dev_guide/lua_style_guide.rst:8
msgid "http://dev.minetest.net/Lua_code_style_guidelines"
msgstr "http://dev.minetest.net/Lua_code_style_guidelines"

#: ../doc/dev_guide/lua_style_guide.rst:9
msgid "http://sputnik.freewisdom.org/en/Coding_Standard"
msgstr "http://sputnik.freewisdom.org/en/Coding_Standard"

#: ../doc/dev_guide/lua_style_guide.rst:11
msgid ""
"Programming style is an art. There is some arbitrariness to the rules, "
"but there are sound rationales for them. It is useful not only to provide"
" sound advice on style but to understand the underlying rationale and "
"human aspect of why the style recommendations are formed:"
msgstr ""
"Придерживаться стиля в программировании -- это искусство. Даже учитывая "
"некоторую произвольность правил, для них есть надежное обоснование. "
"Полезно не только давать значимые советы по стилю, но также понимать "
"основополагающие причины и человеческий аспект того, почему формируются "
"рекомендации по стилю:"

#: ../doc/dev_guide/lua_style_guide.rst:16
msgid "http://mindprod.com/jgloss/unmain.html"
msgstr "http://mindprod.com/jgloss/unmain.html"

#: ../doc/dev_guide/lua_style_guide.rst:17
msgid "http://www.oreilly.com/catalog/perlbp/"
msgstr "http://www.oreilly.com/catalog/perlbp/"

#: ../doc/dev_guide/lua_style_guide.rst:18
msgid "http://books.google.com/books?id=QnghAQAAIAAJ"
msgstr "http://books.google.com/books?id=QnghAQAAIAAJ"

#: ../doc/dev_guide/lua_style_guide.rst:20
msgid "Zen of Python is good; understand it and use wisely:"
msgstr ""
"Дзен языка программирования Python подходит и здесь; используйте его с "
"умом:"

#: ../doc/dev_guide/lua_style_guide.rst
msgid "Beautiful is better than ugly."
msgstr "Красивое лучше, чем уродливое."

#: ../doc/dev_guide/lua_style_guide.rst
msgid "Explicit is better than implicit."
msgstr "Явное лучше, чем неявное."

#: ../doc/dev_guide/lua_style_guide.rst
msgid "Simple is better than complex."
msgstr "Простое лучше, чем сложное."

#: ../doc/dev_guide/lua_style_guide.rst
msgid "Complex is better than complicated."
msgstr "Сложное лучше, чем запутанное."

#: ../doc/dev_guide/lua_style_guide.rst
msgid "Flat is better than nested."
msgstr "Плоское лучше, чем вложенное."

#: ../doc/dev_guide/lua_style_guide.rst
msgid "Sparse is better than dense."
msgstr "Разреженное лучше, чем плотное."

#: ../doc/dev_guide/lua_style_guide.rst
msgid "Readability counts."
msgstr "Читаемость имеет значение."

#: ../doc/dev_guide/lua_style_guide.rst
msgid "Special cases aren't special enough to break the rules."
msgstr "Особые случаи не настолько особые, чтобы нарушать правила."

#: ../doc/dev_guide/lua_style_guide.rst
msgid "Although practicality beats purity."
msgstr "При этом практичность важнее безупречности."

#: ../doc/dev_guide/lua_style_guide.rst
msgid "Errors should never pass silently."
msgstr "Ошибки никогда не должны замалчиваться."

#: ../doc/dev_guide/lua_style_guide.rst
msgid "Unless explicitly silenced."
msgstr "Если не замалчиваются явно."

#: ../doc/dev_guide/lua_style_guide.rst
msgid "In the face of ambiguity, refuse the temptation to guess."
msgstr "Встретив двусмысленность, отбрось искушение угадать."

#: ../doc/dev_guide/lua_style_guide.rst
msgid "There should be one -- and preferably only one -- obvious way to do it."
msgstr ""
"Должен существовать один -- и, желательно, только один -- очевидный "
"способ сделать это."

#: ../doc/dev_guide/lua_style_guide.rst
msgid "Although that way may not be obvious at first unless you're Dutch."
msgstr "Хотя он поначалу может быть и не очевиден."

#: ../doc/dev_guide/lua_style_guide.rst
msgid "Now is better than never."
msgstr "Сейчас лучше, чем никогда."

#: ../doc/dev_guide/lua_style_guide.rst
msgid "Although never is often better than *right* now."
msgstr "Хотя никогда зачастую лучше, чем прямо сейчас."

#: ../doc/dev_guide/lua_style_guide.rst
msgid "If the implementation is hard to explain, it's a bad idea."
msgstr "Если реализацию сложно объяснить -- идея плоха."

#: ../doc/dev_guide/lua_style_guide.rst
msgid "If the implementation is easy to explain, it may be a good idea."
msgstr "Если реализацию легко объяснить -- идея, возможно, хороша."

#: ../doc/dev_guide/lua_style_guide.rst
msgid "Namespaces are one honking great idea -- let's do more of those!"
msgstr "Пространства имен -- отличная штука! Сделаем побольше!"

#: ../doc/dev_guide/lua_style_guide.rst
msgid "https://www.python.org/dev/peps/pep-0020/"
msgstr "https://www.python.org/dev/peps/pep-0020/"

#: ../doc/dev_guide/lua_style_guide.rst:46
msgid "Indentation and Formatting"
msgstr "Отступы и форматирование"

#: ../doc/dev_guide/lua_style_guide.rst:48
msgid ""
"4 spaces instead tabs. PIL suggests using of two spaces, but programmer "
"looks at code 4 up to 8 hours a day, so it's simplier to distinguish "
"indentation with 4 spaces. Why spaces? Similar representation everywhere."
msgstr ""
"4 пробела, а не табуляция. Библиотека PIL предлагает использовать два "
"пробела, но разработчик читает код от 4 до 8 часов в день, а различать "
"отступы с 4 пробелами легче. Почему именно пробелы? Соблюдение "
"однородности."

#: ../doc/dev_guide/lua_style_guide.rst:52
msgid "You can use vim modelines:"
msgstr "Можно использовать строки режима (modelines) vim:"

#: ../doc/dev_guide/lua_style_guide.rst:54
msgid "-- vim:ts=4 ss=4 sw=4 expandtab"
msgstr "-- vim:ts=4 ss=4 sw=4 expandtab"

#: ../doc/dev_guide/lua_style_guide.rst:58
msgid ""
"A file should ends w/ one newline symbol, but shouldn't ends w/ blank "
"line (two newline symbols)."
msgstr ""
"Файл должен заканчиваться на один символ переноса строки, но не должен "
"заканчиваться на пустой строке (два символа переноса строки)."

#: ../doc/dev_guide/lua_style_guide.rst:61
msgid "Every do/while/for/if/function should indent 4 spaces."
msgstr "Отступы всех do/while/for/if/function должны составлять 4 пробела."

#: ../doc/dev_guide/lua_style_guide.rst:63
msgid ""
"related ``or``/``and`` in ``if`` must be enclosed in the round brackets "
"(). Example:"
msgstr ""
"``or``/``and`` в ``if`` должны быть обрамлены круглыми скобками (). "
"Пример:"

#: ../doc/dev_guide/lua_style_guide.rst:65
msgid ""
"if (a == true and b == false) or (a == false and b == true) then\n"
"    <...>\n"
"end -- good\n"
"\n"
"if a == true and b == false or a == false and b == true then\n"
"    <...>\n"
"end -- bad\n"
"\n"
"if a ^ b == true then\n"
"end -- good, but not explicit"
msgstr ""
"if (a == true and b == false) or (a == false and b == true) then\n"
"    <...>\n"
"end -- хорошо\n"
"\n"
"if a == true and b == false or a == false and b == true then\n"
"    <...>\n"
"end -- плохо\n"
"\n"
"if a ^ b == true then\n"
"end -- хорошо, но не явно"

#: ../doc/dev_guide/lua_style_guide.rst:78
msgid "Type conversion"
msgstr "Преобразование типов"

#: ../doc/dev_guide/lua_style_guide.rst:80
msgid ""
"Do not use concatenation to convert to string or addition to convert to "
"number (use ``tostring``/``tonumber`` instead):"
msgstr ""
"Не используйте конкатенацию для конвертации в строку или в число (вместо "
"этого воспользуйтесь ``tostring``/``tonumber``):"

#: ../doc/dev_guide/lua_style_guide.rst:83
msgid ""
"local a = 123\n"
"a = a .. ''\n"
"-- bad\n"
"\n"
"local a = 123\n"
"a = tostring(a)\n"
"-- good\n"
"\n"
"local a = '123'\n"
"a = a + 5 -- 128\n"
"-- bad\n"
"\n"
"local a = '123'\n"
"a = tonumber(a) + 5 -- 128\n"
"-- good"
msgstr ""
"local a = 123\n"
"a = a .. ''\n"
"-- плохо\n"
"\n"
"local a = 123\n"
"a = tostring(a)\n"
"-- хорошо\n"
"\n"
"local a = '123'\n"
"a = a + 5 -- 128\n"
"-- плохо\n"
"\n"
"local a = '123'\n"
"a = tonumber(a) + 5 -- 128\n"
"-- хорошо"

#: ../doc/dev_guide/lua_style_guide.rst:101
msgid "Try to avoid multiple nested ``if``'s with common body:"
msgstr "Постарайтесь избегать несколько вложенных ``if`` с общим телом оператора:"

#: ../doc/dev_guide/lua_style_guide.rst:103
msgid ""
"if (a == true and b == false) or (a == false and b == true) then\n"
"    do_something()\n"
"end\n"
"-- good\n"
"\n"
"if a == true then\n"
"    if b == false then\n"
"        do_something()\n"
"    end\n"
"if b == true then\n"
"    if a == false then\n"
"        do_something()\n"
"    end\n"
"end\n"
"-- bad"
msgstr ""
"if (a == true and b == false) or (a == false and b == true) then\n"
"    do_something()\n"
"end\n"
"-- хорошо\n"
"\n"
"if a == true then\n"
"    if b == false then\n"
"        do_something()\n"
"    end\n"
"if b == true then\n"
"    if a == false then\n"
"        do_something()\n"
"    end\n"
"end\n"
"-- плохо"

#: ../doc/dev_guide/lua_style_guide.rst:121
msgid ""
"Avoid multiple concatenations in one statement, use ``string.format`` "
"instead:"
msgstr ""
"Избегайте множества конкатенаций в одном операторе, лучше использовать "
"``string.format``:"

#: ../doc/dev_guide/lua_style_guide.rst:123
#, python-format
msgid ""
"function say_greeting(period, name)\n"
"    local a = \"good  \" .. period .. \", \" .. name\n"
"end\n"
"-- bad\n"
"\n"
"function say_greeting(period, name)\n"
"    local a = string.format(\"good %s, %s\", period, name)\n"
"end\n"
"-- good\n"
"\n"
"local say_greeting_fmt = \"good %s, %s\"\n"
"function say_greeting(period, name)\n"
"    local a = say_greeting_fmt:format(period, name)\n"
"end\n"
"-- best"
msgstr ""
"function say_greeting(period, name)\n"
"     local a = \"good  \" .. period .. \", \" .. name\n"
"end\n"
"-- плохо\n"
"\n"
"function say_greeting(period, name)\n"
"    local a = string.format(\"good %s, %s\", period, name)\n"
"end\n"
"-- хорошо\n"
"\n"
"local say_greeting_fmt = \"good %s, %s\"\n"
"function say_greeting(period, name)\n"
"    local a = say_greeting_fmt:format(period, name)\n"
"end\n"
"-- лучше всего"

#: ../doc/dev_guide/lua_style_guide.rst:141
msgid "Use ``and``/``or`` for default variable values"
msgstr ""
"Используйте ``and``/``or`` для указания значений переменных, используемых"
" по умолчанию,"

#: ../doc/dev_guide/lua_style_guide.rst:143
msgid ""
"function(input)\n"
"    input = input or 'default_value'\n"
"end -- good\n"
"\n"
"function(input)\n"
"    if input == nil then\n"
"        input = 'default_value'\n"
"    end\n"
"end -- ok, but excessive"
msgstr ""
"function(input)\n"
"    input = input or 'default_value'\n"
"end -- хорошо\n"
"\n"
"function(input)\n"
"    if input == nil then\n"
"        input = 'default_value'\n"
"    end\n"
"end -- нормально, но избыточно"

#: ../doc/dev_guide/lua_style_guide.rst:155
msgid "``if``'s and return statements:"
msgstr "операторов ``if`` и возврата:"

#: ../doc/dev_guide/lua_style_guide.rst:157
msgid ""
"if a == true then\n"
"    return do_something()\n"
"end\n"
"do_other_thing() -- good\n"
"\n"
"if a == true then\n"
"    return do_something()\n"
"else\n"
"    do_other_thing()\n"
"end -- bad"
msgstr ""
"if a == true then\n"
"    return do_something()\n"
"end\n"
"do_other_thing() -- хорошо\n"
"\n"
"if a == true then\n"
"    return do_something()\n"
"else\n"
"    do_other_thing()\n"
"end -- плохо"

#: ../doc/dev_guide/lua_style_guide.rst:170
msgid "Using spaces:"
msgstr "Использование пробелов:"

#: ../doc/dev_guide/lua_style_guide.rst:172
msgid ""
"one shouldn't use spaces between function name and opening round bracket,"
" but arguments must be splitted with one whitespace charachter"
msgstr ""
"не следует вставлять пробелы между именем функции и открывающей круглой "
"скобкой, но аргумент необходимо разделять одним символом пробела"

#: ../doc/dev_guide/lua_style_guide.rst:175
msgid ""
"function name (arg1,arg2,...)\n"
"end -- bad\n"
"\n"
"function name(arg1, arg2, ...)\n"
"end -- good"
msgstr ""
"function name (arg1,arg2,...)\n"
"end -- плохо\n"
"\n"
"function name(arg1, arg2, ...)\n"
"end -- хорошо"

#: ../doc/dev_guide/lua_style_guide.rst:183
msgid "use space after comment marker"
msgstr "добавляйте пробел после маркера комментария"

#: ../doc/dev_guide/lua_style_guide.rst:185
msgid ""
"while true do -- inline comment\n"
"-- comment\n"
"do_something()\n"
"end\n"
"--[[\n"
"  multiline\n"
"  comment\n"
"]]--"
msgstr ""
"while true do -- встроенный комментарий\n"
"-- комментарий\n"
"do_something()\n"
"end\n"
"--[[\n"
"  многострочный\n"
"  комментарий\n"
"]]--"

#: ../doc/dev_guide/lua_style_guide.rst:196
msgid "surrounding operators"
msgstr "примыкающие конструкции"

#: ../doc/dev_guide/lua_style_guide.rst:198
msgid ""
"local thing=1\n"
"thing = thing-1\n"
"thing = thing*1\n"
"thing = 'string'..'s'\n"
"-- bad\n"
"\n"
"local thing = 1\n"
"thing = thing - 1\n"
"thing = thing * 1\n"
"thing = 'string' .. 's'\n"
"-- good"
msgstr ""
"local thing=1\n"
"thing = thing-1\n"
"thing = thing*1\n"
"thing = 'string'..'s'\n"
"-- плохо\n"
"\n"
"local thing = 1\n"
"thing = thing - 1\n"
"thing = thing * 1\n"
"thing = 'string' .. 's'\n"
"-- хорошо"

#: ../doc/dev_guide/lua_style_guide.rst:212
msgid "use space after commas in tables"
msgstr "добавляйте пробел после запятых в таблицах"

#: ../doc/dev_guide/lua_style_guide.rst:214
msgid ""
"local thing = {1,2,3}\n"
"thing = {1 , 2 , 3}\n"
"thing = {1 ,2 ,3}\n"
"-- bad\n"
"\n"
"local thing = {1, 2, 3}\n"
"-- good"
msgstr ""
"local thing = {1,2,3}\n"
"thing = {1 , 2 , 3}\n"
"thing = {1 ,2 ,3}\n"
"-- плохо\n"
"\n"
"local thing = {1, 2, 3}\n"
"-- хорошо"

#: ../doc/dev_guide/lua_style_guide.rst:224
msgid "use space in map definitions around equality sign and commas"
msgstr ""
"используйте пробелы в определениях ассоциативного массива по сторонам от "
"знаков равенства и запятых"

#: ../doc/dev_guide/lua_style_guide.rst:226
msgid ""
"return {1,2,3,4} -- bad\n"
"return {\n"
"    key1 = val1,key2=val2\n"
"} -- bad\n"
"\n"
"return {\n"
"    1, 2, 3, 4\n"
"    key1 = val1, key2 = val2,\n"
"    key3 = vallll\n"
"} -- good"
msgstr ""
"return {1,2,3,4} -- плохо\n"
"return {\n"
"    key1 = val1,key2=val2\n"
"} -- плохо\n"
"\n"
"return {\n"
"    1, 2, 3, 4\n"
"    key1 = val1, key2 = val2,\n"
"    key3 = vallll\n"
"} -- хорошо"

#: ../doc/dev_guide/lua_style_guide.rst:239
msgid "also, you may use alignment:"
msgstr "также можно применить выравнивание:"

#: ../doc/dev_guide/lua_style_guide.rst:241
msgid ""
"return {\n"
"    long_key  = 'vaaaaalue',\n"
"    key       = 'val',\n"
"    something = 'even better'\n"
"}"
msgstr ""
"return {\n"
"    long_key  = 'vaaaaalue',\n"
"    key       = 'val',\n"
"    something = 'even better'\n"
"}"

#: ../doc/dev_guide/lua_style_guide.rst:249
msgid ""
"extra blank lines may be used (sparingly) to separate groups of related "
"functions. Blank lines may be omitted between a bunch of related one-"
"liners (e.g. a set of dummy implementations)"
msgstr ""
"также можно добавлять пустые строки (не слишком часто) для выделения "
"групп связанных функций. Пустые строки не стоит добавлять между "
"несколькими связанными программами в одну строку (например, в формальной "
"реализации)"

#: ../doc/dev_guide/lua_style_guide.rst:253
msgid "use blank lines in function, sparingly, to indicate logical sections"
msgstr ""
"не слишком часто можно добавлять пустые строки в коде функций, чтобы "
"отделить друг от друга логические части"

#: ../doc/dev_guide/lua_style_guide.rst:255
msgid ""
"if thing then\n"
"    -- ...stuff...\n"
"end\n"
"function derp()\n"
"    -- ...stuff...\n"
"end\n"
"local wat = 7\n"
"-- bad\n"
"\n"
"if thing then\n"
"    -- ...stuff...\n"
"end\n"
"\n"
"function derp()\n"
"    -- ...stuff...\n"
"end\n"
"\n"
"local wat = 7\n"
"-- good"
msgstr ""
"if thing then\n"
"    -- ...что-то...\n"
"end\n"
"function derp()\n"
"    -- ...что-то...\n"
"end\n"
"local wat = 7\n"
"-- плохо\n"
"\n"
"if thing then\n"
"    -- ...что-то...\n"
"end\n"
"\n"
"function derp()\n"
"    -- ...что-то...\n"
"end\n"
"\n"
"local wat = 7\n"
"-- хорошо"

#: ../doc/dev_guide/lua_style_guide.rst:277
msgid ""
"Delete whitespace at EOL (strongly forbidden. Use ``:s/\\s\\+$//gc`` in "
"vim to delete them)"
msgstr ""
"Удаляйте символы пробела в конце файла (они категорически запрещаются). "
"Для их удаления в vim используйте ``:s/\\s\\+$//gc``."

#: ../doc/dev_guide/lua_style_guide.rst:282
msgid "Avoid global variable"
msgstr "Недопущение глобальных переменных"

#: ../doc/dev_guide/lua_style_guide.rst:284
msgid ""
"You must avoid global variables. If you have an exceptional case, use "
"``_G`` variable to set it, add prefix or add table instead of prefix:"
msgstr ""
"Следует избегать глобальных переменных. В исключительных случаях "
"используйте переменную ``_G`` для объявления, добавьте префикс или "
"таблицу вместо префикса:"

#: ../doc/dev_guide/lua_style_guide.rst:287
msgid ""
"function bad_global_example()\n"
"end -- very, very bad\n"
"\n"
"function good_local_example()\n"
"end\n"
"_G.modulename_good_local_example = good_local_example -- good\n"
"_G.modulename = {}\n"
"_G.modulename.good_local_example = good_local_example -- better"
msgstr ""
"function bad_global_example()\n"
"end -- глобальная, очень-очень плохо\n"
"\n"
"function good_local_example()\n"
"end\n"
"_G.modulename_good_local_example = good_local_example -- локальная, "
"хорошо\n"
"_G.modulename = {}\n"
"_G.modulename.good_local_example = good_local_example -- локальная, лучше"

#: ../doc/dev_guide/lua_style_guide.rst:298
msgid "Always use prefix to avoid name clash"
msgstr "Всегда добавляйте префиксы во избежание конфликта имен"

#: ../doc/dev_guide/lua_style_guide.rst:302
msgid "Naming"
msgstr "Именование"

#: ../doc/dev_guide/lua_style_guide.rst:304
msgid "names of variables/\"objects\" and \"methods\"/functions: snake_case"
msgstr "имена переменных/\"объектов\" и \"методов\"/функций: snake_case"

#: ../doc/dev_guide/lua_style_guide.rst:305
msgid "names of \"classes\": CamelCase"
msgstr "имена \"классов\": CamelCase"

#: ../doc/dev_guide/lua_style_guide.rst:306
msgid ""
"private variables/methods (properties in the future) of object starts "
"with underscores ``<object>._<name>``. Avoid using of ``local function "
"private_methods(self) end``"
msgstr ""
"частные переменные/методы (в будущем параметры) объекта начинаются с "
"символа подчеркивания ``<object>._<name>``. Избегайте ``local function "
"private_methods(self) end``"

#: ../doc/dev_guide/lua_style_guide.rst:309
msgid ""
"boolean - naming ``is_<...>``, ``isnt_<...>``, ``has_``, ``hasnt_`` is a "
"good style."
msgstr ""
"логическое именование приветствуется ``is_<...>``, ``isnt_<...>``, "
"``has_``, ``hasnt_``."

#: ../doc/dev_guide/lua_style_guide.rst:310
msgid ""
"for \"very local\" variables: - ``t`` is for tables - ``i``, ``j`` are "
"for indexing - ``n`` is for counting - ``k``, ``v`` is what you get out "
"of ``pairs()`` (are acceptable, ``_`` if unused) - ``i``, ``v`` is what "
"you get out of ``ipairs()`` (are acceptable, ``_`` if unused) - "
"``k``/``key`` is for table keys - ``v``/``val``/``value`` is for values "
"that are passed around - ``x``/``y``/``z`` is for generic math quantities"
" - ``s``/``str``/``string`` is for strings - ``c`` is for 1-char strings "
"- ``f``/``func``/``cb`` are for functions - ``status, <rv>..`` or ``ok, "
"<rv>..`` is what you get out of pcall/xpcall - ``buf, sz`` is a (buffer, "
"size) pair - ``<name>_p`` is for pointers - ``t0``.. is for timestamps - "
"``err`` is for errors"
msgstr ""
"для \"самых локальных\" переменных: - ``t`` для таблиц - ``i``, ``j`` для"
" индексации - ``n`` для подсчета - ``k``, ``v`` для получения из "
"``pairs()`` (допускаются, ``_`` если не используются) - ``i``, ``v`` is "
"what you get out of ``ipairs()`` (допускаются, ``_`` если не "
"используются) - ``k``/``key`` для ключей таблицы - "
"``v``/``val``/``value`` для передаваемых значений - ``x``/``y``/``z`` для"
" общих математических величин - ``s``/``str``/``string`` для строк - "
"``c`` для односимвольных строк - ``f``/``func``/``cb`` для функций - "
"``status, <rv>..`` или ``ok, <rv>..`` для получения из pcall/xpcall - "
"``buf, sz`` -- это пара (буфер, размер) - ``<name>_p`` для указателей - "
"``t0``.. для временных отметок - ``err`` для ошибок"

#: ../doc/dev_guide/lua_style_guide.rst:327
msgid ""
"abbrevations are acceptable if they're unambigous and if you'll document "
"(or they're too common) them."
msgstr ""
"допускается использование сокращений, если они недвусмысленны, и если вы "
"документируете их."

#: ../doc/dev_guide/lua_style_guide.rst:329
msgid ""
"global variables are written with ALL_CAPS. If it's some system variable,"
" then they're using underscore to define it (``_G``/``_VERSION``/..)"
msgstr ""
"глобальные переменные пишутся ЗАГЛАВНЫМИ_БУКВАМИ. Если это системная "
"переменная, для определения используется символ подчеркивания "
"(``_G``/``_VERSION``/..)"

#: ../doc/dev_guide/lua_style_guide.rst:331
msgid ""
"module naming snake_case (avoid underscores and dashes) - 'luasql', "
"instead of 'Lua-SQL'"
msgstr ""
"именование модулей -- с помощью snake_case (избегайте подчеркивания и "
"дефисов) - 'luasql', а не 'Lua-SQL'"

#: ../doc/dev_guide/lua_style_guide.rst:333
msgid "``*_mt`` and ``*_methods`` defines metatable and methods table"
msgstr "``*_mt`` и ``*_methods`` определяют метатаблицу и таблицу методов"

#: ../doc/dev_guide/lua_style_guide.rst:337
msgid "Idioms and patterns"
msgstr "Идиомы и шаблоны"

#: ../doc/dev_guide/lua_style_guide.rst:339
msgid ""
"Always use round brackets in call of functions except multiple cases "
"(common lua style idioms):"
msgstr ""
"Всегда пользуйтесь круглыми скобками при вызове функций, за исключением "
"множественных случаев (распространенные идиомы в Lua):"

#: ../doc/dev_guide/lua_style_guide.rst:342
msgid "``*.cfg{ }`` functions (``box.cfg``/``memcached.cfg``/..)"
msgstr "функции ``*.cfg{ }`` (``box.cfg``/``memcached.cfg``/..)"

#: ../doc/dev_guide/lua_style_guide.rst:343
msgid "``ffi.cdef[[ ]]`` function"
msgstr "функция ``ffi.cdef[[ ]]``"

#: ../doc/dev_guide/lua_style_guide.rst:345
msgid "Avoid these kind of constructions:"
msgstr "Избегайте конструкций такого типа:"

#: ../doc/dev_guide/lua_style_guide.rst:347
msgid "<func>'<name>' (strongly avoid require'..')"
msgstr "<func>'<name>' (особенно избегайте require'..')"

#: ../doc/dev_guide/lua_style_guide.rst:348
msgid ""
"``function object:method() end`` (use ``functon object.method(self) end``"
" instead)"
msgstr ""
"``function object:method() end`` (используйте ``functon "
"object.method(self) end``)"

#: ../doc/dev_guide/lua_style_guide.rst:349
msgid "do not use semicolon as table separator (only comma)"
msgstr ""
"не вставляйте точку с запятой в качестве символа-разделителя в таблице "
"(только запятые)"

#: ../doc/dev_guide/lua_style_guide.rst:350
msgid ""
"semicolons at the end of line (only to split multiple statements on one "
"line)"
msgstr ""
"точки с запятой в конце строки (только для разделения нескольких "
"операторов в одной строке)"

#: ../doc/dev_guide/lua_style_guide.rst:351
msgid "try to avoid unnecessary function creation (closures/..)"
msgstr "старайтесь избегать создания ненужных функций (closures/..)"

#: ../doc/dev_guide/lua_style_guide.rst:355
msgid "Modules"
msgstr "Модули"

#: ../doc/dev_guide/lua_style_guide.rst:357
msgid ""
"Don't start modules with license/authors/descriptions, you can write it "
"in LICENSE/AUTHORS/README files. For writing modules use one of the two "
"patterns (dont use ``modules()``):"
msgstr ""
"Не начинайте создание модуля с указания лицензии/авторов/описания, это "
"можно сделать в файлах LICENSE/AUTHORS/README соответственно. Для "
"написания модулей используйте один из двух шаблонов (не используйте "
"``modules()``):"

#: ../doc/dev_guide/lua_style_guide.rst:361
msgid ""
"local M = {}\n"
"\n"
"function M.foo()\n"
"...\n"
"end\n"
"\n"
"function M.bar()\n"
"...\n"
"end\n"
"\n"
"return M"
msgstr ""
"local M = {}\n"
"\n"
"function M.foo()\n"
"...\n"
"end\n"
"\n"
"function M.bar()\n"
"...\n"
"end\n"
"\n"
"return M"

#: ../doc/dev_guide/lua_style_guide.rst:375
msgid "or"
msgstr "или"

#: ../doc/dev_guide/lua_style_guide.rst:377
msgid ""
"local function foo()\n"
"...\n"
"end\n"
"\n"
"local function bar()\n"
"...\n"
"end\n"
"\n"
"return {\n"
"foo = foo,\n"
"bar = bar,\n"
"}"
msgstr ""
"local function foo()\n"
"...\n"
"end\n"
"\n"
"local function bar()\n"
"...\n"
"end\n"
"\n"
"return {\n"
"foo = foo,\n"
"bar = bar,\n"
"}"

#: ../doc/dev_guide/lua_style_guide.rst:394
msgid "Commenting"
msgstr "Комментирование"

#: ../doc/dev_guide/lua_style_guide.rst:396
msgid ""
"You should write code the way it shouldn't be described, but don't forget"
" about commenting it. You shouldn't comment Lua syntax (assume that "
"reader already knows Lua language). Try to tell about functions/variable "
"names/etc."
msgstr ""
"Пишите код так, чтобы его не нужно было описывать, но не забывайте о "
"комментировании. Не следует комментировать Lua-синтаксис (примите, что "
"читатель знаком с языком Lua). Постарайтесь рассказать о функциях, именах"
" переменных и так далее."

#: ../doc/dev_guide/lua_style_guide.rst:400
msgid ""
"Multiline comments: use matching (``--[[ ]]--``) instead of simple "
"(``--[[ ]]``)."
msgstr ""
"Многострочные комментарии: используйте соответствующие скобки (``--[[ "
"]]--``) вместо простых (``--[[ ]]``)."

#: ../doc/dev_guide/lua_style_guide.rst:403
msgid "Public function comments (??):"
msgstr "Комментарии к доступным функциям (??):"

#: ../doc/dev_guide/lua_style_guide.rst:405
msgid ""
"--- Copy any table (shallow and deep version)\n"
"-- * deepcopy: copies all levels\n"
"-- * shallowcopy: copies only first level\n"
"-- Supports __copy metamethod for copying custom tables with metatables\n"
"-- @function gsplit\n"
"-- @table         inp  original table\n"
"-- @shallow[opt]  sep  flag for shallow copy\n"
"-- @returns            table (copy)"
msgstr ""
"--- Копирование любой таблицы (поверхностное и глубокое)\n"
"-- * deepcopy: копирует все уровни\n"
"-- * shallowcopy: копирует только первый уровень\n"
"-- Поддержка метаметода __copy для копирования специальных таблиц с "
"метатаблицами\n"
"-- @function gsplit\n"
"-- @table         inp  оригинальная таблица\n"
"-- @shallow[opt]  sep  флаг для поверхностной копии\n"
"-- @returns            таблица (копия)"

#: ../doc/dev_guide/lua_style_guide.rst:418
msgid "Testing"
msgstr "Тестирование"

#: ../doc/dev_guide/lua_style_guide.rst:420
msgid "Use ``tap`` module for writing efficient tests. Example of test file:"
msgstr ""
"Используйте модуль ``tap``, чтобы написать эффективные тесты. Пример "
"файла с тестом:"

#: ../doc/dev_guide/lua_style_guide.rst:422
msgid ""
"#!/usr/bin/env tarantool\n"
"\n"
"local test = require('tap').test('table')\n"
"test:plan(31)\n"
"\n"
"do -- check basic table.copy (deepcopy)\n"
"    local example_table = {\n"
"        {1, 2, 3},\n"
"        {\"help, I'm very nested\", {{{ }}} }\n"
"    }\n"
"\n"
"    local copy_table = table.copy(example_table)\n"
"\n"
"    test:is_deeply(\n"
"        example_table,\n"
"        copy_table,\n"
"        \"checking, that deepcopy behaves ok\"\n"
"    )\n"
"    test:isnt(\n"
"        example_table,\n"
"        copy_table,\n"
"        \"checking, that tables are different\"\n"
"    )\n"
"    test:isnt(\n"
"        example_table[1],\n"
"        copy_table[1],\n"
"        \"checking, that tables are different\"\n"
"    )\n"
"    test:isnt(\n"
"        example_table[2],\n"
"        copy_table[2],\n"
"        \"checking, that tables are different\"\n"
"    )\n"
"    test:isnt(\n"
"        example_table[2][2],\n"
"        copy_table[2][2],\n"
"        \"checking, that tables are different\"\n"
"    )\n"
"    test:isnt(\n"
"        example_table[2][2][1],\n"
"        copy_table[2][2][1],\n"
"        \"checking, that tables are different\"\n"
"    )\n"
"end\n"
"\n"
"<...>\n"
"\n"
"os.exit(test:check() == true and 0 or 1)"
msgstr ""
"#!/usr/bin/env tarantool\n"
"\n"
"local test = require('tap').test('table')\n"
"test:plan(31)\n"
"\n"
"do -- проверка базовой table.copy (глубокая копия)\n"
"    local example_table = {\n"
"        {1, 2, 3},\n"
"        {\"help, I'm very nested\", {{{ }}} }\n"
"    }\n"
"\n"
"    local copy_table = table.copy(example_table)\n"
"\n"
"    test:is_deeply(\n"
"        example_table,\n"
"        copy_table,\n"
"        \"checking, that deepcopy behaves ok\"\n"
"    )\n"
"    test:isnt(\n"
"        example_table,\n"
"        copy_table,\n"
"        \"checking, that tables are different\"\n"
"    )\n"
"    test:isnt(\n"
"        example_table[1],\n"
"        copy_table[1],\n"
"        \"checking, that tables are different\"\n"
"    )\n"
"    test:isnt(\n"
"        example_table[2],\n"
"        copy_table[2],\n"
"        \"checking, that tables are different\"\n"
"    )\n"
"    test:isnt(\n"
"        example_table[2][2],\n"
"        copy_table[2][2],\n"
"        \"checking, that tables are different\"\n"
"    )\n"
"    test:isnt(\n"
"        example_table[2][2][1],\n"
"        copy_table[2][2][1],\n"
"        \"checking, that tables are different\"\n"
"    )\n"
"end\n"
"\n"
"<...>\n"
"\n"
"os.exit(test:check() == true and 0 or 1)"

#: ../doc/dev_guide/lua_style_guide.rst:473
msgid "When you'll test your code output will be something like this:"
msgstr "После тестирования кода вывод будет примерно таким:"

#: ../doc/dev_guide/lua_style_guide.rst:475
msgid ""
"TAP version 13\n"
"1..31\n"
"ok - checking, that deepcopy behaves ok\n"
"ok - checking, that tables are different\n"
"ok - checking, that tables are different\n"
"ok - checking, that tables are different\n"
"ok - checking, that tables are different\n"
"ok - checking, that tables are different\n"
"..."
msgstr ""
"TAP version 13\n"
"1..31\n"
"ok - checking, that deepcopy behaves ok\n"
"ok - checking, that tables are different\n"
"ok - checking, that tables are different\n"
"ok - checking, that tables are different\n"
"ok - checking, that tables are different\n"
"ok - checking, that tables are different\n"
"..."

#: ../doc/dev_guide/lua_style_guide.rst:489
msgid "Error Handling"
msgstr "Обработка ошибок"

#: ../doc/dev_guide/lua_style_guide.rst:491
msgid "Be generous in what you accept and strict in what you return."
msgstr "Принимайте разнообразные значения и выдавайте строго определенные."

#: ../doc/dev_guide/lua_style_guide.rst:493
msgid ""
"With error handling this means that you must provide an error object as "
"second multi-return value in case of error. The error object can be a "
"string, a Lua table or cdata, in the latter cases it must have "
"``__tostring`` metamethod defined."
msgstr ""
"В рамках обработки ошибок это означает, что в случае ошибки вы должны "
"предоставить объект ошибки как второе возвращаемое значение. Объектом "
"ошибки может быть строка, Lua-таблица или cdata, в последнем случае "
"должен быть определен метаметод ``__tostring``."

#: ../doc/dev_guide/lua_style_guide.rst:498
msgid ""
"In case of error, use ``nil`` for the first return value. This makes the "
"error hard to ignore."
msgstr ""
"В случае ошибки нулевое значение ``nil`` должно быть первым возвращаемым "
"значением. В таком случае ошибку трудно игнорировать."

#: ../doc/dev_guide/lua_style_guide.rst:501
msgid ""
"When checking function return values, check the first argument first. If "
"it's ``nil``, look for error in the second argument:"
msgstr ""
"При проверке возвращаемых значений функции проверяйте сначала первый "
"аргумент. Если это ``nil``, ищите ошибку во втором аргументе:"

#: ../doc/dev_guide/lua_style_guide.rst:504
msgid ""
"local data, err = foo()\n"
"if not data\n"
"    return nil, err\n"
"end\n"
"return bar(data)"
msgstr ""
"local data, err = foo()\n"
"if not data\n"
"    return nil, err\n"
"end\n"
"return bar(data)"

#: ../doc/dev_guide/lua_style_guide.rst:512
msgid ""
"Unless performance of your code is paramount, try to avoid using more "
"than two return values."
msgstr ""
"Если производительность вашего кода не имеет первоочередное значение, "
"постарайтесь избегать использования более двух возвращаемых значений."

#: ../doc/dev_guide/lua_style_guide.rst:515
msgid ""
"In rare cases you may want to return ``nil`` as a legal return value. In "
"this case it's OK to check for error first, and return second:"
msgstr ""
"В редких случаях ``nil`` можно сделать возвращаемым значением. В таком "
"случае можно сначала проверить ошибку, а потом вернуть значение:"

#: ../doc/dev_guide/lua_style_guide.rst:518
msgid ""
"local data, err = foo()\n"
"if not err\n"
"    return data\n"
"end\n"
"return nil, err"
msgstr ""
"local data, err = foo()\n"
"if not err\n"
"    return data\n"
"end\n"
"return nil, err"

#: ../doc/dev_guide/python_style_guide.rst:3
msgid "Python Style Guide"
msgstr "Руководство по написанию кода на Python"

#: ../doc/dev_guide/python_style_guide.rst:7
msgid "Introduction"
msgstr "Введение"

#: ../doc/dev_guide/python_style_guide.rst:9
msgid ""
"This document gives coding conventions for the Python code comprising the"
" standard library in the main Python distribution.  Please see the "
"companion informational PEP describing style guidelines for the C code in"
" the C implementation of Python [1]_."
msgstr ""
"Данный документ описывает соглашение о том, как писать код для языка "
"Python, включая стандартную библиотеку, входящую в состав Python. "
"Посмотрите также на сопутствующую PEP (Python enhanced proposal -- заявку"
" на улучшение языка Python), описывающую, какого стиля следует "
"придерживаться при написании кода на C в реализации языка Python [1]_."

#: ../doc/dev_guide/python_style_guide.rst:14
msgid ""
"This document and PEP 257 (Docstring Conventions) were adapted from "
"Guido's original Python Style Guide essay, with some additions from "
"Barry's style guide [2]_."
msgstr ""
"Данный документ, а также PEP 257 (Документирование кода) созданы на "
"основе оригинала рекомендаций Гуидо ван Россума с добавлениями от Барри "
"[2]_."

#: ../doc/dev_guide/python_style_guide.rst:21
msgid "A Foolish Consistency is the Hobgoblin of Little Minds"
msgstr ""
"A Foolish Consistency is the Hobgoblin of Little Minds (\"Безрассудная "
"согласованность сбивает с толку мелкие умы\")"

#: ../doc/dev_guide/python_style_guide.rst:23
msgid ""
"One of Guido's key insights is that code is read much more often than it "
"is written.  The guidelines provided here are intended to improve the "
"readability of code and make it consistent across the wide spectrum of "
"Python code.  As PEP 20 says, \"Readability counts\"."
msgstr ""
"Одна из ключевых идей Гвидо заключается в том, что код читается намного "
"чаще, чем пишется. И рекомендации по стилю программирования предназначены"
" улучшить читаемость кода и сделать его согласованным во множестве "
"проектов на языке Python. Как написано в PEP 20, \"Читаемость имеет "
"значение\"."

#: ../doc/dev_guide/python_style_guide.rst:28
msgid ""
"A style guide is about consistency.  Consistency with this style guide is"
" important.  Consistency within a project is more important. Consistency "
"within one module or function is the most important."
msgstr ""
"В руководстве речь идет о согласованности. Согласованность с руководством"
" очень важна. Согласованность внутри проекта еще важнее. А "
"согласованность в пределах модуля или функции -- самое важное."

#: ../doc/dev_guide/python_style_guide.rst:32
msgid ""
"But most importantly: know when to be inconsistent -- sometimes the style"
" guide just doesn't apply.  When in doubt, use your best judgment.  Look "
"at other examples and decide what looks best.  And don't hesitate to ask!"
msgstr ""
"Но очень важно понимать, когда можно отойти от рекомендаций, потому что "
"руководство неприменимо. Если вы сомневаетесь, используйте свой опыт. "
"Просто посмотрите на другие примеры и решите, какой выглядит лучше. И не "
"бойтесь спросить!"

#: ../doc/dev_guide/python_style_guide.rst:37
msgid "Two good reasons to break a particular rule:"
msgstr "Правила можно нарушить по одной из этих причин:"

#: ../doc/dev_guide/python_style_guide.rst:39
msgid ""
"When applying the rule would make the code less readable, even for "
"someone who is used to reading code that follows the rules."
msgstr ""
"Если применение правила сделает код менее читаемым даже для того, кто "
"привык читать код, написанный по правилам."

#: ../doc/dev_guide/python_style_guide.rst:42
msgid ""
"To be consistent with surrounding code that also breaks it (maybe for "
"historic reasons) -- although this is also an opportunity to clean up "
"someone else's mess (in true XP style)."
msgstr ""
"Чтобы не отступать по стилю от уже написанного не по правилам кода "
"(возможно, в силу исторических причин) -- впрочем, это может быть "
"возможность причесать чужой код (в стиле XP)."

#: ../doc/dev_guide/python_style_guide.rst:49
msgid "Code lay-out"
msgstr "Размещение кода"

#: ../doc/dev_guide/python_style_guide.rst:53
msgid "Indentation"
msgstr "Отступы"

#: ../doc/dev_guide/python_style_guide.rst:55
msgid "Use 4 spaces per indentation level."
msgstr "Используйте 4 пробела на каждый уровень отступа."

#: ../doc/dev_guide/python_style_guide.rst:57
msgid ""
"For really old code that you don't want to mess up, you can continue to "
"use 8-space tabs."
msgstr ""
"Если вы не хотите наводить путаницу в очень старом коде, можете "
"продолжать использовать отступы в 8 пробелов."

#: ../doc/dev_guide/python_style_guide.rst:60
msgid ""
"Continuation lines should align wrapped elements either vertically using "
"Python's implicit line joining inside parentheses, brackets and braces, "
"or using a hanging indent.  When using a hanging indent the following "
"considerations should be applied; there should be no arguments on the "
"first line and further indentation should be used to clearly distinguish "
"itself as a continuation line."
msgstr ""
"Продолжения строк должны выравнивать переносимые элементы либо "
"вертикально, используя подразумевающееся объединение строк в скобках "
"(круглых, квадратных или фигурных), либо с использованием висячего "
"отступа. При использовании висячего отступа необходимо применять "
"следующие соображения: на первой строке не должно быть аргументов, а "
"остальные строки должны четко восприниматься как продолжение строки."

#: ../doc/dev_guide/python_style_guide.rst:67
#: ../doc/dev_guide/python_style_guide.rst:324
#: ../doc/dev_guide/python_style_guide.rst:353
#: ../doc/dev_guide/python_style_guide.rst:372
#: ../doc/dev_guide/python_style_guide.rst:385
msgid "Yes::"
msgstr "Правильно::"

#: ../doc/dev_guide/python_style_guide.rst:103
msgid ""
"# Aligned with opening delimiter\n"
"foo = long_function_name(var_one, var_two,\n"
"                         var_three, var_four)\n"
"\n"
"# More indentation included to distinguish this from the rest.\n"
"def long_function_name(\n"
"        var_one, var_two, var_three,\n"
"        var_four):\n"
"    print(var_one)"
msgstr ""
"# выравнивание по открывающему разделителю\n"
"foo = long_function_name(var_one, var_two,\n"
"                         var_three, var_four)\n"
"\n"
"# больше отступов, чтобы данный сегмент отличался от остальных.\n"
"def long_function_name(\n"
"        var_one, var_two, var_three,\n"
"        var_four):\n"
"    print(var_one)"

#: ../doc/dev_guide/python_style_guide.rst:79
#: ../doc/dev_guide/python_style_guide.rst:330
#: ../doc/dev_guide/python_style_guide.rst:361
#: ../doc/dev_guide/python_style_guide.rst:377
msgid "No::"
msgstr "Неправильно::"

#: ../doc/dev_guide/python_style_guide.rst:115
msgid ""
"# Arguments on first line forbidden when not using vertical alignment\n"
"foo = long_function_name(var_one, var_two,\n"
"    var_three, var_four)\n"
"\n"
"# Further indentation required as indentation is not distinguishable\n"
"def long_function_name(\n"
"    var_one, var_two, var_three,\n"
"    var_four):\n"
"    print(var_one)"
msgstr ""
"# запрещены аргументы на первой строке, если не используется вертикальное"
" выравнивание\n"
"foo = long_function_name(var_one, var_two,\n"
"    var_three, var_four)\n"
"\n"
"# необходимы дополнительные отступы для четких отличий\n"
"def long_function_name(\n"
"    var_one, var_two, var_three,\n"
"    var_four):\n"
"    print(var_one)"

#: ../doc/dev_guide/python_style_guide.rst:91
msgid "Optional::"
msgstr "Возможно::"

#: ../doc/dev_guide/python_style_guide.rst:127
msgid ""
"# Extra indentation is not necessary.\n"
"foo = long_function_name(\n"
"  var_one, var_two,\n"
"  var_three, var_four)"
msgstr ""
"# Нет необходимости в дополнительных отступах.\n"
"foo = long_function_name(\n"
"  var_one, var_two,\n"
"  var_three, var_four)"

#: ../doc/dev_guide/python_style_guide.rst:98
msgid ""
"The closing brace/bracket/parenthesis on multi-line constructs may either"
" line up under the first non-whitespace character of the last line of "
"list, as in::"
msgstr ""
"Закрывающие круглые/квадратные/фигурные скобки в многострочных "
"конструкциях могут находиться либо под первым символом последней строки "
"списка (не пробелом), например:"

#: ../doc/dev_guide/python_style_guide.rst:136
msgid ""
"my_list = [\n"
"    1, 2, 3,\n"
"    4, 5, 6,\n"
"    ]\n"
"result = some_function_that_takes_arguments(\n"
"    'a', 'b', 'c',\n"
"    'd', 'e', 'f',\n"
"    )"
msgstr ""
"my_list = [\n"
"    1, 2, 3,\n"
"    4, 5, 6,\n"
"    ]\n"
"result = some_function_that_takes_arguments(\n"
"    'a', 'b', 'c',\n"
"    'd', 'e', 'f',\n"
"    )"

#: ../doc/dev_guide/python_style_guide.rst:111
msgid ""
"or it may be lined up under the first character of the line that starts "
"the multi-line construct, as in::"
msgstr ""
"либо под первым символом строки, с которой начинается многострочная "
"конструкция:"

#: ../doc/dev_guide/python_style_guide.rst:148
msgid ""
"my_list = [\n"
"    1, 2, 3,\n"
"    4, 5, 6,\n"
"]\n"
"result = some_function_that_takes_arguments(\n"
"    'a', 'b', 'c',\n"
"    'd', 'e', 'f',\n"
")"
msgstr ""
"my_list = [\n"
"    1, 2, 3,\n"
"    4, 5, 6,\n"
"]\n"
"result = some_function_that_takes_arguments(\n"
"    'a', 'b', 'c',\n"
"    'd', 'e', 'f',\n"
")"

#: ../doc/dev_guide/python_style_guide.rst:126
msgid "Tabs or Spaces?"
msgstr "Табуляция или пробелы?"

#: ../doc/dev_guide/python_style_guide.rst:128
msgid "Never mix tabs and spaces."
msgstr "Никогда не смешивайте символы табуляции и пробелы."

#: ../doc/dev_guide/python_style_guide.rst:130
msgid ""
"The most popular way of indenting Python is with spaces only.  The "
"second-most popular way is with tabs only.  Code indented with a mixture "
"of tabs and spaces should be converted to using spaces exclusively.  When"
" invoking the Python command line interpreter with the ``-t`` option, it "
"issues warnings about code that illegally mixes tabs and spaces.  When "
"using ``-tt`` these warnings become errors. These options are highly "
"recommended!"
msgstr ""
"Самый распространенный способ отступов в Python -- пробелы. На втором "
"месте -- отступы только с использованием табуляции. Код, в котором "
"используются и те, и другие типы отступов, следует исправить так, чтобы "
"отступы в нем были расставлены только с помощью пробелов. При вызове "
"интерпретатора в командной строке с параметром ``-t`` он выдаст "
"предупреждение в случае использовании смешанного стиля в отступах. "
"Запустив интерпретатор с параметром -tt, вы получите в этих местах "
"ошибки. Рекомендуем использовать эти опции!"

#: ../doc/dev_guide/python_style_guide.rst:138
msgid ""
"For new projects, spaces-only are strongly recommended over tabs. Most "
"editors have features that make this easy to do."
msgstr ""
"В новых проектах для отступов настоятельно рекомендуется использовать "
"только пробелы. Во многих редакторах можно легко это делать."

#: ../doc/dev_guide/python_style_guide.rst:143
msgid "Maximum Line Length"
msgstr "Максимальная длина строки"

#: ../doc/dev_guide/python_style_guide.rst:145
msgid "Limit all lines to a maximum of 79 characters."
msgstr "Ограничьте максимальную длину строки 79 символами."

#: ../doc/dev_guide/python_style_guide.rst:147
msgid ""
"There are still many devices around that are limited to 80 character "
"lines; plus, limiting windows to 80 characters makes it possible to have "
"several windows side-by-side.  The default wrapping on such devices "
"disrupts the visual structure of the code, making it more difficult to "
"understand.  Therefore, please limit all lines to a maximum of 79 "
"characters.  For flowing long blocks of text (docstrings or comments), "
"limiting the length to 72 characters is recommended."
msgstr ""
"Пока еще есть немало устройств, где длина строки ограничена 80 символами;"
" к тому же, ограничив ширину окна 80 символами, мы можем расположить "
"несколько окон рядом друг с другом. Автоматический перенос строк на таких"
" устройствах нарушит форматирование, и код будет труднее понять. Поэтому "
"ограничьте длину строки 79 символами. Для длинных блоков текста (строки "
"документации или комментарии) рекомендуется ограничиваться 72 символами."

#: ../doc/dev_guide/python_style_guide.rst:155
msgid ""
"The preferred way of wrapping long lines is by using Python's implied "
"line continuation inside parentheses, brackets and braces.  Long lines "
"can be broken over multiple lines by wrapping expressions in parentheses."
" These should be used in preference to using a backslash for line "
"continuation."
msgstr ""
"Предпочтительный способ переноса длинных строк -- использование "
"подразумевающегося продолжения строки между обычными, квадратными и "
"фигурными скобками. Длинные строки можно разбить на несколько строк в "
"скобках. Это лучше, чем использовать обратную косую черту для продолжения"
" строки."

#: ../doc/dev_guide/python_style_guide.rst:161
msgid ""
"Backslashes may still be appropriate at times.  For example, long, "
"multiple ``with``-statements cannot use implicit continuation, so "
"backslashes are acceptable::"
msgstr ""
"Обратную косую черту можно использовать время от времени. Например, "
"длинный оператор with не может работать с неявными продолжениями, так что"
" обратная косая черта здесь подойдет:"

#: ../doc/dev_guide/python_style_guide.rst:199
msgid ""
"with open('/path/to/some/file/you/want/to/read') as file_1, \\\n"
"        open('/path/to/some/file/being/written', 'w') as file_2:\n"
"    file_2.write(file_1.read())"
msgstr ""
"with open('/path/to/some/file/you/want/to/read') as file_1, \\\n"
"        open('/path/to/some/file/being/written', 'w') as file_2:\n"
"    file_2.write(file_1.read())"

#: ../doc/dev_guide/python_style_guide.rst:169
msgid "Another such case is with ``assert`` statements."
msgstr "Еще один такой случай -- операторы ``assert``."

#: ../doc/dev_guide/python_style_guide.rst:171
msgid ""
"Make sure to indent the continued line appropriately.  The preferred "
"place to break around a binary operator is *after* the operator, not "
"before it.  Some examples::"
msgstr ""
"Делайте правильные отступы для перенесенной строки. Предпочтительнее "
"вставить перенос строки *после* логического оператора, а не перед ним. "
"Например:"

#: ../doc/dev_guide/python_style_guide.rst:209
#, python-format
msgid ""
"class Rectangle(Blob):\n"
"\n"
"    def __init__(self, width, height,\n"
"                 color='black', emphasis=None, highlight=0):\n"
"        if (width == 0 and height == 0 and\n"
"            color == 'red' and emphasis == 'strong' or\n"
"            highlight > 100):\n"
"            raise ValueError(\"sorry, you lose\")\n"
"        if width == 0 and height == 0 and (color == 'red' or\n"
"                                           emphasis is None):\n"
"            raise ValueError(\"I don't think so -- values are %s, %s\" %\n"
"                             (width, height))\n"
"        Blob.__init__(self, width, height,\n"
"                      color, emphasis, highlight)"
msgstr ""
"class Rectangle(Blob):\n"
"\n"
"    def __init__(self, width, height,\n"
"                 color='black', emphasis=None, highlight=0):\n"
"        if (width == 0 and height == 0 and\n"
"            color == 'red' and emphasis == 'strong' or\n"
"            highlight > 100):\n"
"            raise ValueError(\"sorry, you lose\")\n"
"        if width == 0 and height == 0 and (color == 'red' or\n"
"                                           emphasis is None):\n"
"            raise ValueError(\"I don't think so -- values are %s, %s\" %\n"
"                             (width, height))\n"
"        Blob.__init__(self, width, height,\n"
"                      color, emphasis, highlight)"

#: ../doc/dev_guide/python_style_guide.rst:192
msgid "Blank Lines"
msgstr "Пустые строки"

#: ../doc/dev_guide/python_style_guide.rst:194
msgid "Separate top-level function and class definitions with two blank lines."
msgstr ""
"Отделяйте функции верхнего уровня и определения классов двумя пустыми "
"строками."

#: ../doc/dev_guide/python_style_guide.rst:197
msgid "Method definitions inside a class are separated by a single blank line."
msgstr "Определения методов в пределах класса отделяйте одной пустой строкой."

#: ../doc/dev_guide/python_style_guide.rst:200
msgid ""
"Extra blank lines may be used (sparingly) to separate groups of related "
"functions.  Blank lines may be omitted between a bunch of related one-"
"liners (e.g. a set of dummy implementations)."
msgstr ""
"Также можно добавлять пустые строки (не слишком часто) для выделения "
"групп связанных функций. Пустые строки не стоит добавлять между "
"несколькими связанными программами в одну строку (например, в формальной "
"реализации)."

#: ../doc/dev_guide/python_style_guide.rst:204
msgid "Use blank lines in functions, sparingly, to indicate logical sections."
msgstr ""
"Не слишком часто можно добавлять пустые строки в коде функций, чтобы "
"отделить друг от друга логические части."

#: ../doc/dev_guide/python_style_guide.rst:206
msgid ""
"Python accepts the control-L (i.e. ^L) form feed character as whitespace;"
" Many tools treat these characters as page separators, so you may use "
"them to separate pages of related sections of your file. Note, some "
"editors and web-based code viewers may not recognize control-L as a form "
"feed and will show another glyph in its place."
msgstr ""
"Python расценивает символ control+L (или ^L) как пробел. Многие редакторы"
" обрабатывают его как разрыв страницы, поэтому его можно использовать для"
" выделения логических части в файле на разных страницах. Обратите "
"внимание, что не все редакторы распознают control+L и могут на его месте "
"отображать другой символ."

#: ../doc/dev_guide/python_style_guide.rst:214
msgid "Encodings (PEP 263)"
msgstr "Кодировка (PEP 263)"

#: ../doc/dev_guide/python_style_guide.rst:216
msgid ""
"Code in the core Python distribution should always use the ASCII or "
"Latin-1 encoding (a.k.a. ISO-8859-1).  For Python 3.0 and beyond, UTF-8 "
"is preferred over Latin-1, see PEP 3120."
msgstr ""
"В коде ядра Python всегда должна использоваться кодировка ASCII или "
"Latin-1 (также известную как ISO-8859-1). Начиная с версии Python 3.0, "
"предпочтительной является кодировка UTF-8, а не Latin-1 (см. PEP 3120). "

#: ../doc/dev_guide/python_style_guide.rst:220
msgid ""
"Files using ASCII should not have a coding cookie.  Latin-1 (or UTF-8) "
"should only be used when a comment or docstring needs to mention an "
"author name that requires Latin-1; otherwise, using ``\\x``, ``\\u`` or "
"``\\U`` escapes is the preferred way to include non-ASCII data in string "
"literals."
msgstr ""
"Для файлов с ASCII не следует объявлять кодировку. Используйте Latin-1 "
"(или UTF-8), только если необходимо указать в комментарии или строке "
"документации имя автора, содержащее в себе символ из Latin-1. В остальных"
" случаях рекомендуется использовать управляющие символы \\x, \\u или \\U,"
" чтобы вставить в строку символы не из ASCII."

#: ../doc/dev_guide/python_style_guide.rst:226
msgid ""
"For Python 3.0 and beyond, the following policy is prescribed for the "
"standard library (see PEP 3131): All identifiers in the Python standard "
"library MUST use ASCII-only identifiers, and SHOULD use English words "
"wherever feasible (in many cases, abbreviations and technical terms are "
"used which aren't English). In addition, string literals and comments "
"must also be in ASCII. The only exceptions are (a) test cases testing the"
" non-ASCII features, and (b) names of authors. Authors whose names are "
"not based on the latin alphabet MUST provide a latin transliteration of "
"their names."
msgstr ""
"Начиная с версии Python 3.0 и выше, в стандартной библиотеке действует "
"следующая политика (см. PEP 3131): все идентификаторы в стандартной "
"библиотеке Python ДОЛЖНЫ содержать только ASCII-символы и означать "
"английские слова везде, где это возможно (во многих случаях используются "
"сокращения или неанглийские технические термины). Кроме того, строки и "
"комментарии также должны содержать лишь ASCII-символы. Исключения "
"составляют: (a) тестовые сценарии для тестирования функций программы в "
"других кодировках, и (b) имена авторов. Авторы, в именах которых есть "
"буквы не из латинского алфавита, должны транслитерировать свои имена в "
"латиницу."

#: ../doc/dev_guide/python_style_guide.rst:237
msgid ""
"Open source projects with a global audience are encouraged to adopt a "
"similar policy."
msgstr ""
"В проектах с открытым кодом для широкой аудитории также рекомендуется "
"использовать это правило."

#: ../doc/dev_guide/python_style_guide.rst:243
msgid "Imports"
msgstr "Импорт"

#: ../doc/dev_guide/python_style_guide.rst:245
msgid "Imports should usually be on separate lines, e.g.::"
msgstr "Импорт разных модулей должен быть на разных строках, например:"

#: ../doc/dev_guide/python_style_guide.rst:281
msgid ""
"Yes: import os\n"
"     import sys\n"
"\n"
"No:  import sys, os"
msgstr ""
"Yes: import os\n"
"     import sys\n"
"\n"
"No:  import sys, os"

#: ../doc/dev_guide/python_style_guide.rst:252
msgid "It's okay to say this though::"
msgstr "В то же время, можно писать вот так:"

#: ../doc/dev_guide/python_style_guide.rst:288
msgid "from subprocess import Popen, PIPE"
msgstr "from subprocess import Popen, PIPE"

#: ../doc/dev_guide/python_style_guide.rst:256
msgid ""
"Imports are always put at the top of the file, just after any module "
"comments and docstrings, and before module globals and constants."
msgstr ""
"Импорт всегда нужно делать в начале файла сразу после комментариев к "
"модулю и строк документации, перед объявлением глобальных переменных и "
"постоянных."

#: ../doc/dev_guide/python_style_guide.rst:259
msgid "Imports should be grouped in the following order:"
msgstr "Группируйте импорты в следующем порядке:"

#: ../doc/dev_guide/python_style_guide.rst:261
msgid "standard library imports"
msgstr "импорты стандартной библиотеки"

#: ../doc/dev_guide/python_style_guide.rst:262
msgid "related third party imports"
msgstr "импорты сторонних библиотек"

#: ../doc/dev_guide/python_style_guide.rst:263
msgid "local application/library specific imports"
msgstr "импорты модулей текущего проекта"

#: ../doc/dev_guide/python_style_guide.rst:265
msgid "You should put a blank line between each group of imports."
msgstr "Между группами импортов вставляйте пустую строку."

#: ../doc/dev_guide/python_style_guide.rst:267
msgid "Put any relevant ``__all__`` specification after the imports."
msgstr "Указывайте все необходимые спецификации __all__ после импортов."

#: ../doc/dev_guide/python_style_guide.rst:269
msgid ""
"Relative imports for intra-package imports are highly discouraged. Always"
" use the absolute package path for all imports.  Even now that PEP 328 is"
" fully implemented in Python 2.5, its style of explicit relative imports "
"is actively discouraged; absolute imports are more portable and usually "
"more readable."
msgstr ""
"Относительные импорты крайне не рекомендуются. Всегда указывайте "
"абсолютный путь к модулю для всех видов импорта. Даже сейчас, когда PEP "
"328 реализован в версии Python 2.5, явно использовать относительные "
"импорты не рекомендуется. Абсолютные импорты более независимы и, как "
"правило, обладают лучшей читаемостью."

#: ../doc/dev_guide/python_style_guide.rst:275
msgid ""
"When importing a class from a class-containing module, it's usually okay "
"to spell this::"
msgstr "При импорте класса из модуля с классами, обычно можно писать так:"

#: ../doc/dev_guide/python_style_guide.rst:312
msgid ""
"from myclass import MyClass\n"
"from foo.bar.yourclass import YourClass"
msgstr ""
"from myclass import MyClass\n"
"from foo.bar.yourclass import YourClass"

#: ../doc/dev_guide/python_style_guide.rst:281
msgid "If this spelling causes local name clashes, then spell them ::"
msgstr "Если такое написание вызывает конфликт локальных имен, пишите:"

#: ../doc/dev_guide/python_style_guide.rst:317
msgid ""
"import myclass\n"
"import foo.bar.yourclass"
msgstr ""
"import myclass\n"
"import foo.bar.yourclass"

#: ../doc/dev_guide/python_style_guide.rst:286
msgid "and use \"myclass.MyClass\" and \"foo.bar.yourclass.YourClass\"."
msgstr "И используйте \"myclass.MyClass\" и \"foo.bar.yourclass.YourClass\"."

#: ../doc/dev_guide/python_style_guide.rst:291
msgid "Whitespace in Expressions and Statements"
msgstr "Пробелы в выражениях и операторах"

#: ../doc/dev_guide/python_style_guide.rst:295
msgid "Pet Peeves"
msgstr "Наболевшие вопросы"

#: ../doc/dev_guide/python_style_guide.rst:297
msgid "Avoid extraneous whitespace in the following situations:"
msgstr "Избегайте использования пробелов в следующих ситуациях:"

#: ../doc/dev_guide/python_style_guide.rst:299
msgid "Immediately inside parentheses, brackets or braces. ::"
msgstr "Перед круглыми, фигурными и квадратными скобками и после них:"

#: ../doc/dev_guide/python_style_guide.rst:335
msgid ""
"Yes: spam(ham[1], {eggs: 2})\n"
"No:  spam( ham[ 1 ], { eggs: 2 } )"
msgstr ""
"Yes: spam(ham[1], {eggs: 2})\n"
"No:  spam( ham[ 1 ], { eggs: 2 } )"

#: ../doc/dev_guide/python_style_guide.rst:304
msgid "Immediately before a comma, semicolon, or colon::"
msgstr "Сразу перед запятой, точкой с запятой, двоеточием:"

#: ../doc/dev_guide/python_style_guide.rst:340
msgid ""
"Yes: if x == 4: print x, y; x, y = y, x\n"
"No:  if x == 4 : print x , y ; x , y = y , x"
msgstr ""
"Yes: if x == 4: print x, y; x, y = y, x\n"
"No:  if x == 4 : print x , y ; x , y = y , x"

#: ../doc/dev_guide/python_style_guide.rst:309
msgid ""
"Immediately before the open parenthesis that starts the argument list of "
"a function call::"
msgstr ""
"Сразу перед открывающей скобкой, после которой начинается список "
"аргументов при вызове функции:"

#: ../doc/dev_guide/python_style_guide.rst:346
msgid ""
"Yes: spam(1)\n"
"No:  spam (1)"
msgstr ""
"Yes: spam(1)\n"
"No:  spam (1)"

#: ../doc/dev_guide/python_style_guide.rst:315
msgid ""
"Immediately before the open parenthesis that starts an indexing or "
"slicing::"
msgstr "Сразу перед открывающей скобкой, после которой идет индекс или срез:"

#: ../doc/dev_guide/python_style_guide.rst:352
msgid ""
"Yes: dict['key'] = list[index]\n"
"No:  dict ['key'] = list [index]"
msgstr ""
"Yes: dict['key'] = list[index]\n"
"No:  dict ['key'] = list [index]"

#: ../doc/dev_guide/python_style_guide.rst:321
msgid ""
"More than one space around an assignment (or other) operator to align it "
"with another."
msgstr ""
"Больше одного пробела вокруг оператора присваивания (или другого) для "
"того, чтобы выровнять его с другим оператором:"

#: ../doc/dev_guide/python_style_guide.rst:360
msgid ""
"x = 1\n"
"y = 2\n"
"long_variable = 3"
msgstr ""
"x = 1\n"
"y = 2\n"
"long_variable = 3"

#: ../doc/dev_guide/python_style_guide.rst:366
msgid ""
"x             = 1\n"
"y             = 2\n"
"long_variable = 3"
msgstr ""
"x             = 1\n"
"y             = 2\n"
"long_variable = 3"

#: ../doc/dev_guide/python_style_guide.rst:339
msgid "Other Recommendations"
msgstr "Прочие рекомендации"

#: ../doc/dev_guide/python_style_guide.rst:341
msgid ""
"Always surround these binary operators with a single space on either "
"side: assignment (``=``), augmented assignment (``+=``, ``-=`` etc.), "
"comparisons (``==``, ``<``, ``>``, ``!=``, ``<>``, ``<=``, ``>=``, "
"``in``, ``not in``, ``is``, ``is not``), Booleans (``and``, ``or``, "
"``not``)."
msgstr ""
"Всегда окружайте эти знаки двухместных операций пробелами по одному с "
"каждой стороны: присваивание (``=``), комбинированное присваивание "
"(``+=``, ``-=`` и т.д.), сравнения (``==``, ``<``, ``>``, ``!=``, ``<>``,"
" ``<=``, ``>=``, ``in``, ``not in``, ``is``, ``is not``), логические "
"операторы (``and``, ``or``, ``not``)."

#: ../doc/dev_guide/python_style_guide.rst:347
msgid ""
"If operators with different priorities are used, consider adding "
"whitespace around the operators with the lowest priority(ies). Use your "
"own judgement; however, never use more than one space, and always have "
"the same amount of whitespace on both sides of a binary operator."
msgstr ""
"Если используются знаки операций с разными приоритетами, рассмотрите "
"возможность добавить пробелы вокруг операций с самым низким приоритетом. "
"Судите сами, однако, никогда не используйте больше одного пробела, и "
"всегда используйте одинаковое количество пробелов по обе стороны от "
"знака."

#: ../doc/dev_guide/python_style_guide.rst:389
msgid ""
"i = i + 1\n"
"submitted += 1\n"
"x = x*2 - 1\n"
"hypot2 = x*x + y*y\n"
"c = (a+b) * (a-b)"
msgstr ""
"i = i + 1\n"
"submitted += 1\n"
"x = x*2 - 1\n"
"hypot2 = x*x + y*y\n"
"c = (a+b) * (a-b)"

#: ../doc/dev_guide/python_style_guide.rst:397
msgid ""
"i=i+1\n"
"submitted +=1\n"
"x = x * 2 - 1\n"
"hypot2 = x * x + y * y\n"
"c = (a + b) * (a - b)"
msgstr ""
"i=i+1\n"
"submitted +=1\n"
"x = x * 2 - 1\n"
"hypot2 = x * x + y * y\n"
"c = (a + b) * (a - b)"

#: ../doc/dev_guide/python_style_guide.rst:369
msgid ""
"Don't use spaces around the ``=`` sign when used to indicate a keyword "
"argument or a default parameter value."
msgstr ""
"Не используйте пробелы для отделения знака ``=``, когда он употребляется "
"для обозначения аргумента ключевого слова или значения параметра по "
"умолчанию."

#: ../doc/dev_guide/python_style_guide.rst:408
msgid ""
"def complex(real, imag=0.0):\n"
"    return magic(r=real, i=imag)"
msgstr ""
"def complex(real, imag=0.0):\n"
"    return magic(r=real, i=imag)"

#: ../doc/dev_guide/python_style_guide.rst:413
msgid ""
"def complex(real, imag = 0.0):\n"
"    return magic(r = real, i = imag)"
msgstr ""
"def complex(real, imag = 0.0):\n"
"    return magic(r = real, i = imag)"

#: ../doc/dev_guide/python_style_guide.rst:382
msgid ""
"Compound statements (multiple statements on the same line) are generally "
"discouraged."
msgstr ""
"Не рекомендуется использовать составные операторы (несколько операторов в"
" одной строке)."

#: ../doc/dev_guide/python_style_guide.rst:421
msgid ""
"if foo == 'blah':\n"
"    do_blah_thing()\n"
"do_one()\n"
"do_two()\n"
"do_three()"
msgstr ""
"if foo == 'blah':\n"
"    do_blah_thing()\n"
"do_one()\n"
"do_two()\n"
"do_three()"

#: ../doc/dev_guide/python_style_guide.rst:393
#: ../doc/dev_guide/python_style_guide.rst:402
msgid "Rather not::"
msgstr "Скорее неправильно:"

#: ../doc/dev_guide/python_style_guide.rst:429
msgid ""
"if foo == 'blah': do_blah_thing()\n"
"do_one(); do_two(); do_three()"
msgstr ""
"if foo == 'blah': do_blah_thing()\n"
"do_one(); do_two(); do_three()"

#: ../doc/dev_guide/python_style_guide.rst:398
msgid ""
"While sometimes it's okay to put an if/for/while with a small body on the"
" same line, never do this for multi-clause statements.  Also avoid "
"folding such long lines!"
msgstr ""
"Иногда можно разместить тело цикла if/for/while в той же строке, но если "
"операторов несколько, никогда так не делайте. И избегайте свертывания "
"таких длинных строк!"

#: ../doc/dev_guide/python_style_guide.rst:438
msgid ""
"if foo == 'blah': do_blah_thing()\n"
"for x in lst: total += x\n"
"while t < 10: t = delay()"
msgstr ""
"if foo == 'blah': do_blah_thing()\n"
"for x in lst: total += x\n"
"while t < 10: t = delay()"

#: ../doc/dev_guide/python_style_guide.rst:408
msgid "Definitely not::"
msgstr "Точно неправильно:"

#: ../doc/dev_guide/python_style_guide.rst:444
msgid ""
"if foo == 'blah': do_blah_thing()\n"
"else: do_non_blah_thing()\n"
"\n"
"try: something()\n"
"finally: cleanup()\n"
"\n"
"do_one(); do_two(); do_three(long, argument,\n"
"                             list, like, this)\n"
"\n"
"if foo == 'blah': one(); two(); three()"
msgstr ""
"if foo == 'blah': do_blah_thing()\n"
"else: do_non_blah_thing()\n"
"\n"
"try: something()\n"
"finally: cleanup()\n"
"\n"
"do_one(); do_two(); do_three(long, argument,\n"
"                             list, like, this)\n"
"\n"
"if foo == 'blah': one(); two(); three()"

#: ../doc/dev_guide/python_style_guide.rst:423
msgid "Comments"
msgstr "Комментарии"

#: ../doc/dev_guide/python_style_guide.rst:425
msgid ""
"Comments that contradict the code are worse than no comments.  Always "
"make a priority of keeping the comments up-to-date when the code changes!"
msgstr ""
"Комментарии, которые противоречат коду, хуже, чем отсутствие "
"комментариев. Всегда считайте первоочередной задачей исправить "
"комментарии, если меняется код!"

#: ../doc/dev_guide/python_style_guide.rst:429
msgid ""
"Comments should be complete sentences.  If a comment is a phrase or "
"sentence, its first word should be capitalized, unless it is an "
"identifier that begins with a lower case letter (never alter the case of "
"identifiers!)."
msgstr ""
"Комментарии должны представлять собой законченные предложения. Если "
"комментарием будет фраза или предложение, первое слово должно быть "
"написано с заглавной буквы, если только это не идентификатор, который "
"пишется со строчной буквы (никогда не меняйте регистр идентификаторов!)."

#: ../doc/dev_guide/python_style_guide.rst:434
msgid ""
"If a comment is short, the period at the end can be omitted.  Block "
"comments generally consist of one or more paragraphs built out of "
"complete sentences, and each sentence should end in a period."
msgstr ""
"Если комментарий короткий, точку в конце предложения можно опустить. Блок"
" комментариев обычно состоит из одного или более абзацев, составленных из"
" полных предложений, поэтому каждое предложение должно заканчиваться "
"точкой."

#: ../doc/dev_guide/python_style_guide.rst:438
msgid "You should use two spaces after a sentence-ending period."
msgstr "После точки в конце предложения следует ставить два пробела."

#: ../doc/dev_guide/python_style_guide.rst:440
msgid "When writing English, Strunk and White apply."
msgstr ""
"Если вы пишете на английском языке, не забывайте о рекомендациях Странка "
"и Уайта по стилю."

#: ../doc/dev_guide/python_style_guide.rst:442
#, python-format
msgid ""
"Python coders from non-English speaking countries: please write your "
"comments in English, unless you are 120% sure that the code will never be"
" read by people who don't speak your language."
msgstr ""
"Разработчики на языке Python из неанглоязычных стран, пишите комментарии "
"на английском, если только вы не уверены на 120%, что ваш код никогда не "
"будут читать люди, не знающие вашего родного языка."

#: ../doc/dev_guide/python_style_guide.rst:448
msgid "Block Comments"
msgstr "Блок комментариев"

#: ../doc/dev_guide/python_style_guide.rst:450
msgid ""
"Block comments generally apply to some (or all) code that follows them, "
"and are indented to the same level as that code.  Each line of a block "
"comment starts with a ``#`` and a single space (unless it is indented "
"text inside the comment)."
msgstr ""
"Блок комментариев обычно сопровождает фрагмент кода (или весь код), "
"который за ним следует, и находится на том же уровне отступов, что и сам "
"код. Каждая строка блока комментариев должна начинаться с символа ``#`` и"
" одного пробела после него (если только в самом тексте комментария нет "
"отступов)."

#: ../doc/dev_guide/python_style_guide.rst:455
msgid ""
"Paragraphs inside a block comment are separated by a line containing a "
"single ``#``."
msgstr ""
"Абзацы в пределах блока комментариев отделяются строкой, состоящей из "
"одного символа ``#``."

#: ../doc/dev_guide/python_style_guide.rst:460
msgid "Inline Comments"
msgstr "Комментарии в строке с кодом"

#: ../doc/dev_guide/python_style_guide.rst:462
msgid "Use inline comments sparingly."
msgstr "Старайтесь реже использовать подобные комментарии."

#: ../doc/dev_guide/python_style_guide.rst:464
msgid ""
"An inline comment is a comment on the same line as a statement. Inline "
"comments should be separated by at least two spaces from the statement.  "
"They should start with a # and a single space."
msgstr ""
"Встроенный комментарий находится в той же строке, что и оператор. Такие "
"комментарии должны отделяться от оператора хотя бы двумя пробелами. Они "
"должны начинаться с символа # и одного пробела."

#: ../doc/dev_guide/python_style_guide.rst:468
msgid ""
"Inline comments are unnecessary and in fact distracting if they state the"
" obvious.  Don't do this::"
msgstr ""
"Комментарии в строке с кодом не нужны и в действительности отвлекают от "
"чтения, если они объясняют очевидное. Не пишите так:"

#: ../doc/dev_guide/python_style_guide.rst:505
msgid "x = x + 1                 # Increment x"
msgstr "x = x + 1                 # Увеличение x"

#: ../doc/dev_guide/python_style_guide.rst:473
msgid "But sometimes, this is useful::"
msgstr "Иногда, впрочем, они полезны:"

#: ../doc/dev_guide/python_style_guide.rst:509
msgid "x = x + 1                 # Compensate for border"
msgstr "x = x + 1                 # Место для рамки окна"

#: ../doc/dev_guide/python_style_guide.rst:479
msgid "Documentation Strings"
msgstr "Строки документации"

#: ../doc/dev_guide/python_style_guide.rst:481
msgid ""
"Conventions for writing good documentation strings (a.k.a. "
"\"docstrings\") are immortalized in PEP 257."
msgstr ""
"Соглашения о написании хорошей документации (docstrings) увековечены в "
"PEP 257."

#: ../doc/dev_guide/python_style_guide.rst:484
msgid ""
"Write docstrings for all public modules, functions, classes, and methods."
"  Docstrings are not necessary for non-public methods, but you should "
"have a comment that describes what the method does.  This comment should "
"appear after the ``def`` line."
msgstr ""
"Пишите документацию для всех доступных модулей, функций, классов, "
"методов. Строки документации необязательны для внутренних методов, но "
"нужно добавить комментарий о том, что делает метод. Комментарий должен "
"идти после строки ``def``."

#: ../doc/dev_guide/python_style_guide.rst:489
msgid ""
"PEP 257 describes good docstring conventions.  Note that most "
"importantly, the ``\"\"\"`` that ends a multiline docstring should be on "
"a line by itself, and preferably preceded by a blank line, e.g.::"
msgstr ""
"PEP 257 объясняет, как правильно и хорошо писать документацию. Следует "
"отметить, что очень важно, чтобы закрывающие ``\"\"\"`` стояли на "
"отдельной строке, а предпочтительно, чтобы перед ними была и пустая "
"строка, например:"

#: ../doc/dev_guide/python_style_guide.rst:527
msgid ""
"\"\"\"Return a foobang\n"
"\n"
"Optional plotz says to frobnicate the bizbaz first.\n"
"\n"
"\"\"\""
msgstr ""
"\"\"\"Return a foobang\n"
"\n"
"Optional plotz says to frobnicate the bizbaz first.\n"
"\n"
"\"\"\""

#: ../doc/dev_guide/python_style_guide.rst:499
msgid ""
"For one liner docstrings, it's okay to keep the closing ``\"\"\"`` on the"
" same line."
msgstr ""
"Для однострочной документации можно оставить закрывающие ``\"\"\"`` на "
"той же строке."

#: ../doc/dev_guide/python_style_guide.rst:505
msgid "Version Bookkeeping"
msgstr "Контроль версий"

#: ../doc/dev_guide/python_style_guide.rst:507
msgid ""
"If you have to have Subversion, CVS, or RCS crud in your source file, do "
"it as follows. ::"
msgstr ""
"Если вам нужно использовать Subversion, CVS или RCS в ваших исходных "
"кодах, делайте это следующим образом:"

#: ../doc/dev_guide/python_style_guide.rst:544
msgid ""
"__version__ = \"$Revision$\"\n"
"# $Source$"
msgstr ""
"__version__ = \"$Revision$\"\n"
"# $Source$"

#: ../doc/dev_guide/python_style_guide.rst:513
msgid ""
"These lines should be included after the module's docstring, before any "
"other code, separated by a blank line above and below."
msgstr ""
"Эти строки следует указывать после документации модуля перед любым другим"
" кодом, отделяя их пустыми строками сверху и снизу."

#: ../doc/dev_guide/python_style_guide.rst:519
msgid "Naming Conventions"
msgstr "Соглашения по именованию"

#: ../doc/dev_guide/python_style_guide.rst:521
msgid ""
"The naming conventions of Python's library are a bit of a mess, so we'll "
"never get this completely consistent -- nevertheless, here are the "
"currently recommended naming standards.  New modules and packages "
"(including third party frameworks) should be written to these standards, "
"but where an existing library has a different style, internal consistency"
" is preferred."
msgstr ""
"Соглашения по именованию переменных в Python довольно запущены, поэтому "
"полной согласованности невозможно будет добиться. Тем не менее, ниже мы "
"приводим список рекомендованных стандартов именования. Новые модули и "
"пакеты (включая сторонние) должны быть написаны в соответствии с этими "
"стандартами, но если уже существующая библиотека написана в другом стиле,"
" предпочтительно поддерживать согласованность."

#: ../doc/dev_guide/python_style_guide.rst:530
msgid "Descriptive: Naming Styles"
msgstr "Описание: Стили имен"

#: ../doc/dev_guide/python_style_guide.rst:532
msgid ""
"There are a lot of different naming styles.  It helps to be able to "
"recognize what naming style is being used, independently from what they "
"are used for."
msgstr ""
"Существует много различных стилей именования. Полезно распознавать, какой"
" стиль именования используется независимо от того, для чего он "
"используется."

#: ../doc/dev_guide/python_style_guide.rst:536
msgid "The following naming styles are commonly distinguished:"
msgstr "Обычно различают следующие стили именования:"

#: ../doc/dev_guide/python_style_guide.rst:538
msgid "``b`` (single lowercase letter)"
msgstr "``b`` (отдельная строчная буква)"

#: ../doc/dev_guide/python_style_guide.rst:539
msgid "``B`` (single uppercase letter)"
msgstr "``B`` (отдельная заглавная буква)"

#: ../doc/dev_guide/python_style_guide.rst:540
msgid "``lowercase``"
msgstr "``lowercase`` (слово в нижнем регистре)"

#: ../doc/dev_guide/python_style_guide.rst:541
msgid "``lower_case_with_underscores``"
msgstr ""
"``lower_case_with_underscores`` (слова из строчных букв с символами "
"подчеркивания)"

#: ../doc/dev_guide/python_style_guide.rst:542
msgid "``UPPERCASE``"
msgstr "``UPPERCASE`` (заглавные буквы)"

#: ../doc/dev_guide/python_style_guide.rst:543
msgid "``UPPER_CASE_WITH_UNDERSCORES``"
msgstr ""
"UPPERCASE_WITH_UNDERSCORES (слова из заглавных букв с символами "
"подчеркивания)"

#: ../doc/dev_guide/python_style_guide.rst:544
msgid ""
"``CapitalizedWords`` (or CapWords, or CamelCase -- so named because of "
"the bumpy look of its letters [3]_).  This is also sometimes known as "
"StudlyCaps."
msgstr ""
"``CapitalizedWords`` (слова с заглавными буквами, или CapWords, или "
"CamelCase -- называется так, потому что прописные буквы внутри слова "
"напоминают горбы верблюда [3]_). Иногда называется StudlyCaps. "

#: ../doc/dev_guide/python_style_guide.rst:548
msgid ""
"Note: When using abbreviations in CapWords, capitalize all the letters of"
" the abbreviation.  Thus HTTPServerError is better than HttpServerError."
msgstr ""
"Примечание: когда вы используете аббревиатуры в стиле CapWords, пишите "
"все буквы аббревиатуры заглавными. HTTPServerError выглядит лучше, чем "
"HttpServerError."

#: ../doc/dev_guide/python_style_guide.rst:551
msgid ""
"``mixedCase`` (differs from CapitalizedWords by initial lowercase "
"character!)"
msgstr ""
"mixedCase (отличается от CapitalizedWords тем, что первое слово "
"начинается со строчной буквы!)"

#: ../doc/dev_guide/python_style_guide.rst:553
msgid "``Capitalized_Words_With_Underscores`` (ugly!)"
msgstr ""
"Capitalized_Words_With_Underscores (слова с заглавными буквами и "
"символами подчеркивания -- уродливо!)"

#: ../doc/dev_guide/python_style_guide.rst:555
msgid ""
"There's also the style of using a short unique prefix to group related "
"names together.  This is not used much in Python, but it is mentioned for"
" completeness.  For example, the ``os.stat()`` function returns a tuple "
"whose items traditionally have names like ``st_mode``, ``st_size``, "
"``st_mtime`` and so on.  (This is done to emphasize the correspondence "
"with the fields of the POSIX system call struct, which helps programmers "
"familiar with that.)"
msgstr ""
"Еще есть стиль, в котором к именам из одной логической группы добавляется"
" короткий уникальный префикс. Этот стиль редко используется в Python, но "
"упомянем его для полноты изложения. Например, функция ``os.stat()`` "
"возвращает кортеж, имена в котором традиционно выглядят так: ``st_mode``,"
" ``st_size``, ``st_mtime`` и так далее. (Так сделано, чтобы подчеркнуть "
"соответствие этих полей структуре системных вызовов POSIX, что помогает "
"знакомым с ней разработчикам)."

#: ../doc/dev_guide/python_style_guide.rst:563
msgid ""
"The X11 library uses a leading X for all its public functions.  In "
"Python, this style is generally deemed unnecessary because attribute and "
"method names are prefixed with an object, and function names are prefixed"
" with a module name."
msgstr ""
"В библиотеке X11 используется префикс Х для всех доступных функций. В "
"Python этот стиль считается лишним, потому что перед полями и именами "
"методов стоит имя объекта, а перед именами функций стоит имя модуля."

#: ../doc/dev_guide/python_style_guide.rst:568
msgid ""
"In addition, the following special forms using leading or trailing "
"underscores are recognized (these can generally be combined with any case"
" convention):"
msgstr ""
"Кроме того, используются следующие специальные формы записи имен с "
"добавлением символа подчеркивания в начало или конец имени (их можно "
"использовать с любым типом регистра):"

#: ../doc/dev_guide/python_style_guide.rst:572
msgid ""
"``_single_leading_underscore``: weak \"internal use\" indicator. E.g. "
"``from M import *`` does not import objects whose name starts with an "
"underscore."
msgstr ""
"``_single_leading_underscore``: слабый индикатор \"для внутреннего "
"пользования\". Например, ``from M import *`` не будет импортировать "
"объекты, имена которых начинаются с символа подчеркивания."

#: ../doc/dev_guide/python_style_guide.rst:576
msgid ""
"``single_trailing_underscore_``: used by convention to avoid conflicts "
"with Python keyword, e.g. ::"
msgstr ""
"``single_trailing_underscore_``: используется по соглашению во избежание "
"конфликтов с ключевыми словами Python, например:"

#: ../doc/dev_guide/python_style_guide.rst:613
msgid "Tkinter.Toplevel(master, class_='ClassName')"
msgstr "Tkinter.Toplevel(master, class_='ClassName')"

#: ../doc/dev_guide/python_style_guide.rst:581
msgid ""
"``__double_leading_underscore``: when naming a class attribute, invokes "
"name mangling (inside class FooBar, ``__boo`` becomes ``_FooBar__boo``; "
"see below)."
msgstr ""
"``__double_leading_underscore``: изменяет имя атрибута класса (в классе "
"FooBar, ``__boo`` становится ``_FooBar__boo``; см. ниже)."

#: ../doc/dev_guide/python_style_guide.rst:585
msgid ""
"``__double_leading_and_trailing_underscore__``: \"magic\" objects or "
"attributes that live in user-controlled namespaces. E.g. ``__init__``, "
"``__import__`` or ``__file__``.  Never invent such names; only use them "
"as documented."
msgstr ""
"``__double_leading_and_trailing_underscore__``: \"волшебные\" объекты или"
" атрибуты, которые находятся в live in в пространствах имен, управляемых "
"пользователем. Например, ``__init__``, ``__import__`` или ``__file__``. "
"Не придумывайте такие имена, используйте их только так, как написано в "
"документации."

#: ../doc/dev_guide/python_style_guide.rst:592
msgid "Prescriptive: Naming Conventions"
msgstr "Предписания: соглашения по именованию"

#: ../doc/dev_guide/python_style_guide.rst:596
msgid "Names to Avoid"
msgstr "Имена, которых следует избегать"

#: ../doc/dev_guide/python_style_guide.rst:598
msgid ""
"Never use the characters 'l' (lowercase letter el), 'O' (uppercase letter"
" oh), or 'I' (uppercase letter eye) as single character variable names."
msgstr ""
"Никогда не используйте символы 'l' (строчная латинская буква эль), 'O' "
"(заглавная латинская буква о) или 'I' (заглавная латинская буква ай) в "
"качестве однобуквенных имен переменных."

#: ../doc/dev_guide/python_style_guide.rst:602
msgid ""
"In some fonts, these characters are indistinguishable from the numerals "
"one and zero.  When tempted to use 'l', use 'L' instead."
msgstr ""
"В некоторых шрифтах эти символы неотличимы от цифр один и ноль. Если "
"нельзя обойтись без 'l', пишите вместо нее 'L'."

#: ../doc/dev_guide/python_style_guide.rst:607
msgid "Package and Module Names"
msgstr "Имена модулей и пакетов"

#: ../doc/dev_guide/python_style_guide.rst:609
msgid ""
"Modules should have short, all-lowercase names.  Underscores can be used "
"in the module name if it improves readability.  Python packages should "
"also have short, all-lowercase names, although the use of underscores is "
"discouraged."
msgstr ""
"Имена модулей должны быть короткими и состоять из строчных букв. Можно "
"использовать и символы подчеркивания, если это улучшает читаемость. Имена"
" пакетов Python также должны быть короткими и состоять из строчных букв, "
"но здесь символы подчеркивания не приветствуются."

#: ../doc/dev_guide/python_style_guide.rst:614
msgid ""
"Since module names are mapped to file names, and some file systems are "
"case insensitive and truncate long names, it is important that module "
"names be chosen to be fairly short -- this won't be a problem on Unix, "
"but it may be a problem when the code is transported to older Mac or "
"Windows versions, or DOS."
msgstr ""
"Так как имена модулей отображаются в именах файлов, а некоторые файловые "
"системы являются нечувствительными к регистру символов и обрезают длинные"
" имена, очень важно использовать достаточно короткие имена модулей -- это"
" не проблема в Unix, но может стать проблемой при переносе кода в старые "
"версии Windows, Mac или DOS."

#: ../doc/dev_guide/python_style_guide.rst:620
msgid ""
"When an extension module written in C or C++ has an accompanying Python "
"module that provides a higher level (e.g. more object oriented) "
"interface, the C/C++ module has a leading underscore (e.g. ``_socket``)."
msgstr ""
"Если для модуля расширения, написанного на С или C++, есть сопутствующий "
"Python-модуль, содержащий интерфейс более высокого уровня (например, "
"более объектно-ориентированный), модуль С/С++ начинается с символа "
"подчеркивания (например, ``_socket``)."

#: ../doc/dev_guide/python_style_guide.rst:627
msgid "Class Names"
msgstr "Имена классов"

#: ../doc/dev_guide/python_style_guide.rst:629
msgid ""
"Almost without exception, class names use the CapWords convention. "
"Classes for internal use have a leading underscore in addition."
msgstr ""
"Все имена классов должны соответствовать CapWords почти без исключений. "
"Классы для внутреннего использования могут также начинаться с символа "
"подчеркивания."

#: ../doc/dev_guide/python_style_guide.rst:634
msgid "Exception Names"
msgstr "Имена исключений"

#: ../doc/dev_guide/python_style_guide.rst:636
msgid ""
"Because exceptions should be classes, the class naming convention applies"
" here.  However, you should use the suffix \"Error\" on your exception "
"names (if the exception actually is an error)."
msgstr ""
"Так как исключения должны быть классами, к исключениям применяются "
"правила именования классов. Однако вы можете добавить суффикс \"Error\" в"
" конце имени (если исключение действительно является ошибкой)."

#: ../doc/dev_guide/python_style_guide.rst:642
msgid "Global Variable Names"
msgstr "Имена глобальных переменных"

#: ../doc/dev_guide/python_style_guide.rst:644
msgid ""
"(Let's hope that these variables are meant for use inside one module "
"only.)  The conventions are about the same as those for functions."
msgstr ""
"(Будем надеяться, что такие имена используются только в пределах одного "
"модуля.) Применяются те же правила, что и для имен функций."

#: ../doc/dev_guide/python_style_guide.rst:647
msgid ""
"Modules that are designed for use via ``from M import *`` should use the "
"``__all__`` mechanism to prevent exporting globals, or use the older "
"convention of prefixing such globals with an underscore (which you might "
"want to do to indicate these globals are \"module non-public\")."
msgstr ""
"В модули, которые предназначены для использования с помощью ``from M "
"import *``, следует добавить механизм ``__all__``, чтобы предотвратить "
"экспорт глобальных переменных, или же использовать старое соглашение, "
"добавляя перед именами таких глобальных переменных один символ "
"подчеркивания (которым можно обозначить глобальные переменные, которые "
"используются только внутри модуля)."

#: ../doc/dev_guide/python_style_guide.rst:655
msgid "Function Names"
msgstr "Имена функций"

#: ../doc/dev_guide/python_style_guide.rst:657
msgid ""
"Function names should be lowercase, with words separated by underscores "
"as necessary to improve readability."
msgstr ""
"Имена функций должны состоять из строчных букв, а слова разделяться "
"символами подчеркивания, чтобы улучшить читаемость."

#: ../doc/dev_guide/python_style_guide.rst:660
msgid ""
"mixedCase is allowed only in contexts where that's already the prevailing"
" style (e.g. threading.py), to retain backwards compatibility."
msgstr ""
"mixedCase допускается только в тех местах, где уже преобладает такой "
"стиль (например, threading.py), для обратной совместимости."

#: ../doc/dev_guide/python_style_guide.rst:666
msgid "Function and method arguments"
msgstr "Аргументы функций и методов"

#: ../doc/dev_guide/python_style_guide.rst:668
msgid "Always use ``self`` for the first argument to instance methods."
msgstr ""
"Всегда используйте ``self`` в качестве первого аргумента метода "
"экземпляра."

#: ../doc/dev_guide/python_style_guide.rst:670
msgid "Always use ``cls`` for the first argument to class methods."
msgstr "Всегда используйте ``cls`` в качестве первого аргумента метода класса."

#: ../doc/dev_guide/python_style_guide.rst:672
msgid ""
"If a function argument's name clashes with a reserved keyword, it is "
"generally better to append a single trailing underscore rather than use "
"an abbreviation or spelling corruption.  Thus ``class_`` is better than "
"``clss``.  (Perhaps better is to avoid such clashes by using a synonym.)"
msgstr ""
"Если имя аргумента функции конфликтует с зарезервированным ключевым "
"словом, обычно лучше добавить в конец имени символ подчеркивания, а не "
"сокращать слово или искажать его. Таким образом, ``class_`` лучше, чем "
"``clss``. (Возможно, будет лучше избегать конфликта имен путем подбора "
"синонима)."

#: ../doc/dev_guide/python_style_guide.rst:680
msgid "Method Names and Instance Variables"
msgstr "Имена методов и переменные экземпляров"

#: ../doc/dev_guide/python_style_guide.rst:682
msgid ""
"Use the function naming rules: lowercase with words separated by "
"underscores as necessary to improve readability."
msgstr ""
"Используйте тот же стиль, что и для имен функций: они должны состоять из "
"строчных букв, а слова разделяться символами подчеркивания, чтобы "
"улучшить читаемость."

#: ../doc/dev_guide/python_style_guide.rst:685
msgid ""
"Use one leading underscore only for non-public methods and instance "
"variables."
msgstr ""
"Используйте только один символ подчеркивания в начале слова для "
"внутренних методов и переменных экземпляров."

#: ../doc/dev_guide/python_style_guide.rst:688
msgid ""
"To avoid name clashes with subclasses, use two leading underscores to "
"invoke Python's name mangling rules."
msgstr ""
"Чтобы избежать конфликта имен с подклассами, добавьте два символа "
"подчеркивания в начале слова, чтобы включить механизм изменения имен в "
"Python. "

#: ../doc/dev_guide/python_style_guide.rst:691
msgid ""
"Python mangles these names with the class name: if class Foo has an "
"attribute named ``__a``, it cannot be accessed by ``Foo.__a``.  (An "
"insistent user could still gain access by calling ``Foo._Foo__a``.) "
"Generally, double leading underscores should be used only to avoid name "
"conflicts with attributes in classes designed to be subclassed."
msgstr ""
"Python изменяет эти имена: если в классе Foo есть атрибут с именем "
"``__a``, к нему нельзя обратиться через ``Foo.__a``. (Настойчивый "
"пользователь всё равно может получить доступ через ``Foo._Foo__a``.) "
"Вообще, двойное подчеркивание в начале имени должно использоваться только"
" во избежание конфликта имен с атрибутами классов, предназначенных для "
"разделения на подклассы."

#: ../doc/dev_guide/python_style_guide.rst:697
msgid "Note: there is some controversy about the use of __names (see below)."
msgstr ""
"Примечание: есть некоторые разногласия по поводу использования имен "
"__names (см. ниже)."

#: ../doc/dev_guide/python_style_guide.rst:701
msgid "Constants"
msgstr "Постоянные"

#: ../doc/dev_guide/python_style_guide.rst:703
msgid ""
"Constants are usually defined on a module level and written in all "
"capital letters with underscores separating words.  Examples include "
"``MAX_OVERFLOW`` and ``TOTAL``."
msgstr ""
"Постоянные обычно объявляются на уровне модуля и записываются только "
"заглавными буквами, а слова разделяются символами подчеркивания. "
"Например: MAX_OVERFLOW, TOTAL."

#: ../doc/dev_guide/python_style_guide.rst:709
msgid "Designing for inheritance"
msgstr "Проектирование наследования"

#: ../doc/dev_guide/python_style_guide.rst:711
msgid ""
"Always decide whether a class's methods and instance variables "
"(collectively: \"attributes\") should be public or non-public.  If in "
"doubt, choose non-public; it's easier to make it public later than to "
"make a public attribute non-public."
msgstr ""
"Обязательно решите, каким должен быть метод класса или переменная "
"экземпляра класса (в общем, атрибут) -- доступными (public) или "
"внутренними (non-public). Если вы сомневаетесь, делайте их внутренними. "
"Потом будет проще открыть к ним доступ, чем наоборот."

#: ../doc/dev_guide/python_style_guide.rst:716
msgid ""
"Public attributes are those that you expect unrelated clients of your "
"class to use, with your commitment to avoid backward incompatible "
"changes.  Non-public attributes are those that are not intended to be "
"used by third parties; you make no guarantees that non-public attributes "
"won't change or even be removed."
msgstr ""
"Доступные атрибуты -- это такие атрибуты, которые будут использовать "
"потребители ваших классов, и вы должны быть уверены в обратной "
"совместимости. Внутренние атрибуты, в свою очередь, не предназначены для "
"использования третьими лицами, поэтому вы можете не гарантировать, что не"
" измените или не удалите эти атрибуты."

#: ../doc/dev_guide/python_style_guide.rst:722
msgid ""
"We don't use the term \"private\" here, since no attribute is really "
"private in Python (without a generally unnecessary amount of work)."
msgstr ""
"Мы не используем термин \"закрытый\" (private), потому что на самом деле "
"в Python таких атрибутов не бывает (без ненужных дополнительных усилий)."

#: ../doc/dev_guide/python_style_guide.rst:725
msgid ""
"Another category of attributes are those that are part of the \"subclass "
"API\" (often called \"protected\" in other languages).  Some classes are "
"designed to be inherited from, either to extend or modify aspects of the "
"class's behavior.  When designing such a class, take care to make "
"explicit decisions about which attributes are public, which are part of "
"the subclass API, and which are truly only to be used by your base class."
msgstr ""
"Другой тип атрибутов классов принадлежит так называемому API подклассов "
"(в других языках они часто называются защищенными -- \"protected\"). "
"Некоторые классы предназначены для наследования другими классами, которые"
" расширяют или изменяют поведение базового класса. Когда вы проектируете "
"такой класс, решите и явным образом укажите, какие атрибуты являются "
"доступными (public), какие относятся к API подклассов (subclass API), а "
"какие используются только базовым классом."

#: ../doc/dev_guide/python_style_guide.rst:733
msgid "With this in mind, here are the Pythonic guidelines:"
msgstr "С учетом вышесказанного, сформулируем рекомендации:"

#: ../doc/dev_guide/python_style_guide.rst:735
msgid "Public attributes should have no leading underscores."
msgstr "В начале имени доступных атрибутов не должно быть символов подчеркивания."

#: ../doc/dev_guide/python_style_guide.rst:737
msgid ""
"If your public attribute name collides with a reserved keyword, append a "
"single trailing underscore to your attribute name.  This is preferable to"
" an abbreviation or corrupted spelling.  (However, not withstanding this "
"rule, 'cls' is the preferred spelling for any variable or argument which "
"is known to be a class, especially the first argument to a class method.)"
msgstr ""
"Если имя доступного атрибута конфликтует с ключевым словом языка, "
"добавьте в конец имени один символ подчеркивания. Это более "
"предпочтительно, чем сокращать слово или искажать его (однако, у этого "
"правила есть исключение: 'cls' -- это предпочтительное написание любой "
"переменной или аргумента, который означает класс, а особенно первого "
"аргумента метода класса)."

#: ../doc/dev_guide/python_style_guide.rst:745
#: ../doc/dev_guide/python_style_guide.rst:756
#: ../doc/dev_guide/python_style_guide.rst:778
msgid "Note 1:"
msgstr "Примечание 1:"

#: ../doc/dev_guide/python_style_guide.rst:745
msgid "See the argument name recommendation above for class methods."
msgstr "См. рекомендации по именам аргументов выше для методов класса."

#: ../doc/dev_guide/python_style_guide.rst:747
msgid ""
"For simple public data attributes, it is best to expose just the "
"attribute name, without complicated accessor/mutator methods.  Keep in "
"mind that Python provides an easy path to future enhancement, should you "
"find that a simple data attribute needs to grow functional behavior.  In "
"that case, use properties to hide functional implementation behind simple"
" data attribute access syntax."
msgstr ""
"Назовите простые открытые атрибуты понятными именами и не пишите сложные "
"методы доступа и изменения (accessor/mutator). Следует помнить, что в "
"Python очень легко расширить поведение функции, если потребуется. В этом "
"случае используйте свойства (properties), чтобы скрыть функциональную "
"реализацию за синтаксисом доступа к атрибутам."

#: ../doc/dev_guide/python_style_guide.rst:756
msgid "Properties only work on new-style classes."
msgstr "Свойства работают только в классах нового стиля (new-style classes)."

#: ../doc/dev_guide/python_style_guide.rst:760
#: ../doc/dev_guide/python_style_guide.rst:783
msgid "Note 2:"
msgstr "Примечание 2:"

#: ../doc/dev_guide/python_style_guide.rst:759
msgid ""
"Try to keep the functional behavior side-effect free, although side-"
"effects such as caching are generally fine."
msgstr ""
"Постарайтесь избавиться от побочных эффектов, связанных с функциональным "
"поведением, хотя такие вещи, как кэширование, вполне допустимы."

#: ../doc/dev_guide/python_style_guide.rst:765
#: ../doc/dev_guide/python_style_guide.rst:788
msgid "Note 3:"
msgstr "Примечание 3:"

#: ../doc/dev_guide/python_style_guide.rst:763
msgid ""
"Avoid using properties for computationally expensive operations; the "
"attribute notation makes the caller believe that access is (relatively) "
"cheap."
msgstr ""
"Избегайте использовать вычислительно затратные операции, потому что из-за"
" записи с помощью атрибутов создается впечатление, что доступ происходит "
"(относительно) быстро."

#: ../doc/dev_guide/python_style_guide.rst:767
msgid ""
"If your class is intended to be subclassed, and you have attributes that "
"you do not want subclasses to use, consider naming them with double "
"leading underscores and no trailing underscores.  This invokes Python's "
"name mangling algorithm, where the name of the class is mangled into the "
"attribute name.  This helps avoid attribute name collisions should "
"subclasses inadvertently contain attributes with the same name."
msgstr ""
"Если ваш класс предназначен для разделения на подклассы, но некоторые "
"атрибуты не должны наследоваться подклассами, подумайте о добавлении в "
"имена двух символов подчеркивания в начале и ни одного в конце. Механизм "
"изменения имен в Python сработает так, что имя класса добавится к имени "
"такого атрибута. Это позволит избежать конфликта имен, если в подклассах "
"случайно появятся атрибуты с такими же именами."

#: ../doc/dev_guide/python_style_guide.rst:776
msgid ""
"Note that only the simple class name is used in the mangled name, so if a"
" subclass chooses both the same class name and attribute name, you can "
"still get name collisions."
msgstr ""
"Обратите внимание, что только имена простых классов используются в "
"измененном имени, поэтому если в подклассе будет то же имя класса и имя "
"атрибута, то снова возникнет конфликт имен."

#: ../doc/dev_guide/python_style_guide.rst:781
msgid ""
"Name mangling can make certain uses, such as debugging and "
"``__getattr__()``, less convenient.  However the name mangling algorithm "
"is well documented and easy to perform manually."
msgstr ""
"Механизм изменения имен может затруднить отладку или работу с "
"``__getattr__()``. Тем не менее, алгоритм хорошо документирован и легко "
"реализуется вручную."

#: ../doc/dev_guide/python_style_guide.rst:786
msgid ""
"Not everyone likes name mangling.  Try to balance the need to avoid "
"accidental name clashes with potential use by advanced callers."
msgstr ""
"Не всем нравится механизм изменения имен. Постарайтесь достичь "
"компромисса между необходимостью избежать конфликта имен и возможностью "
"доступа к этим атрибутам."

#: ../doc/dev_guide/python_style_guide.rst:792
msgid "References"
msgstr "Использованная литература"

#: ../doc/dev_guide/python_style_guide.rst:794
msgid ""
"`PEP 7, Style Guide for C Code, van Rossum "
"<https://www.python.org/dev/peps/pep-0007/>`_"
msgstr ""
"ван Россум Гвидо. `PEP 7, Руководство по программированию на языке C "
"<https://www.python.org/dev/peps/pep-0007/>`_"

#: ../doc/dev_guide/python_style_guide.rst:795
msgid ""
"`Barry's GNU Mailman style guide "
"<http://barry.warsaw.us/software/STYLEGUIDE.txt>`_"
msgstr ""
"`Руководство Барри по GNU Mailman "
"<http://barry.warsaw.us/software/STYLEGUIDE.txt>`_"

#: ../doc/dev_guide/python_style_guide.rst:796
msgid "`CamelCase Wikipedia page <http://www.wikipedia.com/wiki/CamelCase>`_"
msgstr ""
"`Страница Википедии о CamelCase "
"<http://www.wikipedia.com/wiki/CamelCase>`_"

#: ../doc/dev_guide/python_style_guide.rst:800
msgid "Copyright"
msgstr "Защита авторских прав"

#: ../doc/dev_guide/python_style_guide.rst:802
msgid "Author:"
msgstr "Автор:"

#: ../doc/dev_guide/python_style_guide.rst:804
msgid "Guido van Rossum <guido@python.org>"
msgstr "Гвидо ван Россум <guido@python.org>"

#: ../doc/dev_guide/python_style_guide.rst:805
msgid "Barry Warsaw <barry@python.org>"
msgstr "Барри Ворсо <barry@python.org>"

#: ../doc/dev_guide/reference_capi/box.rst:3
msgid "Module `box`"
msgstr "Модуль `box`"

#: ../doc/dev_guide/reference_capi/box.rst:7
msgid "Opaque structure passed to a C stored procedure"
msgstr "Непрозрачная структура, передаваемая в хранимую процедуру на языке C."

#: ../doc/dev_guide/reference_capi/box.rst:13
msgid "Return a tuple from a C stored procedure."
msgstr "Возврат кортежа с помощью хранимой процедуры на языке C."

#: ../doc/dev_guide/reference_capi/box.rst:15
msgid ""
"The returned tuple is automatically reference-counted by Tarantool. An "
"example program that uses ``box_return_tuple()`` is :ref:`write.c "
"<f_c_tutorial-write>`."
msgstr ""
"Для возвращаемого кортежа Tarantool проводит автоматический подсчет "
"ссылок. Пример программы, которая использует ``box_return_tuple()``: "
":ref:`write.c <f_c_tutorial-write>`."

#: ../doc/dev_guide/reference_capi/box.rst:19
msgid "an opaque structure passed to the C stored procedure by Tarantool"
msgstr ""
"непрозрачная структура, передаваемая Tarantool'ом в хранимую процедуру на"
" языке C"

#: ../doc/dev_guide/reference_capi/box.rst:21
msgid "a tuple to return"
msgstr "возвращаемый кортеж"

#: ../doc/dev_guide/reference_capi/box.rst
#: ../doc/dev_guide/reference_capi/box_index.rst
#: ../doc/dev_guide/reference_capi/coio.rst
#: ../doc/dev_guide/reference_capi/error.rst
#: ../doc/dev_guide/reference_capi/fiber.rst
#: ../doc/dev_guide/reference_capi/latch.rst
#: ../doc/dev_guide/reference_capi/tuple.rst
#: ../doc/dev_guide/reference_capi/txn.rst
#: ../doc/dev_guide/reference_capi/utils.rst
msgid "Returns"
msgstr "Возвращает"

#: ../doc/dev_guide/reference_capi/box.rst:23
msgid ""
"-1 on error (perhaps, out of memory; check :ref:`box_error_last()<c_api-"
"error-box_error_last>`)"
msgstr ""
"-1 в случае ошибки (возможная нехватка памяти; проверьте "
":ref:`box_error_last()<c_api-error-box_error_last>`)"

#: ../doc/dev_guide/reference_capi/box.rst:25
#: ../doc/dev_guide/reference_capi/box.rst:73
#: ../doc/dev_guide/reference_capi/box.rst:90
#: ../doc/dev_guide/reference_capi/box.rst:106
#: ../doc/dev_guide/reference_capi/box.rst:127
#: ../doc/dev_guide/reference_capi/box.rst:148
#: ../doc/dev_guide/reference_capi/tuple.rst:65
#: ../doc/dev_guide/reference_capi/tuple.rst:78
msgid "0 otherwise"
msgstr "0 в остальных случаях"

#: ../doc/dev_guide/reference_capi/box.rst:31
msgid "Find space id by name."
msgstr "Поиск идентификатора спейса по имени."

#: ../doc/dev_guide/reference_capi/box.rst:33
msgid "This function performs a SELECT request on the ``_vspace`` system space."
msgstr ""
"Данная функция делает запрос выборки SELECT из системного спейса "
"``_vspace``."

#: ../doc/dev_guide/reference_capi/box.rst:35
msgid "space name"
msgstr "имя спейса"

#: ../doc/dev_guide/reference_capi/box.rst:36
#: ../doc/dev_guide/reference_capi/box.rst:52
msgid "length of ``name``"
msgstr "длина имени ``name``"

#: ../doc/dev_guide/reference_capi/box.rst:38
#: ../doc/dev_guide/reference_capi/box.rst:54
msgid ""
":c:macro:`BOX_ID_NIL` on error or if not found (check "
":ref:`box_error_last()<c_api-error-box_error_last>`)"
msgstr ""
":c:macro:`BOX_ID_NIL` в случае ошибки или отсутствия (проверьте "
":ref:`box_error_last()<c_api-error-box_error_last>`)"

#: ../doc/dev_guide/reference_capi/box.rst:40
#: ../doc/dev_guide/reference_capi/box.rst:56
msgid "space_id otherwise"
msgstr "space_id в остальных случаях"

#: ../doc/dev_guide/reference_capi/box.rst:42
msgid "See also: :c:type:`box_index_id_by_name`"
msgstr "См. также :c:type:`box_index_id_by_name`"

#: ../doc/dev_guide/reference_capi/box.rst:46
msgid "Find index id by name."
msgstr "Поиск идентификатора индекса по имени."

#: ../doc/dev_guide/reference_capi/box.rst:48
msgid "This function performs a SELECT request on the ``_vindex`` system space."
msgstr ""
"Данная функция делает запрос выборки SELECT из системного спейса "
"``_vindex``."

#: ../doc/dev_guide/reference_capi/box.rst:50
#: ../doc/dev_guide/reference_capi/box.rst:66
#: ../doc/dev_guide/reference_capi/box.rst:83
#: ../doc/dev_guide/reference_capi/box.rst:98
#: ../doc/dev_guide/reference_capi/box.rst:114
#: ../doc/dev_guide/reference_capi/box.rst:135
#: ../doc/dev_guide/reference_capi/box.rst:156
#: ../doc/dev_guide/reference_capi/box_index.rst:85
#: ../doc/dev_guide/reference_capi/box_index.rst:129
#: ../doc/dev_guide/reference_capi/box_index.rst:139
#: ../doc/dev_guide/reference_capi/box_index.rst:149
#: ../doc/dev_guide/reference_capi/box_index.rst:168
#: ../doc/dev_guide/reference_capi/box_index.rst:184
#: ../doc/dev_guide/reference_capi/box_index.rst:200
#: ../doc/dev_guide/reference_capi/box_index.rst:216
#: ../doc/dev_guide/reference_capi/box_index.rst:234
msgid "space identifier"
msgstr "идентификатор спейса"

#: ../doc/dev_guide/reference_capi/box.rst:51
msgid "index name"
msgstr "имя индекса"

#: ../doc/dev_guide/reference_capi/box.rst:58
msgid "See also: :c:type:`box_space_id_by_name`"
msgstr "См. также :c:type:`box_space_id_by_name`"

#: ../doc/dev_guide/reference_capi/box.rst:64
msgid "Execute an INSERT/REPLACE request."
msgstr "Выполнение запроса вставки или замены (INSERT/REPLACE)."

#: ../doc/dev_guide/reference_capi/box.rst:67
#: ../doc/dev_guide/reference_capi/box.rst:84
#: ../doc/dev_guide/reference_capi/box.rst:137
msgid "encoded tuple in MsgPack Array format ([ field1, field2, ...])"
msgstr "закодированный кортеж в формате MsgPack-массива ([ field1, field2, ...])"

#: ../doc/dev_guide/reference_capi/box.rst:68
#: ../doc/dev_guide/reference_capi/box.rst:85
#: ../doc/dev_guide/reference_capi/box.rst:138
msgid "end of a ``tuple``"
msgstr "конец кортежа ``tuple``"

#: ../doc/dev_guide/reference_capi/box.rst:69
#: ../doc/dev_guide/reference_capi/box.rst:86
msgid "output argument. Resulting tuple. Can be set to NULL to discard result"
msgstr ""
"аргумент вывода. Возвращаемый кортеж. Можно задать значение NULL для "
"сброса результата"

#: ../doc/dev_guide/reference_capi/box.rst:72
#: ../doc/dev_guide/reference_capi/box.rst:89
#: ../doc/dev_guide/reference_capi/box.rst:105
#: ../doc/dev_guide/reference_capi/box.rst:126
msgid "-1 on error (check :ref:`box_error_last()<c_api-error-box_error_last>`)"
msgstr ""
"-1 в случае ошибки (проверьте :ref:`box_error_last()<c_api-error-"
"box_error_last>`)"

#: ../doc/dev_guide/reference_capi/box.rst:75
msgid "See also :ref:`space_object.insert()<box_space-insert>`"
msgstr "См. также :ref:`space_object.insert()<box_space-insert>`"

#: ../doc/dev_guide/reference_capi/box.rst:81
msgid "Execute a REPLACE request."
msgstr "Выполнение запроса замены (REPLACE)."

#: ../doc/dev_guide/reference_capi/box.rst:92
msgid "See also :ref:`space_object.replace()<box_space-replace>`"
msgstr "См. также :ref:`space_object.replace()<box_space-replace>`"

#: ../doc/dev_guide/reference_capi/box.rst:96
msgid "Execute a DELETE request."
msgstr "Выполнение запроса удаления (DELETE)."

#: ../doc/dev_guide/reference_capi/box.rst:99
#: ../doc/dev_guide/reference_capi/box.rst:115
#: ../doc/dev_guide/reference_capi/box.rst:136
#: ../doc/dev_guide/reference_capi/box_index.rst:86
#: ../doc/dev_guide/reference_capi/box_index.rst:130
#: ../doc/dev_guide/reference_capi/box_index.rst:140
#: ../doc/dev_guide/reference_capi/box_index.rst:150
#: ../doc/dev_guide/reference_capi/box_index.rst:169
#: ../doc/dev_guide/reference_capi/box_index.rst:185
#: ../doc/dev_guide/reference_capi/box_index.rst:201
#: ../doc/dev_guide/reference_capi/box_index.rst:217
#: ../doc/dev_guide/reference_capi/box_index.rst:235
msgid "index identifier"
msgstr "идентификатор индекса"

#: ../doc/dev_guide/reference_capi/box.rst:100
#: ../doc/dev_guide/reference_capi/box.rst:116
msgid "encoded key in MsgPack Array format ([ field1, field2, ...])"
msgstr "закодированный ключ в формате MsgPack-массива ([ field1, field2, ...])"

#: ../doc/dev_guide/reference_capi/box.rst:101
#: ../doc/dev_guide/reference_capi/box.rst:117
msgid "end of a ``key``"
msgstr "конец ключа ``key``"

#: ../doc/dev_guide/reference_capi/box.rst:102
#: ../doc/dev_guide/reference_capi/box.rst:123
#: ../doc/dev_guide/reference_capi/box.rst:144
msgid "output argument. An old tuple. Can be set to NULL to discard result"
msgstr ""
"аргумент вывода. Старый кортеж. Можно задать значение NULL для сброса "
"результата"

#: ../doc/dev_guide/reference_capi/box.rst:108
msgid "See also :ref:`space_object.delete()<box_space-delete>`"
msgstr "См. также :ref:`space_object.delete()<box_space-delete>`"

#: ../doc/dev_guide/reference_capi/box.rst:112
msgid "Execute an UPDATE request."
msgstr "Выполнение запроса обновления (UPDATE)."

#: ../doc/dev_guide/reference_capi/box.rst:118
#: ../doc/dev_guide/reference_capi/box.rst:139
msgid ""
"encoded operations in MsgPack Array format, e.g. ``[[ '=', field_id,  "
"value ], ['!', 2, 'xxx']]``"
msgstr ""
"закодированные операции в формате MsgPack-массива, например ``[[ '=', "
"field_id, value ], ['!', 2, 'xxx']]``"

#: ../doc/dev_guide/reference_capi/box.rst:120
msgid "end of an ``ops`` section"
msgstr "конец раздела операций ``ops``"

#: ../doc/dev_guide/reference_capi/box.rst:121
#: ../doc/dev_guide/reference_capi/box.rst:142
msgid ""
"0 if field_ids are zero-based as in C, 1 if field ids are 1-based as in "
"Lua"
msgstr ""
"0, если идентификаторы полей field_id с основанием 0, как в C, 1, если "
"идентификаторы полей с основанием 1, как в Lua"

#: ../doc/dev_guide/reference_capi/box.rst:129
msgid "See also :ref:`space_object.update()<box_space-update>`"
msgstr "См. также :ref:`space_object.update()<box_space-update>`"

#: ../doc/dev_guide/reference_capi/box.rst:133
msgid "Execute an UPSERT request."
msgstr "Выполнение запроса обновления и вставки (UPSERT)."

#: ../doc/dev_guide/reference_capi/box.rst:141
msgid "end of a ``ops``"
msgstr "конец операций ``ops``"

#: ../doc/dev_guide/reference_capi/box.rst:147
msgid "-1 on error (check ::ref:`box_error_last()<c_api-error-box_error_last>`)"
msgstr ""
"-1 в случае ошибки (проверьте :ref:`box_error_last()<c_api-error-"
"box_error_last>`)"

#: ../doc/dev_guide/reference_capi/box.rst:150
msgid "See also :ref:`space_object.upsert()<box_space-upsert>`"
msgstr "См. также :ref:`space_object.upsert()<box_space-upsert>`"

#: ../doc/dev_guide/reference_capi/box.rst:154
msgid "Truncate a space."
msgstr "Очистка спейса."

#: ../doc/dev_guide/reference_capi/box_index.rst:3
msgid "Module `index`"
msgstr "Модуль `index`"

#: ../doc/dev_guide/reference_capi/box_index.rst:7
msgid "A space iterator"
msgstr "Итератор спейса"

#: ../doc/dev_guide/reference_capi/box_index.rst:13
msgid ""
"Controls how to iterate over tuples in an index. Different index types "
"support different iterator types. For example, one can start iteration "
"from a particular value (request key) and then retrieve all tuples where "
"keys are greater or equal (= GE) to this key."
msgstr ""
"Управление итерацией кортежей в индексе. Различные типы индексов "
"поддерживают различные типы итераторов. Например, можно начать итерацию с"
" определенного значения (ключ запроса), а затем получить все кортежи, "
"ключи которых больше или равны (= GE) заданному ключу."

#: ../doc/dev_guide/reference_capi/box_index.rst:18
msgid ""
"If iterator type is not supported by the selected index type, iterator "
"constructor must fail with ER_UNSUPPORTED. To be selectable for primary "
"key, an index must support at least ITER_EQ and ITER_GE types."
msgstr ""
"Если тип итератора не поддерживается выбранным типом индекса, конструктор"
" итератора прекратит работу с ошибкой ER_UNSUPPORTED. Чтобы индекс можно "
"было выбрать для первичного ключа, он должен поддерживать типы ITER_EQ и "
"ITER_GE."

#: ../doc/dev_guide/reference_capi/box_index.rst:22
msgid ""
"NULL value of request key corresponds to the first or last key in the "
"index, depending on iteration direction. (first key for GE and GT types, "
"and last key for LE and LT). Therefore, to iterate over all tuples in an "
"index, one can use ITER_GE or ITER_LE iteration types with start key "
"equal to NULL. For ITER_EQ, the key must not be NULL."
msgstr ""
"Значение ключа запроса NULL соответствует первому или последнему ключу в "
"индексе, в зависимости от направления итерации (первый ключ для типов GE "
"и GT, последний ключ для типов LE и LT). Таким образом, для итерации по "
"всем кортежам в индексе можно использовать типы итерации ITER_GE или "
"ITER_LE с начальным ключом, который равен NULL. Для ITER_EQ ключ не "
"должен равняться NULL."

#: ../doc/dev_guide/reference_capi/box_index.rst:30
msgid "key == x ASC order"
msgstr "ключ == x в порядке возрастания"

#: ../doc/dev_guide/reference_capi/box_index.rst:34
msgid "key == x DESC order"
msgstr "ключ == x в порядке убывания"

#: ../doc/dev_guide/reference_capi/box_index.rst:38
msgid "all tuples"
msgstr "все кортежи"

#: ../doc/dev_guide/reference_capi/box_index.rst:42
msgid "key < x"
msgstr "ключ < x"

#: ../doc/dev_guide/reference_capi/box_index.rst:46
msgid "key <= x"
msgstr "ключ <= x"

#: ../doc/dev_guide/reference_capi/box_index.rst:50
msgid "key >= x"
msgstr "ключ >= x"

#: ../doc/dev_guide/reference_capi/box_index.rst:54
msgid "key > x"
msgstr "ключ > x"

#: ../doc/dev_guide/reference_capi/box_index.rst:58
msgid "all bits from x are set in key"
msgstr "все биты из x заданы в ключе"

#: ../doc/dev_guide/reference_capi/box_index.rst:62
msgid "at least one x's bit is set"
msgstr "задан хотя бы один бит из x"

#: ../doc/dev_guide/reference_capi/box_index.rst:66
msgid "all bits are not set"
msgstr "ни один бит не задан"

#: ../doc/dev_guide/reference_capi/box_index.rst:70
msgid "key overlaps x"
msgstr "ключ пересекается с x"

#: ../doc/dev_guide/reference_capi/box_index.rst:74
msgid "tuples in distance ascending order from specified point"
msgstr "кортежи в порядке возрастания расстояния из указанной точки"

#: ../doc/dev_guide/reference_capi/box_index.rst:80
msgid "Allocate and initialize iterator for space_id, index_id."
msgstr "Выделение и инициализация итератора для space_id, index_id."

#: ../doc/dev_guide/reference_capi/box_index.rst:82
msgid ""
"The returned iterator must be destroyed by :ref:`box_iterator_free<c_api-"
"box_index-box_iterator_free>`."
msgstr ""
"Возвращаемый итератор следует удалить с помощью :ref:`box_iterator_free"
"<c_api-box_index-box_iterator_free>`."

#: ../doc/dev_guide/reference_capi/box_index.rst:87
#: ../doc/dev_guide/reference_capi/box_index.rst:218
msgid ":ref:`iterator_type<c_api-box_index-iterator_type>`"
msgstr ":ref:`iterator_type<c_api-box_index-iterator_type>`"

#: ../doc/dev_guide/reference_capi/box_index.rst:88
#: ../doc/dev_guide/reference_capi/box_index.rst:170
#: ../doc/dev_guide/reference_capi/box_index.rst:186
#: ../doc/dev_guide/reference_capi/box_index.rst:202
#: ../doc/dev_guide/reference_capi/box_index.rst:219
msgid "encode key in MsgPack Array format ([part1, part2, ...])"
msgstr "кодировка ключа в формате MsgPack-массива ([part1, part2, ...])"

#: ../doc/dev_guide/reference_capi/box_index.rst:89
#: ../doc/dev_guide/reference_capi/box_index.rst:171
#: ../doc/dev_guide/reference_capi/box_index.rst:187
#: ../doc/dev_guide/reference_capi/box_index.rst:203
#: ../doc/dev_guide/reference_capi/box_index.rst:220
msgid "the end of encoded ``key``"
msgstr "часть закодированного ключа ``key``"

#: ../doc/dev_guide/reference_capi/box_index.rst:91
msgid "NULL on error (check :ref:`box_error_last <c_api-error-box_error_last>`)"
msgstr ""
"NULL в случае ошибки (проверьте :ref:`box_error_last()<c_api-error-"
"box_error_last>`)"

#: ../doc/dev_guide/reference_capi/box_index.rst:92
msgid "iterator otherwise"
msgstr "итератор в остальных случаях"

#: ../doc/dev_guide/reference_capi/box_index.rst:94
msgid ""
"See also :ref:`box_iterator_next<c_api-box_index-box_iterator_next>`, "
":ref:`box_iterator_free<c_api-box_index-box_iterator_free>`"
msgstr ""
"См. также :ref:`box_iterator_next<c_api-box_index-box_iterator_next>`, "
":ref:`box_iterator_free<c_api-box_index-box_iterator_free>`"

#: ../doc/dev_guide/reference_capi/box_index.rst:101
msgid "Retrieve the next item from the ``iterator``."
msgstr "Получение следующего пункта из итератора ``iterator``."

#: ../doc/dev_guide/reference_capi/box_index.rst:103
#: ../doc/dev_guide/reference_capi/box_index.rst:117
msgid ""
"an iterator returned by :ref:`box_index_iterator <c_api-box_index-"
"box_index_iterator>`"
msgstr ""
"итератор, возвращаемый :ref:`box_index_iterator <c_api-box_index-"
"box_index_iterator>`"

#: ../doc/dev_guide/reference_capi/box_index.rst:105
msgid "output argument. result a tuple or NULL if there is no more data."
msgstr ""
"аргумент вывода. Результатом будет кортеж или NULL, если данных больше "
"нет."

#: ../doc/dev_guide/reference_capi/box_index.rst:108
#: ../doc/dev_guide/reference_capi/box_index.rst:132
#: ../doc/dev_guide/reference_capi/box_index.rst:142
#: ../doc/dev_guide/reference_capi/box_index.rst:175
msgid "-1 on error (check :ref:`box_error_last <c_api-error-box_error_last>`)"
msgstr ""
"-1 в случае ошибки (проверьте :ref:`box_error_last()<c_api-error-"
"box_error_last>`)"

#: ../doc/dev_guide/reference_capi/box_index.rst:109
msgid "0 on success. The end of data is not an error."
msgstr "0 в случае выполнения. Отсутствие данных не является ошибкой."

#: ../doc/dev_guide/reference_capi/box_index.rst:115
msgid "Destroy and deallocate iterator."
msgstr "Удаление и освобождение итератора."

#: ../doc/dev_guide/reference_capi/box_index.rst:122
msgid ""
"Determine a direction of the given iterator type: -1 for REQ, LT, LE, and"
" +1 for all others."
msgstr ""
"Определение направления заданного типа итератора: -1 для REQ, LT, LE, и "
"+1 для всех остальных."

#: ../doc/dev_guide/reference_capi/box_index.rst:127
msgid "Return the number of element in the index."
msgstr "Возврат номера элемента в индексе."

#: ../doc/dev_guide/reference_capi/box_index.rst:133
#: ../doc/dev_guide/reference_capi/box_index.rst:143
msgid ">= 0 otherwise"
msgstr ">= 0 в остальных случаях"

#: ../doc/dev_guide/reference_capi/box_index.rst:137
msgid "Return the number of bytes used in memory by the index."
msgstr "Возврат количества байтов памяти, используемых индексом."

#: ../doc/dev_guide/reference_capi/box_index.rst:147
msgid "Return a random tuple from the index (useful for statistical analysis)."
msgstr ""
"Возврат случайного кортежа из индекса (используется для статистического "
"анализа)."

#: ../doc/dev_guide/reference_capi/box_index.rst:151
msgid "random seed"
msgstr "случайное начальное число"

#: ../doc/dev_guide/reference_capi/box_index.rst:152
#: ../doc/dev_guide/reference_capi/box_index.rst:172
#: ../doc/dev_guide/reference_capi/box_index.rst:188
#: ../doc/dev_guide/reference_capi/box_index.rst:204
msgid "output argument. result a tuple or NULL if there is no tuples in space"
msgstr ""
"аргумент вывода. Результатом будет кортеж или NULL, если в спейсе нет "
"кортежей."

#: ../doc/dev_guide/reference_capi/box_index.rst:155
msgid "See also: :ref:`index_object.random<box_index-random>`"
msgstr "См. также :ref:`index_object.random<box_index-random>`"

#: ../doc/dev_guide/reference_capi/box_index.rst:161
msgid "Get a tuple from index by the key."
msgstr "Получение кортежа из индекса по ключу."

#: ../doc/dev_guide/reference_capi/box_index.rst:163
msgid ""
"Please note that this function works much more faster than "
":ref:`index_object.select<box_index-select>` or :ref:`box_index_iterator"
"<c_api-box_index-box_index_iterator>` + :ref:`box_iterator_next<c_api-"
"box_index-box_iterator_next>`."
msgstr ""
"Следует отметить, что данная функция работает намного быстрее, чем "
":ref:`index_object.select<box_index-select>` или :ref:`box_index_iterator"
"<c_api-box_index-box_index_iterator>` + :ref:`box_iterator_next<c_api-"
"box_index-box_iterator_next>`."

#: ../doc/dev_guide/reference_capi/box_index.rst:176
#: ../doc/dev_guide/reference_capi/box_index.rst:192
#: ../doc/dev_guide/reference_capi/box_index.rst:208
#: ../doc/dev_guide/reference_capi/box_index.rst:223
#: ../doc/dev_guide/reference_capi/fiber.rst:172
#: ../doc/dev_guide/reference_capi/txn.rst:18
#: ../doc/dev_guide/reference_capi/txn.rst:27
#: ../doc/dev_guide/reference_capi/utils.rst:65
msgid "0 on success"
msgstr "0, если выполнено"

#: ../doc/dev_guide/reference_capi/box_index.rst:178
msgid "See also: ``index_object.get()``"
msgstr "См. также ``index_object.get()``"

#: ../doc/dev_guide/reference_capi/box_index.rst:182
msgid "Return a first (minimal) tuple matched the provided key."
msgstr ""
"Возврат первого (минимального) кортежа, который соответствует заданному "
"ключу."

#: ../doc/dev_guide/reference_capi/box_index.rst:191
#: ../doc/dev_guide/reference_capi/box_index.rst:207
#: ../doc/dev_guide/reference_capi/box_index.rst:222
msgid "-1 on error (check :ref:`box_error_last() <c_api-error-box_error_last>`)"
msgstr ""
"-1 в случае ошибки (проверьте :ref:`box_error_last()<c_api-error-"
"box_error_last>`)"

#: ../doc/dev_guide/reference_capi/box_index.rst:194
msgid "See also: :ref:`index_object.min()<box_index-min>`"
msgstr "См. также :ref:`index_object.min()<box_index-min>`"

#: ../doc/dev_guide/reference_capi/box_index.rst:198
msgid "Return a last (maximal) tuple matched the provided key."
msgstr ""
"Возврат последнего (максимального) кортежа, который соответствует "
"заданному ключу."

#: ../doc/dev_guide/reference_capi/box_index.rst:210
msgid "See also: :ref:`index_object.max()<box_index-max>`"
msgstr "См. также :ref:`index_object.max()<box_index-max>`"

#: ../doc/dev_guide/reference_capi/box_index.rst:214
msgid "Count the number of tuple matched the provided key."
msgstr "Подсчет количества кортежей, которые соответствуют заданному ключу."

#: ../doc/dev_guide/reference_capi/box_index.rst:225
msgid "See also: :ref:`index_object.count()<box_index-count>`"
msgstr "См. также :ref:`index_object.count()<box_index-count>`"

#: ../doc/dev_guide/reference_capi/box_index.rst:230
msgid "Return :ref:`key definition <capi-tuple_key_def>` for an index"
msgstr "Возврат :ref:`определения ключа <capi-tuple_key_def>` для индекса"

#: ../doc/dev_guide/reference_capi/box_index.rst:232
msgid "Returned object is valid until the next yield."
msgstr "Возвращаемый объект действителен до следующей передачи управления."

#: ../doc/dev_guide/reference_capi/box_index.rst:237
#: ../doc/dev_guide/reference_capi/tuple.rst:169
msgid "key definition on success"
msgstr "определение ключа, если выполнено"

#: ../doc/dev_guide/reference_capi/box_index.rst:238
#: ../doc/dev_guide/reference_capi/tuple.rst:170
#: ../doc/dev_guide/reference_capi/tuple.rst:188
msgid "NULL on error"
msgstr "NULL в случае ошибки"

#: ../doc/dev_guide/reference_capi/box_index.rst:240
msgid "See also: :ref:`box_tuple_compare() <capi-tuple_box_tuple_compare>`,"
msgstr "См. также :ref:`box_tuple_compare() <capi-tuple_box_tuple_compare>`,"

#: ../doc/dev_guide/reference_capi/box_index.rst:241
msgid ":ref:`box_tuple_format_new() <capi-tuple_box_tuple_format_new>`"
msgstr ":ref:`box_tuple_format_new() <capi-tuple_box_tuple_format_new>`"

#: ../doc/dev_guide/reference_capi/clock.rst:3
msgid "Module `clock`"
msgstr "Модуль `clock`"

#: ../doc/dev_guide/reference_capi/coio.rst:5
msgid "Module `coio`"
msgstr "Модуль `coio`"

#: ../doc/dev_guide/reference_capi/coio.rst:11
msgid "READ event"
msgstr "событие чтения READ"

#: ../doc/dev_guide/reference_capi/coio.rst:15
msgid "WRITE event"
msgstr "событие записи WRITE"

#: ../doc/dev_guide/reference_capi/coio.rst:21
msgid "Wait until READ or WRITE event on socket (``fd``). Yields."
msgstr ""
"Ожидание события чтения или записи (READ / WRITE) на сокете (``fd``) с "
"передачей управления."

#: ../doc/dev_guide/reference_capi/coio.rst:23
#: ../doc/dev_guide/reference_capi/coio.rst:72
msgid "non-blocking socket file description"
msgstr "дескриптор файла сокета без блокировки"

#: ../doc/dev_guide/reference_capi/coio.rst:24
msgid ""
"requested events to wait. Combination of ``COIO_READ | COIO_WRITE`` bit "
"flags."
msgstr ""
"запрашиваемые события. Комбинация битовых флагов ``COIO_READ | "
"COIO_WRITE``."

#: ../doc/dev_guide/reference_capi/coio.rst:26
msgid "timeout in seconds."
msgstr "время ожидания в секундах."

#: ../doc/dev_guide/reference_capi/coio.rst:28
msgid "0 - timeout"
msgstr "0 - время ожидания"

#: ../doc/dev_guide/reference_capi/coio.rst:29
msgid ""
">0 - returned events. Combination of ``TNT_IO_READ | TNT_IO_WRITE`` bit "
"flags."
msgstr ""
">0 - возвращаемые события. Комбинация битовых флагов ``TNT_IO_READ | "
"TNT_IO_WRITE``."

#: ../doc/dev_guide/reference_capi/coio.rst:35
#, fuzzy
msgid ""
"Create new eio task with specified function and arguments. Yield and wait"
" until the task is complete. This function may use the "
":ref:`worker_pool_threads <cfg_basic-worker_pool_threads>` configuration "
"parameter."
msgstr ""
"Создание новой задачи ошибочного ввода-вывода (eio) с указанной функцией "
"и аргументами. Передает управление и ожидает окончания задачи или "
"истечения времени ожидания. Функция может использовать конфигурационный "
"параметр :ref:`worker_pool_threads <cfg_basic-worker_pool_threads>`."

#: ../doc/dev_guide/reference_capi/coio.rst:40
msgid ""
"To avoid double error checking, this function does not throw exceptions. "
"In most cases it is also necessary to check the return value of the "
"called function and perform necessary actions. If func sets errno, the "
"errno is preserved across the call."
msgstr ""
"Во избежание двойной проверки ошибок функция не выбрасывает исключения. В"
" большинстве случаев также необходимо проверять возвращаемое значение "
"вызванной функции и выполнить необходимые действия. Если функция "
"определяет номер ошибки errno, этот номер ошибки сохраняется в течение "
"вызова."

#: ../doc/dev_guide/reference_capi/coio.rst:45
msgid "-1 and ``errno`` = ENOMEM if failed to create a task"
msgstr "-1 и ``errno`` = ENOMEM, если задача не была создана"

#: ../doc/dev_guide/reference_capi/coio.rst:46
#, fuzzy
msgid "the function's return (``errno`` is preserved)."
msgstr "возврат функции (``errno`` сохраняется)."

#: ../doc/dev_guide/reference_capi/coio.rst:50
#, fuzzy
msgid ""
"static ssize_t openfile_cb(va_list ap)\n"
"{\n"
"        const char* filename = va_arg(ap);\n"
"        int flags = va_arg(ap);\n"
"        return open(filename, flags);\n"
"}\n"
"\n"
"if (coio_call(openfile_cb, \"/tmp/file\", 0) == -1)\n"
"    // handle errors.\n"
"..."
msgstr ""
"static ssize_t openfile_cb(va_list ap)\n"
" {\n"
"         const char* filename = va_arg(ap);\n"
"         int flags = va_arg(ap);\n"
"         return open(filename, flags);\n"
" }\n"
" \n"
" if (coio_call(openfile_cb, 0.10, \"/tmp/file\", 0) == -1)\n"
"     // обработка ошибок.\n"
" ..."

#: ../doc/dev_guide/reference_capi/coio.rst:65
msgid "Fiber-friendly version of :manpage:`getaddrinfo(3)`."
msgstr "Версия :manpage:`getaddrinfo(3)` для файбера."

#: ../doc/dev_guide/reference_capi/coio.rst:69
msgid ""
"Close the ``fd`` and wake any fiber blocked in :ref:`coio_wait() <c_api-"
"coio-coio_wait>` call on this ``fd``."
msgstr ""
"Закрытие ``fd`` и пробуждение любого файбера, заблокированного в вызове "
":ref:`coio_wait() <c_api-coio-coio_wait>` на данном сокете ``fd``."

#: ../doc/dev_guide/reference_capi/coio.rst:74
msgid "the result of ``close(fd)``, see :manpage:`close(2)`"
msgstr "результат ``close(fd)``, см. :manpage:`close(2)`"

#: ../doc/dev_guide/reference_capi/error.rst:3
msgid "Module `error`"
msgstr "Модуль `error`"

#: ../doc/dev_guide/reference_capi/error.rst:153
msgid "Error - contains information about error."
msgstr "Ошибка -- содержит информацию об ошибке."

#: ../doc/dev_guide/reference_capi/error.rst:157
msgid "Return the error type, e.g. \"ClientError\", \"SocketError\", etc."
msgstr "Возврат типа ошибки, например, \"ClientError\", \"SocketError\" и т.д."

#: ../doc/dev_guide/reference_capi/error.rst:159
#: ../doc/dev_guide/reference_capi/error.rst:166
#: ../doc/dev_guide/reference_capi/error.rst:173
msgid "error"
msgstr "ошибка"

#: ../doc/dev_guide/reference_capi/error.rst:160
#: ../doc/dev_guide/reference_capi/error.rst:174
msgid "not-null string"
msgstr "ненулевая строка"

#: ../doc/dev_guide/reference_capi/error.rst:164
msgid "Return IPROTO error code"
msgstr "Возврат кода ошибки IPROTO"

#: ../doc/dev_guide/reference_capi/error.rst:167
msgid "enum :ref:`box_error_code <capi-box_error_code>`"
msgstr "enum :ref:`box_error_code <capi-box_error_code>`"

#: ../doc/dev_guide/reference_capi/error.rst:171
msgid "Return the error message"
msgstr "Возврат сообщения ошибки"

#: ../doc/dev_guide/reference_capi/error.rst:180
msgid "Get the information about the last API call error."
msgstr "Получение информации о последней ошибке вызова API."

#: ../doc/dev_guide/reference_capi/error.rst:182
msgid ""
"The Tarantool error handling works most like libc's errno. All API calls "
"return -1 or NULL in the event of error. An internal pointer to "
"box_error_t type is set by API functions to indicate what went wrong. "
"This value is only significant if API call failed (returned -1 or NULL)."
msgstr ""
"Обработка ошибок в Tarantool'е больше всего похожа на errno в стандартной"
" библиотеке языка С libc. Все вызовы API возвращают -1 или NULL в случае "
"ошибки. Внутренний указатель на тип box_error_t задается функциями, чтобы"
" указать, что пошло не так. Это значение показательно, если вызов API не "
"прошел (вернулось -1 или NULL)."

#: ../doc/dev_guide/reference_capi/error.rst:187
msgid ""
"Successful function can also touch the last error in some cases. You "
"don't have to clear the last error before calling API functions. The "
"returned object is valid only until next call to **any** API function."
msgstr ""
"Выполненная функция в некоторых случаях также может затрагивать последнюю"
" ошибку. Необязательно удалять последнюю ошибку перед вызовом "
"API-функций. Возвращаемый объект применим только до следующего вызова "
"**любой** API-функции."

#: ../doc/dev_guide/reference_capi/error.rst:191
msgid ""
"You must set the last error using box_error_set() in your stored C "
"procedures if you want to return a custom error message. You can re-throw"
" the last API error to IPROTO client by keeping the current value and "
"returning -1 to Tarantool from your stored procedure."
msgstr ""
"Следует задать последнюю ошибку с помощью box_error_set() из хранимых "
"процедур на языке C, если необходимо вернуть специальное сообщение об "
"ошибке. Можно повторно сгенерировать последнюю API-ошибку в клиент "
"IPROTO, сохранив текущее значение и вернув -1 to Tarantool из хранимой "
"процедуры."

#: ../doc/dev_guide/reference_capi/error.rst:196
msgid "last error"
msgstr "последняя ошибка"

#: ../doc/dev_guide/reference_capi/error.rst:200
msgid "Clear the last error."
msgstr "Удаление последней ошибки."

#: ../doc/dev_guide/reference_capi/error.rst:204
msgid "Set the last error."
msgstr "Определение последней ошибки."

#: ../doc/dev_guide/reference_capi/error.rst:208
msgid "IPROTO :ref:`error code<capi-box_error_code>`"
msgstr "IPROTO :ref:`error code<capi-box_error_code>`"

#: ../doc/dev_guide/reference_capi/error.rst:210
#: ../doc/dev_guide/reference_capi/say.rst:33
#: ../doc/dev_guide/reference_capi/say.rst:48
msgid "format arguments"
msgstr "аргументы формата"

#: ../doc/dev_guide/reference_capi/error.rst:212
msgid "See also: IPROTO :ref:`error code<capi-box_error_code>`"
msgstr "См. также IPROTO :ref:`error code<capi-box_error_code>`"

#: ../doc/dev_guide/reference_capi/error.rst:216
msgid "A backward-compatible API define."
msgstr "Обратно совместимые определения API."

#: ../doc/dev_guide/reference_capi/fiber.rst:3
msgid "Module `fiber`"
msgstr "Модуль `fiber`"

#: ../doc/dev_guide/reference_capi/fiber.rst:7
msgid ""
"Fiber - contains information about a :ref:`fiber <atomic-"
"threads_fibers_yields>`."
msgstr ""
"Файбер -- содержит информацию о :ref:`файбере <atomic-"
"threads_fibers_yields>`."

#: ../doc/dev_guide/reference_capi/fiber.rst:11
msgid "Function to run inside a fiber."
msgstr "Функции для выполнения в файбере."

#: ../doc/dev_guide/reference_capi/fiber.rst:15
msgid "Create a new fiber."
msgstr "Создание нового файбера."

#: ../doc/dev_guide/reference_capi/fiber.rst:17
msgid ""
"Takes a fiber from the fiber cache, if it's not empty. Can fail only if "
"there is not enough memory for the fiber structure or fiber stack."
msgstr ""
"Берет файбер из кэша файберов, если в нем что-то есть. Может не "
"сработать, только если недостаточно памяти для структуры файбера или "
"стека файбера."

#: ../doc/dev_guide/reference_capi/fiber.rst:20
msgid ""
"The created fiber automatically returns itself to the fiber cache when "
"its \"main\" function completes."
msgstr ""
"Созданный файбер автоматически возвращается в кэш файберов, когда "
"выполнена его основная функция."

#: ../doc/dev_guide/reference_capi/fiber.rst:23
#: ../doc/dev_guide/reference_capi/fiber.rst:39
msgid "string with fiber name"
msgstr "строка с именем файбера"

#: ../doc/dev_guide/reference_capi/fiber.rst:24
msgid "func for run inside fiber"
msgstr "функция для выполнения в файбере"

#: ../doc/dev_guide/reference_capi/fiber.rst:26
#: ../doc/dev_guide/reference_capi/fiber.rst:43
msgid "See also: :ref:`fiber_start()<c_api-fiber-fiber_start>`"
msgstr "См. также :ref:`fiber_start()<c_api-fiber-fiber_start>`"

#: ../doc/dev_guide/reference_capi/fiber.rst:30
msgid "Create a new fiber with defined attributes."
msgstr "Создание нового файбера с заданными атрибутами."

#: ../doc/dev_guide/reference_capi/fiber.rst:32
msgid ""
"Can fail only if there is not enough memory for the fiber structure or "
"fiber stack."
msgstr ""
"Может не сработать, только если недостаточно памяти для структуры файбера"
" или стека файбера."

#: ../doc/dev_guide/reference_capi/fiber.rst:35
msgid ""
"The created fiber automatically returns itself to the fiber cache if has "
"a default stack size when its \"main\" function completes."
msgstr ""
"Созданный файбер автоматически возвращается в кэш файберов, если у него "
"размер стека по умолчанию, когда выполнена его основная функция."

#: ../doc/dev_guide/reference_capi/fiber.rst:40
#: ../doc/dev_guide/reference_capi/fiber.rst:163
#: ../doc/dev_guide/reference_capi/fiber.rst:169
msgid "fiber attributes container"
msgstr "контейнер с атрибутами файбера"

#: ../doc/dev_guide/reference_capi/fiber.rst:41
msgid "function to run inside the fiber"
msgstr "функция для выполнения в файбере"

#: ../doc/dev_guide/reference_capi/fiber.rst:49
msgid "Start execution of created fiber."
msgstr "Запуск созданного файбера."

#: ../doc/dev_guide/reference_capi/fiber.rst:51
msgid "fiber to start"
msgstr "запускаемый файбер"

#: ../doc/dev_guide/reference_capi/fiber.rst:52
msgid "arguments to start the fiber with"
msgstr "аргументы для запуска файбера"

#: ../doc/dev_guide/reference_capi/fiber.rst:56
msgid "Return control to another fiber and wait until it'll be woken."
msgstr "Передача управления другому файберу и ожидание его пробуждения."

#: ../doc/dev_guide/reference_capi/fiber.rst:58
msgid "See also: :ref:`fiber_wakeup()<c_api-fiber-fiber_wakeup>`"
msgstr "См. также :ref:`fiber_wakeup()<c_api-fiber-fiber_wakeup>`"

#: ../doc/dev_guide/reference_capi/fiber.rst:64
msgid "Interrupt a synchronous wait of a fiber"
msgstr "Прерывание синхронного ожидания файбера"

#: ../doc/dev_guide/reference_capi/fiber.rst:66
#: ../doc/dev_guide/reference_capi/fiber.rst:104
msgid "fiber to be woken up"
msgstr "пробуждаемый файбер"

#: ../doc/dev_guide/reference_capi/fiber.rst:72
msgid "Cancel the subject fiber (set ``FIBER_IS_CANCELLED`` flag)"
msgstr "Отмена файбера (установка флага ``FIBER_IS_CANCELLED``)"

#: ../doc/dev_guide/reference_capi/fiber.rst:74
msgid ""
"If target fiber's flag ``FIBER_IS_CANCELLABLE`` set, then it would be "
"woken up (maybe prematurely). Then current fiber yields until the target "
"fiber is dead (or is woken up by :ref:`fiber_wakeup()<c_api-fiber-"
"fiber_wakeup>`)."
msgstr ""
"Если на нужном файбере установлен флаг ``FIBER_IS_CANCELLABLE``, он "
"возобновит работу (возможно досрочно). Тогда текущий файбер передает "
"управление до тех пор, пока нужный файбер не будет удален (или не "
"возобновит работу с помощью :ref:`fiber_wakeup()<c_api-fiber-"
"fiber_wakeup>`)."

#: ../doc/dev_guide/reference_capi/fiber.rst:78
msgid "fiber to be cancelled"
msgstr "отменяемый файбер"

#: ../doc/dev_guide/reference_capi/fiber.rst:82
msgid ""
"Make it possible or not possible to wakeup the current fiber immediately "
"when it's cancelled."
msgstr ""
"Возможность или невозможность пробуждения текущего файбера сразу после "
"его отмены."

#: ../doc/dev_guide/reference_capi/fiber.rst:85
#: ../doc/dev_guide/reference_capi/fiber.rst:96
msgid "fiber"
msgstr "файбер"

#: ../doc/dev_guide/reference_capi/fiber.rst:86
#: ../doc/dev_guide/reference_capi/fiber.rst:97
msgid "status to set"
msgstr "назначаемый статус"

#: ../doc/dev_guide/reference_capi/fiber.rst:88
msgid "previous state"
msgstr "предыдущий статус"

#: ../doc/dev_guide/reference_capi/fiber.rst:94
msgid "Set fiber to be joinable (``false`` by default)."
msgstr "Определение файбера как присоединяемого (по умолчанию ``false``)"

#: ../doc/dev_guide/reference_capi/fiber.rst:101
msgid ""
"Wait until the fiber is dead and then move its execution status to the "
"caller. The fiber must not be detached."
msgstr ""
"Ожидание удаления файбера, а затем передача статуса его выполнения "
"вызывающему клиенту. Файбер не должен быть открепленным."

#: ../doc/dev_guide/reference_capi/fiber.rst:106
msgid "Before: ``FIBER_IS_JOINABLE`` flag is set."
msgstr "Ранее: установлен флаг ``FIBER_IS_JOINABLE``."

#: ../doc/dev_guide/reference_capi/fiber.rst:108
msgid "See also: :ref:`fiber_set_joinable()<c_api-fiber-fiber_set_joinable>`"
msgstr "См. также :ref:`fiber_set_joinable()<c_api-fiber-fiber_set_joinable>`"

#: ../doc/dev_guide/reference_capi/fiber.rst:112
msgid "Put the current fiber to sleep for at least 's' seconds."
msgstr "Перевод текущего файбера в режим ожидания как минимум на 's' секунд."

#: ../doc/dev_guide/reference_capi/fiber.rst:114
msgid "time to sleep"
msgstr "время ожидания"

#: ../doc/dev_guide/reference_capi/fiber.rst:116
msgid "Note: this is a cancellation point."
msgstr "Примечание: это и есть точка отмены."

#: ../doc/dev_guide/reference_capi/fiber.rst:118
msgid "See also: :ref:`fiber_is_cancelled()<c_api-fiber-fiber_is_cancelled>`"
msgstr "См. также :ref:`fiber_is_cancelled()<c_api-fiber-fiber_is_cancelled>`"

#: ../doc/dev_guide/reference_capi/fiber.rst:124
msgid "Check current fiber for cancellation (it must be checked manually)."
msgstr "Проверка отмены текущего файбера (это делается вручную)."

#: ../doc/dev_guide/reference_capi/fiber.rst:128
msgid "Report loop begin time as double (cheap)."
msgstr "Сообщение времени начала цикла в виде числа двойной точности."

#: ../doc/dev_guide/reference_capi/fiber.rst:132
msgid "Report loop begin time as 64-bit int."
msgstr "Сообщение времени начала цикла в виде 64-битного целого числа."

#: ../doc/dev_guide/reference_capi/fiber.rst:136
msgid "Reschedule fiber to end of event loop cycle."
msgstr "Перенос файбера для завершения событийного цикла."

#: ../doc/dev_guide/reference_capi/fiber.rst:142
msgid "Return ``slab_cache`` suitable to use with ``tarantool/small`` library"
msgstr ""
"Возврат ``slab_cache``, подходящего для использования с библиотекой "
"``tarantool/small``"

#: ../doc/dev_guide/reference_capi/fiber.rst:146
msgid "Return the current fiber."
msgstr "Возврат текущего файбера."

#: ../doc/dev_guide/reference_capi/fiber.rst:152
msgid ""
"Create a new fiber attributes container and initialize it with default "
"parameters."
msgstr ""
"Создание нового контейнера с атрибутами файбера и его инициализация с "
"параметрами по умолчанию."

#: ../doc/dev_guide/reference_capi/fiber.rst:155
msgid ""
"Can be used for creating many fibers: corresponding fibers will not take "
"ownership."
msgstr ""
"Можно использовать для создания множества файберов: смена владельца не "
"произойдет."

#: ../doc/dev_guide/reference_capi/fiber.rst:160
msgid ""
"Delete the ``fiber_attr`` and free all allocated resources. This is safe "
"when fibers created with this attribute still exist."
msgstr ""
"Удаление ``fiber_attr`` и освобождение всех выделенных ресурсов. "
"Используется, когда есть файберы, созданные с данным атрибутом."

#: ../doc/dev_guide/reference_capi/fiber.rst:167
msgid "Set the fiber's stack size in the fiber attributes container."
msgstr "Определение размера стека файбера в контейнере с атрибутами файбера."

#: ../doc/dev_guide/reference_capi/fiber.rst:170
msgid "stack size for new fibers (in bytes)"
msgstr "размер стека для новых файберов (в байтах)"

#: ../doc/dev_guide/reference_capi/fiber.rst:173
msgid ""
"-1 on failure (if ``stack_size`` is smaller than the minimum allowable "
"fiber stack size)"
msgstr ""
"-1, если не выполнено (если размер стека ``stack_size`` меньше минимально"
" допустимого размера стека файбера)"

#: ../doc/dev_guide/reference_capi/fiber.rst:178
msgid "Get the fiber's stack size from the fiber attributes container."
msgstr "Получение размера стека файбера из контейнера с атрибутами файбера."

#: ../doc/dev_guide/reference_capi/fiber.rst:180
msgid "fiber attributes container, or NULL for default"
msgstr "контейнер с атрибутами файбера или NULL, по умолчанию"

#: ../doc/dev_guide/reference_capi/fiber.rst:183
msgid "stack size (in bytes)"
msgstr "размер стека (в байтах)"

#: ../doc/dev_guide/reference_capi/fiber.rst:189
msgid ""
"A conditional variable: a synchronization primitive that allow fibers in "
"Tarantool's :ref:`cooperative multitasking <atomic-"
"cooperative_multitasking>` environment to yield until some predicate is "
"satisfied."
msgstr ""
"Условная переменная: примитив синхронизации, который позволяет файберам в"
" среде :ref:`кооперативной многозадачности <atomic-"
"cooperative_multitasking>` Tarantool'а передавать управление до "
"выполнения какого-либо предиката."

#: ../doc/dev_guide/reference_capi/fiber.rst:193
msgid ""
"Fiber conditions have two basic operations -- \"wait\" and \"signal\", --"
" where \"wait\" suspends the execution of a fiber (i.e. yields) until "
"\"signal\" is called."
msgstr ""
"Условия работы файбера поддерживают две основные операции -- \"wait\" "
"(ожидание) и \"signal\" (сигнал), -- где \"wait\" откладывает выполнение "
"файбера (то есть передает управление) до тех пор, пока не будет вызван "
"\"signal\"."

#: ../doc/dev_guide/reference_capi/fiber.rst:197
msgid ""
"Unlike ``pthread_cond``, ``fiber_cond`` doesn't require mutex/latch "
"wrapping."
msgstr ""
"В отличие от ``pthread_cond``, ``fiber_cond`` не требует функции-обертки "
"в виде мьютекса или защелки."

#: ../doc/dev_guide/reference_capi/fiber.rst:201
msgid "Create a new conditional variable."
msgstr "Создание новой условной переменной."

#: ../doc/dev_guide/reference_capi/fiber.rst:205
msgid "Delete the conditional variable."
msgstr "Удаление условной переменной."

#: ../doc/dev_guide/reference_capi/fiber.rst:207
msgid ""
"Note: behavior is undefined if there are fibers waiting for the "
"conditional variable."
msgstr ""
"Примечание: поведение не определено, если есть файберы, ожидающие "
"условной переменной."

#: ../doc/dev_guide/reference_capi/fiber.rst:210
msgid "conditional variable to delete"
msgstr "удаляемая условная переменная"

#: ../doc/dev_guide/reference_capi/fiber.rst:216
msgid "Wake up **one** (any) of the fibers waiting for the conditional variable."
msgstr "Пробуждение **одного** (любого) файбера, ожидающего условной переменной."

#: ../doc/dev_guide/reference_capi/fiber.rst:218
#: ../doc/dev_guide/reference_capi/fiber.rst:226
msgid "Does nothing if no one is waiting."
msgstr "Не делает ничего, если нет ожидающих файберов."

#: ../doc/dev_guide/reference_capi/fiber.rst:220
#: ../doc/dev_guide/reference_capi/fiber.rst:228
#: ../doc/dev_guide/reference_capi/fiber.rst:244
msgid "conditional variable"
msgstr "условная переменная"

#: ../doc/dev_guide/reference_capi/fiber.rst:224
msgid "Wake up **all** fibers waiting for the conditional variable."
msgstr "Пробуждение **всех** файберов, ожидающих условной переменной."

#: ../doc/dev_guide/reference_capi/fiber.rst:234
msgid ""
"Suspend the execution of the current fiber (i.e. yield) until "
":ref:`fiber_cond_signal() <c_api-fiber_cond_signal>` is called."
msgstr ""
"Приостановление выполнения текущего файбера (т.е. передача управления) до"
" вызова :ref:`fiber_cond_signal() <c_api-fiber_cond_signal>`."

#: ../doc/dev_guide/reference_capi/fiber.rst:237
msgid ""
"Like ``pthread_cond``, ``fiber_cond`` can issue spurious wake ups caused "
"by explicit :ref:`fiber_wakeup()<c_api-fiber-fiber_wakeup>` or "
":ref:`fiber_cancel()<c_api-fiber-fiber_cancel>` calls. It is highly "
"recommended to wrap calls to this function into a loop and check the "
"actual predicate and :ref:`fiber_is_cancelled()<c_api-fiber-"
"fiber_is_cancelled>` on every iteration."
msgstr ""
"Как и ``pthread_cond``, ``fiber_cond`` может отправлять ложные сигналы "
"пробуждения с помощью вызова :ref:`fiber_wakeup()<c_api-fiber-"
"fiber_wakeup>` или :ref:`fiber_cancel()<c_api-fiber-fiber_cancel>`. "
"Настоятельно рекомендуется заключать вызовы данной функции в цикл и "
"проверять предикат и :ref:`fiber_is_cancelled()<c_api-fiber-"
"fiber_is_cancelled>` при каждой итерации."

#: ../doc/dev_guide/reference_capi/fiber.rst:245
msgid "timeout in seconds"
msgstr "время ожидания в секундах"

#: ../doc/dev_guide/reference_capi/fiber.rst:247
msgid ""
"0 on :ref:`fiber_cond_signal() <c_api-fiber_cond_signal>` call or a "
"spurious wake up"
msgstr ""
"0 при вызове :ref:`fiber_cond_signal() <c_api-fiber_cond_signal>` или "
"ложном пробуждении"

#: ../doc/dev_guide/reference_capi/fiber.rst:249
msgid "-1 on timeout, and the error code is set to 'TimedOut'"
msgstr ""
"-1 в случае ожидания, и задается код ошибки 'TimedOut' (истекло время "
"ожидания)"

#: ../doc/dev_guide/reference_capi/fiber.rst:253
msgid ""
"Shortcut for :ref:`fiber_cond_wait_timeout() <c_api-"
"fiber_cond_wait_timeout>`."
msgstr ""
"Ускоренный метод для :ref:`fiber_cond_wait_timeout() <c_api-"
"fiber_cond_wait_timeout>`."

#: ../doc/dev_guide/reference_capi/index.rst:5
msgid "C API reference"
msgstr "Справочник по C API"

#: ../doc/dev_guide/reference_capi/index.rst:7
msgid "List of C API headers"
msgstr "Список API для языка C"

#: ../doc/dev_guide/reference_capi/latch.rst:3
msgid "Module `latch`"
msgstr "Модуль `latch`"

#: ../doc/dev_guide/reference_capi/latch.rst:7
msgid "A lock for cooperative multitasking environment"
msgstr "Блокировка среды кооперативной многозадачности"

#: ../doc/dev_guide/reference_capi/latch.rst:11
msgid "Allocate and initialize the new latch."
msgstr "Выделение и инициализация новой защелки."

#: ../doc/dev_guide/reference_capi/latch.rst:13
msgid "allocated latch object"
msgstr "выделенная защелка"

#: ../doc/dev_guide/reference_capi/latch.rst
msgid "Return type"
msgstr "Возвращаемый тип"

#: ../doc/dev_guide/reference_capi/latch.rst:14
msgid "box_latch_t *"
msgstr "box_latch_t *"

#: ../doc/dev_guide/reference_capi/latch.rst:18
msgid "Destroy and free the latch."
msgstr "Удаление и освобождение защелки."

#: ../doc/dev_guide/reference_capi/latch.rst:20
msgid "latch to destroy"
msgstr "удаляемая защелка"

#: ../doc/dev_guide/reference_capi/latch.rst:24
msgid ""
"Lock a latch. Waits indefinitely until the current fiber can gain access "
"to the latch."
msgstr ""
"Применение защелки. Бесконечно ожидает момента, когда текущий файбер "
"может получить доступ к защелке."

#: ../doc/dev_guide/reference_capi/latch.rst
msgid "param box_latch_t* latch"
msgstr "param box_latch_t* latch"

#: ../doc/dev_guide/reference_capi/latch.rst:27
#: ../doc/dev_guide/reference_capi/latch.rst:33
msgid "latch to lock"
msgstr "применяемая защелка"

#: ../doc/dev_guide/reference_capi/latch.rst:31
msgid "Try to lock a latch. Return immediately if the latch is locked."
msgstr ""
"Попытка применить защелку. Возвращается незамедлительно, если защелка "
"поставлена."

#: ../doc/dev_guide/reference_capi/latch.rst:34
msgid "status of operation. 0 - success, 1 - latch is locked"
msgstr "статус операции. 0 -- успешно, 1 -- защелка поставлена"

#: ../doc/dev_guide/reference_capi/latch.rst:35
msgid "int"
msgstr "целое число"

#: ../doc/dev_guide/reference_capi/latch.rst:39
msgid "Unlock a latch. The fiber calling this function must own the latch."
msgstr ""
"Отмена защелки. Файбер, который вызывает данную функцию, должен иметь "
"права на защелку."

#: ../doc/dev_guide/reference_capi/latch.rst:41
msgid "latch to unlock"
msgstr "отменяемая защелка"

#: ../doc/dev_guide/reference_capi/say.rst:3
msgid "Module `say` (logging)"
msgstr "Модуль `say` (запись в журнал)"

#: ../doc/dev_guide/reference_capi/say.rst:11
msgid "do not use this value directly"
msgstr "не используйте непосредственно данное значение "

#: ../doc/dev_guide/reference_capi/say.rst:29
#: ../doc/dev_guide/reference_capi/say.rst:45
msgid "Format and print a message to Tarantool log file."
msgstr "Форматирование и запись сообщения в файл журнала Tarantool'а."

#: ../doc/dev_guide/reference_capi/say.rst:31
msgid ":ref:`log level <c_api-say-say_level>`"
msgstr ":ref:`log level <c_api-say-say_level>`"

#: ../doc/dev_guide/reference_capi/say.rst:32
#: ../doc/dev_guide/reference_capi/say.rst:47
msgid "``printf()``-like format string"
msgstr "строка в формате типа ``printf()``"

#: ../doc/dev_guide/reference_capi/say.rst:35
#: ../doc/dev_guide/reference_capi/say.rst:50
msgid "See also :manpage:`printf(3)`, :ref:`say_level<c_api-say-say_level>`"
msgstr "См. также :manpage:`printf(3)`, :ref:`say_level<c_api-say-say_level>`"

#: ../doc/dev_guide/reference_capi/say.rst:54
#, python-format
msgid "say_info(\"Some useful information: %s\", status);"
msgstr "say_info(\"Some useful information: %s\", status);"

#: ../doc/dev_guide/reference_capi/schema.rst:3
msgid "Module `schema`"
msgstr "Модуль `schema`"

#: ../doc/dev_guide/reference_capi/schema.rst:11
msgid "Start of the reserved range of system spaces."
msgstr "Начало выделенного диапазона системных спейсов."

#: ../doc/dev_guide/reference_capi/schema.rst:15
msgid "Space id of _schema."
msgstr "Идентификатор спейса _schema."

#: ../doc/dev_guide/reference_capi/schema.rst:19
msgid "Space id of _space."
msgstr "Идентификатор спейса _space."

#: ../doc/dev_guide/reference_capi/schema.rst:23
msgid "Space id of _vspace view."
msgstr "Идентификатор виртуального спейса _vspace."

#: ../doc/dev_guide/reference_capi/schema.rst:27
msgid "Space id of _index."
msgstr "Идентификатор спейса _index."

#: ../doc/dev_guide/reference_capi/schema.rst:31
msgid "Space id of _vindex view."
msgstr "Идентификатор виртуального спейса _vindex."

#: ../doc/dev_guide/reference_capi/schema.rst:35
msgid "Space id of _func."
msgstr "Идентификатор спейса _func."

#: ../doc/dev_guide/reference_capi/schema.rst:39
msgid "Space id of _vfunc view."
msgstr "Идентификатор виртуального спейса _vfunc."

#: ../doc/dev_guide/reference_capi/schema.rst:43
msgid "Space id of _user."
msgstr "Идентификатор спейса _user."

#: ../doc/dev_guide/reference_capi/schema.rst:47
msgid "Space id of _vuser view."
msgstr "Идентификатор виртуального спейса _vuser."

#: ../doc/dev_guide/reference_capi/schema.rst:51
msgid "Space id of _priv."
msgstr "Идентификатор спейса _priv."

#: ../doc/dev_guide/reference_capi/schema.rst:55
msgid "Space id of _vpriv view."
msgstr "Идентификатор виртуального спейса _vpriv."

#: ../doc/dev_guide/reference_capi/schema.rst:59
msgid "Space id of _cluster."
msgstr "Идентификатор спейса _cluster."

#: ../doc/dev_guide/reference_capi/schema.rst:63
msgid "Space id of _truncate."
msgstr "Идентификатор спейса _truncate."

#: ../doc/dev_guide/reference_capi/schema.rst:67
msgid "End of reserved range of system spaces."
msgstr "Окончание выделенного диапазона системных спейсов."

#: ../doc/dev_guide/reference_capi/schema.rst:71
msgid "NULL value, returned on error."
msgstr "Нулевое значение NULL возвращается в случае ошибки."

#: ../doc/dev_guide/reference_capi/trivia.rst:3
msgid "Module `trivia/config`"
msgstr "Модуль `trivia/config`"

#: ../doc/dev_guide/reference_capi/trivia.rst:7
msgid "Extern modifier for all public functions."
msgstr "Внешний модификатор для всех доступных функций."

#: ../doc/dev_guide/reference_capi/trivia.rst:11
msgid "Package major version - 1 for 1.9.2."
msgstr "Мажорная версия пакета -- 1 в 1.9.2."

#: ../doc/dev_guide/reference_capi/trivia.rst:15
msgid "Package minor version - 9 for 1.9.2."
msgstr "Минорная версия пакета -- 9 в 1.9.2."

#: ../doc/dev_guide/reference_capi/trivia.rst:19
msgid "Package patch version - 2 for 1.9.2."
msgstr "Патч-версия пакета -- 2 в 1.9.2."

#: ../doc/dev_guide/reference_capi/trivia.rst:23
msgid ""
"A string with major-minor-patch-commit-id identifier of the release, e.g."
" 1.9.2-0-g113ade24e."
msgstr ""
"Строка с идентификатором версии: "
"мажорная-минорная-патч-коммит-идентификатор, например, "
"1.9.2-0-g113ade24e."

#: ../doc/dev_guide/reference_capi/trivia.rst:28
msgid "System configuration dir (e.g ``/etc``)"
msgstr "Директория для системной конфигурации (например, ``/etc``)"

#: ../doc/dev_guide/reference_capi/trivia.rst:32
msgid "Install prefix (e.g. ``/usr``)"
msgstr "Префикс установки (например, ``/usr``)"

#: ../doc/dev_guide/reference_capi/trivia.rst:36
msgid "Build type, e.g. Debug or Release"
msgstr "Тип сборки, например, отладочная сборка или релиз."

#: ../doc/dev_guide/reference_capi/trivia.rst:40
msgid "CMake build type signature, e.g. ``Linux-x86_64-Debug``"
msgstr "Подпись типа сборки CMake, например, ``Linux-x86_64-Debug``"

#: ../doc/dev_guide/reference_capi/trivia.rst:44
msgid "Command line used to run CMake."
msgstr "Командная строка для запуска CMake."

#: ../doc/dev_guide/reference_capi/trivia.rst:48
msgid "Pathes to C and CXX compilers."
msgstr "Пути к компиляторам C и CXX."

#: ../doc/dev_guide/reference_capi/trivia.rst:52
msgid "C compile flags used to build Tarantool."
msgstr "Флаги компиляции C, используемые для сборки Tarantool'а."

#: ../doc/dev_guide/reference_capi/trivia.rst:56
msgid "CXX compile flags used to build Tarantool."
msgstr "Флаги компиляции CXX, используемые для сборки Tarantool'а."

#: ../doc/dev_guide/reference_capi/trivia.rst:60
msgid "A path to install ``*.lua`` module files."
msgstr "Путь для установки файлов модуля ``*.lua``."

#: ../doc/dev_guide/reference_capi/trivia.rst:64
msgid "A path to install ``*.so``/``*.dylib`` module files."
msgstr "Путь для установки файлов модуля ``*.so``/``*.dylib``"

#: ../doc/dev_guide/reference_capi/trivia.rst:68
msgid "A path to Lua includes (the same directory where this file is contained)"
msgstr "Путь к Lua (директория, где хранится этот файл)."

#: ../doc/dev_guide/reference_capi/trivia.rst:72
msgid ""
"A constant added to ``package.path`` in Lua to find ``*.lua`` module "
"files."
msgstr ""
"Постоянная, добавляемая к  ``package.path`` в Lua для поиска файлов "
"модуля ``*.lua``."

#: ../doc/dev_guide/reference_capi/trivia.rst:76
msgid ""
"A constant added to ``package.cpath`` in Lua to find ``*.so`` module "
"files."
msgstr ""
"Постоянная, добавляемая к  ``package.cpath`` в Lua для поиска файлов "
"модуля ``*.so``."

#: ../doc/dev_guide/reference_capi/tuple.rst:3
msgid "Module `tuple`"
msgstr "Модуль `tuple`"

#: ../doc/dev_guide/reference_capi/tuple.rst:11
msgid "Tuple format."
msgstr "Формат кортежа."

#: ../doc/dev_guide/reference_capi/tuple.rst:13
msgid ""
"Each Tuple has an associated format (class). Default format is used to "
"create tuples which are not attached to any particular space."
msgstr ""
"Каждому кортежу соответствует определенный формат (класс). По умолчанию, "
"используется формат для создания кортежей, не привязанных к определенному"
" спейсу."

#: ../doc/dev_guide/reference_capi/tuple.rst:18
msgid "Tuple"
msgstr "Кортеж"

#: ../doc/dev_guide/reference_capi/tuple.rst:24
msgid "Allocate and initialize a new tuple from raw MsgPack Array data."
msgstr "Выделение и инициализация нового кортежа из сырых данных MsgPack-массива."

#: ../doc/dev_guide/reference_capi/tuple.rst:26
msgid ""
"tuple format. Use :ref:`box_tuple_format_default()<c_api-tuple-"
"box_tuple_format_default>` to create space-independent tuple."
msgstr ""
"формат кортежа. Используйте :ref:`box_tuple_format_default()<c_api-tuple-"
"box_tuple_format_default>` для создания кортежа независимо от спейса."

#: ../doc/dev_guide/reference_capi/tuple.rst:29
msgid "tuple data in MsgPack Array format ([field1, field2, ...])"
msgstr "данные кортежа в формате MsgPack-массива ([ field1, field2, ...])"

#: ../doc/dev_guide/reference_capi/tuple.rst:30
msgid "the end of ``data``"
msgstr "конец данных ``data``"

#: ../doc/dev_guide/reference_capi/tuple.rst:32
#: ../doc/dev_guide/reference_capi/txn.rst:49
msgid "NULL on out of memory"
msgstr "NULL при нехватке памяти"

#: ../doc/dev_guide/reference_capi/tuple.rst:33
msgid "tuple otherwise"
msgstr "в остальных случаях кортеж"

#: ../doc/dev_guide/reference_capi/tuple.rst:35
msgid "See also: :ref:`box.tuple.new()<box_tuple-new>`"
msgstr "См. также :ref:`box.tuple.new()<box_tuple-new>`"

#: ../doc/dev_guide/reference_capi/tuple.rst:39
msgid ""
"When working with tuples, it is the developer's responsibility to ensure "
"that enough space is allocated, taking especial caution when writing to "
"them with msgpuck functions such as ``mp_encode_array()``."
msgstr ""
"При работе с кортежами в обязанности разработчика входит выделение "
"достаточного места, уделяя особое внимание записи данных с помощью таких "
"msgpuck-функций, как ``mp_encode_array()``."

#: ../doc/dev_guide/reference_capi/tuple.rst:48
msgid "Increase the reference counter of tuple."
msgstr "Увеличение значения счетчика количества ссылок на кортеж."

#: ../doc/dev_guide/reference_capi/tuple.rst:50
msgid ""
"Tuples are reference counted. All functions that return tuples guarantee "
"that the last returned tuple is reference counted internally until the "
"next call to API function that yields or returns another tuple."
msgstr ""
"Для кортежей подсчитываются ссылки. Все функции, которые возвращают "
"кортежи, обеспечивают внутренний подсчет ссылок для последнего "
"возвращенного кортежа до следующего вызова API-функции, которая передает "
"управление или возвращает другой кортеж."

#: ../doc/dev_guide/reference_capi/tuple.rst:54
msgid ""
"You should increase the reference counter before taking tuples for long "
"processing in your code. The Lua garbage collector will not destroy a "
"tuple that has references, even if another fiber removes them from a "
"space. After processing, decrement the reference counter using "
":ref:`box_tuple_unref()<c_api-tuple-box_tuple_unref>`, otherwise the "
"tuple will leak."
msgstr ""
"Следует увеличивать значение счетчика количества ссылок перед длительной "
"обработкой кортежей в коде. Сборщик мусора в Lua не будет удалять кортежи"
" с ссылками, даже если другой файбер удалит их из спейса. После обработки"
" уменьшите значение счетчика количества ссылок с помощью "
":ref:`box_tuple_unref()<c_api-tuple-box_tuple_unref>`, иначе кортеж будет"
" допускать утечку."

#: ../doc/dev_guide/reference_capi/tuple.rst:62
#: ../doc/dev_guide/reference_capi/tuple.rst:75
#: ../doc/dev_guide/reference_capi/tuple.rst:88
#: ../doc/dev_guide/reference_capi/tuple.rst:94
#: ../doc/dev_guide/reference_capi/tuple.rst:113
#: ../doc/dev_guide/reference_capi/tuple.rst:128
msgid "a tuple"
msgstr "кортеж"

#: ../doc/dev_guide/reference_capi/tuple.rst:64
#: ../doc/dev_guide/reference_capi/tuple.rst:77
#: ../doc/dev_guide/reference_capi/tuple.rst:106
msgid "-1 on error"
msgstr "-1 в случае ошибки"

#: ../doc/dev_guide/reference_capi/tuple.rst:67
msgid "See also: :ref:`box_tuple_unref()<c_api-tuple-box_tuple_unref>`"
msgstr "См. также :ref:`box_tuple_unref()<c_api-tuple-box_tuple_unref>`"

#: ../doc/dev_guide/reference_capi/tuple.rst:73
msgid "Decrease the reference counter of tuple."
msgstr "Увеличение значения счетчика количества ссылок на кортеж."

#: ../doc/dev_guide/reference_capi/tuple.rst:80
msgid "See also: :ref:`box_tuple_ref()<c_api-tuple-box_tuple_ref>`"
msgstr "См. также :ref:`box_tuple_ref()<c_api-tuple-box_tuple_ref>`"

#: ../doc/dev_guide/reference_capi/tuple.rst:86
msgid "Return the number of fields in a tuple (the size of MsgPack Array)."
msgstr "Возврат количества полей в кортеже (размер MsgPack-массива)."

#: ../doc/dev_guide/reference_capi/tuple.rst:92
msgid ""
"Return the number of bytes used to store internal tuple data (MsgPack "
"Array)."
msgstr ""
"Возврат количества байтов, используемых для хранения внутренних данных "
"кортежа (MsgPack-массив)."

#: ../doc/dev_guide/reference_capi/tuple.rst:98
msgid "Dump raw MsgPack data to the memory buffer ``buf`` of size ``size``."
msgstr "Передача сырых MsgPack-данных в буфер памяти ``buf`` размера ``size``."

#: ../doc/dev_guide/reference_capi/tuple.rst:100
msgid "Store tuple fields in the memory buffer."
msgstr "Хранение полей кортежа в буфере памяти."

#: ../doc/dev_guide/reference_capi/tuple.rst:102
msgid ""
"Upon successful return, the function returns the number of bytes written."
" If buffer size is not enough then the return value is the number of "
"bytes which would have been written if enough space had been available."
msgstr ""
"При успешном выполнении функция возвращает количество записанных байтов. "
"Если размер буфера недостаточный, возвращается количество байтов, которое"
" было бы записано, если бы было достаточно места."

#: ../doc/dev_guide/reference_capi/tuple.rst:107
msgid "number of bytes written on success."
msgstr "количество записанных байтов при успешном выполнении."

#: ../doc/dev_guide/reference_capi/tuple.rst:111
msgid "Return the associated format."
msgstr "Возврат взаимосвязанного формата."

#: ../doc/dev_guide/reference_capi/tuple.rst:115
msgid "tuple format"
msgstr "формат кортежа"

#: ../doc/dev_guide/reference_capi/tuple.rst:121
msgid ""
"Return the raw tuple field in MsgPack format. The result is a pointer to "
"raw MessagePack data which can be decoded with mp_decode functions, for "
"an example see the tutorial program :ref:`read.c <f_c_tutorial-read>`."
msgstr ""
"Возврат поля кортежа в MsgPack-формате. Результатом будет указатель на "
"сырые данные в формате MessagePack, которые можно расшифровать с помощью "
"функций mp_decode. Пример можно увидеть в программе практикума "
":ref:`read.c <f_c_tutorial-read>`."

#: ../doc/dev_guide/reference_capi/tuple.rst:126
msgid "The buffer is valid until the next call to a ``box_tuple_*`` function."
msgstr "Буфер действует до следующего вызова функции ``box_tuple_*``."

#: ../doc/dev_guide/reference_capi/tuple.rst:129
msgid "zero-based index in MsgPack array."
msgstr "индекс с основанием 0 в MsgPack-массиве."

#: ../doc/dev_guide/reference_capi/tuple.rst:131
msgid ""
"NULL if i >= :ref:`box_tuple_field_count()<c_api-tuple-"
"box_tuple_field_count>`"
msgstr ""
"NULL, если i >= :ref:`box_tuple_field_count()<c_api-tuple-"
"box_tuple_field_count>`"

#: ../doc/dev_guide/reference_capi/tuple.rst:132
msgid "msgpack otherwise"
msgstr "в остальных случаях msgpack"

#: ../doc/dev_guide/reference_capi/tuple.rst:147
msgid "Possible data types for tuple fields."
msgstr "Допустимые типы данных для полей кортежа."

#: ../doc/dev_guide/reference_capi/tuple.rst:149
msgid ""
"One cannot use STRS/ENUM macros for types because there is a mismatch "
"between enum name (STRING) and type name literal (\"STR\"). STR is "
"already used as a type in Objective C."
msgstr ""
"Нельзя использовать макросы STRS/ENUM для типов, поскольку есть "
"несоответствие между именем enum (STRING) и литералом имени типа "
"(\"STR\"). STR уже используется в качестве типа в Objective-C."

#: ../doc/dev_guide/reference_capi/tuple.rst:157
msgid "Key definition"
msgstr "Определение ключа"

#: ../doc/dev_guide/reference_capi/tuple.rst:161
msgid ""
"Create a key definition with the key fields with passed types on passed "
"positions."
msgstr ""
"Создание определения ключа с полям ключа с переданными типами по "
"переданным позициям."

#: ../doc/dev_guide/reference_capi/tuple.rst:163
msgid "May be used for tuple format creation and/or tuple comparison."
msgstr ""
"Можно использовать для создания формата кортежа и/или сопоставления "
"кортежей."

#: ../doc/dev_guide/reference_capi/tuple.rst:165
msgid "array with key field identifiers"
msgstr "массив с идентификаторами поля ключа"

#: ../doc/dev_guide/reference_capi/tuple.rst:166
msgid "array with key :ref:`field types <capi-tuple_field_type>`"
msgstr "массив с :ref:`типами поля <capi-tuple_field_type>` ключа"

#: ../doc/dev_guide/reference_capi/tuple.rst:167
msgid "the number of key fields"
msgstr "количество полей ключа"

#: ../doc/dev_guide/reference_capi/tuple.rst:174
msgid "Delete a key definition"
msgstr "Удаление определения ключа"

#: ../doc/dev_guide/reference_capi/tuple.rst:176
msgid "key definition to delete"
msgstr "удаляемое определение ключа"

#: ../doc/dev_guide/reference_capi/tuple.rst:182
msgid "Return new in-memory tuple format based on passed key definitions"
msgstr "Возврат нового формата кортежа на основании переданных определений ключа"

#: ../doc/dev_guide/reference_capi/tuple.rst:184
msgid "array of keys defined for the format"
msgstr "массив ключей, определенный для формата"

#: ../doc/dev_guide/reference_capi/tuple.rst:185
msgid "count of keys"
msgstr "количество ключей"

#: ../doc/dev_guide/reference_capi/tuple.rst:187
msgid "new tuple format on success"
msgstr "новый формат кортежа, если выполнено"

#: ../doc/dev_guide/reference_capi/tuple.rst:192
msgid "Increment tuple format reference count"
msgstr "Увеличение значения подсчета ссылок на формат кортежа"

#: ../doc/dev_guide/reference_capi/tuple.rst:194
msgid "tuple format to ref"
msgstr "формат кортежа для ссылок"

#: ../doc/dev_guide/reference_capi/tuple.rst:198
msgid "Decrement tuple format reference count"
msgstr "Уменьшение значения подсчета ссылок на формат кортежа"

#: ../doc/dev_guide/reference_capi/tuple.rst:200
msgid "tuple format to unref"
msgstr "формат кортежа для уменьшения"

#: ../doc/dev_guide/reference_capi/tuple.rst:206
msgid "Compare tuples using key definition"
msgstr "Сопоставление кортежей, используя определение ключа"

#: ../doc/dev_guide/reference_capi/tuple.rst:208
msgid "the first tuple"
msgstr "первый кортеж"

#: ../doc/dev_guide/reference_capi/tuple.rst:209
msgid "the second tuple"
msgstr "второй кортеж"

#: ../doc/dev_guide/reference_capi/tuple.rst:210
#: ../doc/dev_guide/reference_capi/tuple.rst:224
msgid "key definition"
msgstr "определение ключа"

#: ../doc/dev_guide/reference_capi/tuple.rst:212
msgid "0  if ``key_fields(tuple_a)`` == ``key_fields(tuple_b)``"
msgstr "0, если ``key_fields(tuple_a)`` == ``key_fields(tuple_b)``"

#: ../doc/dev_guide/reference_capi/tuple.rst:213
msgid "<0 if ``key_fields(tuple_a)`` < ``key_fields(tuple_b)``"
msgstr "<0, если ``key_fields(tuple_a)`` < ``key_fields(tuple_b)``"

#: ../doc/dev_guide/reference_capi/tuple.rst:214
msgid ">0 if ``key_fields(tuple_a)`` > ``key_fields(tuple_b)``"
msgstr ">0, если ``key_fields(tuple_a)`` > ``key_fields(tuple_b)``"

#: ../doc/dev_guide/reference_capi/tuple.rst:216
#: ../doc/dev_guide/reference_capi/tuple.rst:230
msgid "See also: enum :ref:`field_type <capi-tuple_field_type>`"
msgstr "См. также enum :ref:`field_type <capi-tuple_field_type>`"

#: ../doc/dev_guide/reference_capi/tuple.rst:220
msgid "Compare a tuple with a key using key definition"
msgstr "Сопоставление кортежа с ключом, используя определение ключа"

#: ../doc/dev_guide/reference_capi/tuple.rst:222
msgid "tuple"
msgstr "кортеж"

#: ../doc/dev_guide/reference_capi/tuple.rst:223
msgid "key with MessagePack array header"
msgstr "ключ с заголовком MessagePack-массива"

#: ../doc/dev_guide/reference_capi/tuple.rst:226
msgid "0  if ``key_fields(tuple)`` == ``parts(key)``"
msgstr "0, если ``key_fields(tuple)`` == ``parts(key)``"

#: ../doc/dev_guide/reference_capi/tuple.rst:227
msgid "<0 if ``key_fields(tuple)`` < ``parts(key)``"
msgstr "<0, если ``key_fields(tuple)`` < ``parts(key)``"

#: ../doc/dev_guide/reference_capi/tuple.rst:228
msgid ">0 if ``key_fields(tuple)`` > ``parts(key)``"
msgstr ">0, если ``key_fields(tuple)`` > ``parts(key)``"

#: ../doc/dev_guide/reference_capi/tuple.rst:234
msgid "Tuple iterator"
msgstr "Итератор кортежей"

#: ../doc/dev_guide/reference_capi/tuple.rst:238
msgid ""
"Allocate and initialize a new tuple iterator. The tuple iterator allows "
"iterating over fields at the root level of a MsgPack array."
msgstr ""
"Выделение и инициализация нового итератора кортежей. Итератор кортежей "
"позволяет проводить итерацию по полям на корневом уровне MsgPack-массива."

#: ../doc/dev_guide/reference_capi/tuple.rst:243
msgid ""
"box_tuple_iterator_t* it = box_tuple_iterator(tuple);\n"
"if (it == NULL) {\n"
"    // error handling using box_error_last()\n"
"}\n"
"const char* field;\n"
"while (field = box_tuple_next(it)) {\n"
"    // process raw MsgPack data\n"
"}\n"
"\n"
"// rewind the iterator to the first position\n"
"box_tuple_rewind(it)\n"
"assert(box_tuple_position(it) == 0);\n"
"\n"
"// rewind three fields\n"
"field = box_tuple_seek(it, 3);\n"
"assert(box_tuple_position(it) == 4);\n"
"\n"
"box_iterator_free(it);"
msgstr ""
"box_tuple_iterator_t* it = box_tuple_iterator(tuple);\n"
"if (it == NULL) {\n"
"    // обработка ошибок с помощью box_error_last()\n"
"}\n"
"const char* field;\n"
"while (field = box_tuple_next(it)) {\n"
"    // обработка сырых MsgPack-данных\n"
"}\n"
"\n"
"// перемотка итератора на начальное положение\n"
"box_tuple_rewind(it)\n"
"assert(box_tuple_position(it) == 0);\n"
"\n"
"// перемотка на три поля\n"
"field = box_tuple_seek(it, 3);\n"
"assert(box_tuple_position(it) == 4);\n"
"\n"
"box_iterator_free(it);"

#: ../doc/dev_guide/reference_capi/tuple.rst:266
msgid "Destroy and free tuple iterator"
msgstr "Удаление и освобождение итератора кортежей"

#: ../doc/dev_guide/reference_capi/tuple.rst:272
msgid ""
"Return zero-based next position in iterator. That is, this function "
"returnы the field id of the field that will be returned by the next call "
"to :ref:`box_tuple_next()<c_api-tuple-box_tuple_next>`. Returned value is"
" zero after initialization or rewind and :ref:`box_tuple_field_count"
"()<c_api-tuple-box_tuple_field_count>` after the end of iteration."
msgstr ""
"Возврат следующего положения с основанием 0 в итераторе. То есть функция "
"возвращает идентификатор поля, который вернется при следующем вызове "
":ref:`box_tuple_next()<c_api-tuple-box_tuple_next>`. Возвращается "
"значение 0 после инициализации или перемотки и "
":ref:`box_tuple_field_count()<c_api-tuple-box_tuple_field_count>` по "
"окончании итерации."

#: ../doc/dev_guide/reference_capi/tuple.rst:279
#: ../doc/dev_guide/reference_capi/tuple.rst:286
#: ../doc/dev_guide/reference_capi/tuple.rst:301
#: ../doc/dev_guide/reference_capi/tuple.rst:322
msgid "a tuple iterator"
msgstr "итератор кортежей"

#: ../doc/dev_guide/reference_capi/tuple.rst:280
msgid "position"
msgstr "положение"

#: ../doc/dev_guide/reference_capi/tuple.rst:284
msgid "Rewind iterator to the initial position."
msgstr "Перемотка итератора в начальное положение."

#: ../doc/dev_guide/reference_capi/tuple.rst:288
msgid "After: ``box_tuple_position(it) == 0``"
msgstr "После: ``box_tuple_position(it) == 0``"

#: ../doc/dev_guide/reference_capi/tuple.rst:292
msgid "Seek the tuple iterator."
msgstr "Поиск итератора кортежей."

#: ../doc/dev_guide/reference_capi/tuple.rst:294
msgid ""
"The result is a pointer to raw MessagePack data which can be decoded with"
" mp_decode functions, for an example see the tutorial program "
":ref:`read.c <f_c_tutorial-read>`. The returned buffer is valid until the"
" next call to ``box_tuple_*`` API. The requested ``field_no`` is returned"
" by the next call to ``box_tuple_next(it)``."
msgstr ""
"Результатом будет указатель на сырые MessagePack-данные, которые можно "
"расшифровать с помощью функций ``mp_decode``. Пример можно увидеть в "
"программе практикума :ref:`read.c <f_c_tutorial-read>`. Возвращаемый "
"буфер действует до следующего вызова API ``box_tuple_*`` . Запрашиваемый "
"номер поля ``field_no`` возвращается при следующем вызове "
"``box_tuple_next(it)``."

#: ../doc/dev_guide/reference_capi/tuple.rst:302
msgid "field number - zero-based position in MsgPack array"
msgstr "номер поля -- положение с основанием 0 в MsgPack-массиве"

#: ../doc/dev_guide/reference_capi/tuple.rst:305
msgid "After:"
msgstr "После:"

#: ../doc/dev_guide/reference_capi/tuple.rst:307
msgid "``box_tuple_position(it) == field_not`` if returned value is not NULL."
msgstr "``box_tuple_position(it) == field_not``, если возвращается не NULL."

#: ../doc/dev_guide/reference_capi/tuple.rst:308
msgid ""
"``box_tuple_position(it) == box_tuple_field_count(tuple)`` if returned "
"value is NULL."
msgstr ""
"``box_tuple_position(it) == box_tuple_field_count(tuple)``, если "
"возвращается NULL."

#: ../doc/dev_guide/reference_capi/tuple.rst:315
msgid "Return the next tuple field from tuple iterator."
msgstr "Возврат следующего поля кортежа из итератора кортежей."

#: ../doc/dev_guide/reference_capi/tuple.rst:317
msgid ""
"The result is a pointer to raw MessagePack data which can be decoded with"
" mp_decode functions, for an example see the tutorial program "
":ref:`read.c <f_c_tutorial-read>`. The returned buffer is valid until "
"next call to ``box_tuple_*`` API."
msgstr ""
"Результатом будет указатель на сырые MessagePack-данные, которые можно "
"расшифровать с помощью функций mp_decode. Пример можно увидеть в "
"программе практикума :ref:`read.c <f_c_tutorial-read>`. Возвращаемый "
"буфер действует до следующего вызова API ``box_tuple_*``."

#: ../doc/dev_guide/reference_capi/tuple.rst:323
msgid "NULL if there are no more fields"
msgstr "NULL, если полей больше нет"

#: ../doc/dev_guide/reference_capi/tuple.rst:324
msgid "MsgPack otherwise"
msgstr "в остальных случаях MsgPack"

#: ../doc/dev_guide/reference_capi/tuple.rst:326
msgid ""
"Before: :ref:`box_tuple_position()<c_api-tuple-box_tuple_position>` is "
"zero-based ID of returned field."
msgstr ""
"Ранее: :ref:`box_tuple_position()<c_api-tuple-box_tuple_position>` -- это"
" идентификатор с основанием 0 возвращаемого поля."

#: ../doc/dev_guide/reference_capi/tuple.rst:329
msgid ""
"After: ``box_tuple_position(it) == box_tuple_field_count(tuple)`` if "
"returned value is NULL."
msgstr ""
"После: ``box_tuple_position(it) == box_tuple_field_count(tuple)``, если "
"возвращается NULL."

#: ../doc/dev_guide/reference_capi/txn.rst:3
msgid "Module `txn`"
msgstr "Модуль `txn`"

#: ../doc/dev_guide/reference_capi/txn.rst:7
msgid "Return true if there is an active transaction."
msgstr "Возврат true (правда), если есть активная транзакция."

#: ../doc/dev_guide/reference_capi/txn.rst:13
msgid "Begin a transaction in the current fiber."
msgstr "Начало транзакции в текущем файбере."

#: ../doc/dev_guide/reference_capi/txn.rst:15
msgid ""
"A transaction is attached to caller fiber, therefore one fiber can have "
"only one active transaction. See also :ref:`box.begin()<box-begin>`."
msgstr ""
"Транзакция привязана к вызывающему файберу, поэтому в одном файбере может"
" быть только одна активная транзакция. См. также :ref:`box.begin()<box-"
"begin>`."

#: ../doc/dev_guide/reference_capi/txn.rst:19
msgid "-1 on error. Perhaps a transaction has already been started."
msgstr "-1 в случае ошибки. Возможно, транзакция уже была запущена."

#: ../doc/dev_guide/reference_capi/txn.rst:25
msgid "Commit the current transaction. See also :ref:`box.commit() <box-commit>`."
msgstr "Коммит текущей транзакции. См. также :ref:`box.commit() <box-commit>`."

#: ../doc/dev_guide/reference_capi/txn.rst:28
msgid "-1 on error. Perhaps a disk write failure"
msgstr "-1 в случае ошибки. Возможен отказ записи на диск"

#: ../doc/dev_guide/reference_capi/txn.rst:32
msgid ""
"Roll back the current transaction. See also :ref:`box.rollback() <box-"
"rollback>`."
msgstr "Откат текущей транзакции. См. также :ref:`box.rollback() <box-rollback>`."

#: ../doc/dev_guide/reference_capi/txn.rst:36
msgid "Return a descriptor of a savepoint."
msgstr "Возврат дескриптора контрольной точки."

#: ../doc/dev_guide/reference_capi/txn.rst:40
msgid "Roll back the current transaction as far as the specified savepoint."
msgstr "Откат текущей транзакции до указанной контрольной точки."

#: ../doc/dev_guide/reference_capi/txn.rst:44
msgid "Allocate memory on txn memory pool."
msgstr "Выделение памяти в пул памяти txn."

#: ../doc/dev_guide/reference_capi/txn.rst:46
msgid ""
"The memory is automatically deallocated when the transaction is committed"
" or rolled back."
msgstr "Память автоматически освобождается при коммите или откате транзакции."

#: ../doc/dev_guide/reference_capi/utils.rst:3
msgid "Module `lua/utils`"
msgstr "Модуль `lua/utils`"

#: ../doc/dev_guide/reference_capi/utils.rst:9
msgid "Push cdata of given ``ctypeid`` onto the stack."
msgstr "Принудительная передача cdata заданного ``ctypeid`` в стек."

#: ../doc/dev_guide/reference_capi/utils.rst:11
msgid ""
"CTypeID must be used from FFI at least once. Allocated memory returned "
"uninitialized. Only numbers and pointers are supported."
msgstr ""
"CTypeID должен быть использован хотя бы один раз из FFI. Выделенная "
"область памяти возвращается неинициализированной. Поддерживаются только "
"числа и указатели."

#: ../doc/dev_guide/reference_capi/utils.rst:14
#: ../doc/dev_guide/reference_capi/utils.rst:27
#: ../doc/dev_guide/reference_capi/utils.rst:42
#: ../doc/dev_guide/reference_capi/utils.rst:49
#: ../doc/dev_guide/reference_capi/utils.rst:62
#: ../doc/dev_guide/reference_capi/utils.rst:74
#: ../doc/dev_guide/reference_capi/utils.rst:81
#: ../doc/dev_guide/reference_capi/utils.rst:116
#: ../doc/dev_guide/reference_capi/utils.rst:128
msgid "Lua State"
msgstr "Lua_State"

#: ../doc/dev_guide/reference_capi/utils.rst:15
msgid "FFI's CTypeID of this cdata"
msgstr "CTypeID из FFI для cdata "

#: ../doc/dev_guide/reference_capi/utils.rst:17
#: ../doc/dev_guide/reference_capi/utils.rst:31
msgid "memory associated with this cdata"
msgstr "область памяти, ассоциированная с cdata"

#: ../doc/dev_guide/reference_capi/utils.rst:19
msgid "See also: :ref:`luaL_checkcdata()<c_api-utils-luaL_checkcdata>`"
msgstr "См. также :ref:`luaL_checkcdata()<c_api-utils-luaL_checkcdata>`"

#: ../doc/dev_guide/reference_capi/utils.rst:25
msgid "Check whether the function argument ``idx`` is a cdata."
msgstr "Проверка, является ли аргумент функции ``idx`` cdata."

#: ../doc/dev_guide/reference_capi/utils.rst:28
#: ../doc/dev_guide/reference_capi/utils.rst:43
msgid "stack index"
msgstr "индекс стека"

#: ../doc/dev_guide/reference_capi/utils.rst:29
msgid "output argument. FFI's CTypeID of returned cdata"
msgstr "аргумент вывода. CTypeID из FFI для возвращаемого cdata "

#: ../doc/dev_guide/reference_capi/utils.rst:33
msgid "See also: :ref:`luaL_pushcdata()<c_api-utils-luaL_pushcdata>`"
msgstr "См. также :ref:`luaL_pushcdata()<c_api-utils-luaL_pushcdata>`"

#: ../doc/dev_guide/reference_capi/utils.rst:37
msgid "Set finalizer function on a cdata object."
msgstr "Определение функции-финализатора для cdata."

#: ../doc/dev_guide/reference_capi/utils.rst:39
msgid ""
"Equivalent to call `ffi.gc(obj, function)`. Finalizer function must be on"
" the top of the stack."
msgstr ""
"Аналог вызова `ffi.gc(obj, function)`. Функция-финализатор должна быть на"
" вершине стека."

#: ../doc/dev_guide/reference_capi/utils.rst:47
msgid "Return CTypeID (FFI) of given СDATA type."
msgstr "Возврат CTypeID (FFI) заданного типа СDATA."

#: ../doc/dev_guide/reference_capi/utils.rst:50
msgid "C type name as string (e.g. \"struct request\" or \"uint32_t\")"
msgstr "Имя типа в C в виде строки (например, \"struct request\" или \"uint32_t\")"

#: ../doc/dev_guide/reference_capi/utils.rst:53
msgid "CTypeID"
msgstr "CTypeID"

#: ../doc/dev_guide/reference_capi/utils.rst:55
msgid ""
"See also: :ref:`luaL_pushcdata()<c_api-utils-luaL_pushcdata>`, "
":ref:`luaL_checkcdata()<c_api-utils-luaL_checkcdata>`"
msgstr ""
"См. также :ref:`luaL_pushcdata()<c_api-utils-luaL_pushcdata>`, "
":ref:`luaL_checkcdata()<c_api-utils-luaL_checkcdata>`"

#: ../doc/dev_guide/reference_capi/utils.rst:60
msgid "Declare symbols for FFI."
msgstr "Объявление символов для FFI."

#: ../doc/dev_guide/reference_capi/utils.rst:63
msgid "C definitions (e.g. \"struct stat\")"
msgstr "C-определения (например, \"struct stat\")"

#: ../doc/dev_guide/reference_capi/utils.rst:66
msgid "``LUA_ERRRUN``, ``LUA_ERRMEM` or ``LUA_ERRERR`` otherwise."
msgstr "``LUA_ERRRUN``, ``LUA_ERRMEM` или ``LUA_ERRERR``, в противном случае."

#: ../doc/dev_guide/reference_capi/utils.rst:68
msgid "See also: ``ffi.cdef(def)``"
msgstr "См. также ``ffi.cdef(def)``"

#: ../doc/dev_guide/reference_capi/utils.rst:72
msgid "Push uint64_t onto the stack."
msgstr "Принудительная передача uint64_t в стек."

#: ../doc/dev_guide/reference_capi/utils.rst:75
#: ../doc/dev_guide/reference_capi/utils.rst:82
msgid "value to push"
msgstr "передаваемое значение"

#: ../doc/dev_guide/reference_capi/utils.rst:79
msgid "Push int64_t onto the stack."
msgstr "Принудительная передача int64_t в стек."

#: ../doc/dev_guide/reference_capi/utils.rst:86
#: ../doc/dev_guide/reference_capi/utils.rst:100
msgid ""
"Check whether the argument idx is a uint64 or a convertable string and "
"returns this number."
msgstr ""
"Проверка, является ли аргумент idx uint64 или конвертируемой строкой, и "
"возврат этого числа."

#: ../doc/dev_guide/reference_capi/utils.rst
msgid "throws"
msgstr "выбрасывает"

#: ../doc/dev_guide/reference_capi/utils.rst:89
#: ../doc/dev_guide/reference_capi/utils.rst:96
msgid "error if the argument can't be converted"
msgstr "ошибку, если аргумент нельзя конвертировать"

#: ../doc/dev_guide/reference_capi/utils.rst:93
#: ../doc/dev_guide/reference_capi/utils.rst:107
msgid ""
"Check whether the argument idx is a int64 or a convertable string and "
"returns this number."
msgstr ""
"Проверка, является ли аргумент idx int64 или конвертируемой строкой, и "
"возврат этого числа."

#: ../doc/dev_guide/reference_capi/utils.rst:103
#: ../doc/dev_guide/reference_capi/utils.rst:110
msgid "the converted number or 0 of argument can't be converted"
msgstr "конвертированное число или 0, если аргумент нельзя конвертировать"

#: ../doc/dev_guide/reference_capi/utils.rst:114
msgid "Push a tuple onto the stack."
msgstr "Принудительная передача кортежа в стек."

#: ../doc/dev_guide/reference_capi/utils.rst:118
msgid "error on OOM"
msgstr "ошибка при нехватке памяти"

#: ../doc/dev_guide/reference_capi/utils.rst:120
msgid "See also: :ref:`luaT_istuple <c_api-utils-luaT_istuple>`"
msgstr "См. также :ref:`luaT_istuple <c_api-utils-luaT_istuple>`"

#: ../doc/dev_guide/reference_capi/utils.rst:126
msgid "Check whether ``idx`` is a tuple."
msgstr "Проверка, является ли ``idx`` кортежем."

#: ../doc/dev_guide/reference_capi/utils.rst:129
msgid "the stack index"
msgstr "индекс стека"

#: ../doc/dev_guide/reference_capi/utils.rst:131
msgid "non-NULL if ``idx`` is a tuple"
msgstr "не NULL, если ``idx`` -- это кортеж"

#: ../doc/dev_guide/reference_capi/utils.rst:132
msgid "NULL if ``idx`` is not a tuple"
msgstr "NULL, если ``idx`` -- это не кортеж"

#: ../doc/dev_guide/reference_capi/utils.rst:136
msgid "Re-throw the last Tarantool error as a Lua object."
msgstr "Повторение последней ошибки в Tarantool'е в виде Lua-объекта."

#: ../doc/dev_guide/reference_capi/utils.rst:138
msgid ""
"See also: `lua_error() "
"<https://www.lua.org/manual/5.1/manual.html#lua_error>`_,"
msgstr ""
"См. также `lua_error() "
"<https://www.lua.org/manual/5.1/manual.html#lua_error>`_,"

#: ../doc/dev_guide/reference_capi/utils.rst:139
msgid ":ref:`box_error_last() <c_api-error-box_error_last>`."
msgstr ":ref:`box_error_last() <c_api-error-box_error_last>`."

#: ../doc/dev_guide/reference_capi/utils.rst:143
msgid ""
"Similar to `lua_cpcall() "
"<https://www.lua.org/manual/5.1/manual.html#lua_cpcall>`_, but with the "
"proper support of Tarantool errors."
msgstr ""
"Аналог `lua_cpcall() "
"<https://www.lua.org/manual/5.1/manual.html#lua_cpcall>`_, но с "
"соответствующей поддержкой ошибок Tarantool'а."

#: ../doc/dev_guide/reference_capi/utils.rst:148
msgid "Get the global Lua state used by Tarantool."
msgstr "Получение глобального состояния Lua, используемого Tarantool'ом."

#: ../doc/dev_guide/release_management.rst:5
msgid "Release management"
msgstr "Управление версиями"

#: ../doc/dev_guide/release_management.rst:11
msgid "Release policy"
msgstr "Политика управления версия"

#: ../doc/dev_guide/release_management.rst:13
msgid ""
"A Tarantool release is identified by three digits, for example, 1.7.7. We"
" use these digits according to their definitions provided at "
"http://semver.org:"
msgstr ""
"Версия Tarantool'а определяется тремя цифрами, например, 1.7.7. Мы "
"пользуемся цифрами по определению, данному на сайте http://semver.org:"

#: ../doc/dev_guide/release_management.rst:16
msgid ""
"The first digit stands for MAJOR release. A **major** release may contain"
" *incompatible changes*."
msgstr ""
"Первая цифра означает МАЖОРНУЮ версию. **Мажорная** версия может "
"содержать *несовместимые изменения*."

#: ../doc/dev_guide/release_management.rst:18
msgid ""
"The second digit stands for MINOR release, it does not contain "
"incompatible changes, and is used for introducing backward-compatible "
"*features*."
msgstr ""
"Вторая цифра означает МИНОРНУЮ версию; такая версия не содержит "
"несовместимых изменений и используется для релиза нового *функционала* с "
"обратной совместимостью."

#: ../doc/dev_guide/release_management.rst:20
msgid ""
"The third digit is for PATCH releases that contain only backward-"
"compatible *bug fixes*."
msgstr ""
"Третья цифра используется для ПАТЧ-версий, которые содержат только "
"**исправления дефектов** с обратной совместимостью."

#: ../doc/dev_guide/release_management.rst:23
msgid "In MINOR digit, we reflect how stable a release is:"
msgstr "Цифра МИНОРНОЙ версии также отражает ее стабильность:"

#: ../doc/dev_guide/release_management.rst:25
msgid "0 meaning alpha,"
msgstr "0 означает альфа-версию,"

#: ../doc/dev_guide/release_management.rst:26
msgid "1 meaning beta,"
msgstr "1 означает бета-версию,"

#: ../doc/dev_guide/release_management.rst:27
msgid "anything between 1 and 10 meaning stable, and"
msgstr "от 1 до 10 означает стабильную версию, а"

#: ../doc/dev_guide/release_management.rst:28
msgid "10 meaning LTS."
msgstr "10 означает окончательную версию с долгосрочной технической поддержкой."

#: ../doc/dev_guide/release_management.rst:30
msgid ""
"So, each MAJOR release series goes through a development-maturity life "
"cycle of MINOR releases, as follows:"
msgstr ""
"Таким образом, каждая МАЖОРНАЯ версия проходит через жизненный цикл "
"разработки МИНОРНЫХ версий следующим образом:"

#: ../doc/dev_guide/release_management.rst:33
msgid ""
"**Alpha**. Once in every few months we release a few alpha versions, e.g."
" 2.0.1, 2.0.2."
msgstr ""
"**Альфа**. Один раз в несколько месяцев выходят несколько альфа-версий, "
"например, 2.0.1, 2.0.2."

#: ../doc/dev_guide/release_management.rst:36
msgid "Alpha versions may contain incompatible changes, crashes and other bugs."
msgstr ""
"Альфа-версии могут содержать несовместимые изменения, сбои и другие "
"дефекты."

#: ../doc/dev_guide/release_management.rst:38
msgid ""
"**Beta**. Once major changes necessary to introduce new flagship features"
" are ready, we release a few beta versions, e.g. 2.1.3, 2.1.4."
msgstr ""
"**Бета**. Когда готовы значительные изменения, необходимые для включения "
"новых основных функций, мы выпускаем несколько бета-версий, например, "
"2.1.3, 2.1.4."

#: ../doc/dev_guide/release_management.rst:41
msgid ""
"Beta versions may contain crashes, but do not have incompatible changes, "
"so can be used to develop new applications."
msgstr ""
"Бета-версии могут приводить к сбоям, но не содержат несовместимых "
"изменений, поэтому их можно использовать для разработки новых приложений."

#: ../doc/dev_guide/release_management.rst:44
msgid ""
"**Stable**. Finally, after we see our beta versions run successfully in "
"production, usually in a few more months, during which we fix all "
"incoming bugs and add some minor features, we declare this MAJOR release "
"series stable."
msgstr ""
"**Стабильная**. Наконец, после того, как бета-версии успешно отработают "
"примерно несколько месяцев, во время которых мы исправляем поступающие "
"дефекты и добавляем некоторые небольшие функции, мы объявляем эту "
"МАЖОРНУЮ версию стабильной."

#: ../doc/dev_guide/release_management.rst:49
msgid "Like Ubuntu, we distinguish two kinds of stable releases:"
msgstr "Как и в Ubuntu, мы различаем два вида стабильных версий:"

#: ../doc/dev_guide/release_management.rst:51
msgid ""
"**LTS (Long Term Support)** releases that are supported for 3 years "
"(community) and up to 5 years (paying customers). **LTS** release is "
"identified by MINOR version 10."
msgstr ""
"**LTS (Long Term Support - Долгосрочная техническая поддержка)** такие "
"версии поддерживаются в течение 3 лет (сообщество) и до 5 лет "
"(платежеспособные клиенты). **LTS**-версию можно идентифицировать по "
"МИНОРНОЙ версии = 10."

#: ../doc/dev_guide/release_management.rst:54
msgid ""
"**Standard stable releases** are only supported a few months after the "
"next stable is out."
msgstr ""
"**Стандартные стабильные версии** поддерживаются в течении нескольких "
"месяцев после выхода."

#: ../doc/dev_guide/release_management.rst:57
msgid "\"Support\" means that we continue fixing bugs in a release."
msgstr ""
"\"Support\" (поддержка) означает, что мы продолжаем исправлять ошибки в "
"этой версии."

#: ../doc/dev_guide/release_management.rst:59
msgid "We add commits simultaneously to three MAJOR releases:"
msgstr "Мы добавляем коммиты одновременно в три МАЖОРНЫЕ версии:"

#: ../doc/dev_guide/release_management.rst:61
msgid ""
"**LTS** is a stable release which does not receive new features, and only"
" gets backward compatible fixes. Hence, following the rules of semver, "
"LTS release never has its MAJOR or MINOR version increased, and only gets"
" PATCH level releases."
msgstr ""
"**LTS** -- это стабильная версия, которая не получает новые функции, а "
"только исправления обратной совместимости. Следовательно, по правилам "
"семантической версификации в LTS-версии никогда не увеличивается МАЖОРНАЯ"
" или МИНОРНАЯ, а только ПАТЧ-версия."

#: ../doc/dev_guide/release_management.rst:66
msgid ""
"**STABLE** is our current stable release, which may receive new features."
" When the next STABLE version is published, MINOR version is incremented."
" Between MINOR releases, we may have intermediate PATCH level releases as"
" well, which will contain only bug fixes. We maintain PATCH level "
"releases for two STABLE releases, the current and the previous one, to "
"preserve support continuity."
msgstr ""
"**СТАБИЛЬНАЯ** -- это наша текущая стабильная версия, в которую могут "
"быть добавлены новые функции. Когда выходит следующая СТАБИЛЬНАЯ версия, "
"увеличивается МИНОРНАЯ версия. Между МИНОРНЫМИ версиями у нас могут "
"увеличиваться промежуточные уровни ПАТЧ-версии, в которых будут только "
"исправлены дефекты. Мы поддерживаем ПАТЧ-уровни для двух СТАБИЛЬНЫХ "
"версий -- текущей и предыдущей -- для сообщества разработчиков."

#: ../doc/dev_guide/release_management.rst:73
msgid ""
"**NEXT** is our next MAJOR release, and it follows the maturity cycle "
"described in the beginning. While NEXT release is in alpha state, its "
"MINOR is frozen at 0 and is only increased when the release reaches BETA "
"status. Once the NEXT release becomes STABLE, we switch the vehicle for "
"delivery of minor features, designating the previous stable release as "
"LTS, and releasing it with MINOR set to 10."
msgstr ""
"**СЛЕДУЮЩАЯ** -- это следующая МАЖОРНАЯ версия, которая проходит процесс "
"зрелости, описанный в начале раздела. Когда СЛЕДУЮЩАЯ версия находится в "
"альфа-стадии, МИНОРНАЯ остается на уровне 0 и увеличивается, когда версия"
" переходит в БЕТА-стадию. После того, как СЛЕДУЮЩАЯ версия становится "
"СТАБИЛЬНОЙ, мы переключаемся на выдачу небольших функций, обозначая "
"предыдущую стабильную версию как LTS, и выпускаем ее с МИНОРНОЙ версией ="
" 10."

#: ../doc/dev_guide/release_management.rst:80
msgid "To sum up, once a quarter we release:"
msgstr "Итак, раз в квартал выходят:"

#: ../doc/dev_guide/release_management.rst:82
msgid "the next LTS release, e.g. 2.10.6, 2.10.7 or 2.10.8"
msgstr "следующая LTS-версия, например, 2.10.6, 2.10.7 или 2.10.8"

#: ../doc/dev_guide/release_management.rst:83
msgid "the next STABLE release, e.g. 3.6, 3.7 or 3.8"
msgstr "следующая СТАБИЛЬНАЯ версия,например, 3.6, 3.7 или 3.8"

#: ../doc/dev_guide/release_management.rst:84
msgid ""
"(optionally) an alpha or beta version of the NEXT release, e.g. 4.0.1, "
"4.0.2 or 4.0.3"
msgstr ""
"(возможно) альфа-стадия или бета-стадия СЛЕДУЮЩЕЙ версии, например, "
"4.0.1, 4.0.2 или 4.0.3"

#: ../doc/dev_guide/release_management.rst:87
msgid ""
"In all supported releases, we also release a PATCH release as soon as we "
"find and fix an outstanding CVE/vulnerability."
msgstr ""
"Для всех поддерживаемых версий мы также выпускаем ПАТЧИ, как только "
"обнаружим и устраним уязвимость."

#: ../doc/dev_guide/release_management.rst:90
msgid ""
"We also publish nightly builds, and use the fourth slot in the version "
"identifier to designate the nightly build number."
msgstr ""
"Мы также публикуем ночные сборки и используем четвертый слот в "
"идентификаторе версии для обозначения номера ночной сборки."

#: ../doc/dev_guide/release_management.rst:93
msgid "Example version identifier:"
msgstr "Пример идентификатора версии:"

#: ../doc/dev_guide/release_management.rst:95
msgid "2.0.3 - third alpha of 2.0 release"
msgstr "2.0.3 - третья альфа-стадия версии 2.0"

#: ../doc/dev_guide/release_management.rst:96
msgid "2.1.3 - a beta of 2.0 release"
msgstr "2.1.3 - бета-стадия версии 2.0"

#: ../doc/dev_guide/release_management.rst:97
msgid "2.2 - a stable version of 2.0 series, but not an LTS yet"
msgstr "2.2 - стабильная версия серии 2.0, но еще не LTS"

#: ../doc/dev_guide/release_management.rst:98
msgid "2.10 - an LTS release"
msgstr "2.10 - LTS-версия"

#: ../doc/dev_guide/release_management.rst:104
msgid "How to make a minor release"
msgstr "Как собрать минорную версию"

#: ../doc/dev_guide/release_management.rst:106
msgid ""
"$ git tag -a 2.4 -m \"Next minor in 2.x series\"\n"
"$ vim CMakeLists.txt # edit CPACK_PACKAGE_VERSION_PATCH\n"
"$ git push --tags"
msgstr ""
"$ git tag -a 2.4 -m \"Next minor in 2.x series\"\n"
"$ vim CMakeLists.txt # редактировать CPACK_PACKAGE_VERSION_PATCH\n"
"$ git push --tags"

#: ../doc/dev_guide/release_management.rst:112
msgid ""
"A tag which is made on a git branch can be taken along with a merge, or "
"left on the branch. The technique to \"keep the tag on the branch it was "
"originally set on\" is to use ``--no-fast-forward`` when merging this "
"branch."
msgstr ""
"Тег, который делается на ветке git, можно забрать при слиянии или "
"оставить на ветке. Метод \"сохранить тег на ветке, на которой он был "
"первоначально установлен\", заключается в использовании ``--no-fast-"
"forward`` при слиянии этой ветки."

#: ../doc/dev_guide/release_management.rst:116
msgid ""
"With ``--no-ff``, a merge changeset is created to represent the received "
"changes, and only that merge changeset ends up in the destination branch."
" This technique can be useful when there are two active lines of "
"development, e.g. \"stable\" and \"next\", and it's necessary to be able "
"to tag both lines independently."
msgstr ""
"С помощью ``--no-ff`` создается набор изменений при слиянии для пояснения"
" полученных изменений, и только этот набор изменений при слиянии "
"оказывается в ветке назначения. Этот метод можно использовать, когда есть"
" две активные линии разработки, например, \"стабильная\" и \"следующая\","
" и необходимо иметь возможность помечать тегами линии независимо друг от "
"друга."

#: ../doc/dev_guide/release_management.rst:122
msgid ""
"To make sure that a tag doesn't end up in the destination branch, it is "
"necessary to have the commit to which the tag is attached, \"stay on the "
"original branch\". That's exactly what a merge with disabled \"fast-"
"forward\" does -- creates a \"merge\" commit and adds it to both "
"branches."
msgstr ""
"Чтобы убедиться, что тег не окажется в ветке назначения, необходимо, "
"чтобы коммит, к которому привязан тег, остался в исходной ветке. Это и "
"происходит при отключенном \"fast-forward\" -- создается коммит для "
"слияния и добавляется в обе ветки."

#: ../doc/dev_guide/release_management.rst:127
msgid "Here's what it may look like:"
msgstr "Вот как это может выглядеть:"

#: ../doc/dev_guide/release_management.rst:129
msgid ""
"kostja@shmita:~/work/tarantool$ git checkout master\n"
"Already on 'master'\n"
"kostja@shmita:~/work/tarantool$ git tag -a 2.4 -m \"Next development\"\n"
"kostja@shmita:~/work/tarantool$ git describe\n"
"2.4\n"
"kostja@shmita:~/work/tarantool$ git checkout master-stable\n"
"Switched to branch 'master-stable'\n"
"kostja@shmita:~/work/tarantool$ git tag -a 2.3 -m \"Next stable\"\n"
"kostja@shmita:~/work/tarantool$ git describe\n"
"2.3\n"
"kostja@shmita:~/work/tarantool$ git checkout master\n"
"Switched to branch 'master'\n"
"kostja@shmita:~/work/tarantool$ git describe\n"
"2.4\n"
"kostja@shmita:~/work/tarantool$ git merge --no-ff master-stable\n"
"Auto-merging CMakeLists.txt\n"
"Merge made by recursive.\n"
" CMakeLists.txt |    1 +\n"
" 1 files changed, 1 insertions(+), 0 deletions(-)\n"
"kostja@shmita:~/work/tarantool$ git describe\n"
"2.4.0-0-g0a98576"
msgstr ""
"kostja@shmita:~/work/tarantool$ git checkout master\n"
"Already on 'master'\n"
"kostja@shmita:~/work/tarantool$ git tag -a 2.4 -m \"Next development\"\n"
"kostja@shmita:~/work/tarantool$ git describe\n"
"2.4\n"
"kostja@shmita:~/work/tarantool$ git checkout master-stable\n"
"Switched to branch 'master-stable'\n"
"kostja@shmita:~/work/tarantool$ git tag -a 2.3 -m \"Next stable\"\n"
"kostja@shmita:~/work/tarantool$ git describe\n"
"2.3\n"
"kostja@shmita:~/work/tarantool$ git checkout master\n"
"Switched to branch 'master'\n"
"kostja@shmita:~/work/tarantool$ git describe\n"
"2.4\n"
"kostja@shmita:~/work/tarantool$ git merge --no-ff master-stable\n"
"Auto-merging CMakeLists.txt\n"
"Merge made by recursive.\n"
" CMakeLists.txt |    1 +\n"
" 1 files changed, 1 insertions(+), 0 deletions(-)\n"
"kostja@shmita:~/work/tarantool$ git describe\n"
"2.4.0-0-g0a98576"

#: ../doc/dev_guide/release_management.rst:153
msgid "Also, don't forget this:"
msgstr "Кроме того, следует помнить:"

#: ../doc/dev_guide/release_management.rst:155
msgid "Update all issues. Upload the ChangeLog based on ``git log`` output."
msgstr ""
"Обновляйте все задачи. Обновляйте журнал изменений ChangeLog на основании"
" вывода ``git log``."

#: ../doc/dev_guide/release_management.rst:157
msgid ""
"The ChangeLog must only include items which are mentioned as issues on "
"GitHub. If anything significant is there, which is not mentioned, "
"something went wrong in release planning and the release should be held "
"up until this is cleared."
msgstr ""
"Журнал изменений ChangeLog должен включать в себя только пункты, "
"указанные в задачах на GitHub. Если что-то значительное не указано, "
"значит, что-то пошло не так при планировании версии, и ее выход следует "
"отложить до выяснения причин."

#: ../doc/dev_guide/release_management.rst:162
msgid ""
"Click 'Release milestone'. Create a milestone for the next minor release."
" Alert the driver to target bugs and blueprints to the new milestone."
msgstr ""
"Нажимайте 'Release milestone' (создать промежуточную версию). Создавайте "
"промежуточные версии для следующей минорной версии. Указывайте драйверу "
"на дефекты и проекты для новой промежуточной версии."

#: ../doc/dev_guide/release_management.rst:167
msgid "How to release a Docker container"
msgstr "Как выпустить Docker-контейнер"

#: ../doc/dev_guide/release_management.rst:169
msgid "To bump a new version of a Docker container:"
msgstr "Чтобы выдать новую версию Docker-контейнера:"

#: ../doc/dev_guide/release_management.rst:171
msgid ""
"On the ``master`` branch of `tarantool/docker "
"<https://github.com/tarantool/docker>`_ repository, find the Dockerfile "
"that corresponds to the commit's **major** version (e.g. "
"https://github.com/tarantool/docker/blob/master/2.x/Dockerfile for "
"Tarantool version 2.4) and specify the required commit in "
"``TARANTOOL_VERSION``, for example "
"``TARANTOOL_VERSION=2.4.0-11-gcd17b77f9``."
msgstr ""
"В главной ветке ``master`` в репозитории `tarantool/docker "
"<https://github.com/tarantool/docker>`_ найдите Dockerfile, который "
"соответствует **мажорной** версии коммита (например, "
"https://github.com/tarantool/docker/blob/master/2.4/Dockerfile for "
"Tarantool version 2.x), и укажите необходимый коммит в "
"``TARANTOOL_VERSION``, например, "
"``TARANTOOL_VERSION=2.4.0-11-gcd17b77f9``."

#: ../doc/dev_guide/release_management.rst:179
msgid "Commit the Dockerfile back to ``master`` branch."
msgstr "Снова загрузите Dockerfile в главную ветку."

#: ../doc/dev_guide/release_management.rst:181
msgid ""
"In the same repository, create a branch named after the commit's "
"``<major>.<minor>`` versions, e.g. branch ``2.4`` for commit "
"2.4.0-11-gcd17b77f9."
msgstr ""
"В том же репозитории создайте ветку с именем на основании версий коммита "
"``<major>.<minor>``, например, ветка ``2.4`` для коммита "
"2.4.0-11-gcd17b77f9."

#: ../doc/dev_guide/release_management.rst:185
msgid ""
"In Tarantool container build settings at ``hub.docker.com`` "
"(https://hub.docker.com/r/tarantool/tarantool/~/settings/automated-"
"builds/), add a new line:"
msgstr ""
"В настройках сборки контейнера Tarantool'а в ``hub.docker.com`` "
"(https://hub.docker.com/r/tarantool/tarantool/~/settings/automated-"
"builds/) добавьте новую строку:"

#: ../doc/dev_guide/release_management.rst:189
msgid "Branch: x.y, /x, x.y"
msgstr "Branch: x.y, /x, x.y"

#: ../doc/dev_guide/release_management.rst:193
msgid "where ``x`` and ``y`` correspond to the commit's major and minor versions."
msgstr "где ``x`` и ``y`` соответствуют мажорной и минорной версиям коммита."

#: ../doc/dev_guide/release_management.rst:195
msgid "Click **Save changes**."
msgstr "Нажмите **Save changes** (сохранить изменения)."

#: ../doc/dev_guide/release_management.rst:197
msgid "Shortly after, a new Docker container will be built."
msgstr "Вскоре будет создан новый Docker-контейнер."

#~ msgid "`cURL <https://curl.haxx.se/>`_ library, version 0.725+"
#~ msgstr "библиотека `cURL <https://curl.haxx.se/>`_ версии 0.725+"

#~ msgid "Building documentation"
#~ msgstr "Сборка документации"

#~ msgid ""
#~ "Tarantool documentation is built using a"
#~ " simplified markup system named ``Sphinx``"
#~ " (see http://sphinx-doc.org). You can "
#~ "build a local version of this "
#~ "documentation and you can contribute to"
#~ " Tarantool's version."
#~ msgstr ""
#~ "Документация Tarantool'а создается с помощью"
#~ " системы упрощенной разметки под названием"
#~ " ``Sphinx`` (see http://sphinx-doc.org). Вы"
#~ " можете создать локальную версию "
#~ "документации, а также содействовать в "
#~ "разработке версии Tarantool'а."

#~ msgid "You need to install these packages:"
#~ msgstr "Необходимо установить следующие пакеты:"

#~ msgid "``git`` (a program for downloading source repositories)"
#~ msgstr "``git`` (программа для скачивания репозиториев исходного кода)"

#~ msgid ""
#~ "``CMake`` version 2.8 or later (a "
#~ "program for managing the build process)"
#~ msgstr ""
#~ "``CMake`` версии 2.8 или более новой "
#~ "(программа для управления процессом сборки)"

#~ msgid ""
#~ "``Python`` version greater than 2.6 --"
#~ " preferably 2.7 -- and less than "
#~ "3.0 (Sphinx is a Python-based "
#~ "tool)"
#~ msgstr ""
#~ "``Python`` версии выше 2.6 -- "
#~ "рекомендуется 2.7 -- и ниже 3.0 "
#~ "(Sphinx -- это средство на основе "
#~ "Python)"

#~ msgid ""
#~ "``LaTeX`` (a system for document "
#~ "preparation; the installable package name "
#~ "usually begins with the word 'texlive'"
#~ " or 'tetex', on Ubuntu the name "
#~ "is 'texlive-latex-base')"
#~ msgstr ""
#~ "``LaTeX`` (система для подготовки "
#~ "документации; название устанавливаемого пакета "
#~ "обычно начинается со слов 'texlive' или"
#~ " 'tetex', на Ubuntu называется 'texlive-"
#~ "latex-base')"

#~ msgid ""
#~ "``ImageMagick`` (a system for image "
#~ "conversion; on MacOS install it using"
#~ " ``brew``)"
#~ msgstr ""
#~ "``ImageMagick`` (система для конвертации "
#~ "изображений; на MacOS установите, используя"
#~ " ``brew``)"

#~ msgid "You need to install these Python modules:"
#~ msgstr "Необходимо установить следующие модули Python:"

#~ msgid "`pip <https://pypi.python.org/pypi/pip>`_, any version"
#~ msgstr "`pip <https://pypi.python.org/pypi/pip>`_ любой версии"

#~ msgid "`Sphinx <https://pypi.python.org/pypi/Sphinx>`_ version 1.4.4 or later"
#~ msgstr "`Sphinx <https://pypi.python.org/pypi/Sphinx>`_ версии 1.4.4 или новее"

#~ msgid ""
#~ "If you encounter the \"Missing "
#~ "SPHINX_EXECUTABLE\" error message on Mac, "
#~ "manually export the PATH variable:"
#~ msgstr ""
#~ "Если на Mac появится сообщение ошибки"
#~ " \"Missing SPHINX_EXECUTABLE\"  Mac, "
#~ "экспортируйте переменную PATH вручную:"

#~ msgid "export PATH=$PATH:/User/user_name/Library/Python/2.7/bin"
#~ msgstr "export PATH=$PATH:/User/user_name/Library/Python/2.7/bin"

#~ msgid "`sphinx-intl <https://pypi.python.org/pypi/sphinx-intl>`_ version 0.9.9"
#~ msgstr "`sphinx-intl <https://pypi.python.org/pypi/sphinx-intl>`_ версии 0.9.9"

#~ msgid ""
#~ "If you encounter the \"Missing "
#~ "SPHINX_INTL_DIR\" error message on Mac, "
#~ "manually export the SPHINX_INTL_DIR variable:"
#~ msgstr ""
#~ "Если на Mac появится сообщение ошибки"
#~ " \"Missing SPHINX_INTL_DIR\"  Mac, экспортируйте"
#~ " переменную SPHINX_INTL_DIR вручную:"

#~ msgid "export SPHINX_INTL_DIR=/User/user_name/Library/Python/2.7/bin"
#~ msgstr "export SPHINX_INTL_DIR=/User/user_name/Library/Python/2.7/bin"

#~ msgid "`lupa <https://pypi.python.org/pypi/lupa>`_ -- any version"
#~ msgstr "`lupa <https://pypi.python.org/pypi/lupa>`_ -- любой версии"

#~ msgid ""
#~ "You should specify ``--user`` flag on"
#~ " Mac while installing Python modules "
#~ "for correct installation."
#~ msgstr ""
#~ "Для правильной установки модулей Python "
#~ "на Mac следует указать флаг ``--user``."

#~ msgid ""
#~ "See more details about installation in"
#~ " the :ref:`build-from-source "
#~ "<building_from_source>` section of this "
#~ "documentation."
#~ msgstr ""
#~ "Более подробную информацию об установке "
#~ "см. в разделе :ref:`Сборка из исходных"
#~ " файлов <building_from_source>` данного "
#~ "руководства."

#~ msgid ""
#~ "Use ``git`` to download the latest "
#~ "source code of this documentation from"
#~ " the GitHub repository ``tarantool/doc``, "
#~ "branch 1.10. For example, to download"
#~ " to a local directory named "
#~ "``~/tarantool-doc``:"
#~ msgstr ""
#~ "Используйте ``git`` для загрузки последней "
#~ "версии исходного кода документации из "
#~ "репозитория GitHub ``tarantool/doc`` (ветка "
#~ "1.10). Например, для загрузки локальной "
#~ "директории под названием ``~/tarantool-doc``:"

#~ msgid "$ git clone https://github.com/tarantool/doc.git ~/tarantool-doc"
#~ msgstr "$ git clone https://github.com/tarantool/doc.git ~/tarantool-doc"

#~ msgid "Use ``CMake`` to initiate the build."
#~ msgstr "Используйте ``CMake``, чтобы начать сборку."

#~ msgid ""
#~ "$ cd ~/tarantool-doc\n"
#~ "$ make clean         # unnecessary, added for good luck\n"
#~ "$ rm CMakeCache.txt  # unnecessary, added for good luck\n"
#~ "$ cmake .            # initiate"
#~ msgstr ""
#~ "$ cd ~/tarantool-doc\n"
#~ "$ make clean         # необязательно, добавлено на удачу\n"
#~ "$ rm CMakeCache.txt  # необязательно, добавлено на удачу\n"
#~ "$ cmake .            # начать"

#~ msgid "Build a local version of the documentation."
#~ msgstr "Создайте локальную версию документации."

#~ msgid ""
#~ "Run the ``make`` command with an "
#~ "appropriate option to specify which "
#~ "documentation version to build."
#~ msgstr ""
#~ "Выполните команду ``make`` с соответствующей"
#~ " опцией, чтобы указать версию собираемой"
#~ " документации."

#~ msgid ""
#~ "$ cd ~/tarantool-doc\n"
#~ "$ make sphinx-html           # multi-page English version\n"
#~ "$ make sphinx-singlehtml     # one-page English version\n"
#~ "$ make sphinx-html-ru        # multi-page Russian version\n"
#~ "$ make sphinx-singlehtml-ru  # one-page Russian version\n"
#~ "$ make all                   # all versions plus the entire web-site"
#~ msgstr ""
#~ "$ cd ~/tarantool-doc\n"
#~ "$ make sphinx-html           # многостраничная английская версия\n"
#~ "$ make sphinx-singlehtml     # одностраничная английская версия\n"
#~ "$ make sphinx-html-ru        # многостраничная русская версия\n"
#~ "$ make sphinx-singlehtml-ru  # одностраничная русская версия\n"
#~ "$ make all                   # все версии плюс веб-сайт полностью"

#~ msgid "Documentation will be created in subdirectories of ``/output``:"
#~ msgstr "Документация будет создана в поддиректориях ``/output``:"

#~ msgid "``/output/en`` (files of the English version)"
#~ msgstr "``/output/en`` (файлы английской версии)"

#~ msgid "``/output/ru`` (files of the Russian version)"
#~ msgstr "``/output/ru`` (файлы русской версии)"

#~ msgid ""
#~ "The entry point for each version "
#~ "is the ``index.html`` file in the "
#~ "appropriate directory."
#~ msgstr ""
#~ "Точкой входа в каждую версию будет "
#~ "файл ``index.html`` в соответствующей "
#~ "директории."

#~ msgid "Set up a web server."
#~ msgstr "Настройте веб-сервер."

#~ msgid ""
#~ "One way is to say ``make "
#~ "sphinx-webserver``. This will set up "
#~ "and run the web server on port "
#~ "``8000``:"
#~ msgstr ""
#~ "Один способ сделать это -- выполнить "
#~ "команду ``make sphinx-webserver``. Веб-сервер"
#~ " будет настроен и запущен по порту"
#~ " ``8000``:"

#~ msgid ""
#~ "$ cd ~/tarantool-doc\n"
#~ "$ make sphinx-html       # as an"
#~ " example, build the multi-page "
#~ "English documentation\n"
#~ "$ make sphinx-webserver  # set up and run the web server"
#~ msgstr ""
#~ "$ cd ~/tarantool-doc\n"
#~ "$ make sphinx-html       # в "
#~ "качестве примера соберем многостраничную "
#~ "версию документации на английском языке\n"
#~ ""
#~ "$ make sphinx-webserver  # настройка и запуск веб-сервера"

#~ msgid ""
#~ "In case port ``8000`` is already "
#~ "in use, you can specify any other"
#~ " port number that is bigger than "
#~ "``1000`` in the ``tarantool-"
#~ "doc/CMakeLists.txt`` file (search it for "
#~ "the ``sphinx-webserver`` target) and "
#~ "rebuild cmake files:"
#~ msgstr ""
#~ "Если порт ``8000`` уже используется, "
#~ "можно указать любой другой номер порта"
#~ " свыше ``1000`` в файле ``tarantool-"
#~ "doc/CMakeLists.txt`` (найдите его по "
#~ "``sphinx-webserver``) и повторно собрать "
#~ "файлы cmake:"

#~ msgid ""
#~ "$ cd ~/tarantool-doc\n"
#~ "$ git clean -qfxd        # clean up old cmake files\n"
#~ "$ cmake .                # rebuild cmake files\n"
#~ "$ make sphinx-html       # as an"
#~ " example, build the multi-page "
#~ "English documentation\n"
#~ "$ make sphinx-webserver  # set up"
#~ " and run the web server on the"
#~ " custom port"
#~ msgstr ""
#~ "$ cd ~/tarantool-doc\n"
#~ "$ git clean -qfxd        # очистка старых файлов cmake\n"
#~ "$ cmake .                # повторная сборка файлов cmake\n"
#~ "$ make sphinx-html       # в "
#~ "качестве примера соберем многостраничную "
#~ "версию документации на английском языке\n"
#~ ""
#~ "$ make sphinx-webserver  # настройка "
#~ "и запуск веб-сервера по указанному порту"

#~ msgid "Or you can release the port:"
#~ msgstr "Или можно освободить порт:"

#~ msgid ""
#~ "$ sudo lsof -i :8000  # get the process ID (PID)\n"
#~ "COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME\n"
#~ "Python 19516 user 3u IPv4 0xe7f8gc6be1b43c7 0t0 TCP *:irdmi (LISTEN)\n"
#~ "$ sudo kill -9 19516  # kill the process"
#~ msgstr ""
#~ "$ sudo lsof -i :8000  # получение идентификатора процесса (PID)\n"
#~ "COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME\n"
#~ "Python 19516 user 3u IPv4 0xe7f8gc6be1b43c7 0t0 TCP *:irdmi (LISTEN)\n"
#~ "$ sudo kill -9 19516  # удаление процесса"

#~ msgid ""
#~ "The other way is to run the "
#~ "built-in web server in Python. Make"
#~ " sure to run it from the "
#~ "documentation ``output`` folder:"
#~ msgstr ""
#~ "Другой способ -- это запустить "
#~ "встроенный веб-сервер на Python. Убедитесь,"
#~ " что запускаете его из папки "
#~ "документации ``output``:"

#~ msgid ""
#~ "$ cd ~/tarantool-doc/output\n"
#~ "$ python -m SimpleHTTPServer 8000"
#~ msgstr ""
#~ "$ cd ~/tarantool-doc/output\n"
#~ "$ python -m SimpleHTTPServer 8000"

#~ msgid ""
#~ "In case port ``8000`` is already "
#~ "in use, you can specify any other"
#~ " port number that is bigger than "
#~ "``1000``."
#~ msgstr ""
#~ "Если порт ``8000`` уже используется, "
#~ "можно указать любой другой номер порта"
#~ " свыше ``1000`` в файле."

#~ msgid ""
#~ "Open your browser and enter "
#~ "``127.0.0.1:8000/en/doc/1.10/`` into the address "
#~ "box (or ``127.0.0.1:8000/ru/doc/1.10/`` if you"
#~ " built the Russian documentation). Mind "
#~ "the trailing slash \"/\" in the "
#~ "address string."
#~ msgstr ""
#~ "Откройте браузер и введите "
#~ "``127.0.0.1:8000/en/doc/1.10/`` в адресной строке"
#~ " (или ``127.0.0.1:8000/ru/doc/1.10/`` для "
#~ "документации на русском). Обратите внимание"
#~ " на завершающую косую черту \"/\" в"
#~ " адресной строке."

#~ msgid ""
#~ "If your local documentation build is "
#~ "valid, the manual will appear in "
#~ "the browser."
#~ msgstr ""
#~ "Если сборка локальной документации выполнена"
#~ " правильно, руководство появится в окне "
#~ "браузера."

#~ msgid ""
#~ "To contribute to documentation, use the"
#~ " `REST "
#~ "<http://docutils.sourceforge.net/docs/user/rst/quickstart.html>`_ "
#~ "format for drafting and submit your "
#~ "updates as a `pull request "
#~ "<https://help.github.com/articles/creating-a-pull-request/>`_"
#~ " via GitHub."
#~ msgstr ""
#~ "Чтобы содействовать в разработке документации,"
#~ " используйте формат `REST "
#~ "<http://docutils.sourceforge.net/docs/user/rst/quickstart.html>`_ "
#~ "для создания чернового варианта и "
#~ "отправьте изменения на рассмотрение в "
#~ "виде `запроса на включение в проект "
#~ "<https://help.github.com/articles/creating-a-pull-request/>`_"
#~ " через GitHub."

#~ msgid ""
#~ "To comply with the writing and "
#~ "formatting style, use the :ref:`guidelines "
#~ "<documentation_guidelines>` provided in the "
#~ "documentation, common sense and existing "
#~ "documents."
#~ msgstr ""
#~ "Чтобы текст соответствовал стилю и "
#~ "формату, воспользуйтесь :ref:`рекомендациями "
#~ "<documentation_guidelines>`, предоставленными в "
#~ "документации, здравым смыслом и уже "
#~ "существующими документами."

#~ msgid ""
#~ "If you suggest creating a new "
#~ "documentation section (a whole new "
#~ "page), it has to be saved to "
#~ "the relevant section at GitHub."
#~ msgstr ""
#~ "Если вы предлагаете создать новый раздел"
#~ " документации (отдельную страницу), его "
#~ "следует сохранить в соответствующий раздел "
#~ "на GitHub."

#~ msgid ""
#~ "If you want to contribute to "
#~ "localizing this documentation (for example "
#~ "into Russian), add your translation "
#~ "strings to ``.po`` files stored in "
#~ "the corresponding locale directory (for "
#~ "example ``/locale/ru/LC_MESSAGES/`` for Russian)."
#~ " See more about localizing with "
#~ "Sphinx at http://www.sphinx-"
#~ "doc.org/en/stable/intl.html"
#~ msgstr ""
#~ "Если вы хотите содействовать в "
#~ "локализации данной документации (например, на"
#~ " русский), добавьте перевод в файлы "
#~ "формата ``.po``, которые хранятся в "
#~ "директории соответствующей локали (например, "
#~ "``/locale/ru/LC_MESSAGES/`` для русского языка). "
#~ "Более подробную информацию о локализации "
#~ "с помощью Sphinx см. по ссылке "
#~ "http://www.sphinx-doc.org/en/stable/intl.html"

