# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 1.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-06 14:05+0000\n"
"PO-Revision-Date: 2019-11-14 20:46+0300\n"
"Last-Translator: \n"
"Language: ru\n"
"Language-Team: \n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

msgid "Documentation guidelines"
msgstr "Рекомендации по написанию документации"

msgid ""
"These guidelines are updated on the on-demand basis, covering only those "
"issues that cause pains to the existing writers. At this point, we do not"
" aim to come up with an exhaustive Documentation Style Guide for the "
"Tarantool project."
msgstr ""
"Данные рекомендации обновляются по запросу, охватывая только те проблемы,"
" которые вызывают вопросы у авторов документации. На данный момент мы не "
"стремимся разработать исчерпывающее руководство по написанию документации"
" для проекта Tarantool."

msgid "Markup issues"
msgstr "Вопросы по разметке"

msgid "Wrapping text"
msgstr "Перенос текста"

msgid ""
"The limit is 80 characters per line for plain text, and no limit for any "
"other constructions when wrapping affects ReST readability and/or HTML "
"output. Also, it makes no sense to wrap text into lines shorter than 80 "
"characters unless you have a good reason to do so."
msgstr ""
"Строка ограничена 80 символами для обычного текста и никак не ограничена "
"для любых других конструкций, когда обтекание влияет на читаемость ReST и"
" / или HTML-вывод. Кроме того, нет смысла переносить текст в строках "
"короче 80 символов, если у вас для этого нет веских оснований."

msgid ""
"The 80-character limit comes from the ISO/ANSI 80x24 screen resolution, "
"and it's unlikely that readers/writers will use 80-character consoles. "
"Yet it's still a standard for many coding guidelines (including "
"Tarantool). As for writers, the benefit is that an 80-character page "
"guide allows keeping the text window rather narrow most of the time, "
"leaving more space for other applications in a wide-screen environment."
msgstr ""
"Ограничение в 80 символов исходит из разрешения экрана ISO/ANSI 80x24, и "
"маловероятно, что читатели/писатели будут использовать 80-символьные "
"консоли. Тем не менее, такое ограничение по-прежнему является стандартом "
"во многих рекомендациях по программированию (включая Tarantool). Что "
"касается писателей, то благодаря ограничению размера страницы окно с "
"текстом может быть довольно узким, оставляя больше места для других "
"приложений в широкоэкранном окружении."

msgid "Formatting code snippets"
msgstr "Форматирование фрагментов кода"

msgid ""
"For code snippets, we mainly use the ``code-block`` directive with an "
"appropriate highlighting language. The most commonly used highlighting "
"languages are:"
msgstr ""
"Для фрагментов коды мы обычно используем директиву ``code-block`` с "
"соответствующей подсветкой синтаксиса языка. Чаще всего используем "
"следующее:"

msgid "``.. code-block:: tarantoolsession``"
msgstr "``.. code-block:: tarantoolsession``"

msgid "``.. code-block:: console``"
msgstr "``.. code-block:: console``"

msgid "``.. code-block:: lua``"
msgstr "``.. code-block:: lua``"

msgid "For example (a code snippet in Lua):"
msgstr "Например (фрагмент Lua-кода):"

msgid ""
"for page in paged_iter(\"X\", 10) do\n"
"  print(\"New Page. Number Of Tuples = \" .. #page)\n"
"  for i=1,#page,1 do print(page[i]) end\n"
"end"
msgstr ""
"for page in paged_iter(\"X\", 10) do\n"
"  print(\"New Page. Number Of Tuples = \" .. #page)\n"
"  for i=1,#page,1 do print(page[i]) end\n"
"end"

msgid ""
"In rare cases, when we need custom highlight for specific parts of a code"
" snippet and the ``code-block`` directive is not enough, we use the per-"
"line ``codenormal`` directive together and explicit output formatting "
"(defined in :file:`doc/sphinx/_static/sphinx_design.css`)."
msgstr ""
"В редких случаях при необходимости подсветить отдельные части фрагмента "
"кода, когда директивы ``code-block`` недостаточно, мы используем "
"директиву ``codenormal`` построчно вместе с явным форматированием вывода "
"(как указано в :file:`doc/sphinx/_static/sphinx_design.css`)."

msgid "Examples:"
msgstr "Примеры:"

msgid "Function syntax (the placeholder `space-name` is displayed in italics):"
msgstr "Синтаксис функции (объект-заполнитель `имя-спейса` отображается курсивом):"

msgid ""
":codenormal:`box.space.`:codeitalic:`space-"
"name`:codenormal:`:create_index('index-name')`"
msgstr ""
":codenormal:`box.space.`:codeitalic:`имя-спейса`:codenormal:`:create_index"
"('index-name')`"

msgid ""
"A tdb session (user input is in bold, command prompt is in blue, computer"
" output is in green):"
msgstr ""
"Сессия tdb (ввод информации пользователем выделяется жирным шрифтом, "
"приглашение на ввод команды -- синим, вывод -- зеленым):"

msgid ""
"$ :codebold:`tarantool example.lua`\n"
":codeblue:`(TDB)`  :codegreen:`Tarantool debugger v.0.0.3. Type h for "
"help`\n"
"example.lua\n"
":codeblue:`(TDB)`  :codegreen:`[example.lua]`\n"
":codeblue:`(TDB)`  :codenormal:`3: i = 1`"
msgstr ""
"$ :codebold:`tarantool example.lua`\n"
":codeblue:`(TDB)`  :codegreen:`Tarantool debugger v.0.0.3. Type h for "
"help`\n"
"example.lua\n"
":codeblue:`(TDB)`  :codegreen:`[example.lua]`\n"
":codeblue:`(TDB)`  :codenormal:`3: i = 1`"

msgid ""
"Warning: Every entry of explicit output formatting (``codenormal``, "
"``codebold``, etc) tends to cause troubles when this documentation is "
"translated to other languages. Please avoid using explicit output "
"formatting unless it is REALLY needed."
msgstr ""
"Внимание: Каждая запись с явным форматированием вывода (``codenormal``, "
"``codebold`` и т.п.) часто вызывает трудности при переводе документации "
"на другие языки. Постарайтесь избегать специального форматирования, если "
"только без него никак НЕЛЬЗЯ обойтись."

msgid "Using separated links"
msgstr "Использование разделенных ссылок"

msgid "Avoid separating the link and the target definition (ref), like this:"
msgstr "Избегайте разделения ссылки и определения цели (ref), например:"

msgid ""
"This is a paragraph that contains `a link`_.\n"
"\n"
".. _a link: http://example.com/"
msgstr ""
"Это абзац, который содержит `ссылку`_.\n"
" \n"
" .. ссылка: http://example.com/"

msgid "Use non-separated links instead:"
msgstr "Используйте неразделенные ссылки:"

msgid "This is a paragraph that contains `a link <http://example.com/>`_."
msgstr "Это абзац, который содержит `ссылку <http://example.com/>`_."

msgid ""
"Warning: Every separated link tends to cause troubles when this "
"documentation is translated to other languages. Please avoid using "
"separated links unless it is REALLY needed (e.g. in tables)."
msgstr ""
"Внимание: Каждая разделенная ссылка часто вызывает трудности при переводе"
" документации на другие языки. Постарайтесь избегать разделенных ссылок, "
"если только без них никак НЕЛЬЗЯ обойтись (например, в таблицах)."

msgid "Creating labels for local links"
msgstr "Создание меток для локальных ссылок"

msgid ""
"We avoid using links that sphinx generates automatically for most "
"objects. Instead, we add our own labels for linking to any place in this "
"documentation."
msgstr ""
"Мы стараемся не использовать автоматически сгенерированные sphinx ссылки "
"для большинства объектов. Вместо них мы добавляем собственные метки для "
"ссылок на любое место в документации."

msgid "Our naming convention is as follows:"
msgstr "Соглашение об именовании заключается в следующем:"

msgid "Character set: a through z, 0 through 9, dash, underscore."
msgstr "Набор символов: от a до z, от 0 до 9, дефис, подчеркивание."

msgid "Format: ``path dash filename dash tag``"
msgstr "Формат: ``путь дефис имя файла дефис тег``"

msgid ""
"Example: ``_c_api-box_index-iterator_type`` |br| where: |br| ``c_api`` is"
" the directory name, |br| ``box_index`` is the file name (without "
"\".rst\"), and |br| ``iterator_type`` is the tag."
msgstr ""
"Пример: ``_c_api-box_index-iterator_type`` |br| где: |br| ``c_api`` -- "
"имя директории, |br| ``box_index`` -- имя файла (без \".rst\"), а |br| "
"``iterator_type`` -- тег."

msgid ""
"The file name is useful for knowing, when you see \"ref\", where it is "
"pointing to. And if the file name is meaningful, you see that better."
msgstr ""
"Имя файла используется для того, чтобы понять, куда указывает \"ref\". И "
"если имя файла имеет смысл, это гораздо понятнее."

msgid ""
"The file name alone, without a path, is enough when the file name is "
"unique within ``doc/sphinx``. So, for ``fiber.rst`` it should be just "
"\"fiber\", not \"reference-fiber\". While for \"index.rst\" (we have a "
"handful of \"index.rst\" in different directories) please specify the "
"path before the file name, e.g. \"reference-index\"."
msgstr ""
"Имени файла без пути достаточно, когда оно уникально в пределах "
"``doc/sphinx``. Поэтому для файла ``fiber.rst`` достаточно будет "
"\"fiber\", а не \"reference-fiber\". Тогда как для \"index.rst\" (а у нас"
" множество файлов \"index.rst\" в разных директориях) необходимо указать "
"путь до имени файла, например, \"reference-index\"."

msgid ""
"Use a dash \"-\" to delimit the path and the file name. In the "
"documentation source, we use only underscores \"_\" in paths and file "
"names, reserving dash \"-\" as the delimiter for local links."
msgstr ""
"Используйте дефис \"-\", чтобы разграничить путь и имя файла. В исходном "
"коде документации мы пользуемся только символами подчеркивания \"_\" при "
"указании пути и имени файла, оставляя дефисы \"-\" для разграничения в "
"локальных ссылках."

msgid ""
"The tag can be anything meaningful. The only guideline is for Tarantool "
"syntax items (such as members), where the preferred tag syntax is "
"``module_or_object_name dash member_name``. For example, ``box_space-"
"drop``."
msgstr ""
"Тег может содержать любую значимую информацию. Единственная рекомендация "
"дается для элементов синтаксиса Tarantool'а, где предпочтительно "
"использовать следующий синтаксис в тегах: ``имя_объекта_или_модуля дефис "
"имя_элемента``. Например, ``box_space-drop``."

msgid "Making comments"
msgstr "Добавление комментариев"

msgid ""
"Sometimes we may need to leave comments in a ReST file. To make sphinx "
"ignore some text during processing, use the following per-line notation "
"with \".. //\" as the comment marker:"
msgstr ""
"Иногда могут потребоваться комментарии в файле ReST. Чтобы sphinx не "
"учитывал этот текст во время обработки, используйте следующую запись в "
"каждой строке в качестве маркера комментария (\".. //\"):"

msgid ".. // your comment here"
msgstr ".. // здесь комментарий"

msgid ""
"The starting symbols \".. //\" do not interfere with the other ReST "
"markup, and they are easy to find both visually and using grep. There are"
" no symbols to escape in grep search, just go ahead with something like "
"this:"
msgstr ""
"Начальные символы \".. //\" не пересекаются с другими символами разметки "
"ReST, и их легко обнаружить как визуально, так и с помощью grep. В поиске"
" grep нет символов, которые нужно избегать, просто выполните примерно "
"следующее:"

msgid "$ grep \".. //\" doc/sphinx/dev_guide/*.rst"
msgstr "$ grep \".. //\" doc/sphinx/dev_guide/*.rst"

msgid ""
"These comments don't work properly in nested documentation, though (e.g. "
"if you leave a comment in module -> object -> method, sphinx ignores the "
"comment and all nested content that follows in the method description)."
msgstr ""
"Тем не менее, эти комментарии не сработают должным образом во вложенной "
"документации (например, если оставить комментарий в модуле -> объекте -> "
"методе, sphinx игнорирует комментарий и всё вложенное содержимое, который"
" следует в описании метода)."

msgid "Language and style issues"
msgstr "Вопросы по стилю и языку"

msgid "US vs British spelling"
msgstr "Британский или американский вариант английского"

msgid "We use English US spelling."
msgstr ""
"В английской версии документации мы придерживаемся американского варианта"
" английского языка."

msgid "Instance vs server"
msgstr "Экземпляр или сервер"

msgid ""
"We say \"instance\" rather than \"server\" to refer to an instance of "
"Tarantool server. This keeps the manual terminology consistent with names"
" like ``/etc/tarantool/instances.enabled`` in the Tarantool environment."
msgstr ""
"Ссылаясь на экземпляр Tarantool-сервера, мы говорим \"экземпляр\", а не "
"\"сервер\". Это обеспечивает однородность терминологии в руководстве и "
"именами в окружении Tarantool'а (например, "
"``/etc/tarantool/instances.enabled`` -- активные экземпляры)."

msgid ""
"Wrong usage: \"Replication allows multiple Tarantool *servers* to work on"
" copies of the same databases.\""
msgstr ""
"Неправильно: \"С помощью репликации несколько *серверов* Tarantool’а "
"могут работать на копиях одинаковых баз данных.\""

msgid ""
"Correct usage: \"Replication allows multiple Tarantool *instances* to "
"work on copies of the same databases.\""
msgstr ""
"Правильно: \"С помощью репликации несколько *экземпляров* Tarantool’а "
"могут работать на копиях одинаковых баз данных.\""

msgid "Examples and templates"
msgstr "Примеры и шаблоны"

msgid "Module and function"
msgstr "Модуль и функция"

msgid ""
"Here is an example of documenting a module (``my_fiber``) and a function "
"(``my_fiber.create``)."
msgstr ""
"Ниже приводится пример документирования модуля (``my_fiber``) и функции "
"(``my_fiber.create``)."

msgid ""
"Create and start a ``my_fiber`` object. The object is created and begins "
"to run immediately."
msgstr ""
"Создание и запуск ``my_fiber``. Происходит создание объекта, который "
"незамедлительно начинает работу."

msgid "Parameters"
msgstr "Параметры"

msgid "the function to be associated with the ``my_fiber`` object"
msgstr "функция, которая будет связана с ``my_fiber``"

msgid "what will be passed to function"
msgstr "что передается в функцию"

msgid "return"
msgstr "возвращает"

msgid "created ``my_fiber`` object"
msgstr "созданный объект ``my_fiber``"

msgid "rtype"
msgstr "тип возвращаемого значения"

msgid "userdata"
msgstr "пользовательские данные"

msgid "**Example:**"
msgstr "**Пример:**"

msgid ""
"tarantool> my_fiber = require('my_fiber')\n"
"---\n"
"...\n"
"tarantool> function function_name()\n"
"         >   my_fiber.sleep(1000)\n"
"         > end\n"
"---\n"
"...\n"
"tarantool> my_fiber_object = my_fiber.create(function_name)\n"
"---\n"
"..."
msgstr ""
"tarantool> my_fiber = require('my_fiber')\n"
"---\n"
"...\n"
"tarantool> function function_name()\n"
"         >   my_fiber.sleep(1000)\n"
"         > end\n"
"---\n"
"...\n"
"tarantool> my_fiber_object = my_fiber.create(function_name)\n"
"---\n"
"..."

msgid "Module, class and method"
msgstr "Модуль, класс и метод"

msgid ""
"Here is an example of documenting a module (``my_box.index``), a class "
"(``my_index_object``) and a function (``my_index_object.rename``)."
msgstr ""
"Ниже приводится пример документирования модуля (``my_box.index``), класса"
" (``my_index_object``) и функции (``my_index_object.rename``)."

msgid "Rename an index."
msgstr "Переименование индекса."

msgid "an object reference"
msgstr "ссылка на объект"

msgid "a new name for the index (type = string)"
msgstr "новое имя для индекса (тип = строка)"

msgid "nil"
msgstr "nil"

msgid "Possible errors: index_object does not exist."
msgstr "Возможные ошибки: index_object не существует."

msgid ""
"tarantool> box.space.space55.index.primary:rename('secondary')\n"
"---\n"
"..."
msgstr ""
"tarantool> box.space.space55.index.primary:rename('secondary')\n"
"---\n"
"..."

msgid "Complexity Factors: Index size, Index type, Number of tuples accessed."
msgstr ""
"Факторы сложности: Размер индекса, тип индекса, количество кортежей, к "
"которым получен доступ."
