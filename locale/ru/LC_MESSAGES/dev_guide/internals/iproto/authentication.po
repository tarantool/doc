
msgid "Authentication"
msgstr "Аутентификация"

msgid "Greeting message"
msgstr "Приветствие"

msgid ""
"When a client connects to the server instance, the instance responds with a "
"128-byte text greeting message, not in MsgPack format: |br| 64-byte Greeting"
" text line 1 |br| 64-byte Greeting text line 2 |br| 44-byte base64-encoded "
"salt |br| 20-byte NULL"
msgstr ""
"Когда клиент подключается к экземпляру сервера, тот выдает в ответе "
"128-байтовое текстовое сообщение приветствия не в формате MsgPack: |br| 64 "
"байта — строка 1 текста приветствия |br| 64 байта — строка 2 текста "
"приветствия |br| 44 байта —закодированное в формате base-64 значение соль "
"|br| 20 байтов — NULL"

msgid ""
"The greeting contains two 64-byte lines of ASCII text. Each line ends with a"
" newline character (:code:`\\n`). The first line contains the instance "
"version and protocol type. The second line contains up to 44 bytes of "
"base64-encoded random string, to use in the authentication packet, and ends "
"with up to 23 spaces."
msgstr ""
"Приветствие содержит две 64-байтные строки текста в формате ASCII. Каждая "
"строка заканчивается символом разрыва строки (:code:`\\n`). Первая строка "
"описывает версию экземпляра и тип протокола. Вторая строка содержит "
"случайную строку в кодировке base-64 размером до 44 байтов для использования"
" в пакете аутентификации и заканчивается на пробелы (до 23)."

msgid ""
"Part of the greeting is a base64-encoded session salt - a random string "
"which can be used for authentication. The maximum length of an encoded salt "
"(44 bytes) is more than the amount necessary to create the authentication "
"message. An excess is reserved for future authentication schemas."
msgstr ""
"Часть приветствия представляет собой закодированное в формате base-64 "
"значение соль для сессии (случайная строка), которое можно использовать для "
"аутентификации. Максимальная длина закодированного значения соль (44 байта) "
"больше, чем размер создаваемого сообщения аутентификации. Остаток "
"предназначается для будущих схем аутентификации."

msgid ""
"Authentication is optional -- if it is skipped, then the session user is "
"``'guest'`` (the ``'guest'`` user does not need a password)."
msgstr ""
"Аутентификация необязательна: если аутентификация не проводится, то "
"пользователем в сеансе будет ``'guest'`` (пользователю ``'guest'`` пароль не"
" нужен)."

msgid ""
"If authentication is not skipped, then at any time an authentication packet "
"can be prepared using the greeting, the user's name and password, and `sha-1"
" <https://en.wikipedia.org/wiki/SHA-1>`_ functions, as follows."
msgstr ""
"Если аутентификация проводится, то в любое время может быть подготовлен "
"пакет аутентификации с использованием приветствия, имени и пароля "
"пользователя и функции `sha-1 <https://en.wikipedia.org/wiki/SHA-1>`_, как "
"показано ниже."

msgid ""
"PREPARE SCRAMBLE:\n"
"\n"
"    size_of_encoded_salt_in_greeting = 44;\n"
"    size_of_salt_after_base64_decode = 32;\n"
"     /* sha1() will only use the first 20 bytes */\n"
"    size_of_any_sha1_digest = 20;\n"
"    size_of_scramble = 20;\n"
"\n"
"prepare 'chap-sha1' scramble:\n"
"\n"
"    salt = base64_decode(encoded_salt);\n"
"    step_1 = sha1(password);\n"
"    step_2 = sha1(step_1);\n"
"    step_3 = sha1(first_20_bytes_of_salt, step_2);\n"
"    scramble = xor(step_1, step_3);\n"
"    return scramble;"
msgstr ""
"PREPARE SCRAMBLE:\n"
"\n"
"    size_of_encoded_salt_in_greeting = 44;\n"
"    size_of_salt_after_base64_decode = 32;\n"
"     /* sha1() will only use the first 20 bytes */\n"
"    size_of_any_sha1_digest = 20;\n"
"    size_of_scramble = 20;\n"
"\n"
"prepare 'chap-sha1' scramble:\n"
"\n"
"    salt = base64_decode(encoded_salt);\n"
"    step_1 = sha1(password);\n"
"    step_2 = sha1(step_1);\n"
"    step_3 = sha1(first_20_bytes_of_salt, step_2);\n"
"    scramble = xor(step_1, step_3);\n"
"    return scramble;"

msgid "The client sends an authentication packet as an IPROTO_AUTH message:"
msgstr "Клиент отправляет пакет аутентификации в виде сообщения IPROTO_AUTH:"

msgid ""
"# <size>\n"
"msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
"# <header>\n"
"msgpack({\n"
"    IPROTO_REQUEST_TYPE: IPROTO_AUTH,\n"
"    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer, usually = 1}}`\n"
"})\n"
"# <body>\n"
"msgpack({\n"
"    IPROTO_USER_NAME: :samp:`{{MP_STRING string <key>}}`,\n"
"    IPROTO_TUPLE: ['chap-sha1', :samp:`{{MP_STRING 20-byte string}}`]\n"
"})"
msgstr ""
"# <size>\n"
"msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
"# <header>\n"
"msgpack({\n"
"    IPROTO_REQUEST_TYPE: IPROTO_AUTH,\n"
"    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer, usually = 1}}`\n"
"})\n"
"# <body>\n"
"msgpack({\n"
"    IPROTO_USER_NAME: :samp:`{{MP_STRING string <key>}}`,\n"
"    IPROTO_TUPLE: ['chap-sha1', :samp:`{{MP_STRING 20-byte string}}`]\n"
"})"

msgid ""
":code:`<key>` holds the user name. :code:`<tuple>` must be an array of 2 "
"fields: authentication mechanism (\"chap-sha1\" is the only supported "
"mechanism right now) and scramble, encrypted according to the specified "
"mechanism."
msgstr ""
":code:`<key>` содержит имя пользователя. :code:`<tuple>` должен представлять"
" собой массив из 2 полей: механизм аутентификации (на данный момент "
"поддерживается только механизм \"chap-sha1\") и сообщение, зашифрованное в "
"соответствии с указанным механизмом."

msgid ""
"The server instance responds to an authentication packet with a standard "
"response with 0 tuples."
msgstr ""
"На пакет аутентификации экземпляр сервера отправляет стандартный ответ с 0 "
"кортежей."

msgid ""
"To see how Tarantool handles this, look at `net_box.c "
"<https://github.com/tarantool/tarantool/blob/master/src/box/lua/net_box.c>`_"
" function ``netbox_encode_auth``."
msgstr ""
"Чтобы понять, как Tarantool это обрабатывает, обратите внимание на функцию "
"`netbox_encode_auth`` в файле `net_box.c "
"<https://github.com/tarantool/tarantool/blob/master/src/box/lua/net_box.c>`_."
