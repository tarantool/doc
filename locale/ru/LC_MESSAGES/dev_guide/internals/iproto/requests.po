
msgid "Client-server requests and responses"
msgstr ""

msgid ""
"This section describes client requests, their arguments, and the values "
"returned by the server."
msgstr ""

msgid ""
"Some requests are described on separate pages. Those are the requests "
"related to:"
msgstr ""

msgid ":ref:`stream transactions <internals-iproto-streams>`"
msgstr ""

msgid ":ref:`asynchronous server-client notifications <internals-events>`"
msgstr ""

msgid ":ref:`replication <internals-iproto-replication>`"
msgstr ""

msgid ""
":ref:`SQL <internals-iproto-sql>` -- :ref:`IPROTO_EXECUTE <box_protocol-"
"execute>` and :ref:`IPROTO_PREPARE <box_protocol-prepare>`."
msgstr ""

msgid "Overview"
msgstr ""

msgid "Name"
msgstr ""

msgid "Code"
msgstr ""

msgid "Description"
msgstr ""

msgid ":ref:`IPROTO_OK <internals-iproto-ok>`"
msgstr ""

msgid "0x00 |br| MP_UINT"
msgstr ""

msgid "Successful response"
msgstr ""

msgid ":ref:`IPROTO_CHUNK <internals-iproto-chunk>`"
msgstr ""

msgid "0x80 |br| MP_UINT"
msgstr ""

msgid "Out-of-band response"
msgstr ""

msgid ":ref:`IPROTO_TYPE_ERROR <internals-iproto-type_error>`"
msgstr ""

msgid "0x8XXX |br| MP_INT"
msgstr ""

msgid "Error response"
msgstr ""

msgid ":ref:`IPROTO_UNKNOWN <internals-iproto-unknown>`"
msgstr ""

msgid "-1 |br| MP_UINT"
msgstr ""

msgid "An unknown request type"
msgstr ""

msgid ":ref:`IPROTO_SELECT <box_protocol-select>`"
msgstr ""

msgid "0x01"
msgstr ""

#, fuzzy
msgid ":ref:`Select <box_space-select>` request"
msgstr "См. :ref:`space_object:upsert()  <box_space-upsert>`."

msgid ":ref:`IPROTO_INSERT <box_protocol-insert>`"
msgstr ""

msgid "0x02"
msgstr ""

#, fuzzy
msgid ":ref:`Insert <box_space-insert>` request"
msgstr "См. :ref:`space_object:upsert()  <box_space-upsert>`."

msgid ":ref:`IPROTO_REPLACE <box_protocol-replace>`"
msgstr ""

msgid "0x03"
msgstr ""

msgid ":ref:`Replace <box_space-insert>` request"
msgstr ""

#, fuzzy
msgid ":ref:`IPROTO_UPDATE <box_protocol-update>`"
msgstr "См. :ref:`space_object:update()  <box_space-update>`."

msgid "0x04"
msgstr ""

#, fuzzy
msgid ":ref:`Update <box_space-update>` request"
msgstr "См. :ref:`space_object:update()  <box_space-update>`."

#, fuzzy
msgid ":ref:`IPROTO_UPSERT <box_protocol-upsert>`"
msgstr "См. :ref:`space_object:upsert()  <box_space-upsert>`."

msgid "0x09"
msgstr ""

#, fuzzy
msgid ":ref:`Upsert <box_space-upsert>` request"
msgstr "См. :ref:`space_object:upsert()  <box_space-upsert>`."

msgid ":ref:`IPROTO_DELETE <box_protocol-delete>`"
msgstr ""

msgid "0x05"
msgstr ""

msgid ":ref:`Delete <box_space-delete>` request"
msgstr ""

msgid ":ref:`IPROTO_CALL <box_protocol-call>`"
msgstr ""

msgid "0x0a"
msgstr ""

#, fuzzy
msgid "Function remote call (:ref:`conn:call() <net_box-call>`)"
msgstr ""
"См. :ref:`conn:call() <net_box-call>`. Тело сообщения представляет собой "
"ассоциативный массив из 2 элементов:"

msgid ":ref:`IPROTO_AUTH <box_protocol-auth>`"
msgstr ""

msgid "0x07"
msgstr ""

msgid "Authentication request"
msgstr ""

msgid ":ref:`IPROTO_EVAL <box_protocol-eval>`"
msgstr ""

msgid "0x08"
msgstr ""

msgid "Evaluate a Lua expression (:ref:`conn:eval() <net_box-eval>`)"
msgstr ""

msgid ":ref:`IPROTO_NOP <box_protocol-nop>`"
msgstr ""

msgid "0x0c"
msgstr ""

msgid "Increment the LSN and do nothing else"
msgstr ""

msgid ":ref:`IPROTO_PING <box_protocol-ping>`"
msgstr ""

msgid "0x40"
msgstr ""

msgid "Ping (:ref:`conn:ping() <conn-ping>`)"
msgstr ""

msgid ":ref:`IPROTO_ID <box_protocol-id>`"
msgstr ""

msgid "0x49"
msgstr ""

msgid "Share iproto version and supported features"
msgstr ""

#, fuzzy
msgid "IPROTO_OK"
msgstr "IPROTO_NOP = 0x0c"

msgid "Code: 0x00."
msgstr ""

msgid ""
"This request/response type is contained in the header and signifies success."
" Here is an example:"
msgstr ""

msgid "IPROTO_CHUNK"
msgstr ""

msgid "Code: 0x80."
msgstr ""

msgid ""
"If the response is out-of-band, due to use of :ref:`box.session.push() "
"<box_session-push>`, then IPROTO_REQUEST_TYPE is IPROTO_CHUNK instead of "
"IPROTO_OK."
msgstr ""

msgid "IPROTO_TYPE_ERROR"
msgstr ""

msgid "Code: 0x8XXX (see below)."
msgstr ""

msgid ""
"Instead of :ref:`IPROTO_OK <internals-iproto-ok>`, an error response header "
"has ``0x8XXX`` for IPROTO_REQUEST_TYPE. ``XXX`` is the error code -- a value"
" in `src/box/errcode.h "
"<https://github.com/tarantool/tarantool/blob/master/src/box/errcode.h>`_. "
"``src/box/errcode.h`` also has some convenience macros which define "
"hexadecimal constants for return codes."
msgstr ""

msgid ""
"To learn more about error responses, check the section :ref:`Request and "
"response format <box_protocol-responses_error>`."
msgstr ""

msgid "IPROTO_UNKNOWN"
msgstr ""

msgid "Since :doc:`2.11.0 </release/2.11.0>`."
msgstr ""

msgid "Code: -1."
msgstr ""

msgid ""
"An unknown request type. The constant is used to override the handler of "
"unknown IPROTO request types. Learn more: :ref:`box.iproto.override() "
"<reference_lua-box_iproto_override>` and :ref:`box_iproto_override "
"<box_box_iproto_override>`."
msgstr ""

#, fuzzy
msgid "IPROTO_SELECT"
msgstr "IPROTO_SELECT = 0x01"

msgid "Code: 0x01."
msgstr ""

msgid ""
"See :ref:`space_object:select() <box_space-select>`. The body is a 6-item "
"map."
msgstr ""
"См. :ref:`space_object:select() <box_space-select>`. Тело сообщения "
"представляет собой ассоциативный массив из 6 элементов."

msgid "Example"
msgstr "Пример"

msgid ""
"If the ID of ``tspace`` is 512 and this is the fifth message, |br| "
":samp:`{conn}.`:code:`space.tspace:select({0},{iterator='GT',offset=1,limit=2})`"
" will cause the following request packet:"
msgstr ""
"Если ID спейса ``tspace`` = 512 и это пятое сообщение, |br| "
":samp:`{conn}.`:code:`space.tspace:select({0},{iterator='GT',offset=1,limit=2})`"
" вызовет следующий пакет запроса:"

msgid ""
"In the :ref:`examples <box_protocol-illustration>`, you can find actual byte"
" codes of an IPROTO_SELECT message."
msgstr ""
"Байт-коды сообщения IPROTO_SELECT рассмотрены в разделе :ref:`Примеры "
"<box_protocol-illustration>`"

#, fuzzy
msgid "IPROTO_INSERT"
msgstr "IPROTO_INSERT = 0x02"

msgid "Code: 0x02."
msgstr ""

msgid ""
"See :ref:`space_object:insert()  <box_space-insert>`. The body is a 2-item "
"map:"
msgstr ""
"См. :ref:`space_object:insert()  <box_space-insert>`. Тело сообщения "
"представляет собой ассоциативный массив из 2 элементов:"

msgid ""
"For example, if the request is :samp:`INSERT INTO {table-name} VALUES (1), "
"(2), (3)`, then the response body contains an :samp:`IPROTO_SQL_INFO` map "
"with :samp:`SQL_INFO_ROW_COUNT = 3`. :samp:`SQL_INFO_ROW_COUNT` can be 0 for"
" statements that do not change rows, but can be 1 for statements that create"
" new objects."
msgstr ""

msgid ""
"If the ID of ``tspace`` is 512 and this is the fifth message, |br| "
":samp:`{conn}.`:code:`space.tspace:insert{1, 'AAA'}` will produce the "
"following request and response packets:"
msgstr ""
"Если ID спейса ``tspace`` = 512 и это пятое сообщение, |br| "
":samp:`{conn}.`:code:`space.tspace:insert{1, 'AAA'}` вызовет следующие "
"пакеты запроса и ответа:"

#, fuzzy
msgid ""
"The tutorial :ref:`Understanding the binary protocol <box_protocol-"
"illustration>` shows actual byte codes of the response to the IPROTO_INSERT "
"message."
msgstr ""
"Далее в разделе :ref:`Примеры <box_protocol-illustration>` будут рассмотрены"
" байт-коды сообщения IPROTO_EXECUTE."

#, fuzzy
msgid "IPROTO_REPLACE"
msgstr "IPROTO_REPLACE = 0x03"

msgid "Code: 0x03."
msgstr ""

msgid ""
"See :ref:`space_object:replace()  <box_space-replace>`. The body is a 2-item"
" map, the same as for IPROTO_INSERT:"
msgstr ""
"См. :ref:`space_object:replace()  <box_space-replace>`. Тело сообщения "
"представляет собой ассоциативный массив из 2 элементов, как и в случае "
"IPROTO_INSERT:"

#, fuzzy
msgid "IPROTO_UPDATE"
msgstr "IPROTO_UPDATE = 0x04"

msgid "Code: 0x04."
msgstr ""

msgid "See :ref:`space_object:update()  <box_space-update>`."
msgstr "См. :ref:`space_object:update()  <box_space-update>`."

msgid "The body is usually a 4-item map:"
msgstr ""
"Тело сообщения обычно представляет собой ассоциативный массив из 4 "
"элементов:"

#, fuzzy
msgid "Examples"
msgstr "Пример"

msgid ""
"If the operation specifies no values, then IPROTO_TUPLE is a 2-item array:"
msgstr ""

msgid "Normally field numbers start with 1."
msgstr ""

msgid ""
"If the operation specifies one value, then IPROTO_TUPLE is a 3-item array:"
msgstr ""

msgid "Otherwise IPROTO_TUPLE is a 5-item array:"
msgstr ""

msgid ""
"If the ID of ``tspace`` is 512 and this is the fifth message, |br| "
":samp:`{conn}.`:code:`space.tspace:update(999, {{'=', 2, 'B'}})` will cause "
"the following request packet:"
msgstr ""
"Если ID спейса ``tspace`` = 512 и это пятое сообщение, |br| "
":samp:`{conn}.`:code:`space.tspace:update(999, {{'=', 2, 'B'}})` вызовет "
"следующий пакет запроса:"

msgid "The map item IPROTO_INDEX_BASE is optional."
msgstr ""

#, fuzzy
msgid ""
"The tutorial :ref:`Understanding the binary protocol <box_protocol-"
"illustration>` shows the actual byte codes of an IPROTO_UPDATE message."
msgstr ""
"Далее в разделе :ref:`Примеры <box_protocol-illustration>` будут рассмотрены"
" байт-коды сообщения IPROTO_UPDATE."

#, fuzzy
msgid "IPROTO_UPSERT"
msgstr "IPROTO_UPSERT = 0x09"

msgid "Code: 0x09."
msgstr ""

msgid "See :ref:`space_object:upsert()  <box_space-upsert>`."
msgstr "См. :ref:`space_object:upsert()  <box_space-upsert>`."

#, fuzzy
msgid ""
"IPROTO_OPS is the array of operations. It is the same as the IPROTO_TUPLE of"
" :ref:`IPROTO_UPDATE <box_protocol-update>`."
msgstr ""
"IPROTO_OPS — это то же самое, что и IPROTO_TUPLE в :ref:`IPROTO_UPDATE "
"<box_protocol-update>`."

msgid "IPROTO_TUPLE is an array of primary-key field values."
msgstr ""

#, fuzzy
msgid "IPROTO_DELETE"
msgstr "IPROTO_DELETE = 0x05"

msgid "Code: 0x05."
msgstr ""

msgid ""
"See :ref:`space_object:delete()  <box_space-delete>`. The body is a 3-item "
"map:"
msgstr ""
"См. :ref:`space_object:delete()  <box_space-delete>`. Тело сообщения "
"представляет собой ассоциативный массив из 3 элементов:"

#, fuzzy
msgid "IPROTO_EVAL"
msgstr "IPROTO_EVAL = 0x08"

msgid "Code: 0x08."
msgstr ""

#, fuzzy
msgid ""
"See :ref:`conn:eval() <net_box-eval>`. Since the argument is a Lua "
"expression, this is Tarantool's way to handle non-binary with the binary "
"protocol. Any request that does not have its own code, for example "
":samp:`box.space.{space-name}:drop()`, will be handled either with "
":ref:`IPROTO_CALL <box_protocol-call>` or IPROTO_EVAL."
msgstr ""
"См. :ref:`conn:eval() <net_box-eval>`. В качестве аргумента выступает "
"выражение на Lua — так Tarantool обрабатывает небинарный код с помощью "
"бинарного протокола. Любой запрос без собственного кода, например "
":samp:`box.space.{space-name}:drop()`, будет обработан с помощью либо "
":ref:`IPROTO_CALL <box_protocol-call>`, либо IPROTO_EVAL. Административная "
"утилита :ref:`tarantoolctl <tarantoolctl>` активно использует ``eval``. Тело"
" сообщения представляет собой ассоциативный массив из 2 элементов:"

msgid ""
"The :ref:`tt <tt-cli>` administrative utility makes extensive use of "
"``eval``."
msgstr ""

#, fuzzy
msgid "The body is a 2-item map:"
msgstr ""
"Тело сообщения обычно представляет собой ассоциативный массив из 4 "
"элементов:"

msgid ""
"For :ref:`IPROTO_EVAL <box_protocol-eval>` and :ref:`IPROTO_CALL "
"<box_protocol-call>` the response body will usually be an array but, since "
"Lua requests can result in a wide variety of structures, bodies can have a "
"wide variety of structures."
msgstr ""

msgid ""
"For SQL-specific responses, the body is a bit different. :ref:`Learn more "
"<internals-iproto-sql>` about this type of packets."
msgstr ""

msgid ""
"If this is the fifth message, :samp:`conn:eval('return 5;')` will cause:"
msgstr ""
"Если это пятое сообщение, :samp:`conn:eval('return 5;')` приведет к "
"следующему:"

#, fuzzy
msgid "IPROTO_CALL"
msgstr "IPROTO_CALL = 0x0a"

msgid "Code: 0x0a."
msgstr ""

msgid ""
"See :ref:`conn:call() <net_box-call>`. This is a remote stored-procedure "
"call. :doc:`/release/1.6` and earlier made use of the IPROTO_CALL_16 request"
" (code: 0x06). It is now deprecated and superseded by IPROTO_CALL."
msgstr ""

#, fuzzy
msgid ""
"The body is a 2-item map. The response will be a list of values, similar to "
"the :ref:`IPROTO_EVAL <box_protocol-eval>` response. The return from "
"conn:call is whatever the function returns."
msgstr ""
"Вернется список значений, наподобие ответа :ref:`IPROTO_EVAL <box_protocol-"
"eval>`."

#, fuzzy
msgid "IPROTO_AUTH"
msgstr "IPROTO_AUTH = 0x07"

msgid "Code: 0x07."
msgstr ""

msgid ""
"For general information, see the :ref:`Access control <authentication-"
"users>` section in the administrator's guide."
msgstr ""

msgid ""
"For more on how authentication is handled in the binary protocol, see the "
":ref:`Authentication <box_protocol-authentication>` section of this "
"document."
msgstr ""

msgid "The client sends an authentication packet as an IPROTO_AUTH message:"
msgstr ""

msgid ""
"IPROTO_USERNAME holds the user name. IPROTO_TUPLE must be an array of 2 "
"fields: authentication mechanism and scramble, encrypted according to the "
"specified mechanism."
msgstr ""

msgid ""
"The server instance responds to an authentication packet with a standard "
"response with 0 tuples."
msgstr ""

msgid ""
"To see how Tarantool handles this, look at `net_box.c "
"<https://github.com/tarantool/tarantool/blob/master/src/box/lua/net_box.c>`_"
" function ``netbox_encode_auth``."
msgstr ""

#, fuzzy
msgid "IPROTO_NOP"
msgstr "IPROTO_NOP = 0x0c"

msgid "Code: 0x0c."
msgstr ""

msgid ""
"There is no Lua request exactly equivalent to IPROTO_NOP. It causes the LSN "
"to be incremented. It could be sometimes used for updates where the old and "
"new values are the same, but the LSN must be increased because a data-change"
" must be recorded. The body is: nothing."
msgstr ""
"Нет такого запроса на Lua, который бы соответствовал IPROTO_NOP. IPROTO_NOP "
"приводит к увеличению LSN. Иногда константу можно использовать для "
"обновления значения, когда старое и новое значения одинаковы, но LSN нужно "
"увеличить, поскольку нужно зарегистрировать изменение данных. Тело сообщения"
" пустое."

#, fuzzy
msgid "IPROTO_PING"
msgstr "IPROTO_PING = 0x40"

msgid "Code: 0x40."
msgstr ""

msgid ""
"See :ref:`conn:ping() <conn-ping>`. The body will be an empty map because "
"IPROTO_PING in the header contains all the information that the server "
"instance needs."
msgstr ""
"См. :ref:`conn:ping() <conn-ping>`. В теле сообщения будет пустой "
"ассоциативный массив, потому что IPROTO_PING в заголовке содержит всю "
"информацию, необходимую экземпляру сервера."

msgid "IPROTO_ID"
msgstr ""

msgid "Code: 0x49."
msgstr ""

msgid ""
"Clients send this message to inform the server about the protocol version "
"and features they support. Based on this information, the server can enable "
"or disable certain features in interacting with these clients."
msgstr ""

msgid ""
"The response body has the same structure as the request body. It informs the"
" client about the protocol version, features supported by the server, and a "
"protocol used to generate user authentication data."
msgstr ""

msgid "IPROTO_ID requests can be processed without authentication."
msgstr ""

#~ msgid "Requests"
#~ msgstr "Запросы"

#~ msgid ""
#~ "A request has a size, a :ref:`header <box_protocol-header>` that contains "
#~ "the IPROTO key, and a body as described here."
#~ msgstr ""
#~ "Запрос содержит размер, :ref:`заголовок <box_protocol-header>`, который "
#~ "содержит ключ IPROTO, и тело сообщения, как описано в этом разделе."

#~ msgid ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_SELECT,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_SPACE_ID: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_INDEX_ID: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_LIMIT: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_OFFSET: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_ITERATOR: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_KEY: :samp:`{{MP_ARRAY array of key values}}`\n"
#~ "})"
#~ msgstr ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_SELECT,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_SPACE_ID: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_INDEX_ID: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_LIMIT: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_OFFSET: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_ITERATOR: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_KEY: :samp:`{{MP_ARRAY array of key values}}`\n"
#~ "})"

#~ msgid ""
#~ "<size>\n"
#~ "msgpack(21)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_SYNC: 5,\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_SELECT\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_SPACE_ID: 512,\n"
#~ "    IPROTO_INDEX_ID: 0,\n"
#~ "    IPROTO_ITERATOR: 6,\n"
#~ "    IPROTO_OFFSET: 1,\n"
#~ "    IPROTO_LIMIT: 2,\n"
#~ "    IPROTO_KEY: [1]\n"
#~ "})"
#~ msgstr ""
#~ "<size>\n"
#~ "msgpack(21)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_SYNC: 5,\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_SELECT\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_SPACE_ID: 512,\n"
#~ "    IPROTO_INDEX_ID: 0,\n"
#~ "    IPROTO_ITERATOR: 6,\n"
#~ "    IPROTO_OFFSET: 1,\n"
#~ "    IPROTO_LIMIT: 2,\n"
#~ "    IPROTO_KEY: [1]\n"
#~ "})"

#~ msgid ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_INSERT,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_SPACE_ID: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_TUPLE: :samp:`{{MP_ARRAY array of field values}}`\n"
#~ "})"
#~ msgstr ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_INSERT,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_SPACE_ID: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_TUPLE: :samp:`{{MP_ARRAY array of field values}}`\n"
#~ "})"

#~ msgid ""
#~ "# <size>\n"
#~ "msgpack(17)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_INSERT,\n"
#~ "    IPROTO_SYNC: 5\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_SPACE_ID: 512,\n"
#~ "    IPROTO_TUPLE: [1, 'AAA']\n"
#~ "})"
#~ msgstr ""
#~ "# <size>\n"
#~ "msgpack(17)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_INSERT,\n"
#~ "    IPROTO_SYNC: 5\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_SPACE_ID: 512,\n"
#~ "    IPROTO_TUPLE: [1, 'AAA']\n"
#~ "})"

#~ msgid ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_REPLACE,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_SPACE_ID: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_TUPLE: :samp:`{{MP_ARRAY array of field values}}`\n"
#~ "})"
#~ msgstr ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_REPLACE,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_SPACE_ID: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_TUPLE: :samp:`{{MP_ARRAY array of field values}}`\n"
#~ "})"

#~ msgid ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_UPDATE,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_SPACE_ID: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_INDEX_ID: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_KEY: :samp:`{{MP_ARRAY array of index keys}}`,\n"
#~ "    IPROTO_TUPLE: :samp:`{{MP_ARRAY array of update operations}}`\n"
#~ "})"
#~ msgstr ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_UPDATE,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_SPACE_ID: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_INDEX_ID: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_KEY: :samp:`{{MP_ARRAY array of index keys}}`,\n"
#~ "    IPROTO_TUPLE: :samp:`{{MP_ARRAY array of update operations}}`\n"
#~ "})"

#~ msgid ""
#~ "If the operation specifies no values, then IPROTO_TUPLE is a 2-item array: "
#~ "|br| :samp:`[{MP_STR OPERATOR = '#', {MP_INT FIELD_NO = field number "
#~ "starting with 1}]`. Normally field numbers start with 1."
#~ msgstr ""
#~ "Если в операции не указаны значения, то IPROTO_TUPLE — это массив из 2 "
#~ "элементов: |br| :samp:`[{MP_STR OPERATOR = '#', {MP_INT FIELD_NO = номер "
#~ "поля, начиная с 1}]`. Обычно номера полей начинаются с 1."

#~ msgid ""
#~ "If the operation specifies one value, then IPROTO_TUPLE is a 3-item array: "
#~ "|br| :samp:`[{MP_STR string OPERATOR = '+' or '-' or '^' or '^' or '|' or "
#~ "'!' or '='}, {MP_INT FIELD_NO}, {MP_OBJECT VALUE}]`. |br|"
#~ msgstr ""
#~ "Если в операции задано одно значение, то IPROTO_TUPLE — это массив из трех "
#~ "элементов: |br| :samp:`[{MP_STR string OPERATOR = '+' or '-' or '^' or '^' "
#~ "or '|' or '!' or '='}, {MP_INT FIELD_NO}, {MP_OBJECT VALUE}]`. |br|"

#~ msgid ""
#~ "Otherwise IPROTO_TUPLE is a 5-item array: |br| :samp:`[{MP_STR string "
#~ "OPERATOR = ':'}, {MP_INT integer FIELD_NO}, {MP_INT POSITION}, {MP_INT "
#~ "OFFSET}, {MP_STR VALUE}]`. |br|"
#~ msgstr ""
#~ "В остальных случаях IPROTO_TUPLE — это массив из 5 элементов: |br| "
#~ ":samp:`[{MP_STR string OPERATOR = ':'}, {MP_INT integer FIELD_NO}, {MP_INT "
#~ "POSITION}, {MP_INT OFFSET}, {MP_STR VALUE}]`. |br|"

#~ msgid ""
#~ "# <size>\n"
#~ "msgpack(17)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_UPDATE,\n"
#~ "    IPROTO_SYNC: 5\n"
#~ "})\n"
#~ "# <body> ... the map-item IPROTO_INDEX_BASE is optional\n"
#~ "msgpack({\n"
#~ "    IPROTO_SPACE_ID: 512,\n"
#~ "    IPROTO_INDEX_ID: 0,\n"
#~ "    IPROTO_INDEX_BASE: 1,\n"
#~ "    IPROTO_TUPLE: [['=',2,'B']],\n"
#~ "    IPROTO_KEY: [999]\n"
#~ "})"
#~ msgstr ""
#~ "# <size>\n"
#~ "msgpack(17)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_UPDATE,\n"
#~ "    IPROTO_SYNC: 5\n"
#~ "})\n"
#~ "# <body> ... the map-item IPROTO_INDEX_BASE is optional\n"
#~ "msgpack({\n"
#~ "    IPROTO_SPACE_ID: 512,\n"
#~ "    IPROTO_INDEX_ID: 0,\n"
#~ "    IPROTO_INDEX_BASE: 1,\n"
#~ "    IPROTO_TUPLE: [['=',2,'B']],\n"
#~ "    IPROTO_KEY: [999]\n"
#~ "})"

#~ msgid ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_DELETE,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_SPACE_ID: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_INDEX_ID: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_KEY: :samp:`{{MP_ARRAY array of key values}}`\n"
#~ "})"
#~ msgstr ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_DELETE,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_SPACE_ID: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_INDEX_ID: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_KEY: :samp:`{{MP_ARRAY array of key values}}`\n"
#~ "})"

#~ msgid ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_UPSERT,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_SPACE_ID: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_INDEX_BASE: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_OPS: :samp:`{{MP_ARRAY array of update operations}}`,\n"
#~ "    IPROTO_TUPLE: :samp:`{{MP_ARRAY array of primary-key field values}}`\n"
#~ "})"
#~ msgstr ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_UPSERT,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_SPACE_ID: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_INDEX_BASE: :samp:`{{MP_UINT unsigned integer}}`,\n"
#~ "    IPROTO_OPS: :samp:`{{MP_ARRAY array of update operations}}`,\n"
#~ "    IPROTO_TUPLE: :samp:`{{MP_ARRAY array of primary-key field values}}`\n"
#~ "})"

#~ msgid ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_CALL,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_FUNCTION_NAME: :samp:`{{MP_STR string}}`,\n"
#~ "    IPROTO_TUPLE: :samp:`{{MP_ARRAY array of arguments}}`\n"
#~ "})"
#~ msgstr ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_CALL,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_FUNCTION_NAME: :samp:`{{MP_STR string}}`,\n"
#~ "    IPROTO_TUPLE: :samp:`{{MP_ARRAY array of arguments}}`\n"
#~ "})"

#~ msgid ""
#~ "The ``<body>`` has the details of the request or response. In a request, it "
#~ "can also be absent or be an empty map. Both these states will be interpreted"
#~ " equally. Responses will contain the ``<body>`` anyway even for an "
#~ ":ref:`IPROTO_PING <box_protocol-ping>` request."
#~ msgstr ""
#~ "Тело сообщения ``<body>`` содержит детали запроса или ответа. В запросе оно "
#~ "может отсутствовать или представлять собой пустой ассоциативный массив. И "
#~ "то, и другое будет интерпретироваться одинаково. Ответы будут содержать "
#~ "``<body>`` в любом случае, даже после запроса :ref:`IPROTO_PING "
#~ "<box_protocol-ping>`."

#~ msgid "IPROTO_CALL_16 = 0x06"
#~ msgstr "IPROTO_CALL_16 = 0x06"

#~ msgid ""
#~ "See :ref:`conn:call() <net_box-call>`. The suffix ``_16`` is a hint that "
#~ "this is for the ``call()`` until Tarantool 1.6. It is deprecated. Use "
#~ ":ref:`IPROTO_CALL <box_protocol-call>` instead. The body is a 2-item map:"
#~ msgstr ""
#~ "См. :ref:`conn:call() <net_box-call>`. ``_16`` в конце подсказывает, что "
#~ "константа используется для ``call()`` до версии Tarantool 1.6. Эта константа"
#~ " объявлена устаревшей. Вместо нее используйте :ref:`IPROTO_CALL "
#~ "<box_protocol-call>`. Тело сообщения представляет собой ассоциативный массив"
#~ " из 2 элементов:"

#~ msgid ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_CALL_16,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_FUNCTION_NAME: :samp:`{{MP_STR string}}`,\n"
#~ "    IPROTO_TUPLE: :samp:`{{MP_ARRAY array of arguments}}`\n"
#~ "})"
#~ msgstr ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_CALL_16,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_FUNCTION_NAME: :samp:`{{MP_STR string}}`,\n"
#~ "    IPROTO_TUPLE: :samp:`{{MP_ARRAY array of arguments}}`\n"
#~ "})"

#~ msgid "The return value is an array of tuples."
#~ msgstr "Возвращается массив кортежей."

#~ msgid ""
#~ "See :ref:`authentication <authentication-users>`. See the later section "
#~ ":ref:`Binary protocol -- authentication <box_protocol-authentication>`."
#~ msgstr ""
#~ "См. раздел :ref:`Аутентификация <authentication-users>` в документации. См. "
#~ "раздел об :ref:`аутентификации <box_protocol-authentication>` ниже."

#~ msgid ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_EVAL,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_EXPR: :samp:`{{MP_STR string}}`,\n"
#~ "    IPROTO_TUPLE: :samp:`{{MP_ARRAY array of arguments}}`\n"
#~ "})"
#~ msgstr ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_EVAL,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_EXPR: :samp:`{{MP_STR string}}`,\n"
#~ "    IPROTO_TUPLE: :samp:`{{MP_ARRAY array of arguments}}`\n"
#~ "})"

#~ msgid ""
#~ "# <size>\n"
#~ "msgpack(19)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_SYNC: 5\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_EVAL\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_EXPR: 'return 5;',\n"
#~ "    IPROTO_TUPLE: []\n"
#~ "})"
#~ msgstr ""
#~ "# <size>\n"
#~ "msgpack(19)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_SYNC: 5\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_EVAL\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_EXPR: 'return 5;',\n"
#~ "    IPROTO_TUPLE: []\n"
#~ "})"

#~ msgid "IPROTO_EXECUTE = 0x0b"
#~ msgstr "IPROTO_EXECUTE = 0x0b"

#~ msgid ""
#~ "See :ref:`box.execute() <box-sql_box_execute>`, this is only for SQL. The "
#~ "body is a 3-item map:"
#~ msgstr ""
#~ "См. :ref:`box.execute() <box-sql_box_execute>`, используется только для SQL."
#~ " Тело сообщения представляет собой ассоциативный массив из 3 элементов:"

#~ msgid ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_EXECUTE,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_STMT_ID: :samp:`{{MP_INT integer}}` or IPROTO_SQL_TEXT: :samp:`{{MP_STR string}}`,\n"
#~ "    IPROTO_SQL_BIND: :samp:`{{MP_INT integer}}`,\n"
#~ "    IPROTO_OPTIONS: :samp:`{{MP_ARRAY array}}`\n"
#~ "})"
#~ msgstr ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_EXECUTE,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_STMT_ID: :samp:`{{MP_INT integer}}` или IPROTO_SQL_TEXT: :samp:`{{MP_STR string}}`,\n"
#~ "    IPROTO_SQL_BIND: :samp:`{{MP_INT integer}}`,\n"
#~ "    IPROTO_OPTIONS: :samp:`{{MP_ARRAY array}}`\n"
#~ "})"

#~ msgid ""
#~ "Use IPROTO_STMT_ID (0x43) and statement-id (MP_INT) if executing a prepared "
#~ "statement, or use IPROTO_SQL_TEXT (0x40) and statement-text (MP_STR) if "
#~ "executing an SQL string, then IPROTO_SQL_BIND (0x41) and array of parameter "
#~ "values to match ? placeholders or :name placeholders, IPROTO_OPTIONS (0x2b) "
#~ "and array of options (usually empty)."
#~ msgstr ""
#~ "При выполнении подготовленного оператора используйте IPROTO_STMT_ID (0x43) и"
#~ " ID оператора (MP_INT), при работе со строками SQL — IPROTO_SQL_TEXT (0x40) "
#~ "и текст оператора (MP_STR), а затем IPROTO_SQL_BIND (0x41) и массив значений"
#~ " параметров для подстановочных знаков ``?`` или ``:name``, IPROTO_OPTIONS "
#~ "(0x2b) и массив параметров (обычно пустой)."

#~ msgid ""
#~ "For example, suppose we prepare a statement with two ? placeholders, and "
#~ "execute with two parameters, thus: |br| :code:`n = conn:prepare([[VALUES (?,"
#~ " ?);]])` |br| :code:`conn:execute(n.stmt_id, {1,'a'})` |br| Then the body "
#~ "will look like this:"
#~ msgstr ""
#~ "Например, предположим, что мы создаем подготовленный оператор с двумя "
#~ "подстановочными знаками ? и выполняем его с двумя параметрами таким образом:"
#~ " |br| :code:`n = conn:prepare([[VALUES (?, ?);]])` |br| "
#~ ":code:`conn:execute(n.stmt_id, {1,'a'})` |br| Тогда тело сообщения будет "
#~ "выглядеть так:"

#~ msgid ""
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_STMT_ID: 0xd7aa741b,\n"
#~ "    IPROTO_SQL_BIND: [1, 'a'],\n"
#~ "    IPROTO_OPTIONS: []\n"
#~ "})"
#~ msgstr ""
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_STMT_ID: 0xd7aa741b,\n"
#~ "    IPROTO_SQL_BIND: [1, 'a'],\n"
#~ "    IPROTO_OPTIONS: []\n"
#~ "})"

#~ msgid ""
#~ "To call a prepared statement with named parameters from a connector pass the"
#~ " parameters within an array of maps. A client should wrap each element into "
#~ "a map, where the key holds a name of the parameter (with a colon) and the "
#~ "value holds an actual value. So, to bind foo and bar to 42 and 43, a client "
#~ "should send ``IPROTO_SQL_TEXT: <...>, IPROTO_SQL_BIND: [{\"foo\": 42}, "
#~ "{\"bar\": 43}]``."
#~ msgstr ""
#~ "Чтобы вызвать подготовленный оператор с именованными параметрами из "
#~ "коннектора, передайте параметры в массиве ассоциативных массивов. Клиент "
#~ "должен поместить каждый элемент в ассоциативный массив, где ключ содержит "
#~ "имя параметра (с двоеточием), а значение — фактическое значение. Так, чтобы "
#~ "связать foo и bar с 42 и 43, клиент должен отправить ``IPROTO_SQL_TEXT: "
#~ "<...>, IPROTO_SQL_BIND: [{\"foo\": 42}, {\"bar\": 43}]``."

#~ msgid ""
#~ "If a statement has both named and non-named parameters, wrap only named ones"
#~ " into a map. The rest of the parameters are positional and will be "
#~ "substituted in order."
#~ msgstr ""
#~ "Если оператор содержит как именованные, так и неименованные параметры, "
#~ "поместите в ассоциативный массив только именованные параметры. Остальные "
#~ "параметры являются позиционными и будут подставляться по порядку."

#~ msgid "IPROTO_PREPARE = 0x0d"
#~ msgstr "IPROTO_PREPARE = 0x0d"

#~ msgid ""
#~ "See :ref:`box.prepare <box-sql_box_prepare>`, this is only for SQL. The body"
#~ " is a 1-item map:"
#~ msgstr ""
#~ "См. :ref:`box.prepare <box-sql_box_prepare>`, используется только для SQL. "
#~ "Тело сообщения представляет собой ассоциативный массив из 1 элемента:"

#~ msgid ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_PREPARE,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_STMT_ID: :samp:`{{MP_INT integer}}` or IPROTO_SQL_TEXT: :samp:`{{MP_STR string}}`\n"
#~ "})"
#~ msgstr ""
#~ "# <size>\n"
#~ "msgpack(:samp:`{{MP_UINT unsigned integer = size(<header>) + size(<body>)}}`)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_PREPARE,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})\n"
#~ "# <body>\n"
#~ "msgpack({\n"
#~ "    IPROTO_STMT_ID: :samp:`{{MP_INT integer}}` или IPROTO_SQL_TEXT: :samp:`{{MP_STR string}}`\n"
#~ "})"

#~ msgid ""
#~ "IPROTO_STMT_ID (0x43) and statement-id (MP_INT) if executing a prepared "
#~ "statement or IPROTO_SQL_TEXT (0x40) and statement-text (string) if executing"
#~ " an SQL string. Thus the IPROTO_PREPARE map item is the same as the first "
#~ "item of the :ref:`IPROTO_EXECUTE <box_protocol-execute>` body."
#~ msgstr ""
#~ "При выполнении подготовленного оператора используйте IPROTO_STMT_ID (0x43) и"
#~ " ID оператора (MP_INT), при работе со строками SQL --- IPROTO_SQL_TEXT "
#~ "(0x40) и текст оператора (string). Таким образом, элемент ассоциативного "
#~ "массива IPROTO_PREPARE — это то же самое, что и первый элемент тела "
#~ "сообщения :ref:`IPROTO_EXECUTE <box_protocol-execute>`."

#~ msgid ""
#~ "# <size>\n"
#~ "msgpack(5)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_PING,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})"
#~ msgstr ""
#~ "# <size>\n"
#~ "msgpack(5)\n"
#~ "# <header>\n"
#~ "msgpack({\n"
#~ "    IPROTO_REQUEST_TYPE: IPROTO_PING,\n"
#~ "    IPROTO_SYNC: :samp:`{{MP_UINT unsigned integer}}`\n"
#~ "})"
