msgid ""
msgstr ""
"Plural-Forms: nplurals=4; plural=((n%10==1 && n%100!=11) ? 0 : ((n%10 >= 2 && n%10 <=4 && (n%100 < 12 || n%100 > 14)) ? 1 : ((n%10 == 0 || (n%10 >= 5 && n%10 <=9)) || (n%100 >= 11 && n%100 <= 14)) ? 2 : 3));\n"
"X-Crowdin-Project: tarantool-docs\n"
"X-Crowdin-Project-ID: 442986\n"
"X-Crowdin-Language: ru\n"
"X-Crowdin-File: /en/dev_guide/reference_capi/coio.pot\n"
"X-Crowdin-File-ID: 1170\n"
"Project-Id-Version: tarantool-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Russian\n"
"Language: ru_RU\n"
"PO-Revision-Date: 2021-04-13 22:32\n"

msgid "Module `coio`"
msgstr "Модуль `coio`"

msgid "READ event"
msgstr "событие чтения READ"

msgid "WRITE event"
msgstr "событие записи WRITE"

msgid "Wait until READ or WRITE event on socket (``fd``). Yields."
msgstr "Ожидание события чтения или записи (READ / WRITE) на сокете (``fd``) с передачей управления."

msgid "Parameters"
msgstr "Параметры"

msgid "non-blocking socket file description"
msgstr "дескриптор файла сокета без блокировки"

msgid "requested events to wait. Combination of ``COIO_READ | COIO_WRITE`` bit flags."
msgstr "запрашиваемые события. Комбинация битовых флагов ``COIO_READ | COIO_WRITE``."

msgid "timeout in seconds."
msgstr "время ожидания в секундах."

msgid "Returns"
msgstr "Возвращает"

msgid "0 - timeout"
msgstr "0 - время ожидания"

msgid ">0 - returned events. Combination of ``TNT_IO_READ | TNT_IO_WRITE`` bit flags."
msgstr ">0 - возвращаемые события. Комбинация битовых флагов ``TNT_IO_READ | TNT_IO_WRITE``."

msgid "Create new eio task with specified function and arguments. Yield and wait until the task is complete. This function may use the :ref:`worker_pool_threads <cfg_basic-worker_pool_threads>` configuration parameter."
msgstr "Создание новой задачи для eio с указанной функцией и аргументами. Передает управление и ожидает окончания задачи. Функция может использовать конфигурационный параметр :ref:`worker_pool_threads <cfg_basic-worker_pool_threads>`."

msgid "To avoid double error checking, this function does not throw exceptions. In most cases it is also necessary to check the return value of the called function and perform necessary actions. If func sets errno, the errno is preserved across the call."
msgstr "Во избежание двойной проверки ошибок функция не выбрасывает исключения. В большинстве случаев также необходимо проверять возвращаемое значение вызванной функции и выполнить необходимые действия. Если функция определяет номер ошибки errno, этот номер ошибки сохраняется в течение вызова."

msgid "-1 and ``errno`` = ENOMEM if failed to create a task"
msgstr "-1 и ``errno`` = ENOMEM, если задача не была создана"

msgid "the function's return (``errno`` is preserved)."
msgstr "возврат функции (``errno`` сохраняется)."

msgid "**Example:**"
msgstr "**Пример:**"

msgid "static ssize_t openfile_cb(va_list ap)\n"
"{\n"
"        const char* filename = va_arg(ap);\n"
"        int flags = va_arg(ap);\n"
"        return open(filename, flags);\n"
"}\n\n"
"if (coio_call(openfile_cb, \"/tmp/file\", 0) == -1)\n"
"    // handle errors.\n"
"..."
msgstr "static ssize_t openfile_cb(va_list ap)\n"
"{\n"
"        const char* filename = va_arg(ap);\n"
"        int flags = va_arg(ap);\n"
"        return open(filename, flags);\n"
"}\n\n"
"if (coio_call(openfile_cb, \"/tmp/file\", 0) == -1)\n"
"    // обработка ошибок.\n"
"..."

msgid "Fiber-friendly version of :manpage:`getaddrinfo(3)`."
msgstr "Вариант функции getaddrinfo(3), совместимый с файберами."

msgid "Close the ``fd`` and wake any fiber blocked in :ref:`coio_wait() <c_api-coio-coio_wait>` call on this ``fd``."
msgstr "Закрытие ``fd`` и пробуждение любого файбера, заблокированного в вызове :ref:`coio_wait() <c_api-coio-coio_wait>` на данном сокете ``fd``."

msgid "the result of ``close(fd)``, see :manpage:`close(2)`"
msgstr "результат ``close(fd)``, см. :manpage:`close(2)`"

