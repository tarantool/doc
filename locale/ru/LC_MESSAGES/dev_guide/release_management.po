
msgid "Release management"
msgstr "Управление версиями"

msgid "Release policy"
msgstr "Политика управления версия"

#, fuzzy
msgid "A Tarantool release is identified by three digits, for example, 1.10.7:"
msgstr ""
"Версия Tarantool'а определяется тремя цифрами, например, 1.7.7. Мы "
"пользуемся цифрами по определению, данному на сайте http://semver.org:"

msgid ""
"The first digit stands for a MAJOR release series that introduces some "
"*major changes*. Up to now, there has been only one major release jump "
"when we delivered the 2.x release series with the SQL support."
msgstr ""

msgid ""
"The second digit stands for a MINOR release series that is used for "
"introducing new *features*. :ref:`Backward incompatible changes "
"<backward-incompatible>` are possible between these release series."
msgstr ""

msgid ""
"The third digit is for PATCH releases by which we reflect how stable the "
"MINOR release series is:"
msgstr ""

#, fuzzy
msgid "``0`` meaning **alpha**"
msgstr "0 означает альфа-версию,"

#, fuzzy
msgid "``1`` meaning **beta**"
msgstr "1 означает бета-версию,"

msgid "``2`` and above meaning **stable**."
msgstr ""

#, fuzzy
msgid ""
"So, each MINOR release series goes through a development-maturity life "
"cycle as follows:"
msgstr ""
"Таким образом, каждая МАЖОРНАЯ версия проходит через жизненный цикл "
"разработки МИНОРНЫХ версий следующим образом:"

msgid ""
"**Alpha**. Once a quarter, we start off with a new alpha version, such as"
" 2.3.0, 2.4.0, and so on. This is not what an alpha release usually means"
" in the typical software release life cycle but rather the current trunk "
"version which is under heavy development and can be unstable. The current"
" alpha version always lives in the master branch."
msgstr ""

msgid ""
"**Beta**. When all the features planned are implemented, we fork a new "
"branch from the master branch and tag it as a new beta version. It "
"contains ``1`` for the PATCH digit, e.g., 2.3.1, 2.4.1, and so on. This "
"version cannot be called stable yet (feature freeze has just been done) "
"although there are no known critical regressions in it since the last "
"stable release."
msgstr ""

msgid ""
"**Stable**. Finally, after we see our beta version runs successfully in a"
" production or development environment during another quarter while we "
"fix incoming bugs, we declare this version stable. It is tagged with "
"``2`` for the PATCH digit, e.g., 2.3.2, 2.4.2, and so on."
msgstr ""

msgid ""
"We support such version for 3 months while making another stable release "
"by fixing all bugs found. We release it in a quarter. This last tag "
"contains ``3`` for the PATCH digit, e.g., 2.3.3, 2.4.3, and so on. After "
"the tag is set, no new changes are allowed to the release branch, and it "
"is declared deprecated and superseded by a newer MINOR version."
msgstr ""

msgid ""
"Stable versions don't receive any new features and only get backward "
"compatible fixes."
msgstr ""

#, fuzzy
msgid ""
"Like Ubuntu, in terms of support, we distinguish between two kinds of "
"stable release series:"
msgstr "Как и в Ubuntu, мы различаем два вида стабильных версий:"

msgid ""
"**LTS (Long Term Support)** is a release series that is supported for 3 "
"years (community) and up to 5 years (paying customers). Current LTS "
"release series is 1.10, and it receives only PATCH level releases."
msgstr ""

#, fuzzy
msgid ""
"**Standard** is a release series that is supported only for a few months "
"until the next release series enters the stable state."
msgstr ""
"**Стандартные стабильные версии** поддерживаются в течении нескольких "
"месяцев после выхода."

msgid ""
"Below is a diagram that illustrates the release sequence issuing "
"described above by an example of some latest releases and release series:"
msgstr ""

msgid ""
"1.10 series -- 1.10.4 -- 1.10.5 -- 1.10.6 -- 1.10.7\n"
"(LTS)\n"
"\n"
"....\n"
"\n"
"2.2 series --- 2.2.1 --- 2.2.2 --- 2.2.3 (end of support)\n"
"                 |\n"
"                 V\n"
"2.3 series ... 2.3.0 --- 2.3.1 --- 2.3.2 --- 2.3.3 (end of support)\n"
"                           |\n"
"                           V\n"
"2.4 series ............. 2.4.0 --- 2.4.1 --- 2.4.2\n"
"                                     |\n"
"                                     V\n"
"2.5 series ....................... 2.5.0 --- 2.5.1\n"
"                                               |\n"
"                                               V\n"
"2.6 series ................................. 2.6.0\n"
"\n"
"-----------------|---------|---------|---------|------> (time)\n"
"                   1/4 yr.   1/4 yr.   1/4 yr."
msgstr ""

msgid ""
"*Support* means that we continue fixing bugs. We add bug fixes "
"simultaneously into the following release series: LTS, last stable, beta,"
" and alpha. If we look at the release diagram above, it means that the "
"bug fixes are to be added into 1.10, 2.4, 2.5, and 2.6 release series."
msgstr ""

msgid ""
"To sum it up, once a quarter we release (see the release diagram above "
"for reference):"
msgstr ""

#, fuzzy
msgid "next LTS release, e.g., 1.10.7"
msgstr "следующая LTS-версия, например, 2.10.6, 2.10.7 или 2.10.8"

msgid "two stable releases, e.g., 2.3.3 and 2.4.2"
msgstr ""

msgid "beta version of the next release series, e.g., 2.5.1."
msgstr ""

msgid ""
"In all supported releases, when we find and fix an outstanding "
"CVE/vulnerability, we deliver a patch for that but do not tag a new PATCH"
" level version. Users will be informed about such critical patches via "
"the official Tarantool news channel (`tarantool_news "
"<https://t.me/tarantool_news>`_)."
msgstr ""

msgid ""
"We also publish nightly builds, and use the fourth slot in the version "
"identifier to designate the nightly build number."
msgstr ""
"Мы также публикуем ночные сборки и используем четвертый слот в "
"идентификаторе версии для обозначения номера ночной сборки."

msgid ""
"A release series may introduce backward incompatible changes in a sense "
"that existing Lua, SQL or C code that are run on a current release series"
" may not be run with the same effect on a future series. However, we "
"don't exploit this rule and don't make incompatible changes without "
"appropriate reason. We usually deliver information how mature a "
"functionality is via release notes."
msgstr ""

msgid ""
"Please note that binary data layout is always compatible with the "
"previous series as well as with the LTS series (an instance of ``X.Y`` "
"version can be started on top of ``X.(Y+1)`` or ``1.10.z`` data); binary "
"protocol is compatible too (client-server as well as replication "
"protocol)."
msgstr ""

#, fuzzy
msgid "Release list"
msgstr "Политика управления версия"

msgid ""
"Below is the table containing all Tarantool releases starting from 1.10.0"
" up to the current latest versions (as of September 1, 2020). For each "
"release series, releases are sorted out as alpha, beta, and stable ones."
msgstr ""

msgid "Release series"
msgstr ""

msgid "Alpha"
msgstr ""

msgid "Beta"
msgstr ""

msgid "Stable"
msgstr ""

msgid "1.10 (LTS)"
msgstr ""

msgid "1.10.0"
msgstr ""

msgid "1.10.1"
msgstr ""

msgid "1.10.2 1.10.3 1.10.4 1.10.5 1.10.6 1.10.7"
msgstr ""

msgid "2.1"
msgstr ""

msgid "2.1.0"
msgstr ""

msgid "2.1.1"
msgstr ""

msgid "2.1.2 2.1.3"
msgstr ""

msgid "2.2"
msgstr ""

msgid "2.2.0"
msgstr ""

msgid "2.2.1"
msgstr ""

msgid "2.2.2 2.2.3"
msgstr ""

msgid "2.3"
msgstr ""

msgid "2.3.0"
msgstr ""

msgid "2.3.1"
msgstr ""

msgid "2.3.2 2.3.3"
msgstr ""

msgid "2.4"
msgstr ""

msgid "2.4.0"
msgstr ""

msgid "2.4.1"
msgstr ""

msgid "2.4.2"
msgstr ""

msgid "2.5"
msgstr ""

msgid "2.5.0"
msgstr ""

msgid "2.5.1"
msgstr ""

msgid "2.6"
msgstr ""

msgid "2.6.0"
msgstr ""

msgid "How to make a minor release"
msgstr "Как собрать минорную версию"

msgid ""
"$ git tag -a 2.4 -m \"Next minor in 2.x series\"\n"
"$ vim CMakeLists.txt # edit CPACK_PACKAGE_VERSION_PATCH\n"
"$ git push --tags"
msgstr ""
"$ git tag -a 2.4 -m \"Next minor in 2.x series\"\n"
"$ vim CMakeLists.txt # редактировать CPACK_PACKAGE_VERSION_PATCH\n"
"$ git push --tags"

msgid ""
"A tag which is made on a git branch can be taken along with a merge, or "
"left on the branch. The technique to \"keep the tag on the branch it was "
"originally set on\" is to use ``--no-fast-forward`` when merging this "
"branch."
msgstr ""
"Тег, который делается на ветке git, можно забрать при слиянии или "
"оставить на ветке. Метод \"сохранить тег на ветке, на которой он был "
"первоначально установлен\", заключается в использовании ``--no-fast-"
"forward`` при слиянии этой ветки."

msgid ""
"With ``--no-ff``, a merge changeset is created to represent the received "
"changes, and only that merge changeset ends up in the destination branch."
" This technique can be useful when there are two active lines of "
"development, e.g. \"stable\" and \"next\", and it's necessary to be able "
"to tag both lines independently."
msgstr ""
"С помощью ``--no-ff`` создается набор изменений при слиянии для пояснения"
" полученных изменений, и только этот набор изменений при слиянии "
"оказывается в ветке назначения. Этот метод можно использовать, когда есть"
" две активные линии разработки, например, \"стабильная\" и \"следующая\","
" и необходимо иметь возможность помечать тегами линии независимо друг от "
"друга."

msgid ""
"To make sure that a tag doesn't end up in the destination branch, it is "
"necessary to have the commit to which the tag is attached, \"stay on the "
"original branch\". That's exactly what a merge with disabled \"fast-"
"forward\" does -- creates a \"merge\" commit and adds it to both "
"branches."
msgstr ""
"Чтобы убедиться, что тег не окажется в ветке назначения, необходимо, "
"чтобы коммит, к которому привязан тег, остался в исходной ветке. Это и "
"происходит при отключенном \"fast-forward\" -- создается коммит для "
"слияния и добавляется в обе ветки."

msgid "Here's what it may look like:"
msgstr "Вот как это может выглядеть:"

msgid ""
"kostja@shmita:~/work/tarantool$ git checkout master\n"
"Already on 'master'\n"
"kostja@shmita:~/work/tarantool$ git tag -a 2.4 -m \"Next development\"\n"
"kostja@shmita:~/work/tarantool$ git describe\n"
"2.4\n"
"kostja@shmita:~/work/tarantool$ git checkout master-stable\n"
"Switched to branch 'master-stable'\n"
"kostja@shmita:~/work/tarantool$ git tag -a 2.3 -m \"Next stable\"\n"
"kostja@shmita:~/work/tarantool$ git describe\n"
"2.3\n"
"kostja@shmita:~/work/tarantool$ git checkout master\n"
"Switched to branch 'master'\n"
"kostja@shmita:~/work/tarantool$ git describe\n"
"2.4\n"
"kostja@shmita:~/work/tarantool$ git merge --no-ff master-stable\n"
"Auto-merging CMakeLists.txt\n"
"Merge made by recursive.\n"
" CMakeLists.txt |    1 +\n"
" 1 files changed, 1 insertions(+), 0 deletions(-)\n"
"kostja@shmita:~/work/tarantool$ git describe\n"
"2.4.0-0-g0a98576"
msgstr ""
"kostja@shmita:~/work/tarantool$ git checkout master\n"
"Already on 'master'\n"
"kostja@shmita:~/work/tarantool$ git tag -a 2.4 -m \"Next development\"\n"
"kostja@shmita:~/work/tarantool$ git describe\n"
"2.4\n"
"kostja@shmita:~/work/tarantool$ git checkout master-stable\n"
"Switched to branch 'master-stable'\n"
"kostja@shmita:~/work/tarantool$ git tag -a 2.3 -m \"Next stable\"\n"
"kostja@shmita:~/work/tarantool$ git describe\n"
"2.3\n"
"kostja@shmita:~/work/tarantool$ git checkout master\n"
"Switched to branch 'master'\n"
"kostja@shmita:~/work/tarantool$ git describe\n"
"2.4\n"
"kostja@shmita:~/work/tarantool$ git merge --no-ff master-stable\n"
"Auto-merging CMakeLists.txt\n"
"Merge made by recursive.\n"
" CMakeLists.txt |    1 +\n"
" 1 files changed, 1 insertions(+), 0 deletions(-)\n"
"kostja@shmita:~/work/tarantool$ git describe\n"
"2.4.0-0-g0a98576"

msgid "Also, don't forget this:"
msgstr "Кроме того, следует помнить:"

msgid "Update all issues. Upload the ChangeLog based on ``git log`` output."
msgstr ""
"Обновляйте все задачи. Обновляйте журнал изменений ChangeLog на основании"
" вывода ``git log``."

msgid ""
"The ChangeLog must only include items which are mentioned as issues on "
"GitHub. If anything significant is there, which is not mentioned, "
"something went wrong in release planning and the release should be held "
"up until this is cleared."
msgstr ""
"Журнал изменений ChangeLog должен включать в себя только пункты, "
"указанные в задачах на GitHub. Если что-то значительное не указано, "
"значит, что-то пошло не так при планировании версии, и ее выход следует "
"отложить до выяснения причин."

msgid ""
"Click 'Release milestone'. Create a milestone for the next minor release."
" Alert the driver to target bugs and blueprints to the new milestone."
msgstr ""
"Нажимайте 'Release milestone' (создать промежуточную версию). Создавайте "
"промежуточные версии для следующей минорной версии. Указывайте драйверу "
"на дефекты и проекты для новой промежуточной версии."

#~ msgid ""
#~ "The first digit stands for MAJOR "
#~ "release. A **major** release may contain"
#~ " *incompatible changes*."
#~ msgstr ""
#~ "Первая цифра означает МАЖОРНУЮ версию. "
#~ "**Мажорная** версия может содержать "
#~ "*несовместимые изменения*."

#~ msgid ""
#~ "The second digit stands for MINOR "
#~ "release, it does not contain "
#~ "incompatible changes, and is used for"
#~ " introducing backward-compatible *features*."
#~ msgstr ""
#~ "Вторая цифра означает МИНОРНУЮ версию; "
#~ "такая версия не содержит несовместимых "
#~ "изменений и используется для релиза "
#~ "нового *функционала* с обратной "
#~ "совместимостью."

#~ msgid ""
#~ "The third digit is for PATCH "
#~ "releases that contain only backward-"
#~ "compatible *bug fixes*."
#~ msgstr ""
#~ "Третья цифра используется для ПАТЧ-версий, "
#~ "которые содержат только **исправления "
#~ "дефектов** с обратной совместимостью."

#~ msgid "In MINOR digit, we reflect how stable a release is:"
#~ msgstr "Цифра МИНОРНОЙ версии также отражает ее стабильность:"

#~ msgid "anything between 1 and 10 meaning stable, and"
#~ msgstr "от 1 до 10 означает стабильную версию, а"

#~ msgid "10 meaning LTS."
#~ msgstr "10 означает окончательную версию с долгосрочной технической поддержкой."

#~ msgid ""
#~ "**Alpha**. Once in every few months "
#~ "we release a few alpha versions, "
#~ "e.g. 2.0.1, 2.0.2."
#~ msgstr ""
#~ "**Альфа**. Один раз в несколько месяцев"
#~ " выходят несколько альфа-версий, например, "
#~ "2.0.1, 2.0.2."

#~ msgid ""
#~ "Alpha versions may contain incompatible "
#~ "changes, crashes and other bugs."
#~ msgstr ""
#~ "Альфа-версии могут содержать несовместимые "
#~ "изменения, сбои и другие дефекты."

#~ msgid ""
#~ "**Beta**. Once major changes necessary "
#~ "to introduce new flagship features are"
#~ " ready, we release a few beta "
#~ "versions, e.g. 2.1.3, 2.1.4."
#~ msgstr ""
#~ "**Бета**. Когда готовы значительные изменения,"
#~ " необходимые для включения новых основных"
#~ " функций, мы выпускаем несколько "
#~ "бета-версий, например, 2.1.3, 2.1.4."

#~ msgid ""
#~ "Beta versions may contain crashes, but"
#~ " do not have incompatible changes, so"
#~ " can be used to develop new "
#~ "applications."
#~ msgstr ""
#~ "Бета-версии могут приводить к сбоям, но"
#~ " не содержат несовместимых изменений, "
#~ "поэтому их можно использовать для "
#~ "разработки новых приложений."

#~ msgid ""
#~ "**Stable**. Finally, after we see our"
#~ " beta versions run successfully in "
#~ "production, usually in a few more "
#~ "months, during which we fix all "
#~ "incoming bugs and add some minor "
#~ "features, we declare this MAJOR release"
#~ " series stable."
#~ msgstr ""
#~ "**Стабильная**. Наконец, после того, как "
#~ "бета-версии успешно отработают примерно "
#~ "несколько месяцев, во время которых мы"
#~ " исправляем поступающие дефекты и добавляем"
#~ " некоторые небольшие функции, мы объявляем"
#~ " эту МАЖОРНУЮ версию стабильной."

#~ msgid ""
#~ "**LTS (Long Term Support)** releases "
#~ "that are supported for 3 years "
#~ "(community) and up to 5 years "
#~ "(paying customers). **LTS** release is "
#~ "identified by MINOR version 10."
#~ msgstr ""
#~ "**LTS (Long Term Support - Долгосрочная"
#~ " техническая поддержка)** такие версии "
#~ "поддерживаются в течение 3 лет "
#~ "(сообщество) и до 5 лет "
#~ "(платежеспособные клиенты). **LTS**-версию можно "
#~ "идентифицировать по МИНОРНОЙ версии = "
#~ "10."

#~ msgid "\"Support\" means that we continue fixing bugs in a release."
#~ msgstr ""
#~ "\"Support\" (поддержка) означает, что мы "
#~ "продолжаем исправлять ошибки в этой "
#~ "версии."

#~ msgid "We add commits simultaneously to three MAJOR releases:"
#~ msgstr "Мы добавляем коммиты одновременно в три МАЖОРНЫЕ версии:"

#~ msgid ""
#~ "**LTS** is a stable release which "
#~ "does not receive new features, and "
#~ "only gets backward compatible fixes. "
#~ "Hence, following the rules of semver,"
#~ " LTS release never has its MAJOR "
#~ "or MINOR version increased, and only "
#~ "gets PATCH level releases."
#~ msgstr ""
#~ "**LTS** -- это стабильная версия, "
#~ "которая не получает новые функции, а "
#~ "только исправления обратной совместимости. "
#~ "Следовательно, по правилам семантической "
#~ "версификации в LTS-версии никогда не "
#~ "увеличивается МАЖОРНАЯ или МИНОРНАЯ, а "
#~ "только ПАТЧ-версия."

#~ msgid ""
#~ "**STABLE** is our current stable "
#~ "release, which may receive new features."
#~ " When the next STABLE version is "
#~ "published, MINOR version is incremented. "
#~ "Between MINOR releases, we may have "
#~ "intermediate PATCH level releases as "
#~ "well, which will contain only bug "
#~ "fixes. We maintain PATCH level releases"
#~ " for two STABLE releases, the current"
#~ " and the previous one, to preserve"
#~ " support continuity."
#~ msgstr ""
#~ "**СТАБИЛЬНАЯ** -- это наша текущая "
#~ "стабильная версия, в которую могут быть"
#~ " добавлены новые функции. Когда выходит "
#~ "следующая СТАБИЛЬНАЯ версия, увеличивается "
#~ "МИНОРНАЯ версия. Между МИНОРНЫМИ версиями "
#~ "у нас могут увеличиваться промежуточные "
#~ "уровни ПАТЧ-версии, в которых будут "
#~ "только исправлены дефекты. Мы поддерживаем "
#~ "ПАТЧ-уровни для двух СТАБИЛЬНЫХ версий "
#~ "-- текущей и предыдущей -- для "
#~ "сообщества разработчиков."

#~ msgid ""
#~ "**NEXT** is our next MAJOR release, "
#~ "and it follows the maturity cycle "
#~ "described in the beginning. While NEXT"
#~ " release is in alpha state, its "
#~ "MINOR is frozen at 0 and is "
#~ "only increased when the release reaches"
#~ " BETA status. Once the NEXT release"
#~ " becomes STABLE, we switch the "
#~ "vehicle for delivery of minor features,"
#~ " designating the previous stable release"
#~ " as LTS, and releasing it with "
#~ "MINOR set to 10."
#~ msgstr ""
#~ "**СЛЕДУЮЩАЯ** -- это следующая МАЖОРНАЯ "
#~ "версия, которая проходит процесс зрелости, "
#~ "описанный в начале раздела. Когда "
#~ "СЛЕДУЮЩАЯ версия находится в альфа-стадии, "
#~ "МИНОРНАЯ остается на уровне 0 и "
#~ "увеличивается, когда версия переходит в "
#~ "БЕТА-стадию. После того, как СЛЕДУЮЩАЯ "
#~ "версия становится СТАБИЛЬНОЙ, мы переключаемся"
#~ " на выдачу небольших функций, обозначая "
#~ "предыдущую стабильную версию как LTS, и"
#~ " выпускаем ее с МИНОРНОЙ версией ="
#~ " 10."

#~ msgid "To sum up, once a quarter we release:"
#~ msgstr "Итак, раз в квартал выходят:"

#~ msgid "the next STABLE release, e.g. 3.6, 3.7 or 3.8"
#~ msgstr "следующая СТАБИЛЬНАЯ версия,например, 3.6, 3.7 или 3.8"

#~ msgid ""
#~ "(optionally) an alpha or beta version"
#~ " of the NEXT release, e.g. 4.0.1, "
#~ "4.0.2 or 4.0.3"
#~ msgstr ""
#~ "(возможно) альфа-стадия или бета-стадия "
#~ "СЛЕДУЮЩЕЙ версии, например, 4.0.1, 4.0.2 "
#~ "или 4.0.3"

#~ msgid ""
#~ "In all supported releases, we also "
#~ "release a PATCH release as soon as"
#~ " we find and fix an outstanding "
#~ "CVE/vulnerability."
#~ msgstr ""
#~ "Для всех поддерживаемых версий мы также"
#~ " выпускаем ПАТЧИ, как только обнаружим "
#~ "и устраним уязвимость."

#~ msgid "Example version identifier:"
#~ msgstr "Пример идентификатора версии:"

#~ msgid "2.0.3 - third alpha of 2.x release"
#~ msgstr "2.0.3 - третья альфа-стадия версии 2.0"

#~ msgid "2.1.3 - a beta of 2.x release"
#~ msgstr "2.1.3 - бета-стадия версии 2.0"

#~ msgid "2.2 - a stable version of 2.x series, but not an LTS yet"
#~ msgstr "2.2 - стабильная версия серии 2.0, но еще не LTS"

#~ msgid "2.10 - an LTS release"
#~ msgstr "2.10 - LTS-версия"

#~ msgid "How to release a Docker container"
#~ msgstr "Как выпустить Docker-контейнер"

#~ msgid "To bump a new version of a Docker container:"
#~ msgstr "Чтобы выдать новую версию Docker-контейнера:"

#~ msgid ""
#~ "On the ``master`` branch of "
#~ "`tarantool/docker <https://github.com/tarantool/docker>`_ "
#~ "repository, find the Dockerfile that "
#~ "corresponds to the commit's **major** "
#~ "version (e.g. "
#~ "https://github.com/tarantool/docker/blob/master/2.x/Dockerfile "
#~ "for Tarantool version 2.4) and specify"
#~ " the required commit in "
#~ "``TARANTOOL_VERSION``, for example "
#~ "``TARANTOOL_VERSION=2.4.0-11-gcd17b77f9``."
#~ msgstr ""
#~ "В главной ветке ``master`` в репозитории"
#~ " `tarantool/docker <https://github.com/tarantool/docker>`_"
#~ " найдите Dockerfile, который соответствует "
#~ "**мажорной** версии коммита (например, "
#~ "https://github.com/tarantool/docker/blob/master/2.4/Dockerfile "
#~ "for Tarantool version 2.x), и укажите"
#~ " необходимый коммит в ``TARANTOOL_VERSION``, "
#~ "например, ``TARANTOOL_VERSION=2.4.0-11-gcd17b77f9``."

#~ msgid "Commit the Dockerfile back to ``master`` branch."
#~ msgstr "Снова загрузите Dockerfile в главную ветку."

#~ msgid ""
#~ "In the same repository, create a "
#~ "branch named after the commit's "
#~ "``<major>.<minor>`` versions, e.g. branch "
#~ "``2.4`` for commit 2.4.0-11-gcd17b77f9."
#~ msgstr ""
#~ "В том же репозитории создайте ветку "
#~ "с именем на основании версий коммита "
#~ "``<major>.<minor>``, например, ветка ``2.4`` "
#~ "для коммита 2.4.0-11-gcd17b77f9."

#~ msgid ""
#~ "In Tarantool container build settings at"
#~ " ``hub.docker.com`` "
#~ "(https://hub.docker.com/r/tarantool/tarantool/~/settings/automated-"
#~ "builds/), add a new line:"
#~ msgstr ""
#~ "В настройках сборки контейнера Tarantool'а "
#~ "в ``hub.docker.com`` "
#~ "(https://hub.docker.com/r/tarantool/tarantool/~/settings/automated-"
#~ "builds/) добавьте новую строку:"

#~ msgid "Branch: x.y, /x, x.y"
#~ msgstr "Branch: x.y, /x, x.y"

#~ msgid ""
#~ "where ``x`` and ``y`` correspond to "
#~ "the commit's major and minor versions."
#~ msgstr "где ``x`` и ``y`` соответствуют мажорной и минорной версиям коммита."

#~ msgid "Click **Save changes**."
#~ msgstr "Нажмите **Save changes** (сохранить изменения)."

#~ msgid "Shortly after, a new Docker container will be built."
#~ msgstr "Вскоре будет создан новый Docker-контейнер."
