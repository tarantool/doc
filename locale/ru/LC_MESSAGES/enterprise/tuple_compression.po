
msgid "Tuple compression"
msgstr ""

msgid ""
"Tuple compression, introduced in Tarantool Enterprise Edition 2.10.0, aims "
"to save memory space. Typically, it decreases the volume of stored data by "
"15%. However, the exact volume saved depends on the type of data."
msgstr ""

msgid "The following compression algorithms are supported:"
msgstr ""

msgid "`lz4 <https://en.wikipedia.org/wiki/LZ4_(compression_algorithm)>`_"
msgstr ""

msgid "`zstd <https://en.wikipedia.org/wiki/Zstd>`_"
msgstr ""

msgid ""
"`zlib <https://en.wikipedia.org/wiki/Zlib>`_ (since :doc:`2.11.0 "
"</release/2.11.0>`)"
msgstr ""

msgid ""
"To learn about the performance costs of each algorithm, check :ref:`Tuple "
"compression performance <enterprise-tuple-comp-performance>`."
msgstr ""

msgid ""
"Tarantool doesn't compress tuples themselves, just the fields inside these "
"tuples. You can only compress non-indexed fields. Compression works best "
"when JSON is stored in the field."
msgstr ""

msgid ""
"The :ref:`compress <compress-module>` module provides the API for "
"compressing and decompressing data."
msgstr ""

msgid "Enabling compression for a new space"
msgstr ""

msgid "First, create a space:"
msgstr ""

msgid "box.schema.space.create('bands')"
msgstr ""

msgid "Then, create an index for this space, for example:"
msgstr ""

msgid "box.space.bands:create_index('primary', {parts = {{1, 'unsigned'}}})"
msgstr ""

msgid ""
"Create a format to declare field names and types. In the example below, the "
"``band_name`` and ``year`` fields have the ``zstd`` and ``lz4`` compression "
"formats, respectively. The first field (``id``) has the index, so it cannot "
"be compressed."
msgstr ""

msgid ""
"box.space.bands:format({\n"
"           {name = 'id', type = 'unsigned'},\n"
"           {name = 'band_name', type = 'string', compression = 'zstd'},\n"
"           {name = 'year', type = 'unsigned', compression = 'lz4'}\n"
"       })"
msgstr ""

msgid ""
"Now, the new tuples that you add to the space ``bands`` will be compressed. "
"When you read a compressed tuple, you do not need to decompress it back "
"yourself."
msgstr ""

msgid "Checking which fields are compressed"
msgstr ""

msgid ""
"To check which fields in a space are compressed, run "
":ref:`space_object:format() <box_space-format>` on the space. If a field is "
"compressed, the format includes the compression algorithm, for example:"
msgstr ""

msgid ""
"tarantool> box.space.bands:format()\n"
"    ---\n"
"    - [{'name': 'id', 'type': 'unsigned'},\n"
"       {'type': 'string', 'compression': 'zstd', 'name': 'band_name'},\n"
"       {'type': 'unsigned', 'compression': 'lz4', 'name': 'year'}]\n"
"    ..."
msgstr ""

msgid "Enabling compression for existing spaces"
msgstr ""

msgid ""
"You can enable compression for existing fields. All the tuples added after "
"that will have this field compressed. However, this doesn't affect the "
"tuples already stored in the space. You need to make the snapshot and "
"restart Tarantool to compress the existing tuples."
msgstr ""

msgid "Here's an example of how to compress existing fields:"
msgstr ""

msgid "Create a space without compression and add several tuples:"
msgstr ""

msgid ""
"box.schema.space.create('bands')\n"
"\n"
"box.space.bands:format({\n"
"    { name = 'id', type = 'unsigned' },\n"
"    { name = 'band_name', type = 'string' },\n"
"    { name = 'year', type = 'unsigned' }\n"
"})\n"
"\n"
"box.space.bands:create_index('primary', { parts = { 'id' } })\n"
"\n"
"box.space.bands:insert { 1, 'Roxette', 1986 }\n"
"box.space.bands:insert { 2, 'Scorpions', 1965 }\n"
"box.space.bands:insert { 3, 'Ace of Base', 1987 }\n"
"box.space.bands:insert { 4, 'The Beatles', 1960 }"
msgstr ""

msgid ""
"Suppose that you want fields 2 and 3 to be compressed from now on. To enable"
" compression, change the format as follows:"
msgstr ""

msgid ""
"local new_format = box.space.bands:format()\n"
"\n"
"new_format[2].compression = 'zstd'\n"
"new_format[3].compression = 'lz4'\n"
"\n"
"box.space.bands:format(new_format)"
msgstr ""

msgid ""
"From now on, all the tuples that you add to the space have fields 2 and 3 "
"compressed."
msgstr ""

msgid ""
"To finalize the change, create a snapshot by running :ref:`box.snapshot() "
"<box-snapshot>` and restart Tarantool. As a result, all old tuples will also"
" be compressed in memory during recovery."
msgstr ""

msgid ""
":doc:`space:upgrade() <space_upgrade>` provides the ability to enable "
"compression and update the existing tuples in the background. To achieve "
"this, you need to pass a new space format in the ``format`` argument of "
"``space:upgrade()``."
msgstr ""

msgid "Tuple compression performance"
msgstr ""

msgid ""
"Below are the results of a `synthetic test "
"<https://github.com/tarantool/doc/blob/latest/doc/code_snippets/test/performance/compression_speed.lua>`_"
" that illustrate how tuple compression affects performance. The test was "
"carried out on a simple Tarantool space containing 100,000 tuples, each "
"having a field with a sample JSON roughly 600 bytes large. The test compared"
" the speed of running ``select`` and ``replace`` operations on uncompressed "
"and compressed data as well as the overall data size of the space. "
"Performance is measured in requests per second."
msgstr ""

msgid "Compression type"
msgstr ""

msgid "``select``, RPS"
msgstr ""

msgid "``replace``, RPS"
msgstr ""

msgid "Space size, bytes"
msgstr ""

msgid "None"
msgstr ""

msgid "4,486k"
msgstr ""

msgid "1,109k"
msgstr ""

msgid "41,168,548"
msgstr ""

msgid "``zstd``"
msgstr ""

msgid "308k"
msgstr ""

msgid "26k"
msgstr ""

msgid "21,368,548"
msgstr ""

msgid "``lz4``"
msgstr ""

msgid "1,765k"
msgstr ""

msgid "672k"
msgstr ""

msgid "25,268,548"
msgstr ""

msgid "``zlib``"
msgstr ""

msgid "325k"
msgstr ""

msgid "107k"
msgstr ""

msgid "20,768,548"
msgstr ""
