
msgid "Creating your first Tarantool Cartridge application"
msgstr "Создаем свое первое приложение на Tarantool Cartridge"

msgid "Here we'll walk you through developing a simple cluster application."
msgstr "Здесь мы показываем, как сделать простое кластерное приложение."

msgid ""
"First, `set up the development environment <https://github.com/tarantool"
"/cartridge-cli#installation>`_."
msgstr ""
"Первым делом `настройте среду разработки <https://github.com/tarantool"
"/cartridge-cli#installation>`_."

msgid "Next, create an application named ``myapp``. Say:"
msgstr "Затем создайте приложение с именем ``myapp``. Выполните:"

msgid "$ cartridge create --name myapp"
msgstr "$ cartridge create --name myapp"

msgid ""
"This will create a Tarantool Cartridge application in the ``./myapp`` "
"directory, with a handful of :ref:`template files and directories "
"<creating-an-application-from-template>` inside."
msgstr ""
"Эта команда создает новое Tarantool Cartridge-приложение в директории "
"``./myapp``. Там теперь содержатся созданные по шаблону :ref:`файлы и "
"директории <creating-an-application-from-template>`."

msgid "Go inside and make a dry run:"
msgstr "Войдите внутрь этой директории и запустите ваше приложение:"

msgid ""
"$ cd ./myapp\n"
"$ cartridge build\n"
"$ cartridge start"
msgstr ""
"$ cd ./myapp\n"
"$ cartridge build\n"
"$ cartridge start"

msgid ""
"This will build the application locally, start 5 instances of Tarantool, "
"and run the application as it is, with no business logic yet."
msgstr ""
"Эта команда собирает приложение локально, стартует 5 экземпляров "
"Tarantool и запускает приложение в том виде, как оно было создано -- без "
"какой-либо интересной бизнес-логики."

msgid ""
"Why 5 instances? See the ``instances.yml`` file in your application "
"directory. It contains the :ref:`configuration <cartridge-deployment>` of"
" all instances that you can use in the cluster. By default, it defines "
"configuration for 5 Tarantool instances."
msgstr ""
"Откуда взялись 5 экземпляров? Загляните внутрь файла "
"``instances.yml``.Там задается :ref:`конфигурация <cartridge-deployment>`"
" всех экземпляров, которые вы можете настроить внутри вашего кластера. По"
" умолчанию, там задана конфигурация 5 экземпляров."

msgid ""
"myapp.router:\n"
"  workdir: ./tmp/db_dev/3301\n"
"  advertise_uri: localhost:3301\n"
"  http_port: 8081\n"
"\n"
"myapp.s1-master:\n"
"  workdir: ./tmp/db_dev/3302\n"
"  advertise_uri: localhost:3302\n"
"  http_port: 8082\n"
"\n"
"myapp.s1-replica:\n"
"  workdir: ./tmp/db_dev/3303\n"
"  advertise_uri: localhost:3303\n"
"  http_port: 8083\n"
"\n"
"myapp.s2-master:\n"
"  workdir: ./tmp/db_dev/3304\n"
"  advertise_uri: localhost:3304\n"
"  http_port: 8084\n"
"\n"
"myapp.s2-replica:\n"
"  workdir: ./tmp/db_dev/3305\n"
"  advertise_uri: localhost:3305\n"
"  http_port: 8085"
msgstr ""
"myapp.router:\n"
"  workdir: ./tmp/db_dev/3301\n"
"  advertise_uri: localhost:3301\n"
"  http_port: 8081\n"
"\n"
"myapp.s1-master:\n"
"  workdir: ./tmp/db_dev/3302\n"
"  advertise_uri: localhost:3302\n"
"  http_port: 8082\n"
"\n"
"myapp.s1-replica:\n"
"  workdir: ./tmp/db_dev/3303\n"
"  advertise_uri: localhost:3303\n"
"  http_port: 8083\n"
"\n"
"myapp.s2-master:\n"
"  workdir: ./tmp/db_dev/3304\n"
"  advertise_uri: localhost:3304\n"
"  http_port: 8084\n"
"\n"
"myapp.s2-replica:\n"
"  workdir: ./tmp/db_dev/3305\n"
"  advertise_uri: localhost:3305\n"
"  http_port: 8085"

msgid ""
"You can already see these instances in the cluster management web "
"interface at http://localhost:8081 (here 8081 is the HTTP port of the "
"first instance specified in ``instances.yml``)."
msgstr ""
"Вы можете увидеть все эти экземпляры в веб-интерфейсе для управления "
"кластером по адресу http://localhost:8081 (порт 8081 -- это HTTP-порт "
"первого экземпляра из файла ``instances.yml``)."

msgid "Okay, press ``Ctrl + C`` to stop the cluster for a while."
msgstr "Теперь временно остановите кластер с помощью ``Ctrl + C``."

msgid ""
"Now it’s time to add some business logic to your application. This will "
"be an evergreen \"Hello world!\"\" -- just to keep things simple."
msgstr ""
"Пора заняться написанием бизнес-логики для вашего приложения. Чтобы не "
"слишком усложнять наш пример, возьмем канонический \"Hello world!\"\"."

msgid "Rename the template file ``app/roles/custom.lua`` to ``hello-world.lua``."
msgstr ""
"Переименуйте шаблонный файл ``app/roles/custom.lua`` в ``hello-"
"world.lua``."

msgid "$ mv app/roles/custom.lua app/roles/hello-world.lua"
msgstr "$ mv app/roles/custom.lua app/roles/hello-world.lua"

msgid ""
"This will be your *role*. In Tarantool Cartridge, a role is a Lua module "
"that implements some instance-specific functions and/or logic. Further on"
" we'll show how to add code to a role, build it, enable and test."
msgstr ""
"Это будет ваша *роль*. Роль в Tarantool Cartridge -- это Lua-модуль, в "
"котором реализованы специфичные для экземпляра Tarantool функции и "
"логика. Далее мы покажем, как добавлять в роль свой код, собирать ее, "
"назначать и тестировать."

msgid "There is already some code in the role's ``init()`` function."
msgstr "У вашей роли уже есть некоторый код внутри функции ``init()``."

msgid ""
" local function init(opts) -- luacheck: no unused args\n"
"     -- if opts.is_master then\n"
"     -- end\n"
"\n"
"     local httpd = cartridge.service_get('httpd')\n"
"     httpd:route({method = 'GET', path = '/hello'}, function()\n"
"         return {body = 'Hello world!'}\n"
"     end)\n"
"\n"
"     return true\n"
" end"
msgstr ""
" local function init(opts) -- luacheck: no unused args\n"
"     -- if opts.is_master then\n"
"     -- end\n"
"\n"
"     local httpd = cartridge.service_get('httpd')\n"
"     httpd:route({method = 'GET', path = '/hello'}, function()\n"
"         return {body = 'Hello world!'}\n"
"     end)\n"
"\n"
"     return true\n"
" end"

msgid ""
"This exports an HTTP endpoint ``/hello``. For example, "
"http://localhost:8081/hello if you address the first instance from the "
"``instances.yml`` file. If you open it in a browser after enabling the "
"role (we'll do it here a bit later), you'll see \"Hello world!\" on the "
"page."
msgstr ""
"Этот код экспортирует конечную точку ``/hello`` для выполнения "
"HTTP-запросов. Например, для первого экземпляра из файла "
"``instances.yml`` это будет http://localhost:8081/hello . Если вы зайдете"
" по этому адресу в браузере после того, как роль будет назначена (чуть "
"позже мы покажем, как это делается), то увидите на странице слова \"Hello"
" world!\"."

msgid "Let's add some more code there."
msgstr "Добавим сюда еще немного кода."

msgid ""
" local function init(opts) -- luacheck: no unused args\n"
"     -- if opts.is_master then\n"
"     -- end\n"
"\n"
"     local httpd = cartridge.service_get('httpd')\n"
"     httpd:route({method = 'GET', path = '/hello'}, function()\n"
"         return {body = 'Hello world!'}\n"
"     end)\n"
"\n"
"     local log = require('log')\n"
"     log.info('Hello world!')\n"
"\n"
"     return true\n"
" end"
msgstr ""
" local function init(opts) -- luacheck: no unused args\n"
"     -- if opts.is_master then\n"
"     -- end\n"
"\n"
"     local httpd = cartridge.service_get('httpd')\n"
"     httpd:route({method = 'GET', path = '/hello'}, function()\n"
"         return {body = 'Hello world!'}\n"
"     end)\n"
"\n"
"     local log = require('log')\n"
"     log.info('Hello world!')\n"
"\n"
"     return true\n"
" end"

msgid ""
"This writes \"Hello, world!\" to the console when the role gets enabled, "
"so you'll have a chance to spot this. No rocket science."
msgstr ""
"Здесь мы пишем \"Hello, world!\" в консоль в момент назначения роли, что "
"даст вам возможность отследить данное событие. Пока ничего сложного."

msgid ""
"Next, amend ``role_name`` in the \"return\" section of the ``hello-"
"world.lua`` file. This text will be displayed as a label for your role in"
" the cluster management web interface."
msgstr ""
"Далее изменим значение параметра ``role_name`` в \"return\"-блоке файла "
"``hello-world.lua``. Этот текст будет показан в качестве имени вашей роли"
" в веб-интерфейсе для управления кластером."

msgid ""
" return {\n"
"     role_name = 'Hello world!',\n"
"     init = init,\n"
"     stop = stop,\n"
"     validate_config = validate_config,\n"
"     apply_config = apply_config,\n"
" }"
msgstr ""
" return {\n"
"     role_name = 'Hello world!',\n"
"     init = init,\n"
"     stop = stop,\n"
"     validate_config = validate_config,\n"
"     apply_config = apply_config,\n"
" }"

msgid ""
"The final thing to do before you can run the application is to add your "
"role to the list of available cluster roles in the ``init.lua`` file."
msgstr ""
"Последнее, что осталось сделать -- это добавить ваше роль в список "
"доступных ролей кластера, в файл ``init.lua``."

msgid ""
" local ok, err = cartridge.cfg({\n"
"     workdir = 'tmp/db',\n"
"     roles = {\n"
"         'cartridge.roles.vshard-storage',\n"
"         'cartridge.roles.vshard-router',\n"
"         'app.roles.hello-world'\n"
"     },\n"
"     cluster_cookie = 'myapp-cluster-cookie',\n"
" })"
msgstr ""
" local ok, err = cartridge.cfg({\n"
"     workdir = 'tmp/db',\n"
"     roles = {\n"
"         'cartridge.roles.vshard-storage',\n"
"         'cartridge.roles.vshard-router',\n"
"         'app.roles.hello-world'\n"
"     },\n"
"     cluster_cookie = 'myapp-cluster-cookie',\n"
" })"

msgid "Now the cluster will be aware of your role."
msgstr "Теперь кластер будет знать про вашу роль."

msgid ""
"Why ``app.roles.hello-world``? By default, the role name here should "
"match the path from the application root (``./myapp``) to the role file "
"(``app/roles/hello-world.lua``)."
msgstr ""
"Почему мы указали ``app.roles.hello-world``? По умолчанию, имя роли в "
"данном файле должно включать в себя полный путь от корня приложения "
"(``./myapp``) до файла роли (``app/roles/hello-world.lua``)."

msgid ""
"Fine! Your role is ready. Re-build the application and re-start the "
"cluster now:"
msgstr "Отлично! Роль готова. Теперь заново соберите и запустите ваше приложение:"

msgid ""
"$ cartridge build\n"
"$ cartridge start"
msgstr ""
"$ cartridge build\n"
"$ cartridge start"

msgid ""
"Now all instances are up, but idle, waiting for you to enable roles for "
"them."
msgstr ""
"Все экземпляры запущены, но они пока ничего не делают, а ждут, что им "
"назначат роли."

msgid ""
"Instances (replicas) in a Tarantool Cartridge cluster are organized into "
"*replica sets*. Roles are enabled per replica set, so all instances in a "
"replica set have the same roles enabled."
msgstr ""
"Экземпляры (реплики) в кластере Tarantool Cartridge должны быть собраны в"
" *наборы реплик*. Роли назначаются каждому набору, и любой экземпляр в "
"наборе реплик видит все роли, которые назначены этому набору."

msgid ""
"Let's create a replica set containing just one instance and enable your "
"role:"
msgstr ""
"Давайте создадим набор реплик, в котором будет всего один экземпляр, и "
"назначим этому набору вашу роль."

msgid "Open the cluster management web interface at http://localhost:8081."
msgstr ""
"Откройте веб-интерфейс для управления кластером по адресу "
"http://localhost:8081."

msgid "Click **Configure**."
msgstr "Нажмите кнопку **Configure**."

msgid ""
"Check the role ``Hello world!`` to enable it. Notice that the role name "
"here matches the label text that you specified in the ``role_name`` "
"parameter in the ``hello-world.lua`` file."
msgstr ""
"Установите флажок напротив роли ``Hello world!``, чтобы назначить ее. "
"Заметьте, что имя роли здесь совпадает с тем текстом, который вы задали в"
" параметре  ``role_name``  в файле ``hello-world.lua``."

msgid ""
"(Optionally) Specify the replica set name, for example \"hello-world-"
"replica-set\"."
msgstr ""
"(По желанию) Задайте имя набора реплик, например \"hello-world-replica-"
"set\"."

msgid ""
"Click **Create replica set** and see the newly-created replica set in the"
" web interface."
msgstr ""
"Нажмите кнопку **Create replica set**. Информация о вашем наборе реплик "
"появится в веб-интерфейсе."

msgid ""
"Your custom role got enabled. Find the \"Hello world!\" message in "
"console, like this:"
msgstr "Итак, ваша роль назначена. В консоли вы можете увидеть такое сообщение:"

msgid ""
"Finally, open the HTTP endpoint of this instance at "
"http://localhost:8081/hello and see the reply to your GET request."
msgstr ""
"А если вы сейчас откроете в браузере страницу http://localhost:8081/hello"
" , то увидите ответ вашей роли на HTTP GET-запрос."

msgid "Everything is up and running! What's next?"
msgstr "Все работает! Что же дальше?"

msgid ""
"Follow :ref:`this guide <cartridge-deployment>` to set up the rest of the"
" cluster and try some cool cluster management features."
msgstr ""
"Загляните в :ref:`это руководство <cartridge-deployment>`, чтобы "
"настроить оставшиеся наборы реплик и опробовать разные кластерные "
"возможности."

msgid ""
"Get inspired with `these examples "
"<https://github.com/tarantool/examples/>`_ and implement more "
"sophisticated business logic for your role."
msgstr ""
"Посмотрите эти `примеры приложений "
"<https://github.com/tarantool/examples/>`_ и реализуйте более сложную "
"логику для вашей роли."

msgid ""
":ref:`Pack <packing-an-application>` your application for easy "
"distribution. Choose what you like: a DEB or RPM package, a TGZ archive, "
"or a Docker image."
msgstr ""
":ref:`Упакуйте <packing-an-application>` ваше приложение для дальнейшего "
"распространения. Вы можете выбрать любой из поддерживаемых видов пакетов:"
" DEB, RPM, архив TGZ или Docker-образ."
