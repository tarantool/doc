
msgid "Creating your first Tarantool database"
msgstr "Создаем свою первую базу данных на Tarantool"

msgid ""
"First thing, let's install Tarantool, start it, and create a simple "
"database."
msgstr ""
"Первым делом давайте установим Tarantool, запустим его и создадим простую"
" базу данных."

msgid "You can install Tarantool and work with it locally or in Docker."
msgstr ""
"Вы можете установить Tarantool и работать с ним либо локально, либо в "
"Docker -- как вам удобнее."

msgid "Using a Docker image"
msgstr "Использование Docker-образа"

msgid ""
"For trial and test purposes, we recommend using `official Tarantool "
"images for Docker <https://github.com/tarantool/docker>`_. An official "
"image contains a particular Tarantool version and all popular external "
"modules for Tarantool. Everything is already installed and configured in "
"Linux. These images are the easiest way to install and use Tarantool."
msgstr ""
"Для практики и тестирования мы рекомендуем использовать `официальные "
"образы Tarantool для Docker <https://github.com/tarantool/docker>`_. "
"Официальный образ содержит определенную версию Tarantool и все популярные"
" внешние модули для Tarantool. Все необходимое уже установлено и "
"настроено на платформе Linux. Данные образы - это самый простой способ "
"установить и запустить Tarantool."

msgid ""
"If you're new to Docker, we recommend going over `this tutorial "
"<https://docs.docker.com/engine/getstarted/step_one/>`_ before proceeding"
" with this chapter."
msgstr ""
"Если вы никогда раньше не работали с Docker, рекомендуем сперва прочитать"
" `эту обучающую статью "
"<https://docs.docker.com/engine/getstarted/step_one/>`_."

msgid "Launching a container"
msgstr "Запуск контейнера"

msgid ""
"If you don't have Docker installed, please follow the official "
"`installation guide "
"<https://docs.docker.com/engine/getstarted/step_one/#/step-1-get-"
"docker>`_ for your OS."
msgstr ""
"Если Docker не установлен на вашей машине, следуйте официальным "
"`инструкциям по установке "
"<https://docs.docker.com/engine/getstarted/step_one/#/step-1-get- "
"docker>`_ для вашей ОС."

msgid ""
"To start a fully functional Tarantool instance, run a container with "
"minimal options:"
msgstr ""
"Чтобы использовать полнофункциональный экземпляр Tarantool, запустите "
"контейнер с минимальными настройками:"

msgid ""
"$ docker run \\\n"
"  --name mytarantool \\\n"
"  -d -p 3301:3301 \\\n"
"  -v /data/dir/on/host:/var/lib/tarantool \\\n"
"  tarantool/tarantool:2.6.0"
msgstr ""
"$ docker run \\\n"
"  --name mytarantool \\\n"
"  -d -p 3301:3301 \\\n"
"  -v /data/dir/on/host:/var/lib/tarantool \\\n"
"  tarantool/tarantool:2.6.0"

msgid ""
"This command runs a new container named ``mytarantool``. Docker starts it"
" from an official image named ``tarantool/tarantool:2.6.0``, with "
"Tarantool version ``2.6.0`` and all external modules already installed."
msgstr ""
"Эта команда запускает новый контейнер с именем ``mytarantool``. Docker "
"запускает его из официального образа ``tarantool/tarantool:2.6.0`` с "
"предустановленным Tarantool ``2.6.0`` и всеми внешними модулями."

msgid ""
"Tarantool will be accepting incoming connections on ``localhost:3301``. "
"You may start using it as a key-value storage right away."
msgstr ""
"Tarantool будет принимать входящие подключения по адресу "
"``localhost:3301``. Можно сразу начать его использовать как key-value "
"хранилище."

msgid ""
"Tarantool :ref:`persists data <index-box_persistence>` inside the "
"container. To make your test data available after you stop the container,"
" this command also mounts the host's directory ``/data/dir/on/host`` (you"
" need to specify here an absolute path to an existing local directory) in"
" the container's directory ``/var/lib/tarantool`` (by convention, "
"Tarantool in a container uses this directory to persist data). So, all "
"changes made in the mounted directory on the container's side are applied"
" to the host's disk."
msgstr ""
"Tarantool :ref:`сохраняет данные <index-box_persistence>` внутри "
"контейнера. Чтобы ваше тестовые данные остались доступны после остановки "
"контейнера, эта команда также монтирует директорию ``/data/dir/on/host`` "
"(здесь необходимо указать абсолютный путь до существующей локальной "
"директории), расположенную на машине, в директорию ``/var/lib/tarantool``"
"  (Tarantool традиционно использует эту директорию в контейнере для "
"сохранения данных), расположенную в контейнере. Таким образом все "
"изменения в смонтированной директории, внесенные на стороне контейнера, "
"также отражаются в расположенной на пользовательском диске директории."

msgid ""
"Tarantool's database module in the container is already :doc:`configured "
"</reference/reference_lua/box_cfg>` and started. You needn't do it "
"manually, unless you use Tarantool as an :ref:`application server "
"<app_server>` and run it with an application."
msgstr ""
"Модуль Tarantool для работы с базой данных уже :doc:`настроен "
"</reference/reference_lua/box_cfg>` и запущен в контейнере. Ручная "
"настройка не требуется, если только вы не используете Tarantool как "
":ref:`сервер приложений <app_server>` и не запускаете его вместе с "
"приложением."

msgid ""
"If your container terminates soon after start, follow `this page "
"<https://stackoverflow.com/questions/64178499/tarantool-does-not-start-"
"due-to-disk-write-error>`_ for a possible solution."
msgstr ""
"Если ваш контейнер рушится вскоре после запуска, `перейдите на эту "
"страницу <https://stackoverflow.com/questions/64178499/tarantool-does-"
"not-start-due-to-disk-write-error>`_, чтобы найти возможное решение."

msgid "Attaching to Tarantool"
msgstr "Подключение к экземпляру Tarantool"

msgid "To attach to Tarantool that runs inside the container, say:"
msgstr ""
"Чтобы подключиться к запущенному в контейнере экземпляру Tarantool, "
"выполните эту команду:"

msgid "$ docker exec -i -t mytarantool console"
msgstr "$ docker exec -i -t mytarantool console"

msgid "This command:"
msgstr "Эта команда:"

msgid ""
"Instructs Tarantool to open an interactive console port for incoming "
"connections."
msgstr ""
"Дает Tarantool команду открыть порт с интерактивной консолью для входящих"
" подключений."

msgid ""
"Attaches to the Tarantool server inside the container under ``admin`` "
"user via a standard Unix socket."
msgstr ""
"Подключается через стандартный Unix-сокет к Tarantool-серверу, "
"запущенному внутри контейнера, из-под пользователя ``admin``."

msgid "Tarantool displays a prompt:"
msgstr "Tarantool показывает приглашение командной строки:"

msgid "tarantool.sock>"
msgstr "tarantool.sock>"

msgid "Now you can enter requests on the command line."
msgstr "Теперь вы можете вводить запросы в командной строке."

msgid ""
"On production machines, Tarantool's interactive mode is for system "
"administration only. But we use it for most examples in this manual, "
"because the interactive mode is convenient for learning."
msgstr ""
"На боевых серверах интерактивный режим Tarantool предназначен только для "
"системных администраторов. Мы же используем его в большинстве примеров в "
"данном руководстве, потому что интерактивный режим хорошо подходит для "
"обучения."

msgid "Creating a database"
msgstr "Создание базы данных"

msgid "While you're attached to the console, let's create a simple test database."
msgstr "Подключившись к консоли, создадим простую тестовую базу данных."

msgid "First, create the first :ref:`space <index-box_space>` (named ``tester``):"
msgstr ""
"Сначала создайте первый :ref:`спейс <index-box_space>` (с именем "
"``tester``):"

msgid "tarantool.sock> s = box.schema.space.create('tester')"
msgstr "tarantool.sock> s = box.schema.space.create('tester')"

msgid "Format the created space by specifying field names and types:"
msgstr "Форматируйте созданный спейс, указав имена и типы полей:"

msgid ""
"tarantool.sock> s:format({\n"
"              > {name = 'id', type = 'unsigned'},\n"
"              > {name = 'band_name', type = 'string'},\n"
"              > {name = 'year', type = 'unsigned'}\n"
"              > })"
msgstr ""
"tarantool.sock> s:format({\n"
"              > {name = 'id', type = 'unsigned'},\n"
"              > {name = 'band_name', type = 'string'},\n"
"              > {name = 'year', type = 'unsigned'}\n"
"              > })"

msgid "Create the first :ref:`index <index-box_index>` (named ``primary``):"
msgstr "Создайте первый :ref:`индекс <index-box_index>` (с именем ``primary``):"

msgid ""
"tarantool.sock> s:create_index('primary', {\n"
"              > type = 'hash',\n"
"              > parts = {'id'}\n"
"              > })"
msgstr ""
"tarantool.sock> s:create_index('primary', {\n"
"              > type = 'hash',\n"
"              > parts = {'id'}\n"
"              > })"

msgid "This is a primary index based on the ``id`` field of each tuple."
msgstr "Это первичный индекс по полю ``id`` в каждом кортеже."

msgid ""
"Insert three :ref:`tuples <index-box_tuple>` (our name for records) into "
"the space:"
msgstr ""
"Вставьте в созданный спейс три :ref:`кортежа <index-box_tuple>` (наш "
"термин для записей):"

msgid ""
"tarantool.sock> s:insert{1, 'Roxette', 1986}\n"
"tarantool.sock> s:insert{2, 'Scorpions', 2015}\n"
"tarantool.sock> s:insert{3, 'Ace of Base', 1993}"
msgstr ""
"tarantool.sock> s:insert{1, 'Roxette', 1986}\n"
"tarantool.sock> s:insert{2, 'Scorpions', 2015}\n"
"tarantool.sock> s:insert{3, 'Ace of Base', 1993}"

msgid "To select a tuple using the ``primary`` index, say:"
msgstr "Для выборки кортежей по первичному индексу ``primary`` выполните команду:"

msgid "tarantool.sock> s:select{3}"
msgstr "tarantool.sock> s:select{3}"

msgid "The terminal screen now looks like this:"
msgstr "Теперь вывод в окне терминала выглядит следующим образом:"

msgid ""
"tarantool.sock> s = box.schema.space.create('tester')\n"
"---\n"
"...\n"
"tarantool.sock> s:format({\n"
"              > {name = 'id', type = 'unsigned'},\n"
"              > {name = 'band_name', type = 'string'},\n"
"              > {name = 'year', type = 'unsigned'}\n"
"              > })\n"
"---\n"
"...\n"
"tarantool.sock> s:create_index('primary', {\n"
"              > type = 'hash',\n"
"              > parts = {'id'}\n"
"              > })\n"
"---\n"
"- unique: true\n"
"  parts:\n"
"  - type: unsigned\n"
"    is_nullable: false\n"
"    fieldno: 1\n"
"  id: 0\n"
"  space_id: 512\n"
"  name: primary\n"
"  type: HASH\n"
"...\n"
"tarantool.sock> s:insert{1, 'Roxette', 1986}\n"
"---\n"
"- [1, 'Roxette', 1986]\n"
"...\n"
"tarantool.sock> s:insert{2, 'Scorpions', 2015}\n"
"---\n"
"- [2, 'Scorpions', 2015]\n"
"...\n"
"tarantool.sock> s:insert{3, 'Ace of Base', 1993}\n"
"---\n"
"- [3, 'Ace of Base', 1993]\n"
"...\n"
"tarantool.sock> s:select{3}\n"
"---\n"
"- - [3, 'Ace of Base', 1993]\n"
"..."
msgstr ""
"tarantool.sock> s = box.schema.space.create('tester')\n"
"---\n"
"...\n"
"tarantool.sock> s:format({\n"
"              > {name = 'id', type = 'unsigned'},\n"
"              > {name = 'band_name', type = 'string'},\n"
"              > {name = 'year', type = 'unsigned'}\n"
"              > })\n"
"---\n"
"...\n"
"tarantool.sock> s:create_index('primary', {\n"
"              > type = 'hash',\n"
"              > parts = {'id'}\n"
"              > })\n"
"---\n"
"- unique: true\n"
"  parts:\n"
"  - type: unsigned\n"
"    is_nullable: false\n"
"    fieldno: 1\n"
"  id: 0\n"
"  space_id: 512\n"
"  name: primary\n"
"  type: HASH\n"
"...\n"
"tarantool.sock> s:insert{1, 'Roxette', 1986}\n"
"---\n"
"- [1, 'Roxette', 1986]\n"
"...\n"
"tarantool.sock> s:insert{2, 'Scorpions', 2015}\n"
"---\n"
"- [2, 'Scorpions', 2015]\n"
"...\n"
"tarantool.sock> s:insert{3, 'Ace of Base', 1993}\n"
"---\n"
"- [3, 'Ace of Base', 1993]\n"
"...\n"
"tarantool.sock> s:select{3}\n"
"---\n"
"- - [3, 'Ace of Base', 1993]\n"
"..."

msgid "To add a secondary index based on the ``band_name`` field, say:"
msgstr ""
"Для добавления вторичного индекса по полю ``band_name`` используйте эту "
"команду:"

msgid ""
"tarantool.sock> s:create_index('secondary', {\n"
"              > type = 'hash',\n"
"              > parts = {'band_name'}\n"
"              > })"
msgstr ""
"tarantool.sock> s:create_index('secondary', {\n"
"              > type = 'hash',\n"
"              > parts = {'band_name'}\n"
"              > })"

msgid "To select tuples using the ``secondary`` index, say:"
msgstr ""
"Для выборки кортежей по вторичному индексу ``secondary`` выполните "
"команду:"

msgid ""
"tarantool.sock> s.index.secondary:select{'Scorpions'}\n"
"---\n"
"- - [2, 'Scorpions', 2015]\n"
"..."
msgstr ""
"tarantool.sock> s.index.secondary:select{'Scorpions'}\n"
"---\n"
"- - [2, 'Scorpions', 2015]\n"
"..."

msgid "To drop an index, say:"
msgstr "Чтобы удалить индекс, выполните: "

msgid ""
"tarantool> s.index.secondary:drop()\n"
"---\n"
"..."
msgstr ""
"tarantool> s.index.secondary:drop()\n"
"---\n"
"..."

msgid "Stopping a container"
msgstr "Остановка контейнера"

msgid "When the testing is over, stop the container politely:"
msgstr ""
"После завершения тестирования для корректной остановки контейнера "
"выполните эту команду:"

msgid "$ docker stop mytarantool"
msgstr "$ docker stop mytarantool"

msgid ""
"This was a temporary container, and its disk/memory data were flushed "
"when you stopped it. But since you mounted a data directory from the host"
" in the container, Tarantool's data files were persisted to the host's "
"disk. Now if you start a new container and mount that data directory in "
"it, Tarantool will recover all data from disk and continue working with "
"the persisted data."
msgstr ""
"Это был временный контейнер, поэтому после остановки содержимое его "
"диска/памяти обнулилось. Но так как вы монтировали локальную директорию в"
" контейнер, все данные Tarantool сохранились на диске вашей машины. Если "
"вы запустите новый контейнер и смонтируете в него ту же директорию с "
"данными, Tarantool восстановит все данные с диска и продолжит с ними "
"работать."

msgid "Using a package manager"
msgstr "Использование менеджера пакетов"

msgid ""
"For production purposes, we recommend to install Tarantool via `official "
"package manager <http://tarantool.org/download.html>`_. You can choose "
"one of three versions: LTS, stable, or beta. An automatic build system "
"creates, tests and publishes packages for every push into a corresponding"
" branch at `Tarantool's GitHub repository "
"<https://github.com/tarantool/tarantool>`_."
msgstr ""
"Для реальных условий эксплуатации мы рекомендуем устанавливать Tarantool "
"с помощью `официального менеджера пакетов "
"<http://tarantool.org/download.html>`_. Можно выбрать одну из трех "
"версий: LTS, stable или beta. Автоматическая система сборки создает, "
"тестирует и публикует пакеты после каждого коммита в соответствующую "
"ветку `репозитория Tarantool на GitHub "
"<https://github.com/tarantool/tarantool>`_."

msgid ""
"To download and install the package that's appropriate for your OS, start"
" a shell (terminal) and enter the command-line instructions provided for "
"your OS at Tarantool's `download page "
"<http://tarantool.org/download.html>`_."
msgstr ""
"Чтобы скачать и установить подходящий пакет, откройте командную строку и "
"введите инструкции, которые даны для вашей операционной системы на "
"`странице для скачивания <http://tarantool.org/download.html>`_."

msgid "Starting Tarantool"
msgstr "Запуск экземпляра Tarantool’а"

msgid "To start working with Tarantool, run a terminal and say this:"
msgstr "Чтобы начать работу с Tarantool, выполните эту команду:"

msgid ""
"$ tarantool\n"
"$ # by doing this, you create a new Tarantool instance"
msgstr ""
"$ tarantool\n"
"$ # при этом создается новый экземпляр Tarantool"

msgid "Tarantool starts in the interactive mode and displays a prompt:"
msgstr ""
"Tarantool запускается в интерактивном режиме и показывает приглашение "
"командной строки:"

msgid "tarantool>"
msgstr "tarantool>"

msgid "Here is how to create a simple test database after installation."
msgstr ""
"Далее объясняется, как создать простую тестовую базу данных после "
"установки Tarantool."

msgid ""
"To let Tarantool store data in a separate place, create a new directory "
"dedicated for tests:"
msgstr ""
"Чтобы Tarantool хранил данные в определенном месте, создайте "
"предназначенную специально для тестов директорию:"

msgid ""
"$ mkdir ~/tarantool_sandbox\n"
"$ cd ~/tarantool_sandbox"
msgstr ""
"$ mkdir ~/tarantool_sandbox\n"
"$ cd ~/tarantool_sandbox"

msgid "You can delete the directory when the tests are over."
msgstr "Ее можно удалить после окончания тестирования."

msgid "Check if the default port the database instance will listen to is vacant."
msgstr ""
"Проверьте доступность порта, используемого по умолчанию для прослушивания"
" на экземпляре базы данных."

msgid ""
"Depending on the release, during installation Tarantool may start a "
"demonstrative global ``example.lua`` instance that listens to the "
"``3301`` port by default. The ``example.lua`` file showcases basic "
"configuration and can be found in the "
"``/etc/tarantool/instances.enabled`` or "
"``/etc/tarantool/instances.available`` directories."
msgstr ""
"В зависимости от версии, Tarantool может во время установки запустить "
"экземпляр ``example.lua``, который настроен на прослушивание по порту "
"``3301`` по умолчанию. В файле ``example.lua`` показана базовая "
"конфигурация; его можно найти в директории "
"``/etc/tarantool/instances.enabled`` или "
"``/etc/tarantool/instances.available``."

msgid ""
"However, we encourage you to perform the instance startup manually, so "
"you can learn."
msgstr ""
"Тем не менее, мы предлагаем провести установку самостоятельно с целью "
"обучения."

msgid "Make sure the default port is vacant:"
msgstr "Убедитесь, что свободен порт, используемый по умолчанию:"

msgid "To check if the demonstrative instance is running, say:"
msgstr ""
"Чтобы проверить статус работы демонстрационного экземпляра, выполните "
"команду:"

msgid ""
"$ lsof -i :3301\n"
"COMMAND    PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME\n"
"tarantool 6851 root   12u  IPv4  40827      0t0  TCP *:3301 (LISTEN)"
msgstr ""
"$ lsof -i :3301\n"
"COMMAND    PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME\n"
"tarantool 6851 root   12u  IPv4  40827      0t0  TCP *:3301 (LISTEN)"

msgid "If it does, kill the corresponding process. In this example:"
msgstr "Если он запущен, отключите соответствующий процесс. В данном примере:"

msgid "$ kill 6851"
msgstr "$ kill 6851"

msgid ""
"To start Tarantool's database module and make the instance accept TCP "
"requests on port ``3301``, say:"
msgstr ""
"Чтобы запустить модуль Tarantool для работы с базой данных и сделать так,"
" чтобы запущенный экземпляр принимал TCP-запросы на порт ``3301``, "
"выполните эту команду:"

msgid "tarantool> box.cfg{listen = 3301}"
msgstr "tarantool> box.cfg{listen = 3301}"

msgid "Create the first :ref:`space <index-box_space>` (named ``tester``):"
msgstr "Создайте первый :ref:`спейс <index-box_space>` (с именем ``tester``):"

msgid "tarantool> s = box.schema.space.create('tester')"
msgstr "tarantool> s = box.schema.space.create('tester')"

msgid ""
"tarantool> s:format({\n"
"         > {name = 'id', type = 'unsigned'},\n"
"         > {name = 'band_name', type = 'string'},\n"
"         > {name = 'year', type = 'unsigned'}\n"
"         > })"
msgstr ""
"tarantool> s:format({\n"
"         > {name = 'id', type = 'unsigned'},\n"
"         > {name = 'band_name', type = 'string'},\n"
"         > {name = 'year', type = 'unsigned'}\n"
"         > })"

msgid ""
"tarantool> s:create_index('primary', {\n"
"         > type = 'hash',\n"
"         > parts = {'id'}\n"
"         > })"
msgstr ""
"tarantool> s:create_index('primary', {\n"
"         > type = 'hash',\n"
"         > parts = {'id'}\n"
"         > })"

msgid ""
"tarantool> s:insert{1, 'Roxette', 1986}\n"
"tarantool> s:insert{2, 'Scorpions', 2015}\n"
"tarantool> s:insert{3, 'Ace of Base', 1993}"
msgstr ""
"tarantool> s:insert{1, 'Roxette', 1986}\n"
"tarantool> s:insert{2, 'Scorpions', 2015}\n"
"tarantool> s:insert{3, 'Ace of Base', 1993}"

msgid "tarantool> s:select{3}"
msgstr "tarantool> s:select{3}"

msgid ""
"tarantool> s = box.schema.space.create('tester')\n"
"---\n"
"...\n"
"tarantool> s:format({\n"
"         > {name = 'id', type = 'unsigned'},\n"
"         > {name = 'band_name', type = 'string'},\n"
"         > {name = 'year', type = 'unsigned'}\n"
"         > })\n"
"---\n"
"...\n"
"tarantool> s:create_index('primary', {\n"
"         > type = 'hash',\n"
"         > parts = {'id'}\n"
"         > })\n"
"---\n"
"- unique: true\n"
"  parts:\n"
"  - type: unsigned\n"
"    is_nullable: false\n"
"    fieldno: 1\n"
"  id: 0\n"
"  space_id: 512\n"
"  name: primary\n"
"  type: HASH\n"
"...\n"
"tarantool> s:insert{1, 'Roxette', 1986}\n"
"---\n"
"- [1, 'Roxette', 1986]\n"
"...\n"
"tarantool> s:insert{2, 'Scorpions', 2015}\n"
"---\n"
"- [2, 'Scorpions', 2015]\n"
"...\n"
"tarantool> s:insert{3, 'Ace of Base', 1993}\n"
"---\n"
"- [3, 'Ace of Base', 1993]\n"
"...\n"
"tarantool> s:select{3}\n"
"---\n"
"- - [3, 'Ace of Base', 1993]\n"
"..."
msgstr ""
"tarantool> s = box.schema.space.create('tester')\n"
"---\n"
"...\n"
"tarantool> s:format({\n"
"         > {name = 'id', type = 'unsigned'},\n"
"         > {name = 'band_name', type = 'string'},\n"
"         > {name = 'year', type = 'unsigned'}\n"
"         > })\n"
"---\n"
"...\n"
"tarantool> s:create_index('primary', {\n"
"         > type = 'hash',\n"
"         > parts = {'id'}\n"
"         > })\n"
"---\n"
"- unique: true\n"
"  parts:\n"
"  - type: unsigned\n"
"    is_nullable: false\n"
"    fieldno: 1\n"
"  id: 0\n"
"  space_id: 512\n"
"  name: primary\n"
"  type: HASH\n"
"...\n"
"tarantool> s:insert{1, 'Roxette', 1986}\n"
"---\n"
"- [1, 'Roxette', 1986]\n"
"...\n"
"tarantool> s:insert{2, 'Scorpions', 2015}\n"
"---\n"
"- [2, 'Scorpions', 2015]\n"
"...\n"
"tarantool> s:insert{3, 'Ace of Base', 1993}\n"
"---\n"
"- [3, 'Ace of Base', 1993]\n"
"...\n"
"tarantool> s:select{3}\n"
"---\n"
"- - [3, 'Ace of Base', 1993]\n"
"..."

msgid ""
"tarantool> s:create_index('secondary', {\n"
"         > type = 'hash',\n"
"         > parts = {'band_name'}\n"
"         > })"
msgstr ""
"tarantool> s:create_index('secondary', {\n"
"         > type = 'hash',\n"
"         > parts = {'band_name'}\n"
"         > })"

msgid ""
"tarantool> s.index.secondary:select{'Scorpions'}\n"
"---\n"
"- - [2, 'Scorpions', 2015]\n"
"..."
msgstr ""
"tarantool> s.index.secondary:select{'Scorpions'}\n"
"---\n"
"- - [2, 'Scorpions', 2015]\n"
"..."

msgid "Now, to prepare for the example in the next section, try this:"
msgstr ""
"Теперь, чтобы подготовиться к примеру в следующем разделе, попробуйте "
"следующее:"

msgid ""
"tarantool> box.schema.user.grant('guest', 'read,write,execute', "
"'universe')"
msgstr ""
"tarantool> box.schema.user.grant('guest', 'read,write,execute', "
"'universe')"

msgid "Connecting remotely"
msgstr "Установка удаленного подключения"

msgid ""
"In the request ``box.cfg{listen = 3301}`` that we made earlier, the "
"``listen`` value can be any form of a :ref:`URI <index-uri>` (uniform "
"resource identifier). In this case, it’s just a local port: port "
"``3301``. You can send requests to the listen URI via:"
msgstr ""
"В запросе ``box.cfg{listen = 3301}``, который мы отправили ранее, "
"параметр ``listen`` может принимать в качестве значения :ref:`URI <index-"
"uri>` (унифицированный идентификатор ресурса) любой формы. В нашем случае"
" это просто локальный порт ``3301``. Вы можете отправлять запросы на "
"указанный  URI, используя:"

msgid "``telnet``,"
msgstr "``telnet``,"

msgid "a :ref:`connector <index-box_connectors>`,"
msgstr ":ref:`коннектор <index-box_connectors>`,"

msgid ""
"another instance of Tarantool (using the :ref:`console <console-module>` "
"module), or"
msgstr ""
"другой экземпляр Tarantool (с помощью модуля :ref:`console <console-"
"module>`),"

msgid ":ref:`tarantoolctl <tarantoolctl>` administrative utility."
msgstr "административную утилиту :ref:`tarantoolctl <tarantoolctl>`."

msgid "Let’s try (3)."
msgstr "Давайте попробуем (3) способ."

msgid ""
"Switch to another terminal. On Linux, for example, this means starting "
"another instance of a Bash shell. You can switch to any working directory"
" in the new terminal, not necessarily to ``~/tarantool_sandbox``."
msgstr ""
"Переключитесь на другой терминал. Например, в Linux-системе для этого "
"нужно запустить еще один экземпляр Bash. В новом терминале можно сменить "
"текущую рабочую директорию на любую другую, необязательно использовать "
"``~/tarantool_sandbox``."

msgid "Start another instance of ``tarantool``:"
msgstr "Запустите еще один экземпляр ``tarantool``:"

msgid "$ tarantool"
msgstr "$ tarantool"

msgid ""
"Use ``net.box`` to connect to the Tarantool instance that’s listening on "
"``localhost:3301``\":"
msgstr ""
"Используйте ``net.box``, чтобы подключиться к экземпляру Tarantool, "
"который слушает по адресу ``localhost:3301``\":"

msgid ""
"tarantool> net_box = require('net.box')\n"
"---\n"
"...\n"
"tarantool> net_box.connect(3301)\n"
"---\n"
"..."
msgstr ""
"tarantool> net_box = require('net.box')\n"
"---\n"
"...\n"
"tarantool> net_box.connect(3301)\n"
"---\n"
"..."

msgid "Try this request:"
msgstr "Введите следующий запрос:"

msgid "tarantool> conn.space.tester:select{2}"
msgstr "tarantool> conn.space.tester:select{2}"

msgid ""
"This means \"send a request to that Tarantool instance, and display the "
"result\". It is equivalent to the local request "
"``box.space.tester:select{2}``. The result in this case is one of the "
"tuples that was inserted earlier. Your terminal screen should now look "
"like this:"
msgstr ""
"Это означает \"отправить запрос тому экземпляру Tarantool и вывести "
"результат на экран\". Сам запрос аналогичен запросу "
"``box.space.tester:select{2}`` к локальному экземпляру. Результатом в "
"данном случае будет один из кортежей, что вы вставляли ранее. В окне "
"терминала теперь должно отображаться примерно следующее:"

msgid ""
"$ tarantool\n"
"\n"
"Tarantool 2.6.1-32-g53dbba7c2\n"
"type 'help' for interactive help\n"
"tarantool> net_box = require('net.box')\n"
"---\n"
"...\n"
"tarantool> conn = net_box.connect(3301)\n"
"---\n"
"...\n"
"tarantool> conn.space.tester:select{2}\n"
"---\n"
"- - [2, 'Scorpions', 2015]\n"
"..."
msgstr ""
"$ tarantool\n"
"\n"
"Tarantool 2.6.1-32-g53dbba7c2\n"
"type 'help' for interactive help\n"
"tarantool> net_box = require('net.box')\n"
"---\n"
"...\n"
"tarantool> conn = net_box.connect(3301)\n"
"---\n"
"...\n"
"tarantool> conn.space.tester:select{2}\n"
"---\n"
"- - [2, 'Scorpions', 2015]\n"
"..."

msgid ""
"You can repeat ``box.space...:insert{}`` and ``box.space...:select{}`` "
"(or ``conn.space...:insert{}`` and ``conn.space...:select{}``) "
"indefinitely, on either Tarantool instance."
msgstr ""
"Можно посылать запросы ``box.space...:insert{}`` and "
"``box.space...:select{}`` (или же ``conn.space...:insert{}`` и "
"``conn.space...:select{}``) неограниченное количество раз на любом из "
"двух запущенных экземпляров Tarantool."

msgid "When the testing is over:"
msgstr "Закончив тестирование, выполните следующие шаги:"

msgid "To drop the space: ``s:drop()``"
msgstr "Для удаления спейса: ``s:drop()``"

msgid "To stop ``tarantool``: Ctrl+C or Ctrl+D"
msgstr "Для остановки ``tarantool``: Ctrl+C или Ctrl+D"

msgid ""
"To stop Tarantool (an alternative): the standard Lua function `os.exit() "
"<http://www.lua.org/manual/5.1/manual.html#pdf-os.exit>`_"
msgstr ""
"Чтобы остановить Tarantool (другой способ): стандартная Lua-функция "
"`os.exit() <http://www.lua.org/manual/5.1/manual.html#pdf-os.exit>`_"

msgid "To stop Tarantool (from another terminal): ``sudo pkill -f tarantool``"
msgstr ""
"Для остановки Tarantool (из другого терминала): ``sudo pkill -f "
"tarantool``"

msgid "To destroy the test: ``rm -r ~/tarantool_sandbox``"
msgstr "Для удаления директории-песочницы: ``rm -r ~/tarantool_sandbox``"
