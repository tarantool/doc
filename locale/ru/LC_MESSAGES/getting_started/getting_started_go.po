
msgid "Connecting from Go"
msgstr "Подключение из Go"

msgid "Pre-requisites"
msgstr "Подготовка"

msgid "Before we proceed:"
msgstr "Перед тем как идти дальше, выполним следующие действия:"

msgid ""
"`Install <https://github.com/tarantool/go-tarantool#installation>`__ the "
"``go-tarantool`` library."
msgstr ""
"`Установим <https://github.com/tarantool/go-tarantool#installation>`__ "
"библиотеку ``go-tarantool``."

msgid ""
":ref:`Start <getting_started_db>` Tarantool (locally or in Docker) and make "
"sure that you have created and populated a database as we suggested "
":ref:`earlier <creating-db-locally>`:"
msgstr ""
":ref:`Запустим <getting_started_db>` Tarantool (локально или в Docker) и "
"обязательно создадим базу данных с тестовыми данными, как показано в "
":ref:`предыдущем разделе <creating-db-locally>`:"

msgid ""
"box.cfg{listen = 3301}\n"
"s = box.schema.space.create('tester')\n"
"s:format({\n"
"         {name = 'id', type = 'unsigned'},\n"
"         {name = 'band_name', type = 'string'},\n"
"         {name = 'year', type = 'unsigned'}\n"
"         })\n"
"s:create_index('primary', {\n"
"         type = 'hash',\n"
"         parts = {'id'}\n"
"         })\n"
"s:create_index('secondary', {\n"
"         type = 'hash',\n"
"         parts = {'band_name'}\n"
"         })\n"
"s:insert{1, 'Roxette', 1986}\n"
"s:insert{2, 'Scorpions', 2015}\n"
"s:insert{3, 'Ace of Base', 1993}"
msgstr ""
"box.cfg{listen = 3301}\n"
"s = box.schema.space.create('tester')\n"
"s:format({\n"
"         {name = 'id', type = 'unsigned'},\n"
"         {name = 'band_name', type = 'string'},\n"
"         {name = 'year', type = 'unsigned'}\n"
"         })\n"
"s:create_index('primary', {\n"
"         type = 'hash',\n"
"         parts = {'id'}\n"
"         })\n"
"s:create_index('secondary', {\n"
"         type = 'hash',\n"
"         parts = {'band_name'}\n"
"         })\n"
"s:insert{1, 'Roxette', 1986}\n"
"s:insert{2, 'Scorpions', 2015}\n"
"s:insert{3, 'Ace of Base', 1993}"

msgid ""
"Please do not close the terminal window where Tarantool is running -- you'll"
" need it soon."
msgstr ""
"Не закрывайте окно терминала с запущенным Tarantool -- оно пригодится нам "
"позднее."

msgid ""
"In order to connect to Tarantool as an administrator, reset the password for"
" the ``admin`` user:"
msgstr ""
"Чтобы иметь возможность подключаться к Tarantool в качестве администратора, "
"сменим пароль пользователя ``admin``:"

msgid "box.schema.user.passwd('pass')"
msgstr "box.schema.user.passwd('pass')"

msgid "Connecting to Tarantool"
msgstr "Подключение к Tarantool"

msgid "To get connected to the Tarantool server, write a simple Go program:"
msgstr ""
"Простая программа, выполняющая подключение к серверу, будет выглядеть так:"

msgid ""
"package main\n"
"\n"
"import (\n"
"    \"fmt\"\n"
"\n"
"    \"github.com/tarantool/go-tarantool\"\n"
")\n"
"\n"
"func main() {\n"
"\n"
"    conn, err := tarantool.Connect(\"127.0.0.1:3301\", tarantool.Opts{\n"
"            User: \"admin\",\n"
"            Pass: \"pass\",\n"
"    })\n"
"\n"
"    if err != nil {\n"
"            log.Fatalf(\"Connection refused\")\n"
"    }\n"
"\n"
"    defer conn.Close()\n"
"\n"
"    // Your logic for interacting with the database\n"
"}"
msgstr ""
"package main\n"
"\n"
"import (\n"
"    \"fmt\"\n"
"\n"
"    \"github.com/tarantool/go-tarantool\"\n"
")\n"
"\n"
"func main() {\n"
"\n"
"    conn, err := tarantool.Connect(\"127.0.0.1:3301\", tarantool.Opts{\n"
"            User: \"admin\",\n"
"            Pass: \"pass\",\n"
"    })\n"
"\n"
"    if err != nil {\n"
"            log.Fatalf(\"Connection refused\")\n"
"    }\n"
"\n"
"    defer conn.Close()\n"
"\n"
"    // Ваш код общения с базой\n"
"\n"
"}"

msgid "The default user is ``guest``."
msgstr "По умолчанию используется пользователь ``guest``."

msgid "Manipulating the data"
msgstr "Работа с данными"

msgid "Inserting data"
msgstr "Вставка данных"

msgid "To insert a :term:`tuple` into a :term:`space`, use ``Insert``:"
msgstr ""
"Для вставки нового :term:`кортежа` в :term:`спейс` воспользуйтесь функцией "
"``Insert``:"

msgid "resp, err = conn.Insert(\"tester\", []interface{}{4, \"ABBA\", 1972})"
msgstr "resp, err = conn.Insert(\"tester\", []interface{}{4, \"ABBA\", 1972})"

msgid ""
"This inserts the tuple ``(4, \"ABBA\", 1972)`` into a space named "
"``tester``."
msgstr ""
"В этом примере в спейс ``tester`` вставляется кортеж ``(4, \"ABBA\", "
"1972)``."

msgid ""
"The response code and data are available in the `tarantool.Response "
"<https://github.com/tarantool/go-tarantool#usage>`_ structure:"
msgstr ""
"Код ответа и данные можно получить из структуры `tarantool.Response "
"<https://github.com/tarantool/go-tarantool#usage>`_:"

msgid ""
"code := resp.Code\n"
"data := resp.Data"
msgstr ""
"code := resp.Code\n"
"data := resp.Data"

msgid "Querying data"
msgstr "Получение данных"

msgid ""
"To select a tuple from a space, use `Select "
"<https://github.com/tarantool/go-tarantool#api-reference>`_:"
msgstr ""
"Чтобы выбрать кортеж из спейса, воспользуемся функцией `Select "
"<https://github.com/tarantool/go-tarantool#api-reference>`_:"

msgid ""
"resp, err = conn.Select(\"tester\", \"primary\", 0, 1, tarantool.IterEq, "
"[]interface{}{4})"
msgstr ""
"resp, err = conn.Select(\"tester\", \"primary\", 0, 1, tarantool.IterEq, "
"[]interface{}{4})"

msgid ""
"This selects a tuple by the primary key with ``offset = 0`` and ``limit = "
"1`` from a space named ``tester`` (in our example, this is the index named "
"``primary``, based on the ``id`` field of each tuple)."
msgstr ""
"В этом примере выполняется поиск кортежа по первичному ключу с ``offset = "
"0`` и ``limit = 1`` в спейсе ``tester`` (первичный индекс в нашем примере --"
" это индекс ``primary``, построенный по полю ``id`` в каждом кортеже)."

msgid "Next, select tuples by a secondary key."
msgstr "Теперь поищем по вторичному ключу:"

msgid ""
"resp, err = conn.Select(\"tester\", \"secondary\", 0, 1, tarantool.IterEq, "
"[]interface{}{\"ABBA\"})"
msgstr ""
"resp, err = conn.Select(\"tester\", \"secondary\", 0, 1, tarantool.IterEq, "
"[]interface{}{\"ABBA\"})"

msgid ""
"Finally, it would be nice to select all the tuples in a space. But there is "
"no one-liner for this in Go; you would need a script like :ref:`this one "
"<cookbook-select-all-go>`."
msgstr ""
"Наконец, было бы интересно сделать полную выборку даных из спейса. Но в "
"рамках языка Go эта задача не решается в одну строчку. :ref:`Пример "
"<cookbook-select-all-go>` такой программы вы можете посмотреть в отдельном "
"разделе документации."

msgid "For more examples, see https://github.com/tarantool/go-tarantool#usage"
msgstr ""
"Более сложные примеры выборок можно увидеть тут: "
"https://github.com/tarantool/go-tarantool#usage"

msgid "Updating data"
msgstr "Обновление данных"

msgid "Update a :term:`field` value using ``Update``:"
msgstr "Обновим значение :term:`поля` с помощью ``Update``:"

msgid ""
"resp, err = conn.Update(\"tester\", \"primary\", []interface{}{4}, "
"[]interface{}{[]interface{}{\"+\", 2, 3}})"
msgstr ""
"resp, err = conn.Update(\"tester\", \"primary\", []interface{}{4}, "
"[]interface{}{[]interface{}{\"+\", 2, 3}})"

msgid ""
"This increases by 3 the value of field ``2`` in the tuple with ``id = 4``. "
"If a tuple with this ``id`` doesn't exist, Tarantool will return an error."
msgstr ""
"Здесь значение поля ``2`` для кортежа с ``id = 4`` мы увеличиваем на 3. Если"
" кортежа с таким ``id`` нет, то Tarantool вернет ошибку."

msgid ""
"Now use ``Replace`` to totally replace the tuple that matches the primary "
"key. If a tuple with this primary key doesn't exist, Tarantool will do "
"nothing."
msgstr ""
"Теперь с помощью функции ``Replace`` мы полностью заменим кортеж с "
"совпадающим первичным ключом. Если кортежа с указанным первичным ключом не "
"существует, то эта операция ни к чему не приведет."

msgid "resp, err = conn.Replace(\"tester\", []interface{}{4, \"New band\", 2011})"
msgstr "resp, err = conn.Replace(\"tester\", []interface{}{4, \"New band\", 2011})"

msgid ""
"You can also update the data using ``Upsert`` that works similarly to "
"``Update``, but creates a new tuple if the old one was not found."
msgstr ""
"Также мы можем обновлять данные с помощью функции ``Upsert``, которая "
"работает аналогично ``Update``, но создает новый кортеж, если старый не был "
"найден."

msgid ""
"resp, err = conn.Upsert(\"tester\", []interface{}{4, \"Another band\", "
"2000}, []interface{}{[]interface{}{\"+\", 2, 5}})"
msgstr ""
"resp, err = conn.Upsert(\"tester\", []interface{}{4, \"Another band\", "
"2000}, []interface{}{[]interface{}{\"+\", 2, 5}})"

msgid ""
"This increases by 5 the value of the third field in the tuple with ``id = "
"4``, or inserts the tuple ``(4, \"Another band\", 2000)`` if a tuple with "
"this ``id`` doesn't exist."
msgstr ""
"Здесь значение третьего поля в кортеже с ``id = 4`` мы увеличиваем на 5, — "
"или же вставляем кортеж ``(4, \"Another band\", 2000)``, если такого нет."

msgid "Deleting data"
msgstr "Удаление данных"

msgid "To delete a tuple, use ``сonnection.Delete``:"
msgstr "Чтобы удалить кортеж, воспользуемся функцией ``сonnection.Delete``:"

msgid "resp, err = conn.Delete(\"tester\", \"primary\", []interface{}{4})"
msgstr "resp, err = conn.Delete(\"tester\", \"primary\", []interface{}{4})"

msgid ""
"To delete all tuples in a space (or to delete an entire space), use "
"``Call``. We'll focus on this function in more detail in the :ref:`next "
"<getting_started-go-stored-procs>` section."
msgstr ""
"Для удаления всех кортежей в спейсе (или всего спейса целиком), нужно "
"воспользоваться функцией ``Call``. Мы поговорим о ней подробнее в "
":ref:`следующем разделе <getting_started-go-stored-procs>`."

msgid "To delete all tuples in a space, call ``space:truncate``:"
msgstr ""
"Чтобы удалить все кортежи в спейсе, нужно вызвать функцию "
"``space:truncate``:"

msgid "resp, err = conn.Call(\"box.space.tester:truncate\", []interface{}{})"
msgstr "resp, err = conn.Call(\"box.space.tester:truncate\", []interface{}{})"

msgid ""
"To delete an entire space, call ``space:drop``. This requires connecting to "
"Tarantool as the ``admin`` user:"
msgstr ""
"Чтобы удалить весь спейс, нужно вызвать функцию ``space:drop``. Для "
"выполнения следующей команды необходимо подключиться из-под пользователя "
"``admin``:"

msgid "resp, err = conn.Call(\"box.space.tester:drop\", []interface{}{})"
msgstr "resp, err = conn.Call(\"box.space.tester:drop\", []interface{}{})"

msgid "Executing stored procedures"
msgstr "Исполнение хранимых процедур"

msgid "Switch to the terminal window where Tarantool is running."
msgstr "Перейдем в терминал с запущенным Tarantool."

msgid ""
"If you don't have a terminal window with remote connection to Tarantool, "
"check out these guides:"
msgstr ""
"О том, как установить удаленное подключение к Tarantool, можно прочитать "
"здесь:"

msgid ":ref:`connecting to a local Tarantool instance <connecting-remotely>`"
msgstr ""
":ref:`как подключиться к Tarantool, запущенному локально <connecting-"
"remotely>`"

msgid ""
":ref:`attaching to a Tarantool instance that runs in a Docker container "
"<getting_started-docker-attaching>`"
msgstr ""
":ref:`как подключиться к Tarantool, запущенному в Docker-контейнере "
"<getting_started-docker-attaching>`"

msgid "Define a simple Lua function:"
msgstr "Напишем простую функцию на Lua:"

msgid ""
"function sum(a, b)\n"
"    return a + b\n"
"end"
msgstr ""
"function sum(a, b)\n"
"    return a + b\n"
"end"

msgid ""
"Now we have a Lua function defined in Tarantool. To invoke this function "
"from ``go``, use ``Call``:"
msgstr ""
"Итак, теперь у нас есть функция, описанная в Tarantool. Чтобы вызвать ее из "
"``go``, нам нужна функция ``Call``:"

msgid "resp, err = conn.Call(\"sum\", []interface{}{2, 3})"
msgstr "resp, err = conn.Call(\"sum\", []interface{}{2, 3})"

msgid "To send bare Lua code for execution, use ``Eval``:"
msgstr ""
"Также мы можем передать на выполнение любой Lua-код. Для этого воспользуемся"
" функцией ``Eval``:"

msgid "resp, err = connection.Eval(\"return 4 + 5\", []interface{}{})"
msgstr "resp, err = connection.Eval(\"return 4 + 5\", []interface{}{})"

msgid "Feature comparison"
msgstr "Сравнение функций"

msgid ""
"There are two more connectors from the open-source community available: "
"`viciious/go-tarantool <https://github.com/viciious/go-tarantool>`_ and "
"`FZambia/tarantool <https://github.com/FZambia/tarantool>`_."
msgstr ""
"Есть еще два доступных коннектора от опенсорс-сообщества: `viciious/go-"
"tarantool <https://github.com/viciious/go-tarantool>`_ и `FZambia/tarantool "
"<https://github.com/FZambia/tarantool>`_."

msgid "Last update: January 2022"
msgstr "Последнее обновление: январь 2022"

msgid "`tarantool/go-tarantool <https://github.com/tarantool/go-tarantool>`_"
msgstr "`tarantool/go-tarantool <https://github.com/tarantool/go-tarantool>`_"

msgid "`viciious/go-tarantool <https://github.com/viciious/go-tarantool>`_"
msgstr "`viciious/go-tarantool <https://github.com/viciious/go-tarantool>`_"

msgid "`FZambia/tarantool <https://github.com/FZambia/tarantool>`_"
msgstr "`FZambia/tarantool <https://github.com/FZambia/tarantool>`_"

msgid "License"
msgstr "Лицензия"

msgid "BSD 2-Clause"
msgstr "BSD 2-Clause"

msgid "MIT"
msgstr "MIT"

msgid "Last update"
msgstr "Последнее обновление"

msgid "2022"
msgstr "2022"

msgid "2021"
msgstr "2021"

msgid "Documentation"
msgstr "Документация"

msgid "README with examples, API described in code comments"
msgstr "README с примерами, описание API в комментариях к коду"

msgid "README with examples, code comments"
msgstr "README с примерами, комментарии к коду"

msgid "README with examples"
msgstr "README с примерами"

msgid "Testing / CI / CD"
msgstr "Тестирование / CI / CD"

msgid "GitHub Actions"
msgstr "GitHub Actions"

msgid "Travis CI"
msgstr "Travis CI"

msgid "GitHub Stars"
msgstr "GitHub-звезды"

msgid "127"
msgstr "127"

msgid "43"
msgstr "43"

msgid "12"
msgstr "12"

msgid "Static analysis"
msgstr "Статический анализ"

msgid "No"
msgstr "Нет"

msgid "golint"
msgstr "golint"

msgid "golangci-lint"
msgstr "golangci-lint"

msgid "Packaging"
msgstr "Способ упаковки"

msgid "go get"
msgstr "go get"

msgid "Code coverage"
msgstr "Покрытие кода"

msgid "msgpack driver"
msgstr "Драйвер msgpack"

msgid ""
"`vmihailenco/msgpack/v2 <https://github.com/vmihailenco/msgpack/tree/v2>`_ "
"(`#124 <https://github.com/tarantool/go-tarantool/issues/124>`_)"
msgstr ""
"`vmihailenco/msgpack/v2 <https://github.com/vmihailenco/msgpack/tree/v2>`_ "
"(`#124 <https://github.com/tarantool/go-tarantool/issues/124>`_)"

msgid "`tinylib/msgp <https://github.com/tinylib/msgp>`_"
msgstr "`tinylib/msgp <https://github.com/tinylib/msgp>`_"

msgid ""
"`vmihailenco/msgpack/v5 <https://github.com/vmihailenco/msgpack/tree/v5>`_"
msgstr ""
"`vmihailenco/msgpack/v5 <https://github.com/vmihailenco/msgpack/tree/v5>`_"

msgid "Async work"
msgstr "Асинхронная работа"

msgid "Yes"
msgstr "Есть"

msgid "Schema reload"
msgstr "Обновление схемы"

msgid "Yes (manual pull)"
msgstr "Есть (запускается вручную)"

msgid "Space / index names"
msgstr "Имена спейсов/индексов"

msgid "Tuples as structures"
msgstr "Кортежи как структуры"

msgid "Yes (structure and marshall functions must be predefined in Go code)"
msgstr ""
"Есть (структура и функции маршалинга должны быть предопределены в коде Go)"

msgid "Access tuple fields by names"
msgstr "Доступ к полям кортежей по именам"

msgid "Only if marshalled to structure"
msgstr "Только при маршалинге в структуру"

msgid ""
"`SQL <https://www.tarantool.io/en/doc/latest/reference/reference_sql/>`_ "
"support"
msgstr ""
"Поддержка `SQL "
"<https://www.tarantool.io/en/doc/latest/reference/reference_sql/>`_"

msgid "No (`#62 <https://github.com/tarantool/go-tarantool/issues/62>`_)"
msgstr "Нет (`#62 <https://github.com/tarantool/go-tarantool/issues/62>`_)"

msgid ""
"No (`#18 <https://github.com/viciious/go-tarantool/issues/18>`_, closed)"
msgstr ""
"Нет (`#18 <https://github.com/viciious/go-tarantool/issues/18>`_, тикет "
"закрыт)"

msgid ""
"`Interactive transactions "
"<https://www.tarantool.io/en/doc/latest/book/box/stream/>`_"
msgstr ""
"`Интерактивные транзакции "
"<https://www.tarantool.io/en/doc/latest/book/box/stream/>`_"

msgid "No (`#101 <https://github.com/tarantool/go-tarantool/issues/101>`_)"
msgstr "Нет (`#101 <https://github.com/tarantool/go-tarantool/issues/101>`_)"

msgid ""
"`Varbinary <https://www.tarantool.io/en/doc/latest/book/box/data_model/>`_ "
"support"
msgstr ""
"Поддержка `varbinary "
"<https://www.tarantool.io/en/doc/latest/book/box/data_model/>`_"

msgid "Yes (with in-built language tools)"
msgstr "Есть (встроенными инструментами языка)"

msgid ""
"Yes (decodes to string by default, see `#6 "
"<https://github.com/FZambia/tarantool/issues/6>`_)"
msgstr ""
"Есть (декодирование в строку по умолчанию, см. `#6 "
"<https://github.com/FZambia/tarantool/issues/6>`_)"

msgid ""
"`UUID <https://www.tarantool.io/en/doc/latest/book/box/data_model/>`_ "
"support"
msgstr ""
"Поддержка `UUID "
"<https://www.tarantool.io/en/doc/latest/book/box/data_model/>`_"

msgid "Decimal support"
msgstr "Поддержка decimal"

msgid "No (`#96 <https://github.com/tarantool/go-tarantool/issues/96>`_)"
msgstr "Нет (`#96 <https://github.com/tarantool/go-tarantool/issues/96>`_)"

msgid ""
"`EXT_ERROR "
"<https://www.tarantool.io/ru/doc/latest/dev_guide/internals/msgpack_extensions/#the-"
"error-type>`_ support"
msgstr ""
"Поддержка `EXT_ERROR "
"<https://www.tarantool.io/ru/doc/latest/dev_guide/internals/msgpack_extensions/#the-"
"error-type>`_"

msgid ""
"`Datetime <https://github.com/tarantool/tarantool/discussions/6244>`_ "
"support"
msgstr ""
"Поддержка `datetime "
"<https://github.com/tarantool/tarantool/discussions/6244>`_"

msgid "No (`#118 <https://github.com/tarantool/go-tarantool/issues/118>`_)"
msgstr "Нет (`#118 <https://github.com/tarantool/go-tarantool/issues/118>`_)"

msgid ""
"`box.session.push() responses "
"<https://www.tarantool.io/ru/doc/latest/reference/reference_lua/box_session/push/>`_"
msgstr ""
"`Возвращаемые значения box.session.push() "
"<https://www.tarantool.io/ru/doc/latest/reference/reference_lua/box_session/push/>`_"

msgid "No (`#67 <https://github.com/tarantool/go-tarantool/issues/67>`_)"
msgstr "Нет (`#67 <https://github.com/tarantool/go-tarantool/issues/67>`_)"

msgid "No (`#21 <https://github.com/viciious/go-tarantool/issues/21>`_)"
msgstr "Нет (`#21 <https://github.com/viciious/go-tarantool/issues/21>`_)"

msgid ""
"`Session settings "
"<https://www.tarantool.io/en/doc/latest/reference/reference_lua/box_space/_session_settings/>`_"
msgstr ""
"`Настройки сессии "
"<https://www.tarantool.io/en/doc/latest/reference/reference_lua/box_space/_session_settings/>`_"

msgid ""
"`Graceful shutdown <https://github.com/tarantool/tarantool/issues/5924>`_"
msgstr ""
"`Мягкое завершение <https://github.com/tarantool/tarantool/issues/5924>`_"

msgid ""
"`IPROTO_ID (feature discovering) "
"<https://github.com/tarantool/tarantool/issues/6253>`_"
msgstr ""
"`IPROTO_ID (обнаружение поддерживаемых функций) "
"<https://github.com/tarantool/tarantool/issues/6253>`_"

msgid "`tarantool/crud <https://github.com/tarantool/crud>`_ support"
msgstr "Поддержка `tarantool/crud <https://github.com/tarantool/crud>`_"

msgid "Connection pool"
msgstr "Пул соединений"

msgid ""
"Yes (round-robin failover, no balancing, master discovering planned in `#113"
" <https://github.com/tarantool/go-tarantool/issues/113>`_)"
msgstr ""
"Есть (циклическое восстановление после сбоев; без балансировки; обнаружение "
"мастера планируется в `#113 <https://github.com/tarantool/go-"
"tarantool/issues/113>`_)"

msgid "Implicit reconnecting strategy"
msgstr "Стратегия повторного подключения по умолчанию"

msgid ""
"Yes (see comments in `#129 <https://github.com/tarantool/go-"
"tarantool/issues/129>`_)"
msgstr ""
"Есть (см. комментарии к `#129 <https://github.com/tarantool/go-"
"tarantool/issues/129>`_)"

msgid ""
"No (handle reconnects explicitly, refer to `#11 "
"<https://github.com/viciious/go-tarantool/issues/11>`_)"
msgstr ""
"Нет (дескриптор переподключается явно, см. `#11 "
"<https://github.com/viciious/go-tarantool/issues/11>`_)"

msgid ""
"Yes (see comments in `#7 <https://github.com/FZambia/tarantool/issues/7>`_)"
msgstr ""
"Есть (см. комментарии к `#7 "
"<https://github.com/FZambia/tarantool/issues/7>`_)"

msgid "Support retrying"
msgstr "Повторная отправка запросов"

msgid "`Watchers <https://github.com/tarantool/tarantool/pull/6510>`_"
msgstr ""
"`Наблюдатели (watchers) <https://github.com/tarantool/tarantool/pull/6510>`_"

msgid "Language features"
msgstr "Возможности языка"

msgid "No  (`#48 <https://github.com/tarantool/go-tarantool/issues/48>`_)"
msgstr "Нет (`#48 <https://github.com/tarantool/go-tarantool/issues/48>`_)"

msgid "context"
msgstr "context"

msgid "Miscellaneous"
msgstr "Прочее"

msgid "Supports `tarantool/queue <https://github.com/tarantool/queue>`_ API"
msgstr "Поддержка API `tarantool/queue <https://github.com/tarantool/queue>`_"

msgid "Can mimic a Tarantool instance (also as replica)"
msgstr "Может имитировать экземпляр Tarantool (в том числе реплику)"

msgid "API is experimental and breaking changes may happen"
msgstr "API коннектора экспериментальный и может значительно измениться"
