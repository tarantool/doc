
msgid "Using a Docker image"
msgstr "Использование Docker-образа"

msgid ""
"For trial and test purposes, we recommend using `official Tarantool "
"images for Docker <https://github.com/tarantool/docker>`_. An official "
"image contains a particular Tarantool version and all popular external "
"modules for Tarantool. Everything is already installed and configured in "
"Linux. These images are the easiest way to install and use Tarantool."
msgstr ""
"Для практики и тестирования мы рекомендуем использовать `официальные "
"образы Tarantool’а для Docker <https://github.com/tarantool/docker>`_. "
"Официальный образ содержит определенную версию Tarantool’а и все "
"популярные внешние модули для Tarantool’а. Все необходимое уже "
"установлено и настроено на платформе Linux. Данные образы - это самый "
"простой способ установить и запустить Tarantool."

msgid ""
"If you're new to Docker, we recommend going over `this tutorial "
"<https://docs.docker.com/engine/getstarted/step_one/>`_ before proceeding"
" with this chapter."
msgstr ""
"Если вы никогда раньше не работали с Docker, рекомендуем сперва прочитать"
" `эту обучающую статью "
"<https://docs.docker.com/engine/getstarted/step_one/>`_."

msgid "Launching a container"
msgstr "Запуск контейнера"

msgid ""
"If you don't have Docker installed, please follow the official "
"`installation guide "
"<https://docs.docker.com/engine/getstarted/step_one/#/step-1-get-"
"docker>`_ for your OS."
msgstr ""
"Если Docker не установлен на вашей машине, следуйте официальным "
"`инструкциям по установке "
"<https://docs.docker.com/engine/getstarted/step_one/#/step-1-get- "
"docker>`_ для вашей ОС."

msgid ""
"To start a fully functional Tarantool instance, run a container with "
"minimal options:"
msgstr ""
"Для использования полнофункционального экземпляра Tarantool’а запустите "
"контейнер с минимальными настройками:"

msgid ""
"$ docker run \\\n"
"  --name mytarantool \\\n"
"  -d -p 3301:3301 \\\n"
"  -v /data/dir/on/host:/var/lib/tarantool \\\n"
"  tarantool/tarantool:2"
msgstr ""
"$ docker run \\\n"
"  --name mytarantool \\\n"
"  -d -p 3301:3301 \\\n"
"  -v /data/dir/on/host:/var/lib/tarantool \\\n"
"  tarantool/tarantool:2"

msgid ""
"This command runs a new container named ``mytarantool``. Docker starts it"
" from an official image named ``tarantool/tarantool:2``, with Tarantool "
"version ``2.2`` and all external modules already installed."
msgstr ""
"Эта команда запускает новый контейнер с именем 'mytarantool'. Docker "
"запускает его из официального образа 'tarantool/tarantool:2' с "
"предустановленным Tarantool ``2.2`` и всеми внешними модулями."

msgid ""
"Tarantool will be accepting incoming connections on ``localhost:3301``. "
"You may start using it as a key-value storage right away."
msgstr ""
"Tarantool будет принимать входящие подключения по адресу "
"``localhost:3301``. Можно сразу начать его использовать как key-value "
"хранилище."

msgid ""
"Tarantool :ref:`persists data <index-box_persistence>` inside the "
"container. To make your test data available after you stop the container,"
" this command also mounts the host's directory ``/data/dir/on/host`` (you"
" need to specify here an absolute path to an existing local directory) in"
" the container's directory ``/var/lib/tarantool`` (by convention, "
"Tarantool in a container uses this directory to persist data). So, all "
"changes made in the mounted directory on the container's side are applied"
" to the host's disk."
msgstr ""
"Tarantool :ref:`сохраняет данные <index-box_persistence>` внутри "
"контейнера. Чтобы ваше тестовые данные остались доступны после остановки "
"контейнера, эта команда также монтирует директорию ``/data/dir/on/host`` "
"(здесь необходимо указать абсолютный путь до существующей локальной "
"директории), расположенную на машине, в директорию ``/var/lib/tarantool``"
"  (Tarantool традиционно использует эту директорию в контейнере для "
"сохранения данных), расположенную в контейнере. Таким образом все "
"изменения в смонтированной директории, внесенные на стороне контейнера, "
"также отражаются в расположенной на пользовательском диске директории."

msgid ""
"Tarantool's database module in the container is already :ref:`configured "
"<box_introspection-box_cfg>` and started. You needn't do it manually, "
"unless you use Tarantool as an :ref:`application server <app_server>` and"
" run it with an application."
msgstr ""
"Модуль Tarantool для работы с базой данных уже :ref:`настроен "
"<box_introspection-box_cfg>` и запущен в контейнере. Ручная настройка не "
"требуется, если только вы не используете Tarantool как :ref:`сервер "
"приложений <app_server>` и не запускаете его вместе с приложением."

msgid "Attaching to Tarantool"
msgstr "Подключение к экземпляру Tarantool’а"

msgid "To attach to Tarantool that runs inside the container, say:"
msgstr ""
"Для подключения к запущенному в контейнере экземпляру Tarantool’а, "
"выполните эту команду:"

msgid "$ docker exec -i -t mytarantool console"
msgstr "$ docker exec -i -t mytarantool console"

msgid "This command:"
msgstr "Эта команда:"

msgid ""
"Instructs Tarantool to open an interactive console port for incoming "
"connections."
msgstr ""
"Требует от Tarantool’а открыть порт с интерактивной консолью для входящих"
"  подключений."

msgid ""
"Attaches to the Tarantool server inside the container under ``admin`` "
"user via a standard Unix socket."
msgstr ""
"Подключается через стандартный Unix-сокет к Tarantool-серверу, "
"запущенному внутри контейнера, из-под пользователя ``admin``."

msgid "Tarantool displays a prompt:"
msgstr "Tarantool показывает приглашение командной строки:"

msgid "tarantool.sock>"
msgstr "tarantool.sock>"

msgid "Now you can enter requests on the command line."
msgstr "Теперь вы можете вводить запросы в командной строке."

msgid ""
"On production machines, Tarantool's interactive mode is for system "
"administration only. But we use it for most examples in this manual, "
"because the interactive mode is convenient for learning."
msgstr ""
"На боевых серверах интерактивный режим Tarantool’а предназначен только "
"для системных администраторов. Мы же используем его в большинстве "
"примеров в данном руководстве, потому что интерактивный режим хорошо "
"подходит для обучения."

msgid "Creating a database"
msgstr "Создание базы данных"

msgid "While you're attached to the console, let's create a simple test database."
msgstr "Подключившись к консоли, давайте создадим простую тестовую базу данных."

msgid "First, create the first :ref:`space <index-box_space>` (named ``tester``):"
msgstr ""
"Сначала создайте первый :ref:`спейс <index-box_space>` (с именем "
"``tester``):"

msgid "tarantool.sock> s = box.schema.space.create('tester')"
msgstr "tarantool.sock> s = box.schema.space.create('tester')"

msgid "Format the created space by specifying field names and types:"
msgstr "Форматируйте созданный спейс, указав имена и типы полей:"

msgid ""
"tarantool.sock> s:format({\n"
"              > {name = 'id', type = 'unsigned'},\n"
"              > {name = 'band_name', type = 'string'},\n"
"              > {name = 'year', type = 'unsigned'}\n"
"              > })"
msgstr ""
"tarantool.sock> s:format({\n"
"              > {name = 'id', type = 'unsigned'},\n"
"              > {name = 'band_name', type = 'string'},\n"
"              > {name = 'year', type = 'unsigned'}\n"
"              > })"

msgid "Create the first :ref:`index <index-box_index>` (named ``primary``):"
msgstr "Создайте первый :ref:`индекс <index-box_index>` (с именем ``primary``):"

msgid ""
"tarantool.sock> s:create_index('primary', {\n"
"              > type = 'hash',\n"
"              > parts = {'id'}\n"
"              > })"
msgstr ""
"tarantool.sock> s:create_index('primary', {\n"
"              > type = 'hash',\n"
"              > parts = {'id'}\n"
"              > })"

msgid "This is a primary index based on the ``id`` field of each tuple."
msgstr "Это первичный индекс по полю ``id`` в каждом кортеже."

msgid ""
"Insert three :ref:`tuples <index-box_tuple>` (our name for records) into "
"the space:"
msgstr ""
"Вставьте в созданный спейс три :ref:`кортежа <index-box_tuple>` (наш "
"термин для записей):"

msgid ""
"tarantool.sock> s:insert{1, 'Roxette', 1986}\n"
"tarantool.sock> s:insert{2, 'Scorpions', 2015}\n"
"tarantool.sock> s:insert{3, 'Ace of Base', 1993}"
msgstr ""
"tarantool.sock> s:insert{1, 'Roxette', 1986}\n"
"tarantool.sock> s:insert{2, 'Scorpions', 2015}\n"
"tarantool.sock> s:insert{3, 'Ace of Base', 1993}"

msgid "To select a tuple using the ``primary`` index, say:"
msgstr "Для выборки кортежей по первичному индексу ``primary`` выполните команду:"

msgid "tarantool.sock> s:select{3}"
msgstr "tarantool.sock> s:select{3}"

msgid "The terminal screen now looks like this:"
msgstr "Теперь вывод в окне терминала выглядит следующим образом:"

msgid ""
"tarantool.sock> s = box.schema.space.create('tester')\n"
"---\n"
"...\n"
"tarantool.sock> s:format({\n"
"              > {name = 'id', type = 'unsigned'},\n"
"              > {name = 'band_name', type = 'string'},\n"
"              > {name = 'year', type = 'unsigned'}\n"
"              > })\n"
"---\n"
"...\n"
"tarantool.sock> s:create_index('primary', {\n"
"              > type = 'hash',\n"
"              > parts = {'id'}\n"
"              > })\n"
"---\n"
"- unique: true\n"
"  parts:\n"
"  - type: unsigned\n"
"    is_nullable: false\n"
"    fieldno: 1\n"
"  id: 0\n"
"  space_id: 512\n"
"  name: primary\n"
"  type: HASH\n"
"...\n"
"tarantool.sock> s:insert{1, 'Roxette', 1986}\n"
"---\n"
"- [1, 'Roxette', 1986]\n"
"...\n"
"tarantool.sock> s:insert{2, 'Scorpions', 2015}\n"
"---\n"
"- [2, 'Scorpions', 2015]\n"
"...\n"
"tarantool.sock> s:insert{3, 'Ace of Base', 1993}\n"
"---\n"
"- [3, 'Ace of Base', 1993]\n"
"...\n"
"tarantool.sock> s:select{3}\n"
"---\n"
"- - [3, 'Ace of Base', 1993]\n"
"..."
msgstr ""
"tarantool.sock> s = box.schema.space.create('tester')\n"
"---\n"
"...\n"
"tarantool.sock> s:format({\n"
"              > {name = 'id', type = 'unsigned'},\n"
"              > {name = 'band_name', type = 'string'},\n"
"              > {name = 'year', type = 'unsigned'}\n"
"              > })\n"
"---\n"
"...\n"
"tarantool.sock> s:create_index('primary', {\n"
"              > type = 'hash',\n"
"              > parts = {'id'}\n"
"              > })\n"
"---\n"
"- unique: true\n"
"  parts:\n"
"  - type: unsigned\n"
"    is_nullable: false\n"
"    fieldno: 1\n"
"  id: 0\n"
"  space_id: 512\n"
"  name: primary\n"
"  type: HASH\n"
"...\n"
"tarantool.sock> s:insert{1, 'Roxette', 1986}\n"
"---\n"
"- [1, 'Roxette', 1986]\n"
"...\n"
"tarantool.sock> s:insert{2, 'Scorpions', 2015}\n"
"---\n"
"- [2, 'Scorpions', 2015]\n"
"...\n"
"tarantool.sock> s:insert{3, 'Ace of Base', 1993}\n"
"---\n"
"- [3, 'Ace of Base', 1993]\n"
"...\n"
"tarantool.sock> s:select{3}\n"
"---\n"
"- - [3, 'Ace of Base', 1993]\n"
"..."

msgid "To add a secondary index based on the ``band_name`` field, say:"
msgstr ""
"Для добавления вторичного индекса по полю ``band_name`` используйте эту "
"команду:"

msgid ""
"tarantool.sock> s:create_index('secondary', {\n"
"              > type = 'hash',\n"
"              > parts = {'band_name'}\n"
"              > })"
msgstr ""
"tarantool.sock> s:create_index('secondary', {\n"
"              > type = 'hash',\n"
"              > parts = {'band_name'}\n"
"              > })"

msgid "To select tuples using the ``secondary`` index, say:"
msgstr ""
"Для выборки кортежей по вторичному индексу ``secondary`` выполните "
"команду:"

msgid ""
"tarantool.sock> s.index.secondary:select{'Scorpions'}\n"
"---\n"
"- - [2, 'Scorpions', 2015]\n"
"..."
msgstr ""
"tarantool.sock> s.index.secondary:select{'Scorpions'}\n"
"---\n"
"- - [2, 'Scorpions', 2015]\n"
"..."

msgid "To drop an index, say:"
msgstr "Чтобы удалить индекс, введите:"

msgid ""
"tarantool> s.index.secondary:drop()\n"
"---\n"
"..."
msgstr ""
"tarantool> s.index.secondary:drop()\n"
"---\n"
"..."

msgid "Stopping a container"
msgstr "Остановка контейнера"

msgid "When the testing is over, stop the container politely:"
msgstr ""
"После завершения тестирования для корректной остановки контейнера "
"выполните эту команду:"

msgid "$ docker stop mytarantool"
msgstr "$ docker stop mytarantool"

msgid ""
"This was a temporary container, and its disk/memory data were flushed "
"when you stopped it. But since you mounted a data directory from the host"
" in the container, Tarantool's data files were persisted to the host's "
"disk. Now if you start a new container and mount that data directory in "
"it, Tarantool will recover all data from disk and continue working with "
"the persisted data."
msgstr ""
"Это был временный контейнер, поэтому после остановки содержимое его "
"диска/памяти обнулилось. Но так как вы монтировали локальную директорию в"
" контейнер, все данные Tarantool сохранились на диске вашей машины. Если "
"вы запустите новый контейнер и смонтируете в него ту же директорию с "
"данными, Tarantool восстановит все данные с диска и продолжит с ними "
"работать."
