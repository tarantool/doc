msgid "Sequences"
msgstr "Последовательности"

msgid "A **sequence** is a generator of ordered integer values."
msgstr ""
"**Последовательность** -- это генератор упорядоченных значений целых чисел."

msgid ""
"As with spaces and indexes, you should specify the sequence **name** and let"
" Tarantool generate a unique numeric identifier (sequence ID)."
msgstr ""
"Как и для спейсов и индексов, для последовательности вы должны указать "
"**имя**, а Tarantool создаст уникальный для неё числовой идентификатор (\"ID"
" последовательности)."

msgid ""
"As well, you can specify several options when creating a new sequence. The "
"options determine what value will be generated whenever the sequence is "
"used."
msgstr ""
"Кроме того, можно указать несколько параметров при создании новой "
"последовательности. Параметры определяют, какое значение будет "
"генерироваться при использовании последовательности."

msgid "Options for box.schema.sequence.create()"
msgstr "Параметры для box.schema.sequence.create()"

msgid "Option name"
msgstr "Имя параметра"

msgid "Type and meaning"
msgstr "Тип и значение"

msgid "Default"
msgstr "Значение по умолчанию"

msgid "Examples"
msgstr "Примеры"

msgid "**start**"
msgstr "**start**"

msgid "Integer. The value to generate the first time a sequence is used"
msgstr ""
"Integer. Значение генерируется, когда последовательность используется "
"впервые"

msgid "1"
msgstr "1"

msgid "start=0"
msgstr "start=0"

msgid "**min**"
msgstr "**min**"

msgid "Integer. Values smaller than this cannot be generated"
msgstr "Integer. Значения, ниже указанного, генерироваться не могут"

msgid "min=-1000"
msgstr "min=-1000"

msgid "**max**"
msgstr "**max**"

msgid "Integer. Values larger than this cannot be generated"
msgstr "Integer. Значения, выше указанного, генерироваться не могут"

msgid "9223372036854775807"
msgstr "9223372036854775807"

msgid "max=0"
msgstr "max=0"

msgid "**cycle**"
msgstr "**cycle**"

msgid "Boolean. Whether to start again when values cannot be generated"
msgstr ""
"Логическое значение. Если значения не могут быть сгенерированы, начинать ли "
"заново"

msgid "false"
msgstr "false"

msgid "cycle=true"
msgstr "cycle=true"

msgid "**cache**"
msgstr "**cache**"

msgid "Integer. The number of values to store in a cache"
msgstr "Integer. Количество значений, которые будут храниться в кэше"

msgid "0"
msgstr "0"

msgid "cache=0"
msgstr "cache=0"

msgid "**step**"
msgstr "**step**"

msgid ""
"Integer. What to add to the previous generated value, when generating a new "
"value"
msgstr ""
"Integer. Что добавить к предыдущему сгенерированному значению, когда "
"генерируется новое значение"

msgid "step=-1"
msgstr "step=-1"

msgid "**if_not_exists**"
msgstr "**if_not_exists** (если отсутствует)"

msgid ""
"Boolean. If this is true and a sequence with this name exists already, "
"ignore other options and use the existing values"
msgstr ""
"Логическое значение. Если выставлено в true (истина) и существует "
"последовательность с таким именем, то игнорировать другие опции и "
"использовать текущие значения"

msgid "if_not_exists=true"
msgstr "if_not_exists=true"

msgid ""
"Once a sequence exists, it can be altered, dropped, reset, forced to "
"generate the next value, or associated with an index."
msgstr ""
"Существующую последовательность можно изменять, удалять, сбрасывать, "
"заставить сгенерировать новое значение или ассоциировать с индексом."

msgid ""
"Associating a sequence with an index"
msgstr ""
"Привязка последовательности к индексу"

msgid "For an initial example, we generate a sequence named 'S'."
msgstr ""
"Для первоначального примера сгенерируем последовательность под названием "
"'S'."

msgid ""
"tarantool> box.schema.sequence.create('S',{min=5, start=5})\n"
"---\n"
"- step: 1\n"
"  id: 5\n"
"  min: 5\n"
"  cache: 0\n"
"  uid: 1\n"
"  max: 9223372036854775807\n"
"  cycle: false\n"
"  name: S\n"
"  start: 5\n"
"..."
msgstr ""
"tarantool> box.schema.sequence.create('S',{min=5, start=5})\n"
"---\n"
"- step: 1\n"
"  id: 5\n"
"  min: 5\n"
"  cache: 0\n"
"  uid: 1\n"
"  max: 9223372036854775807\n"
"  cycle: false\n"
"  name: S\n"
"  start: 5\n"
"..."

msgid ""
"The result shows that the new sequence has all default values, except for "
"the two that were specified, ``min`` and ``start``."
msgstr ""
"В результате видим, что в новой последовательность есть все значения по "
"умолчанию, за исключением указанных ``min`` и ``start``."

msgid "Then we get the next value, with the ``next()`` function."
msgstr "Затем получаем следующее значение с помощью функции ``next()``."

msgid ""
"tarantool> box.sequence.S:next()\n"
"---\n"
"- 5\n"
"..."
msgstr ""
"tarantool> box.sequence.S:next()\n"
"---\n"
"- 5\n"
"..."

msgid ""
"The result is the same as the start value. If we called ``next()`` again, we"
" would get 6 (because the previous value plus the step value is 6), and so "
"on."
msgstr ""
"Результат точно такой же, как и начальное значение. Если мы снова вызовем "
"``next()``, то получим 6 (потому что предыдущее значение плюс значение шага "
"составит 6) и так далее."

msgid ""
"Then we create a new table and specify that its primary key should be "
"generated from the sequence."
msgstr ""
"Затем мы создаём новую таблицу и определяем, что ее первичный ключ должен "
"быть получен из последовательности."

msgid ""
"tarantool> s=box.schema.space.create('T')\n"
"---\n"
"...\n"
"tarantool> s:create_index('I',{sequence='S'})\n"
"---\n"
"- parts:\n"
"  - type: unsigned\n"
"    is_nullable: false\n"
"    fieldno: 1\n"
"  sequence_id: 1\n"
"  id: 0\n"
"  space_id: 520\n"
"  unique: true\n"
"  type: TREE\n"
"  sequence_fieldno: 1\n"
"  name: I\n"
"...\n"
"---\n"
"..."
msgstr ""
"tarantool> s=box.schema.space.create('T')\n"
"---\n"
"...\n"
"tarantool> s:create_index('I',{sequence='S'})\n"
"---\n"
"- parts:\n"
"  - type: unsigned\n"
"    is_nullable: false\n"
"    fieldno: 1\n"
"  sequence_id: 1\n"
"  id: 0\n"
"  space_id: 520\n"
"  unique: true\n"
"  type: TREE\n"
"  sequence_fieldno: 1\n"
"  name: I\n"
"...\n"
"---\n"
"..."

msgid "Then we insert a tuple without specifying a value for the primary key."
msgstr "Затем вставляем кортеж, не указывая значение первичного ключа."

msgid ""
"tarantool> box.space.T:insert{nil,'other stuff'}\n"
"---\n"
"- [6, 'other stuff']\n"
"..."
msgstr ""
"tarantool> box.space.T:insert{nil,'other stuff'}\n"
"---\n"
"- [6, 'other stuff']\n"
"..."

msgid ""
"The result is a new tuple where the first field has a value of 6. This "
"arrangement, where the system automatically generates the values for a "
"primary key, is sometimes called \"auto-incrementing\" or \"identity\"."
msgstr ""
"В результате имеем новый кортеж со значением 6 в первом поле. Такой способ "
"организации данных, когда система автоматически генерирует значения для "
"первичного ключа, иногда называется \"автоинкрементным\" (т.е. с "
"автоматическим увеличением) или \"по идентификатору\"."

msgid ""
"For syntax and implementation details, see the reference for "
":doc:`box.schema.sequence </reference/reference_lua/box_schema_sequence>`."
msgstr ""
"Для получения подробной информации о синтаксисе и методах реализации см. "
"справочник по :doc:`box.schema.sequence "
"</reference/reference_lua/box_schema_sequence>`."
