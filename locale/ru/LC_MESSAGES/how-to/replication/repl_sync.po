
msgid "Configuring synchronous replication"
msgstr "Настройка синхронной репликации"

msgid ""
"Since version :doc:`2.5.1 </release/2.5.1>`, :ref:`synchronous replication <repl_sync>` can be "
"enabled per-space by using the ``is_sync`` option:"
msgstr ""
"Начиная с версии Tarantool :doc:`2.5.1 </release/2.5.1>`, синхронную "
"репликацию можно включать для отдельных спейсов, используя параметр "
"``is_sync``:"

msgid "box.schema.create_space('test1', {is_sync = true})"
msgstr "box.schema.create_space('test1', {is_sync = true})"

msgid ""
"Any transaction doing a DML request on this space becomes synchronous. "
"Notice that DDL on this space (including truncation) is **not** synchronous."
msgstr ""
"Все транзакции, где выполняются DML-запросы к такому спейсу, становятся "
"синхронными. Обратите внимание, что транзакции, где содержатся DDL-операции,"
" в том числе запросы на очистку (truncate), синхронными **не будут**."

msgid ""
"To control the behavior of synchronous transactions, there exist global "
"``box.cfg`` :ref:`options <cfg_replication-replication_synchro_quorum>`:"
msgstr ""
"Управлять поведением синхронных транзакций можно с помощью глобальных "
":ref:`параметров <cfg_replication-replication_synchro_quorum>` ``box.cfg``:"

msgid "box.cfg{replication_synchro_quorum = <number of instances>}"
msgstr "box.cfg{replication_synchro_quorum = <количество экземпляров>}"

msgid ""
"This option tells how many replicas should confirm the receipt of a "
"synchronous transaction before it is committed. Since version :doc:`2.10.0 </release/2.10.0>`, "
"this option does not account for anonymous replicas. As a usage example, consider "
"this:"
msgstr ""
"Параметр указывает, сколько реплик должно подтвердить получение синхронной "
"транзакции, прежде чем она пройдет коммит. Начиная с версии :doc:`2.10.0 </release/2.10.0>`, "
"анонимные реплики не учитываются. Пример:"

msgid ""
"-- Instance 1\n"
"box.cfg{\n"
"    listen = 3313,\n"
"    replication_synchro_quorum = 2,\n"
"}\n"
"box.schema.user.grant('guest', 'super')\n"
"_ = box.schema.space.create('sync', {is_sync=true})\n"
"_ = _:create_index('pk')"
msgstr ""
"-- Экземпляр 1\n"
"box.cfg{\n"
"    listen = 3313,\n"
"    replication_synchro_quorum = 2,\n"
"}\n"
"box.schema.user.grant('guest', 'super')\n"
"_ = box.schema.space.create('sync', {is_sync=true})\n"
"_ = _:create_index('pk')"

msgid ""
"-- Instance 2\n"
"box.cfg{\n"
"    listen = 3314,\n"
"    replication = 'localhost:3313'\n"
"}"
msgstr ""
"-- Экземпляр 2\n"
"box.cfg{\n"
"    listen = 3314,\n"
"    replication = 'localhost:3313'\n"
"}"

msgid ""
"-- Instance 1\n"
"box.space.sync:replace{1}"
msgstr ""
"-- Экземпляр 1\n"
"box.space.sync:replace{1}"

msgid ""
"When the first instance makes ``replace()``, it won't finish until the "
"second instance confirms its receipt and successful appliance. Note that the"
" quorum is set to 2, but the transaction was still committed even though "
"there is only one replica. This is because the master instance itself also "
"participates in the quorum."
msgstr ""
"Операция ``replace()``, вызванная на первом экземпляре, не будет "
"завершена, пока второй экземпляр не подтвердит получение и успешное "
"применение транзакции. Обратите внимание, что кворум равен 2, а реплика "
"одна, но транзакция все же успешно проходит коммит. Это происходит "
"потому, что мастер также участвует в кворуме."

msgid ""
"Now, if the second instance is down, the first one won't be able to commit "
"any synchronous change."
msgstr ""
"Если второй экземпляр прекратит работу, первый не сможет выполнять коммиты "
"для синхронных изменений."

msgid ""
"-- Instance 2\n"
"Ctrl+D"
msgstr ""
"-- Экземпляр 2\n"
"Ctrl+D"

msgid ""
"-- Instance 1\n"
"tarantool> box.space.sync:replace{2}\n"
"---\n"
"- error: Quorum collection for a synchronous transaction is timed out\n"
"..."
msgstr ""
"-- Экземпляр 1\n"
"tarantool> box.space.sync:replace{2}\n"
"---\n"
"- error: Quorum collection for a synchronous transaction is timed out\n"
"..."

msgid ""
"The transaction wasn't committed because it failed to achieve the quorum in "
"the given time. The time is a second configuration option:"
msgstr ""
"Транзакция не прошла коммит, поскольку за определенное время не был набран "
"кворум. Время — ещё один параметр конфигурации:"

msgid ""
"box.cfg{replication_synchro_timeout = <number of seconds, can be float>}"
msgstr ""
"box.cfg{replication_synchro_timeout = <время в секундах; может иметь тип "
"float>}"

msgid ""
"It tells how many seconds to wait for a synchronous transaction quorum "
"replication until it is declared failed and is rolled back."
msgstr ""
"Параметр указывает, сколько секунд синхронная транзакция будет ожидать "
"репликации на кворуме. По истечении этого времени транзакция будет отменена."

msgid ""
"A successful synchronous transaction commit is persisted in the WAL as a "
"special CONFIRM record. The rollbacks are similarly persisted with a "
"ROLLBACK record."
msgstr ""
"Успешные коммиты синхронных транзакций персистентно сохраняются в журнал "
"упреждающей записи (WAL) в виде особых записей CONFIRM. Сообщения об отмене "
"транзакций сохраняются аналогичным образом в виде записей ROLLBACK."

msgid ""
"The ``timeout`` and ``quorum`` options are not used on replicas. It means if"
" the master dies, the pending synchronous transactions will be kept waiting "
"on the replicas until a new master is elected."
msgstr ""
"Параметры ``timeout`` и ``quorum`` на репликах не используются. Если мастер "
"прекратит работу, синхронные транзакции, которые находятся в обработке на "
"репликах, будут ожидать выборов нового мастера."

msgid "Tips and tricks"
msgstr "Полезные советы"

msgid ""
"If a transaction is rolled back, it does not mean the ROLLBACK message "
"reached the replicas. It still can happen that the master node suddenly "
"dies, so the transaction will be committed by the new master. Your "
"application logic should be ready for that."
msgstr ""
"Если транзакция была отменена, это не обязательно значит, что реплики "
"получили сообщение ROLLBACK. Может возникнуть ситуация, когда мастер "
"внезапно прекратит работу, а после этого коммит транзакции будет выполнен "
"новым мастером. Учитывайте это в логике вашего приложения."

msgid ""
"Synchronous transactions are better to use with full mesh. Then the replicas"
" can talk to each other in case of the master node's death and still confirm"
" some pending transactions."
msgstr ""
"Синхронные транзакции лучше всего использовать в кластерах с полноячеистой "
"топологией (full mesh). В этом случае реплики смогут общаться друг с другом "
"и подтверждать некоторые транзакции, даже если откажет мастер."
