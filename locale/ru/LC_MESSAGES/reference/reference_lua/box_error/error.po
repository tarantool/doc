
msgid "box.error()"
msgstr ""

msgid ""
"``box.error`` throws an object that has the cdata type and contain the "
"following fields:"
msgstr ""
"``box.error`` выдает объект, который относится к типу cdata и содержит "
"следующие поля:"

msgid "\"type\" (string) error's C++ class,"
msgstr "\"type\" (строка) класс ошибки C++,"

msgid "\"code\" (number) error's number,"
msgstr "\"code\" (число) номер ошибки,"

msgid "\"message\" (string) error's message,"
msgstr "\"message\" (строка) сообщение ошибки,"

msgid "\"file\" (string) Tarantool source file,"
msgstr "\"file\" (строка) исходный файл Tarantool'а,"

msgid "\"line\" (number) line number in the Tarantool source file,"
msgstr "\"line\" (число) номер строки в исходном файле Tarantool'а,"

msgid ""
"\"errno\" (number) C standard error number; this field is added only if "
"the error is a system error (for example, due to a failure in a socket or"
" file i/o)."
msgstr ""
"\"errno\" (число) стандартный номер ошибки в C; это поле добавляется "
"только в случае системной ошибки (например, по причине ошибки сокета или "
"файлового ввода-вывода)."

msgid ""
"When called with a Lua-table argument, the code and reason have any user-"
"desired values. The result will be those values."
msgstr ""
"При вызове с аргументом из Lua-таблицы значения параметров code и reason "
"будут любыми по желанию пользователя. Результатом будут эти значения."

msgid "Parameters"
msgstr "Параметры"

msgid "description of an error, defined by user"
msgstr "(строка) описание ошибки, задается пользователем"

msgid "numeric code for this error, defined by user"
msgstr "(целое число) числовой код ошибки, задается пользователем"

msgid ""
"When called without arguments, ``box.error()`` re-throws whatever the "
"last error was."
msgstr ""
"При вызове без аргументов ``box.error()`` повторно вызывает последнюю "
"ошибку."

msgid ""
"Emulate a request error, with text based on one of the pre-defined "
"Tarantool errors defined in the file `errcode.h "
"<https://github.com/tarantool/tarantool/blob/1.10/src/box/errcode.h>`_ in"
" the source tree. Lua constants which correspond to those Tarantool "
"errors are defined as members of ``box.error``, for example "
"``box.error.NO_SUCH_USER == 45``."
msgstr ""
"Моделирование ошибки запроса с текстом на основе одной из ошибок "
"Tarantool'а, заданных в файле `errcode.h "
"<https://github.com/tarantool/tarantool/blob/1.10/src/box/errcode.h>`_ в "
"исходном дереве. Lua-постоянные, которые соответствуют этим ошибкам в "
"Tarantool'е, определяются как элементы ``box.error``, например "
"``box.error.NO_SUCH_USER == 45``."

msgid "number of a pre-defined error"
msgstr "номер предварительно заданной ошибки"

msgid "part of the message which will accompany the error"
msgstr "часть сообщения, которое сопровождает ошибку"

msgid "For example:"
msgstr "Пример:"

#, python-format
msgid ""
"the ``NO_SUCH_USER`` message is \"``User '%s' is not found``\" -- it "
"includes one \"``%s``\" component which will be replaced with errtext. "
"Thus a call to ``box.error(box.error.NO_SUCH_USER, 'joe')`` or "
"``box.error(45, 'joe')`` will result in an error with the accompanying "
"message \"``User 'joe' is not found``\"."
msgstr ""
"сообщение ``NO_SUCH_USER`` = \"``User '%s' is not found``\" (пользователь"
" не найден) -- оно включает в себя компонент \"``%s``\", который будет "
"заменен значением параметра errtext. Таким образом, вызов "
"``box.error(box.error.NO_SUCH_USER, 'joe')`` или ``box.error(45, 'joe')``"
" приведет к ошибке с сообщением \"``User 'joe' is not found``\" "
"(пользователь 'joe' не найден)."

msgid "except"
msgstr "Исключение:"

msgid "whatever is specified in errcode-number."
msgstr "то, что указано в номере errcode."

msgid "**Example:**"
msgstr "**Пример:**"

msgid ""
"tarantool> box.error{code = 555, reason = 'Arbitrary message'}\n"
"---\n"
"- error: Arbitrary message\n"
"...\n"
"tarantool> box.error()\n"
"---\n"
"- error: Arbitrary message\n"
"...\n"
"tarantool> box.error(box.error.FUNCTION_ACCESS_DENIED, 'A', 'B', 'C')\n"
"---\n"
"- error: A access denied for user 'B' to function 'C'\n"
"..."
msgstr ""
