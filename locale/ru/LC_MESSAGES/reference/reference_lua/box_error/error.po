
msgid "box.error()"
msgstr ""

msgid ""
"When called without arguments, ``box.error()`` re-throws whatever the "
"last error was."
msgstr ""
"При вызове без аргументов ``box.error()`` повторно вызывает последнюю "
"ошибку."

msgid ""
"Throw an error. When called with a Lua-table argument, the code and "
"reason have any user-desired values. The result will be those values."
msgstr ""
"Выдача ошибки. При вызове с аргументом из Lua-таблицы значения параметров"
" code и reason будут любыми по желанию пользователя. Результатом будут "
"эти значения."

msgid "Parameters"
msgstr "Параметры"

msgid "description of an error, defined by user"
msgstr "(строка) описание ошибки, задается пользователем"

msgid "numeric code for this error, defined by user"
msgstr "(целое число) числовой код ошибки, задается пользователем"

msgid ""
"Throw an error. This method emulates a request error, with text based on "
"one of the pre-defined Tarantool errors defined in the file `errcode.h "
"<https://github.com/tarantool/tarantool/blob/2.1/src/box/errcode.h>`_ in "
"the source tree. Lua constants which correspond to those Tarantool errors"
" are defined as members of ``box.error``, for example "
"``box.error.NO_SUCH_USER == 45``."
msgstr ""
"Выдача ошибки. Моделирование ошибки запроса с текстом на основе одной из "
"ошибок Tarantool'а, заданных в файле `errcode.h "
"<https://github.com/tarantool/tarantool/blob/2.1/src/box/errcode.h>`_ в "
"исходном дереве. Lua-постоянные, которые соответствуют этим ошибкам в "
"Tarantool'е, определяются как элементы ``box.error``, например "
"``box.error.NO_SUCH_USER == 45``."

msgid "number of a pre-defined error"
msgstr "номер предварительно заданной ошибки"

msgid "part of the message which will accompany the error"
msgstr "часть сообщения, которое сопровождает ошибку"

msgid "For example:"
msgstr "Пример:"

#, python-format
msgid ""
"the ``NO_SUCH_USER`` message is \"``User '%s' is not found``\" -- it "
"includes one \"``%s``\" component which will be replaced with errtext. "
"Thus a call to ``box.error(box.error.NO_SUCH_USER, 'joe')`` or "
"``box.error(45, 'joe')`` will result in an error with the accompanying "
"message \"``User 'joe' is not found``\"."
msgstr ""
"сообщение ``NO_SUCH_USER`` = \"``User '%s' is not found``\" (пользователь"
" не найден) -- оно включает в себя компонент \"``%s``\", который будет "
"заменен значением параметра errtext. Таким образом, вызов "
"``box.error(box.error.NO_SUCH_USER, 'joe')`` или ``box.error(45, 'joe')``"
" приведет к ошибке с сообщением \"``User 'joe' is not found``\" "
"(пользователь 'joe' не найден)."

msgid "except"
msgstr "Исключение"

msgid "whatever is specified in errcode-number."
msgstr "то, что указано в номере errcode."

msgid "``box.error()`` accepts two sets of arguments:"
msgstr "``box.error()`` может принимать два типа аргументов:"

msgid ""
"error code and reason/errtext (``box.error{code = 555, reason = "
"'Arbitrary message'}``), or"
msgstr ""
"код ошибки и ее причину/текст (``box.error{code = 555, reason = "
"'Arbitrary message'}``),"

msgid "error object (``box.error(err)``)."
msgstr "либо объект ошибки (``box.error(err)``)."

msgid "In both cases the error is promoted as the last error."
msgstr "В обоих случаях ошибка будет записана как последняя системная ошибка."

msgid "**Example:**"
msgstr "**Пример:**"

msgid ""
"tarantool> e1 = box.error.new({code = 111, reason = 'Сause'})\n"
"---\n"
"...\n"
"tarantool> box.error(e1)\n"
"---\n"
"- error: Сause\n"
"...\n"
"tarantool> box.error{code = 555, reason = 'Arbitrary message'}\n"
"---\n"
"- error: Arbitrary message\n"
"...\n"
"tarantool> box.error()\n"
"---\n"
"- error: Arbitrary message\n"
"...\n"
"tarantool> box.error(box.error.FUNCTION_ACCESS_DENIED, 'A', 'B', 'C')\n"
"---\n"
"- error: A access denied for user 'B' to function 'C'\n"
"..."
msgstr ""
