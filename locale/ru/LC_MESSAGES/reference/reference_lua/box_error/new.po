
msgid "box.error.new()"
msgstr ""

msgid ""
"Create an error object, but not throw it as "
":doc:`/reference/reference_lua/box_error/error` does. This is useful when"
" error information should be saved for later retrieval. To set an error "
"as the last explicitly use :doc:`/reference/reference_lua/box_error/set`."
msgstr ""
"Создает объект ошибки, но не выдает ее, как это делает "
":doc:`/reference/reference_lua/box_error/error`. Это полезно, когда "
"информацию об ошибке нужно сохранить, чтобы вернуться к ней позже. Чтобы "
"явно записать ошибку как последнюю, используйте "
":doc:`/reference/reference_lua/box_error/set`."

msgid "Parameters"
msgstr "Параметры"

msgid "number of a pre-defined error"
msgstr "номер предварительно заданной ошибки"

msgid "part of the message which will accompany the error"
msgstr "часть сообщения, которое сопровождает ошибку"

msgid "**Example:**"
msgstr "**Пример:**"

msgid ""
"tarantool> e=box.error.new{code=5,reason='A',type='B'}\n"
"---\n"
"...\n"
"tarantool> e:unpack()\n"
"---\n"
"- code: 5\n"
"  base_type: CustomError\n"
"  type: B\n"
"  custom_type: B\n"
"  message: A\n"
"  trace:\n"
"  - file: '[string \"e=box.error.new{code=5,reason=''A'',type=''B''}\"]'\n"
"    line: 1\n"
"...\n"
"tarantool> box.error.last()\n"
"---\n"
"- null"
msgstr ""

msgid ""
"Beginning in version 2.4.1 there is a :ref:`session_settings <box_space-"
"session_settings>` setting which affects structure of error objects. If "
"``error_marshaling_enabled`` is changed to ``true``, then the object will"
" have the MP_EXT type and the MP_ERROR subtype. Using the :ref:`binary "
"protocol <internals-box_protocol>`, in the body of a packet that the "
"server could send in response to ``box.error.new()``, one will see: the "
"encoding of MP_EXT according to the `MessagePack specification "
"<https://github.com/msgpack/msgpack/blob/master/spec.md>`_ (usually "
"0xc7), followed by the encoding of MP_ERROR (0x03), followed by the "
"encoding of MP_ERROR_STACK (0x81), followed by all of the MP_ERROR_STACK "
"components (MP_ARRAY which contains MP_MAP which contains keys "
"MP_ERROR_MESSAGE, MP_ERROR_CODE, etc.) that are described and illustrated"
" in section :ref:`MessagePack extensions -- The ERROR type <msgpack_ext-"
"error>`. The map field for error object \"type\" will have key = "
"MP_ERROR_TYPE, the map field for error object \"code\" will have key = "
"MP_ERROR_CODE, the map field for error object \"message\" will have key ="
" MP_ERROR_MESSAGE."
msgstr ""
"Начиная с версии 2.4.1, стал доступен параметр :ref:`session_settings "
"<box_space-session_settings>`, который влияет на структуру объектов "
"ошибок. Если ``error_marshaling_enabled`` изменяется на ``true``, то "
"объект ошибки будет иметь тип ``MP_EXT`` и подтип ``MP_ERROR``. Используя"
" :ref:`бинарный протокол <internals-box_protocol>` в теле пакета, который"
" сервер может отправить в ответ на ``box.error.new()``, можно увидеть: "
"код MP_EXT по спецификации `MessagePack "
"<https://github.com/msgpack/msgpack/blob/master/spec.md>`_ (обычно 0xc7),"
" за которым следует код MP_ERROR (0x03), за которым следует код "
"MP_ERROR_STACK (0x81), после которого идут все компоненты MP_ERROR_STACK "
"(MP_ARRAY, который содержит MP_MAP, содержащий ключи MP_ERROR_MESSAGE, "
"MP_ERROR_CODE и т.д.). Эти компоненты описаны и проиллюстрированы в "
"разделе :ref:`Дополительные типы MessagePack -- Тип ERROR <msgpack_ext-"
"error>`. Поле \"type\" ассоциативного массива для объекта ошибки будет "
"иметь key = MP_ERROR_TYPE, поле \"code\" будет иметь key = MP_ERROR_CODE,"
" поле \"message\" будет иметь key = MP_ERROR_MESSAGE."
