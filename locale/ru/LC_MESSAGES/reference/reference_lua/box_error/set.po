
msgid "box.error.set()"
msgstr ""

msgid "**Since:** :doc:`2.4.1 </release/2.4.1>`"
msgstr ""

msgid ""
"Set the specified error as the last system error explicitly. This error is "
"returned by :doc:`/reference/reference_lua/box_error/last`."
msgstr ""

msgid "Parameters"
msgstr ""

msgid "an error object"
msgstr ""

#, fuzzy
msgid "**Example**"
msgstr "**Пример:**"

msgid ""
"-- Create two errors --\n"
"local error1 = box.error.new({ code = 500, reason = 'Custom error 1' })\n"
"local error2 = box.error.new({ code = 505, reason = 'Custom error 2' })\n"
"\n"
"-- Raise the first error --\n"
"box.error(error1)\n"
"--[[\n"
"---\n"
"- error: Custom error 1\n"
"...\n"
"--]]\n"
"\n"
"-- Get the last error --\n"
"box.error.last()\n"
"--[[\n"
"---\n"
"- Custom error 1\n"
"...\n"
"--]]\n"
"\n"
"-- Set the second error as the last error --\n"
"box.error.set(error2)\n"
"--[[\n"
"---\n"
"...\n"
"--]]\n"
"\n"
"-- Get the last error --\n"
"box.error.last()\n"
"--[[\n"
"---\n"
"- Custom error 2\n"
"...\n"
"--]]\n"
msgstr ""

#~ msgid ""
#~ "Since version :doc:`2.4.1 </release/2.4.1>`. Set an error as the last system"
#~ " error explicitly. Accepts an error object and makes it available via "
#~ ":doc:`/reference/reference_lua/box_error/last`."
#~ msgstr ""

#~ msgid ""
#~ "tarantool> err = box.error.new({code = 111, reason = 'cause'})\n"
#~ "---\n"
#~ "...\n"
#~ "tarantool> box.error.last()\n"
#~ "---\n"
#~ "- error: '[string \"return tarantool> box.error.last()\"]:1: attempt to compare two\n"
#~ "    nil values'\n"
#~ "...\n"
#~ "tarantool> box.error.set(err)\n"
#~ "---\n"
#~ "...\n"
#~ "tarantool> box.error.last()\n"
#~ "---\n"
#~ "- cause\n"
#~ "..."
#~ msgstr ""
