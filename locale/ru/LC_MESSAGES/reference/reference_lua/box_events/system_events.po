
msgid "System events"
msgstr ""

msgid "Since :doc:`2.10.0 </release/2.10.0>`."
msgstr ""

msgid ""
"Predefined events have a special naming schema -- theirs names always start "
"with the reserved ``box.`` prefix. It means that you cannot create new "
"events with it."
msgstr ""

msgid "The system processes the following events:"
msgstr ""

msgid "``box.id``"
msgstr ""

msgid "``box.status``"
msgstr ""

msgid "``box.election``"
msgstr ""

msgid "``box.schema``"
msgstr ""

msgid "``box.shutdown``"
msgstr ""

msgid ""
"In response to each event, the server sends back certain ``IPROTO`` fields."
msgstr ""

msgid ""
"The events are available from the beginning as non-:ref:`MP_NIL "
"<box_protocol-notation>`. If a watcher subscribes to a system event before "
"it has been broadcast, it receives an empty table for the event value."
msgstr ""

msgid ""
"The event is generated when there is a change in any of the values listed in"
" the event. For example, see the parameters in the ``box.id`` event below --"
" ``id``, ``instance_uuid``, and ``replicaset_uuid``. Suppose the ``ìd`` "
"value (``box.info.id``) has changed. This triggers the ``box.info`` event, "
"which states that the value of ``box.info.id`` has changed, while "
"``box.info.uuid`` and ``box.info.cluster.uuid`` remain the same."
msgstr ""

msgid "box.id"
msgstr ""

msgid ""
"Contains :ref:`identification <box_info_info>` of the instance. Value "
"changes are rare."
msgstr ""

msgid ""
"``id``: the numeric instance ID is unknown before the registration. For "
"anonymous replicas, the value is ``0`` until they are officially registered."
msgstr ""

msgid ""
"``instance_uuid``: the UUID of the instance never changes after the first "
":doc:`box.cfg </reference/reference_lua/box_cfg>`. The value is unknown "
"before the ``box.cfg`` call."
msgstr ""

msgid ""
"``replicaset_uuid``: the value is unknown until the instance joins a "
"replicaset or boots a new one."
msgstr ""

msgid ""
"-- box.id value\n"
"{\n"
"MP_STR “id”: MP_UINT; box.info.id,\n"
"MP_STR “instance_uuid”: MP_UUID; box.info.uuid,\n"
"MP_STR “replicaset_uuid”: MP_UUID box.info.cluster.uuid,\n"
"}"
msgstr ""

msgid "box.status"
msgstr ""

msgid "Contains generic information about the instance status."
msgstr ""

msgid ""
"``is_ro``: :ref:`indicates the read-only mode <box_introspection-box_info>` "
"or the ``orphan`` status."
msgstr ""

msgid ""
"``is_ro_cfg``: indicates the :ref:`read_only <cfg_basic-read_only>` mode for"
" the instance."
msgstr ""

msgid "``status``: shows the status of an instance."
msgstr ""

msgid ""
"{\n"
"MP_STR “is_ro”: MP_BOOL box.info.ro,\n"
"MP_STR “is_ro_cfg”: MP_BOOL box.cfg.read_only,\n"
"MP_STR “status”: MP_STR box.info.status,\n"
"}"
msgstr ""

msgid "box.election"
msgstr ""

msgid ""
"Contains fields of :doc:`box.info.election "
"</reference/reference_lua/box_info/election>` that are necessary to find out"
" the most recent writable leader."
msgstr ""

msgid "``term``: shows the current election term."
msgstr ""

msgid ""
"``role``: indicates the election state of the node -- ``leader``, "
"``follower``, or ``candidate``."
msgstr ""

msgid "``leader``: shows the leader node ID in the current term."
msgstr ""

msgid ""
"{\n"
"MP_STR “term”: MP_UINT box.info.election.term,\n"
"MP_STR “role”: MP_STR box.info.election.state,\n"
"MP_STR “is_ro”: MP_BOOL box.info.ro,\n"
"MP_STR “leader”: MP_UINT box.info.election.leader,\n"
"}"
msgstr ""

msgid "box.schema"
msgstr ""

msgid "Contains schema-related data."
msgstr ""

msgid "``version``: shows the schema version."
msgstr ""

msgid ""
"{\n"
"MP_STR “version”: MP_UINT schema_version,\n"
"}"
msgstr ""

msgid "box.shutdown"
msgstr ""

msgid ""
"Contains a boolean value which indicates whether there is an active shutdown"
" request."
msgstr ""

msgid ""
"The event is generated when the server receives a shutdown request "
"(``os.exit()`` command or :ref:`SIGTERM <admin-server_signals>` signal)."
msgstr ""

msgid ""
"The ``box.shutdown`` event is applied for the graceful shutdown protocol. It"
" is a feature which is available since :doc:`2.10.0 </release/2.10.0>`. This"
" protocol is supposed to be used with connectors to signal a client about "
"the upcoming server shutdown and close active connections without broken "
"requests. For more information, refer to the :ref:`graceful shutdown "
"protocol <box-protocol-shutdown>` section."
msgstr ""

msgid "Usage example"
msgstr ""

#, python-format
msgid ""
"local conn = net.box.connect(URI)\n"
"local log = require('log')\n"
"-- Subscribe to updates of key 'box.id'\n"
"local w = conn:watch('box.id', function(key, value)\n"
"    assert(key == 'box.id')\n"
"    log.info(\"The box.id value is '%s'\", value)\n"
"end)"
msgstr ""

msgid ""
"If you want to unregister the watcher when it's no longer needed, use the "
"following command:"
msgstr ""

msgid "w:unregister()"
msgstr ""
