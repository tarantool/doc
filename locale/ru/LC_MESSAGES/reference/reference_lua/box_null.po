# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 1.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-29 14:42+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

msgid "Constant `box.NULL`"
msgstr "Константа `box.NULL`"

msgid ""
"There are some major problems with using a Lua **nil** value in tuples. "
"For example: you can't correctly assess length of sparse array (an array "
"with nullable values set to NULL) in case of using Lua **nil** value."
msgstr ""
"Имеется целый ряд проблем при использовании значения **nil** из Lua в "
"кортежах. Например: вы не можете корректно оценить длину разреженного "
"массива (массива, содержащего элементы, не имеющие значений) в случае "
"использования значения **nil** из Lua."

msgid "**Example:**"
msgstr "**Пример:**"

msgid ""
"tarantool> t = {0, nil, 1, 2, nil}\n"
"---\n"
"...\n"
"\n"
"tarantool> t\n"
"---\n"
"- - 0\n"
"  - null\n"
"  - 1\n"
"  - 2\n"
"...\n"
"\n"
"tarantool> #t\n"
"---\n"
"- 4\n"
"..."
msgstr ""

msgid "Provided example clearly shows a problem with sparse arrays."
msgstr "Представленный пример наглядно демонстрирует проблему с разреженными"
" массивами."

msgid ""
"Trying to find length for sparse arrays in LuaJIT leads to `undefined "
"behaviour <https://www.lua.org/manual/5.2/manual.html#3.4.6>`_."
msgstr "Попытка найти длину для разреженного массива в LuaJIT приводит к"
" `неопределённому поведению <https://www.lua.org/manual/5.2/manual.html#3.4.6>`_."

msgid ""
"To overcome this and some other issues use ``box.NULL`` constant instead "
"of **nil**."
msgstr ""
"Для преодоления этой и некоторых других сложностей используйте константу "
"``box.NULL`` вместо **nil**."

msgid "Using box.NULL"
msgstr "Использование box.NULL"

msgid ""
"``box.NULL`` is a value of cdata type representing a NULL pointer. It is "
"similar to ``msgpack.NULL``, ``json.NULL`` and ``ffi.NULL``. So it is "
"some not **nil** value, even if it is a pointer to NULL."
msgstr ""
"``box.NULL`` содержит значение типа cdata представляющее собой нулевой"
" указатель (NULL pointer). Аналогично таким, как ``msgpack.NULL``, "
"``json.NULL`` и ``ffi.NULL``. "
"Таким образом, значение отличается от **nil**, даже если указывает на NULL."

msgid "Use ``box.NULL`` only with capitalized NULL (``box.null`` is incorrect)."
msgstr ""
"Используйте ``box.NULL`` только с NULL, написанным заглавными буквами "
"(``box.null`` является ошибкой)."

msgid "Technically speaking ``box.NULL`` equals to ``ffi.cast('void *', 0)``."
msgstr "Технически ``box.NULL`` соответствует ``ffi.cast('void *', 0)``."

msgid ""
"tarantool> t = {0, box.NULL, 1, 2, box.NULL}\n"
"---\n"
"...\n"
"\n"
"tarantool> t\n"
"---\n"
"- - 0\n"
"  - null\n"
"  - 1\n"
"  - 2\n"
"  - null\n"
"...\n"
"\n"
"tarantool> #t\n"
"---\n"
"- 5\n"
"..."
msgstr ""

msgid ""
"There is a possible problem induced by using ``box.NULL``. Avoid using "
"implicit comparisons with nullable values when using ``box.NULL``. Due to"
" `Lua behaviour <https://www.lua.org/manual/5.1/manual.html#2.4.4>`_ "
"returning from condition expression anything except **false** or **nil** "
"is considered as **true**. And as it was mentioned earlier ``box.NULL`` "
"is a pointer by design."
msgstr ""
"Имеется возможная проблема с использованием ``box.NULL``. Избегайте "
"использования неявных сравнений с нулабельными (nullable) значениями при "
"использовании ``box.NULL``. В связи со `штатным поведением Lua "
"<https://www.lua.org/manual/5.1/manual.html#2.4.4>`_ возвращение из "
"условного выражения чего-либо, кроме **false** (ложь) или **nil** (ничто)"
" считается возвращением **true** (истина). Как и было упомянуто "
"ранее``box.NULL`` технически является указателем."

msgid ""
"That is why expression ``box.NULL`` will always be considered true in "
"case it is used as condition in comparison. This means that code"
msgstr ""
"Поэтому, выражение ``box.NULL`` всегда будет расцениваться как истина "
"вслучае использования в качестве условия в сравнении. Это означает, что "
"код"

msgid "``if box.NULL then func() end``"
msgstr ""

msgid ""
"will always execute function ``func()`` (because condition ``box.NULL`` "
"will always be neither **false** nor **nil**)."
msgstr ""
"всегда будет выполнять функцию ``func()`` (потому что условие "
"``box.NULL`` всегда будет не **false** (ложь) и не **nil** (ничто)."

msgid "Distinction of nil and box.NULL"
msgstr "Различение nil и box.NULL"

msgid ""
"If condition expression ``x == nil`` is **true** the ``x`` could be "
"**nil** or ``box.NULL``."
msgstr "Если условие ``x == nil`` является **true** (истина), то ``x`` "
"может быть как **nil**, так и ``box.NULL``."

msgid ""
"To check whether ``x`` is a **nil** but not a ``box.NULL`` use the "
"following condition expression:"
msgstr "Для выяснения является ли ``x`` в действительности **nil**, но не "
"``box.NULL`` используйте следующее условие:"

msgid "x == nil and type(x) == 'nil'"
msgstr ""

msgid "If its **true** then the ``x`` is a **nil**, but not a ``box.NULL``."
msgstr "Если оно истинно (**true**), то ``x`` это **nil**, но не``box.NULL``"

msgid "You can use the following for ``box.NULL``:"
msgstr "Вы можете использовать следующее выражение для ``box.NULL``:"

msgid "x == nil and type(x) == 'cdata'"
msgstr ""

msgid "If the expression above is **true** then the ``x`` is a ``box.NULL``."
msgstr "Если вышеуказанное выражение истинно (**true**), то ``x`` это ``box.NULL``."

msgid ""
"By converting data to different format (JSON, YAML, msgpack) you shall "
"expect that it is possible, that **nil** in sparse arrays will be "
"converted to ``box.NULL``. And it is worth mentioning that such "
"convertation might be unexpected (for example: by sending data via "
":ref:`net.box <net_box-module>` or by obtaining data from :ref:`spaces "
"<box_space> etc.`)."
msgstr "Конвертируя данные в различные форматы (JSON, YAML, msgpack) вы должны "
"ожидать возможного преобразования всех **nil** в разреженных массивах в "
"``box.NULL``. Стоит ответить, что конвертация может происходить в неожиданных "
"местах (например: при отправке данных через :ref:`net.box <net_box-module>` "
"или при получении данных из :ref:`спэйсов <box_space> и т.п.`)."

msgid ""
"tarantool> type(({1, nil, 2})[2])\n"
"---\n"
"- nil\n"
"...\n"
"\n"
"tarantool> type(json.decode(json.encode({1, nil, 2}))[2])\n"
"---\n"
"- cdata\n"
"..."
msgstr ""

msgid ""
"You must anticipate such behaviour and use proper condition expression. "
"Use explicit comparison ``x == nil`` for checking for NULL in nullable "
"values. It will detect both **nil** and ``box.NULL``."
msgstr "Вы должны ожидать подобное поведение и использовать соответствующие "
"условия. Используйте явное сравнение ``x == nil`` для проверки на отсутствующие "
"значения (NULL) в нулабельных (nullable) значениях. Оно позволит обнаружить как "
"**nil**, так и ``box.NULL``."
