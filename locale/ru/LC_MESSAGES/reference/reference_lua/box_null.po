# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 1.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-28 14:49+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

msgid "Constant `box.NULL`"
msgstr "Константа `box.NULL`"

msgid ""
"There are some major problems with using a Lua **nil** value in tuples. "
"For example: you can't correctly assess length of sparse array (an array "
"with nullable values set to null) in case of using Lua **nil** value."
msgstr "Имеется целый ряд проблем при использовании значения **nil** из Lua в кортежах."
"Например: вы не можете корректно оценить длину разреженного массива (массива, "
"содержащего элементы, не имеющие значений) в случае использования значения "
"**nil** из Lua."

msgid "**Example:**"
msgstr "**Пример:**"

msgid ""
"tarantool> t = {0, nil, 1, 2, nil}\n"
"---\n"
"...\n"
"\n"
"tarantool> t\n"
"---\n"
"- - 0\n"
"  - null\n"
"  - 1\n"
"  - 2\n"
"...\n"
"\n"
"tarantool> #t\n"
"---\n"
"- 4\n"
"..."
msgstr ""

msgid "To overcome this and some other issues use ``box.NULL`` constant instead."
msgstr "Для преодоления этой и некоторых других сложностей используйте"
"константу ``box.NULL``."

msgid "Using box.NULL"
msgstr "Использование box.NULL"

msgid ""
"``box.NULL`` is a generic pointer to a C-like NULL. So it is some "
"not **nil** value, even if it is a pointer to NULL."
msgstr "``box.NULL`` является указателем на NULL, подобно языку C. Таким образом,"
" оно отличается от значения **nil**, даже если указывает на NULL."

msgid "Use ``box.NULL`` only with capitalized NULL (``box.null`` is incorrect)."
msgstr "Используйте ``box.NULL`` только с NULL, написанным заглавными буквами"
" (``box.null`` является ошибкой)."

msgid "Technically speaking ``box.NULL`` equals to ``ffi.cast('void *', nil)``."
msgstr "Технически ``box.NULL`` соответствует ``ffi.cast('void *', nil)``."

msgid ""
" tarantool> t = {0, box.NULL, 1, 2, box.NULL}\n"
" ---\n"
" ...\n"
"\n"
" tarantool> t\n"
" ---\n"
" - - 0\n"
" - null\n"
" - 1\n"
" - 2\n"
" - null\n"
" ...\n"
"\n"
"tarantool> #t\n"
" ---\n"
" - 5\n"
" ..."
msgstr ""

msgid ""
"There is a possible problem induced by using ``box.NULL``. Avoid using "
"implicit comparisons with nullable values when using ``box.NULL``. Due to"
" `Lua behaviour <https://www.lua.org/manual/5.1/manual.html#2.4.4>`_ "
"returning from condition expression anything except **false** or **nil** "
"is considered as **true**. And as it was mentioned earlier ``box.NULL`` "
"is a pointer by design."
msgstr "Имеется возможная проблема и с использованием ``box.NULL``."
" Избегайте использования неявных сравнений с нулабельными (nullable) значениями "
"при использовании ``box.NULL``. В связи со"
" `штатным поведением Lua <https://www.lua.org/manual/5.1/manual.html#2.4.4>`_ "
"возвращение из условного выражения чего-либо, кроме **false** (ложь) или **nil**"
" (ничто) считается возвращение **true** (истина). Как и было упомянуто ранее"
"``box.NULL`` технически является указателем."

msgid ""
"That is why expression ``box.NULL`` will always be considered true in "
"case it is used as condition in comparison. This means that code"
msgstr "Поэтому, выражение ``box.NULL`` всегда будет расцениваться как истина в"
"случае использования в качестве условия в сравнении. Это означает, что код"

msgid "``if box.NULL then func() end``"
msgstr ""

msgid ""
"will always execute function ``func()`` (as condition ``box.NULL`` will always"
" be not **false** nor **nil**)."
msgstr "всегда будет выполнять функцию ``func()`` (в качестве условия box.NULL"
"всегда будет не **false** (ложь) и не **nil** (ничто)."
