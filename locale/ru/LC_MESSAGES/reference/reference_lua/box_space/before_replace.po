
msgid "space_object:before_replace()"
msgstr ""

msgid ""
"Create a \"replace :ref:`trigger <triggers>`\". The ``trigger-function`` "
"will be executed whenever a ``replace()`` or ``insert()`` or ``update()``"
" or ``upsert()`` or ``delete()`` happens to a tuple in ``<space-name>``."
msgstr ""
"Создание \":ref:`триггера <triggers>` замены\". Функция с триггером "
"``trigger-function`` будет выполняться в случае операции ``replace()`` "
"или ``insert()``, или ``update()``, или ``upsert()``, или ``delete()`` "
"над кортежем в спейсе ``<space-name>``."

msgid "Parameters"
msgstr "Параметры"

#, fuzzy
msgid ""
"function which will become the trigger function; for the trigger "
"function's optional parameters see the description of :doc:`on_replace "
"</reference/reference_lua/box_space/on_replace>`."
msgstr ""
"функция, в которой будет триггер; необязательные параметры функции с "
"триггером см. в описании :ref:`on_replace <box_space-on_replace>`."

msgid "existing trigger function which will be replaced by ``trigger-function``"
msgstr ""

msgid "return"
msgstr "возвращает"

msgid "nil or function pointer"
msgstr "nil или указатель функции"

msgid ""
"If the parameters are ``(nil, old-trigger-function)``, then the old "
"trigger is deleted."
msgstr ""
"Если указаны параметры ``(nil, old-trigger-function)``, старый триггер "
"будет удален."

msgid ""
"If both parameters are omitted, then the response is a list of existing "
"trigger functions."
msgstr ""

msgid ""
"If it is necessary to know whether the trigger activation happened due to"
" replication or on a specific connection type, the function can refer to "
":doc:`/reference/reference_lua/box_session/type`."
msgstr ""

msgid ""
"Details about trigger characteristics are in the :ref:`triggers "
"<triggers-box_triggers>` section."
msgstr ""

msgid "See also :doc:`/reference/reference_lua/box_space/on_replace`."
msgstr ""

msgid ""
"Administrators can make replace triggers with ``on_replace()``, or make "
"triggers with ``before_replace()``. If they make both types, then all "
"``before_replace`` triggers are executed before all ``on_replace`` "
"triggers. The functions for both ``on_replace`` and ``before_replace`` "
"triggers can make changes to the database, but only the functions for "
"``before_replace`` triggers can change the tuple that is being replaced."
msgstr ""
"Администраторы могут создавать триггеры замены с условием после замены "
"``on_replace()`` или до замены ``before_replace()``. Если созданы оба "
"типа, то все триггеры до замены ``before_replace`` выполняются до всех "
"триггеров после замены ``on_replace``. Функции для обоих типов триггеров "
"``on_replace`` и ``before_replace`` могут вносить изменения в базу "
"данных, но только функции с триггерами до замены ``before_replace`` могут"
" изменять кортеж, который будет заменен."

msgid ""
"Since a ``before_replace`` trigger function has the extra capability of "
"making a change to the old tuple, it also can have extra overhead, to "
"fetch the old tuple before making the change. Therefore an ``on_replace``"
" trigger is better if there is no need to change the old tuple. However, "
"this only applies for the memtx engine -- for the vinyl engine, the fetch"
" will happen for either kind of trigger. (With memtx the tuple data is "
"stored along with the index key so no extra search is necessary; with "
"vinyl that is not the case so the extra search is necessary.)"
msgstr ""
"Поскольку функция с триггером до замены ``before_replace`` может вносить "
"дополнительные изменения в старый кортеж, для нее также потребуются "
"дополнительные ресурсы для вызова старого кортежа до внесения изменений. "
"Таким образом, лучше использовать триггер после замены ``on_replace``, "
"если нет необходимости изменять старый кортеж. Тем не менее, это "
"применимо только к движку memtx -- что касается движка vinyl, такой вызов"
" произойдет для любого типа триггера. (В memtx'е данные кортежа хранятся "
"вместе с ключом индекса, поэтому нет необходимости в дополнительном "
"поиске; для vinyl'а дело обстоит иначе, поэтому нужен дополнительный "
"поиск.)"

msgid ""
"Where the extra capability is not needed, ``on_replace`` should be used "
"instead of ``before_replace``. Usually ``before_replace`` is used only "
"for certain replication scenarios -- it is useful for conflict "
"resolution."
msgstr ""
"Если нет необходимости в дополнительных изменениях, следует использовать "
"``on_replace`` вместо ``before_replace``. Как правило, ``before_replace``"
" используется только для определенных сценариев репликации -- в части "
"разрешения конфликтов."

msgid ""
"The value that a ``before_replace`` trigger function can return affects "
"what will happen after the return. Specifically:"
msgstr ""
"Что случится после возврата значения, которое может вернуть функция с "
"триггером ``before_replace``, зависит от этого значения. А именно:"

msgid ""
"if there is no return value, then execution proceeds, inserting|replacing"
" the new value;"
msgstr ""
"если нет возвращаемого значения, выполнение продолжается со "
"вставкой|заменой нового значения;"

msgid "if the value is nil, then the tuple will be deleted;"
msgstr "если значение -- nil, то кортеж будет удален;"

msgid ""
"if the value is the same as the old parameter, then no ``on_replace`` "
"function will be called and the data change will be skipped. The return "
"value will be absent."
msgstr ""
"если значение совпадает со старым, то вызывается функция ``on_replace``, "
"и изменение данных не происходит. Возвращаемого значения в таком случае "
"не будет."

msgid ""
"if the value is the same as the new parameter, then it's as if the "
"``before_replace`` function wasn't called;"
msgstr ""
"если значение совпадает с новым, то считаем, что вызова функции "
"``before_replace`` не было;"

msgid "if the value is some other tuple, then it is used for insert/replace."
msgstr ""
"если значение другое, выполнение продолжается со вставкой/заменой нового "
"значения."

#, fuzzy
msgid ""
"However, if a trigger function returns an old tuple, or if a trigger "
"function calls :doc:`run_triggers(false) "
"</reference/reference_lua/box_space/run_triggers>`, that will not affect "
"other triggers that are activated for the same insert | update | replace "
"request."
msgstr ""
"Тем не менее, если функция с триггером возвращает старый кортеж или "
"вызывает :ref:`run_triggers(false) <box_space-run_triggers>`, это не "
"повлияет на другие триггеры, активируемые в том же запросе вставки, "
"обновления или замены."

msgid "**Example:**"
msgstr "**Пример:**"

msgid ""
"The following are ``before_replace`` functions that have no return value,"
" or that return nil, or the same as the old parameter, or the same as the"
" new parameter, or something else."
msgstr ""
"Далее представлены функции ``before_replace``: не возвращает значение, "
"возвращает nil, возвращает совпадающее со старым значение, возвращает "
"совпадающее с новым значение, возвращает другое значение."

msgid ""
"function f1 (old, new) return end\n"
"function f2 (old, new) return nil end\n"
"function f3 (old, new) return old end\n"
"function f4 (old, new) return new end\n"
"function f5 (old, new) return box.tuple.new({new[1],'b'}) end"
msgstr ""
