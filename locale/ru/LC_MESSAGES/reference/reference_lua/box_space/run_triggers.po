msgid ""
msgstr ""
"Plural-Forms: nplurals=4; plural=((n%10==1 && n%100!=11) ? 0 : ((n%10 >= 2 && n%10 <=4 && (n%100 < 12 || n%100 > 14)) ? 1 : ((n%10 == 0 || (n%10 >= 5 && n%10 <=9)) || (n%100 >= 11 && n%100 <= 14)) ? 2 : 3));\n"
"X-Crowdin-Project: tarantool-docs\n"
"X-Crowdin-Project-ID: 442986\n"
"X-Crowdin-Language: ru\n"
"X-Crowdin-File: /en/reference/reference_lua/box_space/run_triggers.pot\n"
"X-Crowdin-File-ID: 940\n"
"Project-Id-Version: tarantool-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Russian\n"
"Language: ru_RU\n"
"PO-Revision-Date: 2021-04-16 05:03\n"

msgid "space_object:run_triggers()"
msgstr "space_object:run_triggers()"

msgid "At the time that a :ref:`trigger <triggers>` is defined, it is automatically enabled - that is, it will be executed. :doc:`Replace </reference/reference_lua/box_space/on_replace>` triggers can be disabled with :samp:`box.space.{space-name}:run_triggers(false)` and re-enabled with :samp:`box.space.{space-name}:run_triggers(true)`."
msgstr "В тот момент, когда :ref:`триггер <triggers>` определен, он активируется автоматически, то есть он будет исполняться. Триггеры :doc:`replace </reference/reference_lua/box_space/on_replace>` можно отключить с помощью :samp:`box.space.{space-name}:run_triggers(false)` и повторно активировать с помощью :samp:`box.space.{space-name}:run_triggers(true)`."

msgid "return"
msgstr "возвращает"

msgid "nil"
msgstr "nil"

msgid "**Example:**"
msgstr "**Пример:**"

msgid "The following series of requests will associate an existing function named `F` with an existing space named `T`, associate the function a second time with the same space (so it will be called twice), disable all triggers of `T`, and delete each trigger by replacing with ``nil``."
msgstr "Следующая серия запросов ассоциирует существующую функцию с именем `F` с существующим спейсом с именем `T`, ассоциирует функцию во второй раз с тем же спейсом (чтобы вызвать ее дважды), отключит все триггеры на `T` и удалит каждый триггер, заменив его на ``nil``."

msgid "tarantool> box.space.T:on_replace(F)\n"
"tarantool> box.space.T:on_replace(F)\n"
"tarantool> box.space.T:run_triggers(false)\n"
"tarantool> box.space.T:on_replace(nil, F)\n"
"tarantool> box.space.T:on_replace(nil, F)"
msgstr "tarantool> box.space.T:on_replace(F)\n"
"tarantool> box.space.T:on_replace(F)\n"
"tarantool> box.space.T:run_triggers(false)\n"
"tarantool> box.space.T:on_replace(nil, F)\n"
"tarantool> box.space.T:on_replace(nil, F)"

