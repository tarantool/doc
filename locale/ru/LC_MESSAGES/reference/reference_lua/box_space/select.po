
msgid "space_object:select()"
msgstr ""

msgid ""
"Search for a tuple or a set of tuples in the given space. This method "
"doesn't yield (for details see :ref:`Cooperative multitasking <atomic-"
"cooperative_multitasking>`)."
msgstr ""
"Поиск кортежа или набора кортежей в заданном спейсе. Этот метод не "
"передает управление (детали можно найти в разделе :ref:`Кооперативная "
"многозадачность <atomic-cooperative_multitasking>`)."

msgid "Parameters"
msgstr "Параметры"

msgid "an :ref:`object reference <app_server-object_reference>`"
msgstr "ref:`ссылка на объект <app_server-object_reference>`"

msgid "value to be matched against the index key, which may be multi-part."
msgstr "значение должно совпасть с индексным ключом, который может быть составным."

msgid ""
"none, any or all of the same options that "
":doc:`/reference/reference_lua/box_index/select` allows:  * "
"``options.iterator`` (:ref:`type of iterator <box_index-iterator-types>`)"
" * ``options.limit`` (maximum number of tuples) * ``options.offset`` "
"(number of tuples to skip)"
msgstr ""
"ни один, любой или все параметры, которые допускает "
":doc:`/reference/reference_lua/box_index/select`:  * ``options.iterator``"
" (:ref:`тип итератора <box_index-iterator-types>`) * ``options.limit`` "
"(максимальное количество кортежей) * ``options.offset`` (количество "
"пропускаемых кортежей)"

msgid ""
"none, any or all of the same options that "
":doc:`/reference/reference_lua/box_index/select` allows:"
msgstr ""
"ни один, любой или все параметры, которые допускает "
":doc:`/reference/reference_lua/box_index/select`:"

msgid "``options.iterator`` (:ref:`type of iterator <box_index-iterator-types>`)"
msgstr "``options.iterator`` (:ref:`тип итератора <box_index-iterator-types>`)"

msgid "``options.limit`` (maximum number of tuples)"
msgstr "``options.limit`` (максимальное количество кортежей)"

msgid "``options.offset`` (number of tuples to skip)"
msgstr "``options.offset`` (количество пропускаемых кортежей)"

msgid "return"
msgstr "возвращает"

msgid ""
"the tuples whose primary-key fields are equal to the fields of the passed"
" key. If the number of passed fields is less than the number of fields in"
" the primary key, then only the passed fields are compared, so "
"``select{1,2}`` will match a tuple whose primary key is ``{1,2,3}``."
msgstr ""
"кортежи, поля первичного ключа в которых равны полям переданного ключа. "
"Если количество переданных полей меньшей количества полей первичного "
"ключа, сопоставляются только переданные поля, то есть для ``select{1,2}``"
" совпадением будет кортеж с первичным ключом ``{1,2,3}``."

msgid "rtype"
msgstr "тип возвращаемого значения"

msgid "array of tuples"
msgstr "массив кортежей"

msgid ""
"A ``select`` request can also be done with a specific index and index "
"options, which are the subject of "
":doc:`/reference/reference_lua/box_index/select`."
msgstr ""
"Запрос выборки ``select`` также можно выполнить со специальными "
"параметрами индекса, которые указаны в "
":doc:`/reference/reference_lua/box_index/select`."

msgid "**Possible errors:**"
msgstr "**Возможные ошибки:**"

msgid "no such space;"
msgstr "нет такого спейса;"

msgid "wrong type."
msgstr "неверный тип."

msgid "**Complexity factors:** Index size, Index type."
msgstr "**Факторы сложности:** Размер индекса, тип индекса"

msgid "**Example:**"
msgstr "**Пример:**"

msgid ""
"tarantool> s = box.schema.space.create('tmp', {temporary=true})\n"
"---\n"
"...\n"
"tarantool> s:create_index('primary',{parts = { {field = 1, type = "
"'unsigned'}, {field = 2, type = 'string'}} })\n"
"---\n"
"...\n"
"tarantool> s:insert{1,'A'}\n"
"---\n"
"- [1, 'A']\n"
"...\n"
"tarantool> s:insert{1,'B'}\n"
"---\n"
"- [1, 'B']\n"
"...\n"
"tarantool> s:insert{1,'C'}\n"
"---\n"
"- [1, 'C']\n"
"...\n"
"tarantool> s:insert{2,'D'}\n"
"---\n"
"- [2, 'D']\n"
"...\n"
"tarantool> -- must equal both primary-key fields\n"
"tarantool> s:select{1,'B'}\n"
"---\n"
"- - [1, 'B']\n"
"...\n"
"tarantool> -- must equal only one primary-key field\n"
"tarantool> s:select{1}\n"
"---\n"
"- - [1, 'A']\n"
"  - [1, 'B']\n"
"  - [1, 'C']\n"
"...\n"
"tarantool> -- must equal 0 fields, so returns all tuples\n"
"tarantool> s:select{}\n"
"---\n"
"- - [1, 'A']\n"
"  - [1, 'B']\n"
"  - [1, 'C']\n"
"  - [2, 'D']\n"
"...\n"
"tarantool> -- the first field must be greater than 0, and\n"
"tarantool> -- skip the first tuple, and return up to\n"
"tarantool> -- 2 tuples. This example's options all\n"
"tarantool> -- depend on index characteristics so see\n"
"tarantool> -- more explanation in index_object:select().\n"
"tarantool> s:select({0},{iterator='GT',offset=1,limit=2})\n"
"---\n"
"- - [1, 'B']\n"
"  - [1, 'C']\n"
"..."
msgstr ""
"tarantool> s = box.schema.space.create('tmp', {temporary=true})\n"
"---\n"
"...\n"
"tarantool> s:create_index('primary',{parts = { {field = 1, type = "
"'unsigned'}, {field = 2, type = 'string'}} })\n"
"---\n"
"...\n"
"tarantool> s:insert{1,'A'}\n"
"---\n"
"- [1, 'A']\n"
"...\n"
"tarantool> s:insert{1,'B'}\n"
"---\n"
"- [1, 'B']\n"
"...\n"
"tarantool> s:insert{1,'C'}\n"
"---\n"
"- [1, 'C']\n"
"...\n"
"tarantool> s:insert{2,'D'}\n"
"---\n"
"- [2, 'D']\n"
"...\n"
"tarantool> -- необходимо совпадение с двумя полями первичного ключа\n"
"tarantool> s:select{1,'B'}\n"
"---\n"
"- - [1, 'B']\n"
"...\n"
"tarantool> -- необходимо совпадение только одного поля первичного ключа\n"
"tarantool> s:select{1}\n"
"---\n"
"- - [1, 'A']\n"
"  - [1, 'B']\n"
"  - [1, 'C']\n"
"...\n"
"tarantool> -- необходимо совпадение с 0 полей, поэтому возвращает все "
"кортежи\n"
"tarantool> s:select{}\n"
"---\n"
"- - [1, 'A']\n"
"  - [1, 'B']\n"
"  - [1, 'C']\n"
"  - [2, 'D']\n"
"...\n"
"tarantool> -- первое поле должно быть больше 0,\n"
"tarantool> -- пропуск первого кортежа и возврат до\n"
"tarantool> -- 2 кортежей. Все параметры в данном примере\n"
"tarantool> -- зависят от характеристик индекса, поэтому см.\n"
"tarantool> -- более подробное описание в index_object:select().\n"
"tarantool> s:select({0},{iterator='GT',offset=1,limit=2})\n"
"---\n"
"- - [1, 'B']\n"
"  - [1, 'C']\n"
"..."

msgid ""
"As the last request in the above example shows: to make complex "
"``select`` requests, where you can specify which index to search and what"
" condition to use (for example \"greater than\" instead of \"equal to\") "
"and how many tuples to return, it will be necessary to become familiar "
"with :doc:`/reference/reference_lua/box_index/select`."
msgstr ""
"Как показано в последнем запросе вышеприведенного примера, чтобы "
"выполнять сложные запросы выборки ``select``, где можно указать, в каком "
"индексе производится поиск и с какими условиями (например, \"больше, "
"чем\" вместо \"равный\"), а также необходимое количество возвращаемых "
"кортежей, необходимо ознакомиться с "
":doc:`/reference/reference_lua/box_index/select`."

msgid ""
"Remember that you can get a field from a tuple both by field number and "
"by field name which is more convenient. See example: :ref:`using field "
"names instead of field numbers <box_space-get_field_names>`."
msgstr ""
"Помните, что из кортежа можно получить поле как по номеру поля, так и по "
"имени поля, что более удобно. См. пример: :ref:`использование имен вместо"
" номеров полей <box_space-get_field_names>`."

msgid ""
"For more usage scenarios and typical errors see :ref:`Example: using data"
" operations <box_space-operations-detailed-examples>` further in this "
"section."
msgstr ""
"Для получения дополнительной информации о сценариях использования и "
"типичных ошибках, см. :ref:`Пример: использование операций с данными "
"<box_space-operations-detailed-examples>` далее в разделе."
