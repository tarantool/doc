
msgid "Submodule `box.tuple`"
msgstr "Вложенный модуль `box.tuple`"

msgid ""
"The ``box.tuple`` submodule provides read-only access for the ``tuple`` "
"userdata type. It allows, for a single :ref:`tuple <index-box_tuple>`: "
"selective retrieval of the field contents, retrieval of information about"
" size, iteration over all the fields, and conversion to a `Lua table "
"<https://www.lua.org/pil/2.5.html>`_."
msgstr ""
"Вложенный модуль ``box.tuple`` предоставляет доступ только для чтения к "
"пользовательским данным типа кортеж ``tuple``. С его помощью для "
"отдельного :ref:`кортежа <index-box_tuple>` можно сделать следующее: "
"выборочно искать содержимое поля, получать информацию о размере, "
"проводить итерацию по всем полям и выполнять преобразование в "
"`Lua-таблицу <https://www.lua.org/pil/2.5.html>`_."

msgid "Below is a list of all ``box.tuple`` functions."
msgstr "Ниже приведен перечень всех функций модуля ``box.tuple``."

msgid "Name"
msgstr "Имя"

msgid "Use"
msgstr "Использование"

msgid ":doc:`./box_tuple/new`"
msgstr ""

msgid "Create a tuple"
msgstr "Создание кортежа"

msgid ":doc:`./box_tuple/is`"
msgstr ""

msgid "Check whether a given object is a tuple"
msgstr "Проверка, является ли переданный объект кортежем"

msgid ":doc:`./box_tuple/count_fields`"
msgstr ""

msgid "Count tuple fields"
msgstr "Подсчет полей кортежа"

msgid ":doc:`./box_tuple/bsize`"
msgstr ""

msgid "Get count of bytes in a tuple"
msgstr "Подсчет байтов в кортеже"

msgid ":doc:`./box_tuple/field_number`"
msgstr ""

msgid "Get a tuple's field by specifying a number"
msgstr "Получение поля кортежа по номеру"

msgid ":doc:`./box_tuple/field_name`"
msgstr ""

msgid "Get a tuple's field by specifying a name"
msgstr "Получение поля кортежа по имени"

msgid ":doc:`./box_tuple/field_path`"
msgstr ""

msgid "Get a tuple's fields or parts by specifying a path"
msgstr "Получение полей кортежа или компонентов по пути"

msgid ":doc:`./box_tuple/find`"
msgstr ""

msgid "Get the number of the first field/all fields matching the search value"
msgstr "Получение номера первого поля, совпадающего с искомым значением"

msgid ":doc:`./box_tuple/next`"
msgstr ""

msgid "Get the next field value from tuple"
msgstr "Получение значения следующего поля из кортежа"

msgid ":doc:`./box_tuple/pairs`"
msgstr ""

msgid "Prepare for iterating"
msgstr "Подготовка к итерации"

msgid ":doc:`./box_tuple/totable`"
msgstr ""

msgid "Get a tuple's fields as a table"
msgstr "Получение полей кортежа в виде таблицы"

msgid ":doc:`./box_tuple/tomap`"
msgstr ""

msgid "Get a tuple's fields as a table along with key:value pairs"
msgstr "Получение полей кортежа в виде таблицы, а также пар ключ-значение"

msgid ":doc:`./box_tuple/transform`"
msgstr ""

msgid "Remove (and replace) a tuple's fields"
msgstr "Удаление (и замена) полей кортежа"

msgid ":doc:`./box_tuple/unpack`"
msgstr ""

msgid "Get a tuple's fields"
msgstr "Получение полей кортежа"

msgid ":doc:`./box_tuple/update`"
msgstr ""

msgid "Update a tuple"
msgstr "Обновление кортежа"

msgid ":doc:`./box_tuple/upsert`"
msgstr ""

msgid "Update a tuple ignoring errors"
msgstr "Обновление кортежа, игнорируя ошибки"

msgid "How to convert tuples to/from Lua tables"
msgstr "Как преобразовать кортежи в Lua-таблицы и обратно"

msgid ""
"This function will illustrate how to convert tuples to/from Lua tables "
"and lists of scalars:"
msgstr ""
"Представленная ниже функция проиллюстрирует, как можно преобразовать "
"кортежи в Lua-таблицы и списки скаляров и обратно:"

msgid ""
"tuple = box.tuple.new({scalar1, scalar2, ... scalar_n}) -- scalars to "
"tuple\n"
"lua_table = {tuple:unpack()}                            -- tuple to Lua "
"table\n"
"lua_table = tuple:totable()                             -- tuple to Lua "
"table\n"
"scalar1, scalar2, ... scalar_n = tuple:unpack()         -- tuple to "
"scalars\n"
"tuple = box.tuple.new(lua_table)                        -- Lua table to "
"tuple"
msgstr ""
"tuple = box.tuple.new({scalar1, scalar2, ... scalar_n}) -- скаляры в "
"кортеж\n"
"lua_table = {tuple:unpack()}                            -- кортеж в "
"Lua-таблицу\n"
"lua_table = tuple:totable()                             -- кортеж в "
"Lua-таблицу\n"
"scalar1, scalar2, ... scalar_n = tuple:unpack()         -- кортеж в "
"скаляры\n"
"tuple = box.tuple.new(lua_table)                        -- Lua-таблицу в "
"кортеж"

msgid ""
"Then it will find the field that contains 'b', remove that field from the"
" tuple, and display how many bytes remain in the tuple. The function uses"
" Tarantool ``box.tuple`` functions ``new()``, ``unpack()``, ``find()``, "
"``transform()``, ``bsize()``."
msgstr ""
"Затем она найдет поле, которое содержит значение 'b', удалит это поле из "
"кортежа и отобразит количество байтов, оставшихся в кортеже. Данная "
"функция использует следующие функции ``box.tuple`` Tarantool'а: "
"``new()``, ``unpack()``, ``find()``, ``transform()``, ``bsize()``."

msgid ""
"function example()\n"
"  local tuple1, tuple2, lua_table_1, scalar1, scalar2, scalar3, "
"field_number\n"
"  local luatable1 = {}\n"
"  tuple1 = box.tuple.new({'a', 'b', 'c'})\n"
"  luatable1 = tuple1:totable()\n"
"  scalar1, scalar2, scalar3 = tuple1:unpack()\n"
"  tuple2 = box.tuple.new(luatable1[1],luatable1[2],luatable1[3])\n"
"  field_number = tuple2:find('b')\n"
"  tuple2 = tuple2:transform(field_number, 1)\n"
"  return 'tuple2 = ' , tuple2 , ' # of bytes = ' , tuple2:bsize()\n"
"end"
msgstr ""
"function example()\n"
"  local tuple1, tuple2, lua_table_1, scalar1, scalar2, scalar3, "
"field_number\n"
"  local luatable1 = {}\n"
"  tuple1 = box.tuple.new({'a', 'b', 'c'})\n"
"  luatable1 = tuple1:totable()\n"
"  scalar1, scalar2, scalar3 = tuple1:unpack()\n"
"  tuple2 = box.tuple.new(luatable1[1],luatable1[2],luatable1[3])\n"
"  field_number = tuple2:find('b')\n"
"  tuple2 = tuple2:transform(field_number, 1)\n"
"  return 'tuple2 = ' , tuple2 , ' # of bytes = ' , tuple2:bsize()\n"
"end"

msgid "... And here is what happens when one invokes the function:"
msgstr "... А вот что происходит, когда вызывается функция:"

msgid ""
"tarantool> example()\n"
"---\n"
"- tuple2 =\n"
"- ['a', 'c']\n"
"- ' # of bytes = '\n"
"- 5\n"
"..."
msgstr ""
"tarantool> example()\n"
"---\n"
"- tuple2 =\n"
"- ['a', 'c']\n"
"- ' # of bytes = '\n"
"- 5\n"
"..."
