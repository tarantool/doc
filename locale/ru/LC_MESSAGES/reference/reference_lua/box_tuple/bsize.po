
msgid "box.tuple.bsize()"
msgstr ""

msgid ""
"If ``t`` is a tuple instance, ``t:bsize()`` will return the number of "
"bytes in the tuple. With both the memtx storage engine and the vinyl "
"storage engine the default maximum is one megabyte "
"(:ref:`memtx_max_tuple_size <cfg_storage-memtx_max_tuple_size>` or "
":ref:`vinyl_max_tuple_size <cfg_storage-vinyl_max_tuple_size>`). Every "
"field has one or more \"length\" bytes preceding the actual contents, so "
"``bsize()`` returns a value which is slightly greater than the sum of the"
" lengths of the contents."
msgstr ""
"Если ``t`` -- это экземпляр кортежа, то ``t:bsize()`` вернет количество "
"байтов в кортеже. Как для движка базы данных memtx, так и для движка "
"vinyl максимальное количество, используемое по умолчанию, составляет один"
" мегабайт (:ref:`memtx_max_tuple_size <cfg_storage-memtx_max_tuple_size>`"
" или :ref:`vinyl_max_tuple_size <cfg_storage-vinyl_max_tuple_size>`). В "
"каждом поле есть один или более байтов \"длины\", которые предваряют само"
" содержимое поля, поэтому ``bsize()`` вернет значение, которое "
"незначительно больше, чем сумма длин всего содержимого."

msgid ""
"The value does not include the size of \"struct tuple\" (for the current "
"size of this structure look in the `tuple.h "
"<https://github.com/tarantool/tarantool/blob/1.10/src/box/tuple.h>`_ file"
" in Tarantool's source code)."
msgstr ""
"Значение не содержит размер кортежа \"struct tuple\" (чтобы узнать "
"текущий размер данной структуры, посмотрите файл `tuple.h "
"<https://github.com/tarantool/tarantool/blob/1.10/src/box/tuple.h>`_ в "
"исходном коде Tarantool'а)."

msgid "return"
msgstr "возвращает"

msgid "number of bytes"
msgstr "количество байтов"

msgid "rtype"
msgstr "тип возвращаемого значения"

msgid "number"
msgstr ""

#, fuzzy
msgid ""
"In the following example, a tuple named ``t`` is created which has three "
"fields, and for each field it takes one byte to store the length and "
"three bytes to store the contents, and then there is one more byte to "
"store a count of the number of fields, so ``bsize()`` returns "
"``3*(1+3)+1``. This is the same as the size of the string that "
":ref:`msgpack.encode({'aaa','bbb','ccc'}) <msgpack-encode_lua_value>` "
"would return."
msgstr ""
"В следующем примере создается кортеж с именем ``t``, в котором три поля, "
"и для каждого поля один байт занимает хранение длины, и три байта "
"занимает хранение содержимого, кроме того, один бит используется на "
"ресурсы, поэтому ``bsize()`` вернет ``3*(1+3)+1``. Такой же размер строки"
" вернула бы функция :ref:`msgpack.encode({'aaa','bbb','ccc'}) <msgpack-"
"encode>`."

msgid ""
"tarantool> t = box.tuple.new{'aaa', 'bbb', 'ccc'}\n"
"---\n"
"...\n"
"tarantool> t:bsize()\n"
"---\n"
"- 13\n"
"..."
msgstr ""
