
msgid "tuple_object:pairs(), tuple_object:ipairs()"
msgstr ""

msgid ""
"In Lua, `lua-table-value:pairs() <https://www.lua.org/pil/7.3.html>`_ is "
"a method which returns: ``function``, ``lua-table-value``, ``nil``. "
"Tarantool has extended this so that ``tuple-value:pairs()`` returns: "
"``function``, ``tuple-value``, ``nil``. It is useful for Lua iterators, "
"because Lua iterators traverse a value's components until an end marker "
"is reached."
msgstr ""
"В языке Lua метод `lua-table-value:pairs() "
"<https://www.lua.org/pil/7.3.html>`_ возвращает: ``функция``, "
"``значение-Lua-таблицы``, ``nil``. В Tarantool'е метод расширен так, что "
"``tuple-value:pairs()`` возвращает: ``функция``, ``значение-кортежа``, "
"``nil``, -- что используется для Lua-итераторов, поскольку они обходят "
"компоненты значения до тех пор, пока не достигнут маркера."

msgid ""
"``tuple_object:ipairs()`` is the same as ``pairs()``, because tuple "
"fields are always integers."
msgstr ""
"``tuple_object:ipairs()`` -- это то же самое, что и ``pairs()``, потому "
"что поля кортежей всегда явялются натуральными числами."

msgid "return"
msgstr "возвращает"

msgid "function, tuple-value, nil"
msgstr "функция, значение кортежа, nil"

msgid "rtype"
msgstr "тип возвращаемого значения"

msgid "function, lua-value, nil"
msgstr "функция, Lua-значение, nil"

msgid ""
"In the following example, a tuple named ``t`` is created and then all its"
" fields are selected using a Lua for-end loop."
msgstr ""
"В следующем примере создается кортеж под названием ``t``, а затем все его"
" поля выбираются с помощью Lua-цикла for."

msgid ""
"tarantool> t = box.tuple.new{'Fld#1', 'Fld#2', 'Fld#3', 'Fld#4', 'Fld#5'}"
"\n"
"---\n"
"...\n"
"tarantool> tmp = ''\n"
"---\n"
"...\n"
"tarantool> for k, v in t:pairs() do\n"
"         >   tmp = tmp .. v\n"
"         > end\n"
"---\n"
"...\n"
"tarantool> tmp\n"
"---\n"
"- Fld#1Fld#2Fld#3Fld#4Fld#5\n"
"..."
msgstr ""
