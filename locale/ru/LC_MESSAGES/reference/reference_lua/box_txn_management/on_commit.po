
msgid "box.on_commit()"
msgstr ""

msgid ""
"Define a trigger for execution when a transaction ends due to an event such "
"as :doc:`/reference/reference_lua/box_txn_management/commit`."
msgstr ""
"Определения триггера, выполняемого в случае окончания транзакции в связи с "
":doc:`/reference/reference_lua/box_txn_management/commit`."

msgid ""
"The trigger function may take an iterator parameter, as described in an "
"example for this section."
msgstr ""
"Функция с триггером может принимать параметр с итератором, как описано в "
"примере к данному разделу."

msgid "The trigger function should not access any database spaces."
msgstr ""
"Функция с триггером не должна получать доступ к любым спейсам базы данных."

msgid ""
"If the trigger execution fails and raises an error, the effect is severe and"
" should be avoided -- use Lua's ``pcall()`` mechanism around code that might"
" fail."
msgstr ""
"Если триггер не сработает и выдаст ошибку, результат будет неблагоприятным, "
"чего следует избегать -- используйте Lua-механизм ``pcall()`` вокруг кода, "
"который может не сработать."

msgid ""
"``box.on_commit()`` must be invoked within a transaction, and the trigger "
"ceases to exist when the transaction ends."
msgstr ""
"``box.on_commit()`` следует вызывать в пределах транзакции, и триггер "
"прекращает существование по окончании транзакции."

msgid "Parameters"
msgstr "Параметры"

msgid "function which will become the trigger function"
msgstr "функция, в которой будет триггер"

msgid "existing trigger function which will be replaced by trigger-function"
msgstr "существующая функция с триггером, которую заменит новая"

msgid "return"
msgstr "возвращает"

msgid "nil or function pointer"
msgstr "nil или указатель функции"

msgid ""
"If the parameters are ``(nil, old-trigger-function)``, then the old trigger "
"is deleted."
msgstr ""
"Если указаны параметры ``(nil, old-trigger-function)``, старый триггер будет"
" удален."

msgid ""
"Details about trigger characteristics are in the :ref:`triggers <triggers-"
"box_triggers>` section."
msgstr ""
"Подробная информация о характеристиках триггера находится в разделе "
":ref:`Триггеры <triggers-box_triggers>`."

msgid "**Example 1**"
msgstr ""

msgid ""
"-- Insert test data --\n"
"box.space.bands:insert { 1, 'Roxette', 1986 }\n"
"box.space.bands:insert { 2, 'Scorpions', 1965 }\n"
"box.space.bands:insert { 3, 'Ace of Base', 1987 }\n"
"\n"
"-- Define a function called on commit --\n"
"function print_commit_result()\n"
"    print('Commit happened')\n"
"end\n"
"\n"
"-- Commit the transaction --\n"
"box.begin()\n"
"box.space.bands:insert { 4, 'The Beatles', 1960 }\n"
"box.on_commit(print_commit_result)\n"
"box.commit()\n"
msgstr ""

msgid "**Example 2**"
msgstr ""

#, fuzzy
msgid ""
"The function parameter can be an iterator. The iterator goes through the "
"effects of every request that changed a space during the transaction."
msgstr ""
"Итератор проходит по результатам каждого запроса изменения спейса в пределах"
" транзакции."

#, fuzzy
msgid "The iterator has:"
msgstr "Итератор будет содержать:"

#, fuzzy
msgid "an ordinal request number"
msgstr "порядковый номер запроса,"

#, fuzzy
msgid ""
"the old value of the tuple before the request (``nil`` for an ``insert`` "
"request)"
msgstr ""
"старое значение кортежа до запроса (для запросов вставки это будет нулевое "
"значение nil),"

#, fuzzy
msgid ""
"the new value of the tuple after the request (``nil`` for a ``delete`` "
"request)"
msgstr ""
"новое значение кортежа после запроса (для запросов удаления это будет "
"нулевое значение nil),"

#, fuzzy
msgid "the ID of the space"
msgstr "и идентификатор спейса."

#, fuzzy
msgid "The example below displays the effects of two ``replace`` requests:"
msgstr ""
"**Более сложный и более полезный пример:** покажет результат двух запросов "
"замены:"

msgid ""
"-- Insert test data --\n"
"box.space.bands:insert { 1, 'Roxette', 1986 }\n"
"box.space.bands:insert { 2, 'Scorpions', 1965 }\n"
"box.space.bands:insert { 3, 'Ace of Base', 1987 }\n"
"\n"
"-- Define a function called on commit --\n"
"function print_replace_details(iterator)\n"
"    for request_number, old_tuple, new_tuple, space_id in iterator() do\n"
"        print('request_number: ' .. tostring(request_number))\n"
"        print('old_tuple: ' .. tostring(old_tuple))\n"
"        print('new_tuple: ' .. tostring(new_tuple))\n"
"        print('space_id: ' .. tostring(space_id))\n"
"    end\n"
"end\n"
"\n"
"-- Commit the transaction --\n"
"box.begin()\n"
"box.space.bands:replace { 1, 'The Beatles', 1960 }\n"
"box.space.bands:replace { 2, 'The Rolling Stones', 1965 }\n"
"box.on_commit(print_replace_details)\n"
"box.commit()\n"
msgstr ""

#, fuzzy
msgid "The output might look like this:"
msgstr "Результат будет выглядеть следующим образом:"

msgid ""
"request_number: 1\n"
"old_tuple: [1, 'Roxette', 1986]\n"
"new_tuple: [1, 'The Beatles', 1960]\n"
"space_id: 512\n"
"request_number: 2\n"
"old_tuple: [2, 'Scorpions', 1965]\n"
"new_tuple: [2, 'The Rolling Stones', 1965]\n"
"space_id: 512"
msgstr ""

#~ msgid "**Simple and useless example:** this will display 'commit happened':"
#~ msgstr "**Элементарный пример** покажет, что произошел коммит:"

#~ msgid ""
#~ "function f()\n"
#~ "function f() print('commit happened') end\n"
#~ "box.begin() box.on_commit(f) box.commit()"
#~ msgstr ""

#~ msgid ""
#~ "But of course there is more to it: the function parameter can be an "
#~ "ITERATOR."
#~ msgstr "Но, конечно, это еще не всё: параметр функции может быть ИТЕРАТОРОМ."

#~ msgid ""
#~ "box.space.test:drop()\n"
#~ "s = box.schema.space.create('test')\n"
#~ "i = box.space.test:create_index('i')\n"
#~ "function f(iterator)\n"
#~ "  for request_number, old_tuple, new_tuple, space_id in iterator() do\n"
#~ "    print('request_number ' .. tostring(request_number))\n"
#~ "    print('  old_tuple ' .. tostring(old_tuple[1]) .. ' ' .. old_tuple[2])\n"
#~ "    print('  new_tuple ' .. tostring(new_tuple[1]) .. ' ' .. new_tuple[2])\n"
#~ "    print('  space_id ' .. tostring(space_id))\n"
#~ "  end\n"
#~ "end\n"
#~ "s:insert{1,'-'}\n"
#~ "box.begin() s:replace{1,'x'} s:replace{1,'y'} box.on_commit(f) box.commit()"
#~ msgstr ""

#~ msgid ""
#~ "tarantool> box.begin() s:replace{1,'x'} s:replace{1,'y'} box.on_commit(f) box.commit()\n"
#~ "request_number 1\n"
#~ "  old_tuple 1 -\n"
#~ "  new_tuple 1 x\n"
#~ "  space_id 517\n"
#~ "request_number 2\n"
#~ "  old_tuple 1 x\n"
#~ "  new_tuple 1 y\n"
#~ "  space_id 517"
#~ msgstr ""
