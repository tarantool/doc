
msgid "Fiber channel close mode"
msgstr ""

msgid ""
"Before the change, there was an unexpected behavior when using "
"``channel:close()`` because it closed the channel entirely and discarded all"
" unread events."
msgstr ""

msgid "Old and new behavior"
msgstr ""

msgid ""
"The ``compat`` module allows you chose between the channel force and "
"graceful closing. The latter is a new behavior."
msgstr ""

msgid ""
"tarantool> compat = require('compat')\n"
"---\n"
"...\n"
"\n"
"tarantool> compat\n"
"---\n"
"- - yaml_pretty_multiline: default (old)\n"
"  - json_escape_forward_slash: default (old)\n"
"  - fiber_channel_close_mode: default (old)\n"
"...\n"
"\n"
"tarantool> fiber = require('fiber')\n"
"---\n"
"...\n"
"\n"
"tarantool> ch = fiber.channel(10)\n"
"---\n"
"...\n"
"\n"
"tarantool> ch:put('one')\n"
"---\n"
"- true\n"
"...\n"
"\n"
"tarantool> ch:put('two')\n"
"---\n"
"- true\n"
"...\n"
"\n"
"tarantool> ch:get()\n"
"---\n"
"- one\n"
"...\n"
"\n"
"tarantool> ch:close()\n"
"---\n"
"...\n"
"\n"
"tarantool> ch:get()\n"
"---\n"
"- null\n"
"...\n"
"\n"
"tarantool> compat.fiber_channel_close_mode = 'new'\n"
"---\n"
"...\n"
"\n"
"tarantool> ch = fiber.channel(10)\n"
"---\n"
"...\n"
"\n"
"tarantool> ch:put('one')\n"
"---\n"
"- true\n"
"...\n"
"\n"
"tarantool> ch:put('two')\n"
"---\n"
"- true\n"
"...\n"
"\n"
"tarantool> ch:get()\n"
"---\n"
"- one\n"
"...\n"
"\n"
"tarantool> ch:close()\n"
"---\n"
"...\n"
"\n"
"tarantool> ch:get()\n"
"---\n"
"- two\n"
"...\n"
"\n"
"tarantool> ch:get()\n"
"---\n"
"- null\n"
"..."
msgstr ""

msgid ""
"You can select new/old behavior in ``compat``. It will affect all existing "
"channels and the future ones."
msgstr ""

msgid "Known compatibility issues"
msgstr ""

msgid "At this point, no incompatible modules are known."
msgstr ""

msgid "Detecting issues in your codebase"
msgstr ""

msgid ""
"The new behavior is mostly backward compatible. The only known problem that "
"can appear is when the code relies on channel being entirely closed after "
"``ch:close()`` and ``ch:get()`` returning ``nil``."
msgstr ""
