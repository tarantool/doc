
msgid "Module `console`"
msgstr "Модуль `console`"

msgid "Overview"
msgstr "Общие сведения"

msgid ""
"The console module allows one Tarantool instance to access another "
"Tarantool instance, and allows one Tarantool instance to start listening "
"on an :ref:`admin port <admin-security>`."
msgstr ""
"Модуль `console` позволяет одному экземпляру Tarantool'а получать доступ "
"к другому экземпляру Tarantool'а и позволяет одному экземпляру "
"Tarantool'а начать прослушивание по :ref:`порту администрирования <admin-"
"security>`."

msgid "Index"
msgstr "Указатель"

msgid "Below is a list of all ``console`` functions."
msgstr "Ниже приведен перечень всех функций модуля ``console``."

msgid "Name"
msgstr "Имя"

msgid "Use"
msgstr "Назначение"

msgid ":ref:`console.connect() <console-connect>`"
msgstr ":ref:`console.connect() <console-connect>`"

msgid "Connect to an instance"
msgstr "Подключение к экземпляру"

msgid ":ref:`console.listen() <console-listen>`"
msgstr ":ref:`console.listen() <console-listen>`"

msgid "Listen for incoming requests"
msgstr "Прослушивание входящих запросов"

msgid ":ref:`console.start() <console-start>`"
msgstr ":ref:`console.start() <console-start>`"

msgid "Start the console"
msgstr "Запуск консоли"

msgid ":ref:`console.ac() <console-ac>`"
msgstr ":ref:`console.ac() <console-ac>`"

msgid "Set the auto-completion flag"
msgstr "Установка флага автодополнения ввода"

msgid ":ref:`console.delimiter() <console-delimiter>`"
msgstr ":ref:`console.delimiter() <console-delimiter>`"

msgid "Set a delimiter"
msgstr "Настройка разделителя"

msgid ":ref:`console.get_default_output() <console-get_default_output>`"
msgstr ""

msgid "Get default output format"
msgstr ""

msgid ":ref:`console.set_default_output() <console-set_default_output>`"
msgstr ""

msgid "Set default output format"
msgstr ""

msgid ":ref:`console.eos() <console-eos>`"
msgstr ""

msgid "Set or get end-of-output string"
msgstr ""

msgid ""
"Connect to the instance at :ref:`URI <index-uri>`, change the prompt from"
" '``tarantool>``' to ':samp:`{uri}>`', and act henceforth as a client "
"until the user ends the session or types ``control-D``."
msgstr ""
"Подключение к экземпляру по :ref:`URI <index-uri>`, смена командной "
"строки с '``tarantool>``' на ':samp:`{uri}>`' и дальнейшая работа в "
"качестве клиента до окончания сессии пользователя или ввода команды "
"``control-D``."

msgid ""
"The console.connect function allows one Tarantool instance, in "
"interactive mode, to access another Tarantool instance. Subsequent "
"requests will appear to be handled locally, but in reality the requests "
"are being sent to the remote instance and the local instance is acting as"
" a client. Once connection is successful, the prompt will change and "
"subsequent requests are sent to, and executed on, the remote instance. "
"Results are displayed on the local instance. To return to local mode, "
"enter ``control-D``."
msgstr ""
"Функция console.connect позволяет одному экземпляру Tarantool'а в "
"интерактивном режиме получать доступ к другому экземпляру Tarantool'а. "
"Последующие запросы на первый взгляд будут обрабатываться локально, но в "
"действительности запросы отправляются на удаленный экземпляр, а локальный"
" экземпляр выступает в виде клиента. После успешного подключения "
"командная строка сменится, и последующие запросы отправляются и "
"выполняются на удаленном экземпляре. Результат выводится на локальный "
"экземпляр. Чтобы вернуться к работе на локальном экземпляре, введите "
"команду ``control-D``."

msgid ""
"If the Tarantool instance at :samp:`uri` requires authentication, the "
"connection might look something like: "
"``console.connect('admin:secretpassword@distanthost.com:3301')``."
msgstr ""
"Если экземпляр Tarantool'а по :samp:`URI` запрашивает авторизацию, "
"подключение может выглядеть следующим образом: "
"``console.connect('admin:secretpassword@distanthost.com:3301')``."

msgid ""
"There are no restrictions on the types of requests that can be entered, "
"except those which are due to privilege restrictions -- by default the "
"login to the remote instance is done with user name = 'guest'. The remote"
" instance could allow for this by granting at least one privilege: "
"``box.schema.user.grant('guest','execute','universe')``."
msgstr ""
"Нет ограничений по типу вводимых запросов, кроме ограничений по правам на"
" выполняемые запросы -- по умолчанию, вход в систему на удаленном "
"экземпляре выполняется от имени пользователя 'guest'. Можно разрешить "
"работу на удаленном экземпляре, выдав права: "
"``box.schema.user.grant('guest','execute','universe')``."

msgid "Parameters"
msgstr "Параметры"

msgid "the URI of the remote instance"
msgstr "URI удаленного экземпляра"

msgid "return"
msgstr "возвращает"

msgid "nil"
msgstr "nil"

msgid ""
"Possible errors: the connection will fail if the target Tarantool "
"instance was not initiated with ``box.cfg{listen=...}``."
msgstr ""
"Возможные ошибки: подключение не будет установлено, если целевой "
"экземпляр Tarantool'а не был инициирован с помощью "
"``box.cfg{listen=...}``."

msgid "**Example:**"
msgstr "**Пример:**"

msgid ""
"tarantool> console = require('console')\n"
"---\n"
"...\n"
"tarantool> console.connect('198.18.44.44:3301')\n"
"---\n"
"...\n"
"198.18.44.44:3301> -- prompt is telling us that instance is remote"
msgstr ""
"tarantool> console = require('console')\n"
"---\n"
"...\n"
"tarantool> console.connect('198.18.44.44:3301')\n"
"---\n"
"...\n"
"198.18.44.44:3301> -- командная строка показывает, что работа идет с "
"удаленным экземпляром"

msgid ""
"Listen on :ref:`URI <index-uri>`. The primary way of listening for "
"incoming requests is via the connection-information string, or URI, "
"specified in ``box.cfg{listen=...}``. The alternative way of listening is"
" via the URI specified in ``console.listen(...)``. This alternative way "
"is called \"administrative\" or simply :ref:`\"admin port\" <admin-"
"security>`. The listening is usually over a local host with a Unix domain"
" socket."
msgstr ""
"Прослушивание по :ref:`URI <index-uri>`. Основной способ прослушивания на"
" предмет входящих запросов -- по строке информации о подключении, или "
"URI, указанному в ``box.cfg{listen=...}``. Другой способ прослушивания --"
" по URI, указанному в ``console.listen(...)``. Этот другой способ "
"называется \"административным\" или просто :ref:`\"по порту "
"администрирования\" <admin-security>`. Такое прослушивание обычно "
"осуществляется по локальному хосту с доменным Unix-сокетом."

msgid "the URI of the local instance"
msgstr "URI локального экземпляра"

msgid ""
"The \"admin\" address is the URI to listen on. It has no default value, "
"so it must be specified if connections will occur via an admin port. The "
"parameter is expressed with URI = Universal Resource Identifier format, "
"for example \"/tmpdir/unix_domain_socket.sock\", or a numeric TCP port. "
"Connections are often made with telnet. A typical port value is 3313."
msgstr ""
"\"Административный\" адрес -- это URI для прослушивания. У него нет "
"значения по умолчанию, поэтому следует указать, будет ли подключение "
"производиться по порту администрирования. Параметр выражен URI = "
"Универсальным идентификатором ресурса, например "
"\"/tmpdir/unix_domain_socket.sock\", или числовым идентификатором "
"TCP-порта. Подключения часто выполняются по telnet. Типичное значение "
"порта: 3313."

msgid ""
"tarantool> console = require('console')\n"
"---\n"
"...\n"
"tarantool> console.listen('unix/:/tmp/X.sock')\n"
"... main/103/console/unix/:/tmp/X I> started\n"
"---\n"
"- fd: 6\n"
"  name:\n"
"    host: unix/\n"
"    family: AF_UNIX\n"
"    type: SOCK_STREAM\n"
"    protocol: 0\n"
"    port: /tmp/X.sock\n"
"..."
msgstr ""
"tarantool> console = require('console')\n"
"---\n"
"...\n"
"tarantool> console.listen('unix/:/tmp/X.sock')\n"
"... main/103/console/unix/:/tmp/X I> started\n"
"---\n"
"- fd: 6\n"
"  name:\n"
"    host: unix/\n"
"    family: AF_UNIX\n"
"    type: SOCK_STREAM\n"
"    protocol: 0\n"
"    port: /tmp/X.sock\n"
"..."

msgid "Start the console on the current interactive terminal."
msgstr "Запуск консоли на текущем интерактивном терминале."

msgid ""
"A special use of ``console.start()`` is with :ref:`initialization files "
"<index-init_label>`. Normally, if one starts the Tarantool instance with "
":samp:`tarantool {initialization file}` there is no console. This can be "
"remedied by adding these lines at the end of the initialization file:"
msgstr ""
"``console.start()`` специально используется с :ref:`файлами инициализации"
" <index-init_label>`. Как правило, при запуске экземпляра Tarantool'а с "
"помощью команды :samp:`tarantool {initialization file}`, консоль не "
"поддерживается. Эту проблему можно решить путем добавления следующих "
"строк в конце файла инициализации:"

msgid ""
"local console = require('console')\n"
"console.start()"
msgstr ""
"local console = require('console')\n"
"console.start()"

msgid ""
"Set the auto-completion flag. If auto-completion is `true`, and the user "
"is using Tarantool as a client or the user is using Tarantool via "
"``console.connect()``, then hitting the TAB key may cause tarantool to "
"complete a word automatically. The default auto-completion value is "
"`true`."
msgstr ""
"Установка флага автодополнения ввода. Если значение автодополнения = "
"`true` (правда), и пользователь использует Tarantool в качестве клиента "
"или подключен к Tarantool'у по ``console.connect()``, то при нажатии "
"клавиши TAB Tarantool будет автоматически дополнять текст по введенной "
"части. По умолчанию, задано значение `true`."

msgid "Set a custom end-of-request marker for Tarantool console."
msgstr "Настройка специального маркера окончания запроса для консоли Tarantool'а."

msgid ""
"The default end-of-request marker is a newline (line feed). Custom "
"markers are not necessary because Tarantool can tell when a multi-line "
"request has not ended (for example, if it sees that a function "
"declaration does not have an end keyword). Nonetheless for special needs,"
" or for entering multi-line requests in older Tarantool versions, you can"
" change the end-of-request marker. As a result, newline alone is not "
"treated as end of request."
msgstr ""
"По умолчанию, маркер окончания запроса представляет собой символ разрыва "
"строки (перевод строки). Нет необходимости в специальных маркерах, "
"поскольку Tarantool может определить, если многостроковый запрос не "
"завершен (например, если видно, что при объявлении функции еще не задано "
"конечное ключевое слово). Тем не менее, в особых случаях или при вводе "
"многостроковых запросов в более ранних версиях Tarantool'а, можно "
"изменить маркер окончания запроса. В результате символ разрыва строки не "
"будет означать окончание запроса."

msgid "To go back to normal mode, say: ``console.delimiter('')<marker>``"
msgstr ""
"Чтобы вернуться в нормальный режим, введите команду: "
"``console.delimiter('')<marker>``"

msgid "a custom end-of-request marker for Tarantool console"
msgstr "специальный маркер окончания запроса для консоли Tarantool'а"

msgid ""
"tarantool> console = require('console'); console.delimiter('!')\n"
"---\n"
"...\n"
"tarantool> function f ()\n"
"         > statement_1 = 'a'\n"
"         > statement_2 = 'b'\n"
"         > end!\n"
"---\n"
"...\n"
"tarantool> console.delimiter('')!\n"
"---\n"
"..."
msgstr ""
"tarantool> console = require('console'); console.delimiter('!')\n"
"---\n"
"...\n"
"tarantool> function f ()\n"
"         > statement_1 = 'a'\n"
"         > statement_2 = 'b'\n"
"         > end!\n"
"---\n"
"...\n"
"tarantool> console.delimiter('')!\n"
"---\n"
"..."

msgid ""
"Return the current default output format. The result will be "
"``fmt=\"yaml\"``, or it will be ``fmt=\"lua\"`` if the last "
":ref:`set_default_output <console-set_default_output>` call was "
"``console.set_default_output('lua')``."
msgstr ""

msgid ""
"Set the default output format. The possible values are 'yaml' (the "
"default default) or 'lua'. The output format can be changed within a "
"session by executing :samp:`console.eval('\\\\\\\\set output "
"{yaml}|{lua}')`; see the description of output format in the "
":ref:`Interactive console <interactive_console_output>` section."
msgstr ""

msgid ""
"Set or access the end-of-output string if default output is 'lua'. This "
"is the string that appears at the end of output in a response to any Lua "
"request. The default value is ``;`` semicolon. Saying ``eos()`` will "
"return the current value. For example, after "
"``require('console').eos('!!')`` responses will end with '!!'."
msgstr ""
