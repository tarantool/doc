
msgid "datetime_object"
msgstr ""

msgid "Since :doc:`2.10.0 </release/2.10.0>`."
msgstr ""

msgid ""
"Convert the information from a ``datetime`` object into the table format. "
"Resulting table has the following fields:"
msgstr ""

msgid "Field name"
msgstr ""

msgid "Description"
msgstr ""

msgid "nsec"
msgstr ""

msgid "Nanosecods"
msgstr ""

msgid "sec"
msgstr ""

msgid "Seconds"
msgstr ""

msgid "min"
msgstr ""

msgid "Minutes"
msgstr ""

msgid "hour"
msgstr ""

msgid "Hours"
msgstr ""

msgid "day"
msgstr ""

msgid "Day number"
msgstr ""

msgid "month"
msgstr ""

msgid "Month number"
msgstr ""

msgid "year"
msgstr ""

msgid "Year"
msgstr ""

msgid "wday"
msgstr ""

msgid "Days since the beginning of the week"
msgstr ""

msgid "yday"
msgstr ""

msgid "Days since the beginning of the year"
msgstr ""

msgid "isdst"
msgstr ""

msgid "Is the DST (Daylight saving time) applicable for the date. Boolean."
msgstr ""

msgid "tzoffset"
msgstr ""

msgid "Time zone offset from UTC"
msgstr ""

msgid "return"
msgstr ""

msgid "table with the date and time parameters"
msgstr ""

msgid "rtype"
msgstr ""

msgid "table"
msgstr ""

msgid "**Example:**"
msgstr ""

msgid ""
"tarantool> dt = datetime.new {\n"
"            sec = 20,\n"
"            min = 25,\n"
"            hour = 18,\n"
"\n"
"            day = 20,\n"
"            month = 8,\n"
"            year = 2021,\n"
"            }\n"
"---\n"
"...\n"
"\n"
"tarantool> dt:totable()\n"
"---\n"
"- sec: 20\n"
"  min: 25\n"
"  yday: 232\n"
"  day: 20\n"
"  nsec: 0\n"
"  isdst: false\n"
"  wday: 6\n"
"  tzoffset: 0\n"
"  month: 8\n"
"  year: 2021\n"
"  hour: 18\n"
"..."
msgstr ""

#, python-format
msgid ""
"Convert the standard ``datetime`` object presentation into a formatted "
"string. The conversion specifications are the same as in the `strftime "
"<https://www.freebsd.org/cgi/man.cgi?query=strftime&sektion=3>`__ library. "
"Additional specification for nanoseconds is `%f` which also allows a "
"modifier to control the output precision of fractional part: `%5f` (see the "
"example below). If no arguments are set for the method, the default "
"conversions are used: `'%FT%T.%f%z'` (see the example below)."
msgstr ""

msgid "Parameters"
msgstr ""

msgid ""
"string consisting of zero or more conversion specifications and ordinary "
"characters"
msgstr ""

msgid "string with the formatted date and time information"
msgstr ""

msgid "string"
msgstr ""

#, python-format
msgid ""
"tarantool> dt = datetime.new {\n"
"            nsec = 123456789,\n"
"\n"
"            sec = 20,\n"
"            min = 25,\n"
"            hour = 18,\n"
"\n"
"            day = 20,\n"
"            month = 8,\n"
"            year = 2021,\n"
"\n"
"            tzoffset  = 180\n"
"            }\n"
"---\n"
"...\n"
"\n"
"tarantool> dt:format('%d.%m.%y %H:%M:%S.%5f')\n"
"---\n"
"- 20.08.21 18:25:20.12345\n"
"...\n"
"\n"
"tarantool> dt:format()\n"
"---\n"
"- 2021-08-20T18:25:20.123456789+0300\n"
"...\n"
"\n"
"tarantool> dt:format('%FT%T.%f%z')\n"
"---\n"
"- 2021-08-20T18:25:20.123456789+0300\n"
"..."
msgstr ""

msgid "Update the field values in the existing ``datetime`` object."
msgstr ""

msgid ""
"Table of time units. The :ref:`time units <datetime-new-args>` are the same "
"as for the ``datetime.new()`` function."
msgstr ""

msgid "updated datetime_object"
msgstr ""

msgid "cdata"
msgstr ""

msgid ""
"tarantool> dt = datetime.new {\n"
"            nsec = 123456789,\n"
"\n"
"            sec = 20,\n"
"            min = 25,\n"
"            hour = 18,\n"
"\n"
"            day = 20,\n"
"            month = 8,\n"
"            year = 2021,\n"
"\n"
"            tzoffset  = 180\n"
"            }\n"
"\n"
"tarantool> dt:set {msec = 567}\n"
"---\n"
"- 2021-08-20T18:25:20.567+0300\n"
"...\n"
"\n"
"tarantool> dt:set {tzoffset = 60}\n"
"---\n"
"- 2021-08-20T18:25:20.567+0100\n"
"..."
msgstr ""

msgid ""
"Convert an input string with the date and time information into a "
"``datetime`` object. The input string should be formatted according to one "
"of the following standards:"
msgstr ""

msgid "ISO 8601"
msgstr ""

msgid "RFC 3339"
msgstr ""

msgid ""
"extended `strftime "
"<https://www.freebsd.org/cgi/man.cgi?query=strftime&sektion=3>`__ -- see "
"description of the :ref:`format() <datetime-format>` for details."
msgstr ""

msgid "string with the date and time information."
msgstr ""

msgid ""
"indicator of the input_sting format. Possible values: 'iso8601', 'rfc3339', "
"or ``strptime``-like format string. If no value is set, the default "
"formatting  is used."
msgstr ""

msgid "time zone offset from UTC, in minutes."
msgstr ""

msgid "a datetime_object"
msgstr ""

#, python-format
msgid ""
"tarantool> t = datetime.parse('1970-01-01T00:00:00Z')\n"
"\n"
"tarantool> t\n"
"---\n"
"- 1970-01-01T00:00:00Z\n"
"...\n"
"\n"
"tarantool> t = datetime.parse('1970-01-01T00:00:00', {format = 'iso8601', tzoffset = 180})\n"
"\n"
"tarantool> t\n"
"---\n"
"- 1970-01-01T00:00:00+0300\n"
"...\n"
"\n"
"tarantool> t = datetime.parse('2017-12-27T18:45:32.999999-05:00', {format = 'rfc3339'})\n"
"\n"
"tarantool> t\n"
"---\n"
"- 2017-12-27T18:45:32.999999-0500\n"
"...\n"
"\n"
"tarantool> T = datetime.parse('Thu Jan  1 03:00:00 1970', {format = '%c'})\n"
"\n"
"tarantool> T\n"
"---\n"
"- 1970-01-01T03:00:00Z\n"
"...\n"
"\n"
"tarantool> T = datetime.parse('12/31/2020', {format = '%m/%d/%y'})\n"
"\n"
"tarantool> T\n"
"---\n"
"- 2020-12-31T00:00:00Z\n"
"...\n"
"\n"
"tarantool> T = datetime.parse('1970-01-01T03:00:00.125000000+0300', {format = '%FT%T.%f%z'})\n"
"\n"
"tarantool> T\n"
"---\n"
"- 1970-01-01T03:00:00.125+0300\n"
"..."
msgstr ""

msgid ""
"Modify an existing datetime object by adding values of the input argument."
msgstr ""

msgid ""
"an :ref:`interval object <interval_obj>` or an equivalent table (see "
"**Example #1**)"
msgstr ""

msgid ""
"defines how to round days in a month after an arithmetic operation. Possible"
" values: ``none``, ``last``, ``excess`` (see **Example #2**). Defaults to "
"``none``."
msgstr ""

msgid "**Example #1:**"
msgstr ""

msgid ""
"tarantool> dt = datetime.new {\n"
"            day = 26,\n"
"            month = 8,\n"
"            year = 2021,\n"
"            tzoffset  = 180\n"
"            }\n"
"---\n"
"...\n"
"\n"
"tarantool> iv = datetime.interval.new {day = 7}\n"
"---\n"
"...\n"
"\n"
"tarantool> dt, iv\n"
"---\n"
"- 2021-08-26T00:00:00+0300\n"
"- +7 days\n"
"...\n"
"\n"
"tarantool> dt:add(iv)\n"
"---\n"
"- 2021-09-02T00:00:00+0300\n"
"...\n"
"\n"
"tarantool> dt:add{ day = 7 }\n"
"---\n"
"- 2021-09-09T00:00:00+0300\n"
"..."
msgstr ""

msgid "**Example #2:**"
msgstr ""

msgid ""
"tarantool> dt = datetime.new {\n"
"            day = 29,\n"
"            month = 2,\n"
"            year = 2020\n"
"            }\n"
"---\n"
"...\n"
"\n"
"tarantool> dt:add{month = 1, adjust = 'none'}\n"
"---\n"
"- 2020-03-29T00:00:00Z\n"
"...\n"
"\n"
"tarantool> dt = datetime.new {\n"
"            day = 29,\n"
"            month = 2,\n"
"            year = 2020\n"
"            }\n"
"---\n"
"...\n"
"\n"
"tarantool> dt:add{month = 1, adjust = 'last'}\n"
"---\n"
"- 2020-03-31T00:00:00Z\n"
"...\n"
"\n"
"tarantool> dt = datetime.new {\n"
"            day = 31,\n"
"            month = 1,\n"
"            year = 2020\n"
"            }\n"
"---\n"
"...\n"
"\n"
"tarantool> dt:add{month = 1, adjust = 'excess'}\n"
"---\n"
"- 2020-03-02T00:00:00Z\n"
"..."
msgstr ""

msgid ""
"Modify an existing datetime object by subtracting values of the input "
"argument."
msgstr ""

msgid ""
"an :ref:`interval object <interval_obj>` or an equivalent table (see "
"**Example**)"
msgstr ""

msgid ""
"defines how to round days in a month after an arithmetic operation. Possible"
" values: ``none``, ``last``, ``excess``. Defaults to ``none``. The logic is "
"similar to the one of the ``:add()`` method -- see :ref:`Example #2 "
"<datetime-add-example2>`."
msgstr ""

msgid ""
"tarantool> dt = datetime.new {\n"
"            day = 26,\n"
"            month = 8,\n"
"            year = 2021,\n"
"            tzoffset  = 180\n"
"            }\n"
"---\n"
"...\n"
"\n"
"tarantool> iv = datetime.interval.new {day = 5}\n"
"---\n"
"...\n"
"\n"
"tarantool> dt, iv\n"
"---\n"
"- 2021-08-26T00:00:00+0300\n"
"- +5 days\n"
"...\n"
"\n"
"tarantool> dt:sub(iv)\n"
"---\n"
"- 2021-08-21T00:00:00+0300\n"
"...\n"
"\n"
"tarantool> dt:sub{ day = 1 }\n"
"---\n"
"- 2021-08-20T00:00:00+0300\n"
"..."
msgstr ""
