
msgid "Module `http`"
msgstr "Модуль `http`"

msgid "Overview"
msgstr "Общие сведения"

msgid ""
"The ``http`` module, specifically the ``http.client`` submodule, provides"
" the functionality of an HTTP client with support for HTTPS and "
"keepalive. It uses routines in the `libcurl "
"<https://curl.haxx.se/libcurl/>`_ library."
msgstr ""
"Модуль ``http``, в частности вложенный модуль ``http.client`` , "
"обеспечивать функциональные возможности HTTP-клиента с поддержкой HTTPS и"
" механизма поддержания в активном состоянии keepalive. Модуль использует "
"процедуры из библиотеки `libcurl <https://curl.haxx.se/libcurl/>`_."

msgid "Index"
msgstr "Указатель"

msgid "Below is a list of all ``http`` functions."
msgstr "Ниже приведен перечень всех функций модуля ``http``."

msgid "Name"
msgstr "Имя"

msgid "Use"
msgstr "Назначение"

msgid ":ref:`http.client.new() <http-new>`"
msgstr ":ref:`http.client.new() <http-new>`"

msgid "Create an HTTP client instance"
msgstr "Создание экземпляра HTTP-клиента"

msgid ":ref:`client_object:request() <client_object-request>`"
msgstr ":ref:`client_object:request() <client_object-request>`"

msgid "Perform an HTTP request"
msgstr "Выполнение HTTP-запроса"

msgid ":ref:`client_object:stat() <client_object-stat>`"
msgstr ":ref:`client_object:stat() <client_object-stat>`"

msgid "Get a table with statistics"
msgstr "Получение таблицы со статистикой"

msgid "Construct a new HTTP client instance."
msgstr "Создание нового экземпляра HTTP-клиента."

msgid "Parameters"
msgstr "Параметры"

msgid "integer settings which are passed to libcurl."
msgstr "настройки целочисленных значений, которые передаются в libcurl."

msgid ""
"The two possible options are ``max_connections`` and "
"``max_total_connections``."
msgstr "Доступны два параметра: ``max_connections`` и ``max_total_connections``."

msgid ""
"``max_connections`` is the maximum number of entries in the cache. It "
"affects libcurl `CURLMOPT_MAXCONNECTS "
"<https://curl.haxx.se/libcurl/c/CURLMOPT_MAXCONNECTS.html>`_. The default"
" is -1."
msgstr ""
"``max_connections`` -- это максимальное количество записей в кэше, "
"которое влияет на `CURLMOPT_MAXCONNECTS "
"<https://curl.haxx.se/libcurl/c/CURLMOPT_MAXCONNECTS.html>`_ в libcurl. "
"По умолчанию -1."

msgid ""
"``max_total_connections`` is the maximum number of active connections. It"
" affects libcurl  `CURLMOPT_MAX_TOTAL_CONNECTIONS "
"<https://curl.haxx.se/libcurl/c/CURLMOPT_MAX_TOTAL_CONNECTIONS.html>`_. "
"It is ignored if the curl version is less than 7.30. The default is 0, "
"which allows libcurl to scale accordingly to easily handles count."
msgstr ""

msgid ""
"The default option values are usually good enough but in rare cases it "
"might be good to set them. In that case here are two tips."
msgstr ""
"Обычно значений параметров по умолчанию будет достаточно, но в редких "
"случаях может понадобиться их настройка. На этот случай два совета."

msgid ""
"You may want to control the maximum number of sockets that a particular "
"HTTP client uses simultaneously. If a system passes many requests to "
"distinct hosts, then libcurl cannot reuse sockets. In this case setting "
"``max_total_connections`` may be useful, since it causes curl to avoid "
"creating too many sockets which would not be used anyway."
msgstr ""
"1. Возможно, вы захотите регулировать максимальное количество сокетов, "
"которые конкретный http-клиент использует одновременно. Если система "
"передает много запросов различным хостам, то libcurl не может повторно "
"использовать сокеты. В этом случае важен "
"параметр``max_total_connections``, поскольку он запретит curl создавать "
"слишком большое количество сокетов, которые все равно не будут "
"использоваться."

msgid ""
"Do not set ``max_connections`` less than ``max_total_connections`` unless"
" you are confident about your actions. When ``max_connections`` is less "
"then ``max_total_connections``, in some cases libcurl will not reuse "
"sockets for requests that are going to the same host. If the limit is "
"reached and a new request occurs, then libcurl will first create a new "
"socket, send the request, wait for the first connection to be free, and "
"close it, in order to avoid exceeding the ``max_connections`` cache size."
" In the worst case, libcurl will create a new socket for every request, "
"even if all requests are going to the same host. See `this Tarantool "
"issue on github <https://github.com/tarantool/tarantool/issues/3945>`_ "
"for details."
msgstr ""

msgid "return"
msgstr "возвращает"

msgid "a new HTTP client instance"
msgstr "новый экземпляр HTTP-клиента"

msgid "rtype"
msgstr "тип возвращаемого значения"

msgid "userdata"
msgstr "пользовательские данные"

msgid "**Example:**"
msgstr "**Пример:**"

msgid ""
"tarantool> http_client = require('http.client').new({max_connections = "
"5})\n"
"---\n"
"..."
msgstr ""
"tarantool> http_client = require('http.client').new({max_connections = "
"5})\n"
"---\n"
"..."

msgid ""
"If ``http_client`` is an HTTP client instance, ``http_client:request()`` "
"will perform an HTTP request and, if there is a successful connection, "
"will return a table with connection information."
msgstr ""
"Если ``http_client`` -- это экземпляр HTTP-клиента, "
"``http_client:request()`` выполнит HTTP-запрос, и в случае успешного "
"подключения вернет таблицу с информацией о подключении."

msgid "HTTP method, for example 'GET' or 'POST' or 'PUT'"
msgstr "HTTP-метод, например 'GET', 'POST' или 'PUT'"

msgid "location, for example 'https://tarantool.org/doc'"
msgstr "расположение, например 'https://tarantool.org/doc'"

msgid "optional initial message, for example 'My text string!'"
msgstr "необязательное начальное сообщение, например 'My text string!'"

msgid ""
"table of connection options, with any of these components:   * "
"``ca_file`` - path to an SSL certificate file to verify the peer with  * "
"``ca_path`` - path to a directory holding one or more certificates to    "
"verify the peer with  * ``headers`` - table of HTTP headers  * "
"``keepalive_idle`` - delay, in seconds, that the operating system    will"
" wait while the connection is idle before sending keepalive    probes. "
"See also    `CURLOPT_TCP_KEEPIDLE "
"<https://curl.haxx.se/libcurl/c/CURLOPT_TCP_KEEPIDLE.html>`_    and the "
"note below about keepalive_interval.  * ``keepalive_interval`` - the "
"interval, in seconds, that the operating    system will wait between "
"sending keepalive probes. See also    `CURLOPT_TCP_KEEPINTVL "
"<https://curl.haxx.se/libcurl/c/CURLOPT_TCP_KEEPINTVL.html>`_.    If both"
" ``keepalive_idle`` and ``keepalive_interval`` are set, then    Tarantool"
" will also set HTTP keepalive headers: ``Connection:Keep-Alive``    and "
"``Keep-Alive:timeout=<keepalive_idle>``.    Otherwise Tarantool will send"
" ``Connection:close``  * ``low_speed_limit`` - set the \"low speed "
"limit\" -- the average    transfer speed in bytes per second that the "
"transfer should be below    during \"low speed time\" seconds for the "
"library to consider it to be    too slow and abort. See also    "
"`CURLOPT_LOW_SPEED_LIMIT "
"<https://curl.haxx.se/libcurl/c/CURLOPT_LOW_SPEED_LIMIT.html>`_  * "
"``low_speed_time`` - set the \"low speed time\" -- the time that the    "
"transfer speed should be below the \"low speed limit\" for the library"
"    to consider it too slow and abort. See also    "
"`CURLOPT_LOW_SPEED_TIME "
"<https://curl.haxx.se/libcurl/c/CURLOPT_LOW_SPEED_TIME.html>`_  * "
"``max_header_name_len`` - the maximal length of a header name. If a "
"header    name is bigger than this value, it is truncated to this length."
"    The default value is '32'.  * ``follow_location`` - when the option "
"is set to ``true`` (default)    and the response has a 3xx code, the HTTP"
" client will automatically issue    another request to a location that a "
"server sends in the ``Location``    header. If the new response is 3xx "
"again, the HTTP client will    issue still another request and so on in a"
" loop until a non-3xx response    will be received. This last response "
"will be returned as a result.    Setting this option to ``false`` allows "
"to disable this behavior.    In this case, the HTTP client will return a "
"3xx response itself.  * ``no_proxy`` - a comma-separated list of hosts "
"that do not require proxies, or '*', or ''.    Set :samp:`no_proxy = "
"{host} [, {host} ...]` to specify    hosts that can be reached without "
"requiring a proxy, even if ``proxy`` has    been set to a non-blank value"
" and/or if a proxy-related environment variable    has been set.    Set "
"``no__proxy = '*'`` to specify that all hosts can be reached    without "
"requiring a proxy, which is equivalent to setting ``proxy=''``.    Set "
"``no_proxy = ''`` to specify that no hosts can be reached    without "
"requiring a proxy, even if a proxy-related environment variable    "
"(HTTP_PROXY) is used.    If ``no_proxy`` is not set, then a proxy-related"
" environment variable    (HTTP_PROXY) may be used. See also    "
"`CURLOPT_NOPROXY <https://curl.haxx.se/libcurl/c/CURLOPT_NOPROXY.html>`_"
"  * ``proxy`` - a proxy server host or IP address, or ''.    If ``proxy``"
" is a host or IP address, then it may begin with a scheme,    for example"
" 'https://' for an https proxy or 'http:// for an http proxy.    If "
"``proxy`` is set to '' an empty string, then proxy use is disabled,    "
"and no proxy-related environment variable will be used.    If ``proxy`` "
"is not set, then a proxy-related environment variable may be used, such "
"as    HTTP_PROXY or HTTPS_PROXY or FTP_PROXY, or ALL_PROXY if the    "
"protocol can be any protocol. See also    `CURLOPT_PROXY "
"<https://curl.haxx.se/libcurl/c/CURLOPT_PROXY.html>`_  * ``proxy_port`` "
"-- a proxy server port.    The default is 443 for an https proxy and 1080"
" for a non-https proxy.    See also    `CURLOPT_PROXYPORT "
"<https://curl.haxx.se/libcurl/c/CURLOPT_PROXYPORT.html>`_  * "
"``proxy_user_pwd`` -- a proxy server user name and/or password.    "
"Format: :samp:`proxy_user_pwd = {user_name}:`    or :samp:`proxy_user_pwd"
" = :{password}`    or :samp:`proxy_user_pwd = {user_name}:{password}`. "
"See also    `CURLOPT_USERPWD "
"<https://curl.haxx.se/libcurl/c/CURLOPT_USERPWD.html>`_  * ``ssl_cert`` -"
" path to a SSL client certificate file. See also    `CURLOPT_SSLCERT "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSLCERT.html>`_  * ``ssl_key`` - "
"path to a private key file for a TLS and SSL client    certificate. See "
"also    `CURLOPT_SSLKEY "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSLKEY.html>`_  * ``timeout`` - "
"number of seconds to wait for a curl API read request    before timing "
"out  * ``unix_socket`` - a socket name to use instead of an Internet "
"address,    for a local connection. The Tarantool server must be built "
"with    ``libcurl`` 7.40 or later. See the :ref:`second example <http-"
"example2>`    later in this section.  * ``verbose`` - set on/off verbose "
"mode  * ``verify_host`` - set on/off verification of the certificate's "
"name    (CN) against host. See also    `CURLOPT_SSL_VERIFYHOST "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSL_VERIFYHOST.html>`_  * "
"``verify_peer`` - set on/off verification of the peer's SSL    "
"certificate. See also    `CURLOPT_SSL_VERIFYPEER "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSL_VERIFYPEER.html>`_  * "
"``accept_encoding`` - enables automatic decompression of HTTP responses"
"    by setting the contents of the `Accept-Encoding: header` sent in an"
"    HTTP request and enabling decoding of a response when the `Content-"
"Encoding: header`    is received. This option specifies what encoding to "
"use.    It can be an empty string which means the `Accept-Encoding: "
"header` will    contain all supported built-in encodings. Four encodings "
"are supported: `identity`,    meaning non-compressed, `deflate` which "
"requests the server to compress its    response using the zlib algorithm,"
" `gzip` which requests the gzip algorithm and `br`    which is brotli. "
"Provide them in the string as a comma-separated list of accepted    "
"encodings, like: ``\"br, gzip, deflate\"``.    For details of the option,"
" refer to `CURLOPT_ACCEPT_ENCODING "
"<https://curl.haxx.se/libcurl/c/CURLOPT_ACCEPT_ENCODING.html>`_"
msgstr ""

msgid "table of connection options, with any of these components:"
msgstr ""
"таблица с параметрами подключения, которые могут содержать любые из "
"следующих компонентов:"

msgid "``ca_file`` - path to an SSL certificate file to verify the peer with"
msgstr "``ca_file`` -- путь к SSL-сертификату для проверки подключенного узла"

msgid ""
"``ca_path`` - path to a directory holding one or more certificates to "
"verify the peer with"
msgstr ""
"``ca_path`` -- путь к директории, где хранятся один или более "
"сертификатов для проверки подключенного узла"

msgid "``headers`` - table of HTTP headers"
msgstr "``headers`` -- таблица HTTP-заголовков"

msgid ""
"``keepalive_idle`` - delay, in seconds, that the operating system will "
"wait while the connection is idle before sending keepalive probes. See "
"also `CURLOPT_TCP_KEEPIDLE "
"<https://curl.haxx.se/libcurl/c/CURLOPT_TCP_KEEPIDLE.html>`_ and the note"
" below about keepalive_interval."
msgstr ""
"``keepalive_idle`` -- время задержки в секундах, в течение которого "
"операционная система находится в режиме ожидания подключения до отправки "
"сообщений для поддержания в активном состоянии keepalive. См. также "
"`CURLOPT_TCP_KEEPIDLE "
"<https://curl.haxx.se/libcurl/c/CURLOPT_TCP_KEEPIDLE.html>`_ и примечание"
" ниже к keepalive_interval."

msgid ""
"``keepalive_interval`` - the interval, in seconds, that the operating "
"system will wait between sending keepalive probes. See also "
"`CURLOPT_TCP_KEEPINTVL "
"<https://curl.haxx.se/libcurl/c/CURLOPT_TCP_KEEPINTVL.html>`_. If both "
"``keepalive_idle`` and ``keepalive_interval`` are set, then Tarantool "
"will also set HTTP keepalive headers: ``Connection:Keep-Alive`` and "
"``Keep-Alive:timeout=<keepalive_idle>``. Otherwise Tarantool will send "
"``Connection:close``"
msgstr ""

msgid ""
"``low_speed_limit`` - set the \"low speed limit\" -- the average transfer"
" speed in bytes per second that the transfer should be below during \"low"
" speed time\" seconds for the library to consider it to be too slow and "
"abort. See also `CURLOPT_LOW_SPEED_LIMIT "
"<https://curl.haxx.se/libcurl/c/CURLOPT_LOW_SPEED_LIMIT.html>`_"
msgstr ""
"``low_speed_limit`` -- установка \"предела низкой скорости\" -- средней "
"скорости передачи в байтах в секунду, ниже которой должна быть скорость "
"передачи, чтобы библиотека посчитала работу слишком медленной и завершила"
" ее. См. также    `CURLOPT_LOW_SPEED_LIMIT "
"<https://curl.haxx.se/libcurl/c/CURLOPT_LOW_SPEED_LIMIT.html>`_"

msgid ""
"``low_speed_time`` - set the \"low speed time\" -- the time that the "
"transfer speed should be below the \"low speed limit\" for the library to"
" consider it too slow and abort. See also `CURLOPT_LOW_SPEED_TIME "
"<https://curl.haxx.se/libcurl/c/CURLOPT_LOW_SPEED_TIME.html>`_"
msgstr ""
"``low_speed_time`` -- установка \"времени работы с низкой скоростью\" -- "
"времени, в течение которого скорость передачи должна быть ниже \"предела "
"низкой скорости\", чтобы библиотека посчитала работу слишком медленной и "
"завершила ее. См. также    `CURLOPT_LOW_SPEED_TIME "
"<https://curl.haxx.se/libcurl/c/CURLOPT_LOW_SPEED_TIME.html>`_"

msgid ""
"``max_header_name_len`` - the maximal length of a header name. If a "
"header name is bigger than this value, it is truncated to this length. "
"The default value is '32'."
msgstr ""
"``max_header_name_len`` -- максимальная длина имени заголовка. Если имя "
"заголовка больше данного значения, оно усекается до такой длины. По "
"умолчанию, '32'."

msgid ""
"``follow_location`` - when the option is set to ``true`` (default) and "
"the response has a 3xx code, the HTTP client will automatically issue "
"another request to a location that a server sends in the ``Location`` "
"header. If the new response is 3xx again, the HTTP client will issue "
"still another request and so on in a loop until a non-3xx response will "
"be received. This last response will be returned as a result. Setting "
"this option to ``false`` allows to disable this behavior. In this case, "
"the HTTP client will return a 3xx response itself."
msgstr ""

msgid ""
"``no_proxy`` - a comma-separated list of hosts that do not require "
"proxies, or '*', or ''. Set :samp:`no_proxy = {host} [, {host} ...]` to "
"specify hosts that can be reached without requiring a proxy, even if "
"``proxy`` has been set to a non-blank value and/or if a proxy-related "
"environment variable has been set. Set ``no__proxy = '*'`` to specify "
"that all hosts can be reached without requiring a proxy, which is "
"equivalent to setting ``proxy=''``. Set ``no_proxy = ''`` to specify that"
" no hosts can be reached without requiring a proxy, even if a proxy-"
"related environment variable (HTTP_PROXY) is used. If ``no_proxy`` is not"
" set, then a proxy-related environment variable (HTTP_PROXY) may be used."
" See also `CURLOPT_NOPROXY "
"<https://curl.haxx.se/libcurl/c/CURLOPT_NOPROXY.html>`_"
msgstr ""

msgid ""
"``proxy`` - a proxy server host or IP address, or ''. If ``proxy`` is a "
"host or IP address, then it may begin with a scheme, for example "
"'https://' for an https proxy or 'http:// for an http proxy. If ``proxy``"
" is set to '' an empty string, then proxy use is disabled, and no proxy-"
"related environment variable will be used. If ``proxy`` is not set, then "
"a proxy-related environment variable may be used, such as HTTP_PROXY or "
"HTTPS_PROXY or FTP_PROXY, or ALL_PROXY if the protocol can be any "
"protocol. See also `CURLOPT_PROXY "
"<https://curl.haxx.se/libcurl/c/CURLOPT_PROXY.html>`_"
msgstr ""

msgid ""
"``proxy_port`` -- a proxy server port. The default is 443 for an https "
"proxy and 1080 for a non-https proxy. See also `CURLOPT_PROXYPORT "
"<https://curl.haxx.se/libcurl/c/CURLOPT_PROXYPORT.html>`_"
msgstr ""

msgid ""
"``proxy_user_pwd`` -- a proxy server user name and/or password. Format: "
":samp:`proxy_user_pwd = {user_name}:` or :samp:`proxy_user_pwd = "
":{password}` or :samp:`proxy_user_pwd = {user_name}:{password}`. See also"
" `CURLOPT_USERPWD <https://curl.haxx.se/libcurl/c/CURLOPT_USERPWD.html>`_"
msgstr ""

msgid ""
"``ssl_cert`` - path to a SSL client certificate file. See also "
"`CURLOPT_SSLCERT <https://curl.haxx.se/libcurl/c/CURLOPT_SSLCERT.html>`_"
msgstr ""
"``ssl_cert`` -- путь к файлу клиентского SSL-сертификата. См. также    "
"`CURLOPT_SSLCERT <https://curl.haxx.se/libcurl/c/CURLOPT_SSLCERT.html>`_"

msgid ""
"``ssl_key`` - path to a private key file for a TLS and SSL client "
"certificate. See also `CURLOPT_SSLKEY "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSLKEY.html>`_"
msgstr ""
"``ssl_key`` -- путь к файлу закрытого ключа для клиентского "
"TSL-сертификата и SSL-сертификата. См. также `CURLOPT_SSLKEY "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSLKEY.html>`_"

msgid ""
"``timeout`` - number of seconds to wait for a curl API read request "
"before timing out"
msgstr ""
"``timeout`` -- количество секунд ожидания API-запроса curl на чтение до "
"превышения времени ожидания"

msgid ""
"``unix_socket`` - a socket name to use instead of an Internet address, "
"for a local connection. The Tarantool server must be built with "
"``libcurl`` 7.40 or later. See the :ref:`second example <http-example2>` "
"later in this section."
msgstr ""
"``unix_socket`` -- имя сокета, которое используется вместо адреса в сети "
"Интернет,    для локального соединения. Сборка сервера Tarantool'а должна"
" осуществляться с помощью ``libcurl`` 7.40 или более поздней версии. См. "
":ref:`второй пример <http-example2>` далее в разделе."

msgid "``verbose`` - set on/off verbose mode"
msgstr ""
"``verbose`` -- включение/отключение режима отображения подробной "
"информации"

msgid ""
"``verify_host`` - set on/off verification of the certificate's name (CN) "
"against host. See also `CURLOPT_SSL_VERIFYHOST "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSL_VERIFYHOST.html>`_"
msgstr ""
"``verify_host`` -- включение/отключение проверки имени сертификата (CN) "
"для хоста. См. также    `CURLOPT_SSL_VERIFYHOST "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSL_VERIFYHOST.html>`_"

msgid ""
"``verify_peer`` - set on/off verification of the peer's SSL certificate. "
"See also `CURLOPT_SSL_VERIFYPEER "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSL_VERIFYPEER.html>`_"
msgstr ""
"``verify_peer`` --  включение/отключение проверки SSL-сертификата "
"подключенного узла. См. также `CURLOPT_SSL_VERIFYPEER "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSL_VERIFYPEER.html>`_"

msgid ""
"``accept_encoding`` - enables automatic decompression of HTTP responses "
"by setting the contents of the `Accept-Encoding: header` sent in an HTTP "
"request and enabling decoding of a response when the `Content-Encoding: "
"header` is received. This option specifies what encoding to use. It can "
"be an empty string which means the `Accept-Encoding: header` will contain"
" all supported built-in encodings. Four encodings are supported: "
"`identity`, meaning non-compressed, `deflate` which requests the server "
"to compress its response using the zlib algorithm, `gzip` which requests "
"the gzip algorithm and `br` which is brotli. Provide them in the string "
"as a comma-separated list of accepted encodings, like: ``\"br, gzip, "
"deflate\"``. For details of the option, refer to `CURLOPT_ACCEPT_ENCODING"
" <https://curl.haxx.se/libcurl/c/CURLOPT_ACCEPT_ENCODING.html>`_"
msgstr ""

msgid "connection information, with all of these components:"
msgstr "информация о подключении со всеми следующими компонентами:"

msgid "``status`` - HTTP response status"
msgstr "``status`` -- статус HTTP-ответа"

msgid "``reason`` - HTTP response status text"
msgstr "``reason`` -- текст статуса HTTP-ответа"

msgid "``headers`` - a Lua table with normalized HTTP headers"
msgstr "``headers`` -- Lua-таблица с нормализованными HTTP-заголовками"

msgid "``body`` - response body"
msgstr "``body`` -- тело сообщения-ответа"

msgid "``proto`` - protocol version"
msgstr "``proto`` -- версия протокола"

msgid "table"
msgstr "таблица"

msgid ""
"The ``cookies`` component contains a Lua table where the key is a cookie "
"name. The value is an array of two elements where the first one is the "
"cookie value and the second one is an array with the cookie’s options. "
"Possible options are: \"Expires\", \"Max-Age\", \"Domain\", \"Path\", "
"\"Secure\", \"HttpOnly\", \"SameSite\". Note that an option is a string "
"with '=' splitting the option's name and its value. `Here "
"<https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies>`_ you can "
"find more info."
msgstr ""

msgid "**Example**"
msgstr ""

msgid "You can use cookies information like this:"
msgstr ""

msgid ""
"tarantool> "
"require('http.client').get('https://www.tarantool.io/en/').cookies\n"
"---\n"
"- csrftoken:\n"
"  - bWJVkBybvX9LdJ8uLPOTVrit5P3VbRjE3potYVOuUnsSjYT5ahghDV06tXRkfnOl\n"
"  - - Max-Age=31449600\n"
"    - Path=/\n"
"...\n"
"\n"
"tarantool> cookies = "
"require('http.client').get('https://www.tarantool.io/en/').cookies\n"
"---\n"
"...\n"
"\n"
"tarantool> options = cookies['csrftoken'][2]\n"
"---\n"
"...\n"
"\n"
"tarantool> for _, option in ipairs(options) do\n"
"         > if option:startswith('csrftoken cookie's Max-Age = ') then\n"
"         > print(option)\n"
"         > end\n"
"         > end\n"
"\n"
"csrftoken cookie's Max-Age = 31449600\n"
"---\n"
"...\n"
"\n"
"tarantool>"
msgstr ""

msgid "The following \"shortcuts\" exist for requests:"
msgstr "Для запросов существуют следующие ускоренные методы:"

msgid ""
"``http_client:get(url, options)`` - shortcut for "
"``http_client:request(\"GET\", url, nil, opts)``"
msgstr ""
"``http_client:get(url, options)`` -- вспомогательный метод для "
"``http_client:request(\"GET\", url, nil, opts)``"

msgid ""
"``http_client:post (url, body, options)`` - shortcut for "
"``http_client:request(\"POST\", url, body, opts)``"
msgstr ""
"``http_client:post (url, body, options)`` -- ускоренный метод для "
"``http_client:request(\"POST\", url, body, opts)``"

msgid ""
"``http_client:put(url, body, options)`` - shortcut for "
"``http_client:request(\"PUT\", url, body, opts)``"
msgstr ""
"``http_client:put(url, body, options)`` -- ускоренный метод для "
"``http_client:request(\"PUT\", url, body, opts)``"

msgid ""
"``http_client:patch(url, body, options)`` - shortcut for "
"``http_client:request(\"PATCH\", url, body, opts)``"
msgstr ""
"``http_client:patch(url, body, options)`` -- ускоренный метод для "
"``http_client:request(\"PATCH\", url, body, opts)``"

msgid ""
"``http_client:options(url, options)`` - shortcut for "
"``http_client:request(\"OPTIONS\", url, nil, opts)``"
msgstr ""
"``http_client:options(url, options)`` -- ускоренный метод для "
"``http_client:request(\"OPTIONS\", url, nil, opts)``"

msgid ""
"``http_client:head(url, options)`` - shortcut for "
"``http_client:request(\"HEAD\", url, nil, opts)``"
msgstr ""
"``http_client:head(url, options)`` -- ускоренный метод для "
"``http_client:request(\"HEAD\", url, nil, opts)``"

msgid ""
"``http_client:delete(url, options)`` - shortcut for "
"``http_client:request(\"DELETE\", url, nil, opts)``"
msgstr ""
"``http_client:delete(url, options)`` -- ускоренный метод для "
"``http_client:request(\"DELETE\", url, nil, opts)``"

msgid ""
"``http_client:trace(url, options)`` - shortcut for "
"``http_client:request(\"TRACE\", url, nil, opts)``"
msgstr ""
"``http_client:trace(url, options)`` -- ускоренный метод для "
"``http_client:request(\"TRACE\", url, nil, opts)``"

msgid ""
"``http_client:connect:(url, options)`` - shortcut for "
"``http_client:request(\"CONNECT\", url, nil, opts)``"
msgstr ""
"``http_client:connect:(url, options)`` -- ускоренный метод для "
"``http_client:request(\"CONNECT\", url, nil, opts)``"

msgid ""
"Requests may be influenced by environment variables, for example users "
"can set up an http proxy by setting :samp:`HTTP_PROXY={proxy}` before "
"initiating any requests, unless a ``proxy`` connection option has "
"priority. See the web page document `Environment variables libcurl "
"understands <https://curl.haxx.se/libcurl/c/libcurl-env.html>`_."
msgstr ""

msgid "The ``http_client:stat()`` function returns a table with statistics:"
msgstr ""
"Функция ``http_client:stat()`` возвращает таблицу со статистическими "
"данными:"

msgid "``active_requests`` - number of currently executing requests"
msgstr "``active_requests`` -- количество активно выполняемых запросов"

msgid "``sockets_added`` - total number of sockets added into an event loop"
msgstr ""
"``sockets_added`` -- общее количество сокетов, добавленных в событийный "
"цикл"

msgid "``sockets_deleted`` - total number of sockets sockets from an event loop"
msgstr ""
"``sockets_deleted`` -- общее количество сокетов, удаленных из событийного"
" цикла"

msgid "``total_requests`` - total number of requests"
msgstr "``total_requests`` -- общее количество запросов"

msgid ""
"``http_200_responses`` - total number of requests which have returned "
"code HTTP 200"
msgstr ""
"``http_200_responses`` -- общее количество запросов, которые вернули код "
"состояния HTTP 200"

msgid ""
"``http_other_responses`` - total number of requests which have not "
"returned code HTTP 200"
msgstr ""
"``http_other_responses`` -- общее количество запросов, которые не вернули"
" код состояния HTTP 200"

msgid ""
"``failed_requests`` - total number of requests which have failed "
"including system errors, curl errors, and HTTP errors"
msgstr ""
"``failed_requests`` -- общее количество невыполненных запросов, включая "
"системные ошибки, ошибки curl и HTTP-ошибки"

msgid "**Example 1:**"
msgstr "**Пример 1:**"

msgid ""
"Connect to an HTTP server, look at the size of the response for a 'GET' "
"request, and look at the statistics for the session."
msgstr ""
"Подключение к HTTP-серверу, просмотр размера ответа на 'GET'-запрос и "
"просмотр статистики по сессии."

msgid ""
"tarantool> http_client = require('http.client').new()\n"
"---\n"
"...\n"
"tarantool> r = http_client:request('GET','http://tarantool.org')\n"
"---\n"
"...\n"
"tarantool> string.len(r.body)\n"
"---\n"
"- 21725\n"
"...\n"
"tarantool> http_client:stat()\n"
"---\n"
"- total_requests: 1\n"
"  sockets_deleted: 2\n"
"  failed_requests: 0\n"
"  active_requests: 0\n"
"  http_other_responses: 0\n"
"  http_200_responses: 1\n"
"  sockets_added: 2"
msgstr ""
"tarantool> http_client = require('http.client').new()\n"
"---\n"
"...\n"
"tarantool> r = http_client:request('GET','http://tarantool.org')\n"
"---\n"
"...\n"
"tarantool> string.len(r.body)\n"
"---\n"
"- 21725\n"
"...\n"
"tarantool> http_client:stat()\n"
"---\n"
"- total_requests: 1\n"
"  sockets_deleted: 2\n"
"  failed_requests: 0\n"
"  active_requests: 0\n"
"  http_other_responses: 0\n"
"  http_200_responses: 1\n"
"  sockets_added: 2"

msgid "**Example 2:**"
msgstr "**Пример 2:**"

msgid "Start two Tarantool instances on the same computer."
msgstr "Запустите два экземпляра Tarantool'а на одном компьютере."

msgid "On the first Tarantool instance, listen on a Unix socket:"
msgstr "В первом экземпляре Tarantool'а включите прослушивание Unix-сокета:"

msgid "box.cfg{listen='/tmp/unix_domain_socket.sock'}"
msgstr "box.cfg{listen='/tmp/unix_domain_socket.sock'}"

msgid "On the second Tarantool instance, send via ``http_client``:"
msgstr "На втором экземпляре Tarantool'а отправьте с помощью ``http_client``:"

msgid ""
"box.cfg{}\n"
"http_client = require('http.client').new({5})\n"
"http_client:put('http://localhost/','body',{unix_socket = "
"'/tmp/unix_domain_socket.sock'})"
msgstr ""
"box.cfg{}\n"
"http_client = require('http.client').new({5})\n"
"http_client:put('http://localhost/','body',{unix_socket = "
"'/tmp/unix_domain_socket.sock'})"

msgid ""
"Terminal #1 will show an error message: \"Invalid MsgPack\". This is not "
"useful but demonstrates the syntax and demonstrates that was sent was "
"received."
msgstr ""
"Терминал №1 покажет сообщение об ошибке: \"Invalid MsgPack\". Данный "
"пример бесполезен, но наглядно демонстрирует синтаксис и получение "
"отправленного сообщения."
