# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 1.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-06 14:05+0000\n"
"PO-Revision-Date: 2019-12-06 16:16+0300\n"
"Last-Translator: \n"
"Language: ru\n"
"Language-Team: \n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

msgid "Module `http`"
msgstr "Модуль `http`"

msgid "Overview"
msgstr "Общие сведения"

msgid ""
"The ``http`` module, specifically the ``http.client`` submodule, provides"
" the functionality of an HTTP client with support for HTTPS and "
"keepalive. It uses routines in the `libcurl "
"<https://curl.haxx.se/libcurl/>`_ library."
msgstr ""
"Модуль ``http``, в частности вложенный модуль ``http.client`` , "
"обеспечивать функциональные возможности HTTP-клиента с поддержкой HTTPS и"
" механизма поддержания в активном состоянии keepalive. Модуль использует "
"процедуры из библиотеки `libcurl <https://curl.haxx.se/libcurl/>`_."

msgid "Index"
msgstr "Указатель"

msgid "Below is a list of all ``http`` functions."
msgstr "Ниже приведен перечень всех функций модуля ``http``."

msgid "Name"
msgstr "Имя"

msgid "Use"
msgstr "Назначение"

msgid ":ref:`http.client.new() <http-new>`"
msgstr ":ref:`http.client.new() <http-new>`"

msgid "Create an HTTP client instance"
msgstr "Создание экземпляра HTTP-клиента"

msgid ":ref:`client_object:request() <client_object-request>`"
msgstr ":ref:`client_object:request() <client_object-request>`"

msgid "Perform an HTTP request"
msgstr "Выполнение HTTP-запроса"

msgid ":ref:`client_object:stat() <client_object-stat>`"
msgstr ":ref:`client_object:stat() <client_object-stat>`"

msgid "Get a table with statistics"
msgstr "Получение таблицы со статистикой"

msgid "Construct a new HTTP client instance."
msgstr "Создание нового экземпляра HTTP-клиента."

msgid "Parameters"
msgstr "Параметры"

#, fuzzy
msgid "integer settings which are passed to ``libcurl``."
msgstr "настройки целочисленных значений, которые передаются в libcurl."

msgid ""
"The two possible options are ``max_connections`` and "
"``max_total_connections``."
msgstr "Доступны два параметра: ``max_connections`` и ``max_total_connections``."

#, fuzzy
msgid ""
"``max_connections`` is the maximum number of entries in the cache. It "
"affects ``libcurl``'s `CURLMOPT_MAXCONNECTS "
"<https://curl.haxx.se/libcurl/c/CURLMOPT_MAXCONNECTS.html>`_. The default"
" is -1."
msgstr ""
"``max_connections`` -- это максимальное количество записей в кэше, "
"которое влияет на `CURLMOPT_MAXCONNECTS "
"<https://curl.haxx.se/libcurl/c/CURLMOPT_MAXCONNECTS.html>`_ в libcurl. "
"По умолчанию -1."

#, fuzzy
msgid ""
"``max_total_connections`` is the maximum number of active connections. It"
" affects ``libcurl``'s  `CURLMOPT_MAX_TOTAL_CONNECTIONS "
"<https://curl.haxx.se/libcurl/c/CURLMOPT_MAX_TOTAL_CONNECTIONS.html>`_. "
"It is ignored if the ``curl`` version is less than 7.30. The default is "
"0, which allows ``libcurl`` to scale according to easy handles count."
msgstr ""
"``max_total_connections`` -- это максимальное число активных соединений, "
"которое влияет на `CURLMOPT_MAX_TOTAL_CONNECTIONS "
"<https://curl.haxx.se/libcurl/c/CURLMOPT_MAX_TOTAL_CONNECTIONS.html>`_ в "
"libcurl. Значение не учитывается, если версия curl ниже 7.30. По "
"умолчанию 0, что позволяет libcurl масштабироваться в зависимости от "
"количества обработчиков."

msgid ""
"The default option values are usually good enough but in rare cases it "
"might be good to set them. In that case here are two tips."
msgstr ""
"Обычно значений параметров по умолчанию будет достаточно, но в редких "
"случаях может понадобиться их настройка. На этот случай два совета."

#, fuzzy
msgid ""
"1. You may want to control the maximum number of sockets that a "
"particular http client uses simultaneously. If a system passes many "
"requests to distinct hosts, then ``libcurl`` cannot reuse sockets. In "
"this case setting ``max_total_connections`` may be useful, since it "
"causes ``curl`` to avoid creating too many sockets which would not be "
"used anyway."
msgstr ""
"1. Возможно, вы захотите регулировать максимальное количество сокетов, "
"которые конкретный http-клиент использует одновременно. Если система "
"передает много запросов различным хостам, то libcurl не может повторно "
"использовать сокеты. В этом случае важен "
"параметр``max_total_connections``, поскольку он запретит curl создавать "
"слишком большое количество сокетов, которые все равно не будут "
"использоваться."

#, fuzzy
msgid ""
"2. Do not set ``max_connections`` less than ``max_total_connections`` "
"unless you are confident about your actions. When ``max_connections`` is "
"less then ``max_total_connections``, in some cases ``libcurl`` will not "
"reuse sockets for requests that are going to the same host. If the limit "
"is reached and a new request occurs, then ``libcurl`` will first create a"
" new socket, send the request, wait for the first connection to be free, "
"and close it, in order to avoid exceeding the ``max_connections`` cache "
"size. In the worst case, ``libcurl`` will create a new socket for every "
"request, even if all requests are going to the same host. See `this "
"Tarantool issue on github "
"<https://github.com/tarantool/tarantool/issues/3945>`_ for details."
msgstr ""
"2. Не задавайте значение ``max_connections`` меньше "
"``max_total_connections``, если только вы не абсолютно уверены в своих "
"действиях. Когда значение ``max_connections`` меньше "
"``max_total_connections``, в некоторых случаях libcurl не будет повторно "
"использовать сокеты для запросов, отправляемых на тот же хост. Если же "
"предел достигнут и приходит новый запрос, то libcurl сначала создаст "
"новый сокет, отправит запрос, дождется освобождения первого соединения и "
"закроет его во избежание превышения размера кэша ``max_connections``. В "
"худшем случае, libcurl создаст новый сокет для каждого запроса, даже если"
" все запросы будут отправляться на один и тот же хост. Дополнительную "
"информацию см. в `этой проблеме Tarantool'а на github "
"<https://github.com/tarantool/tarantool/issues/3945>`_."

msgid "return"
msgstr "возвращает"

msgid "a new HTTP client instance"
msgstr "новый экземпляр HTTP-клиента"

msgid "rtype"
msgstr "тип возвращаемого значения"

msgid "userdata"
msgstr "пользовательские данные"

msgid "**Example:**"
msgstr "**Пример:**"

msgid ""
"tarantool> http_client = require('http.client').new({max_connections = "
"5})\n"
"---\n"
"..."
msgstr ""
"tarantool> http_client = require('http.client').new({max_connections = "
"5})\n"
"---\n"
"..."

msgid ""
"If ``http_client`` is an HTTP client instance, ``http_client:request()`` "
"will perform an HTTP request and, if there is a successful connection, "
"will return a table with connection information."
msgstr ""
"Если ``http_client`` -- это экземпляр HTTP-клиента, "
"``http_client:request()`` выполнит HTTP-запрос, и в случае успешного "
"подключения вернет таблицу с информацией о подключении."

msgid "HTTP method, for example 'GET' or 'POST' or 'PUT'"
msgstr "HTTP-метод, например 'GET', 'POST' или 'PUT'"

msgid "location, for example 'https://tarantool.org/doc'"
msgstr "расположение, например 'https://tarantool.org/doc'"

msgid "optional initial message, for example 'My text string!'"
msgstr "необязательное начальное сообщение, например 'My text string!'"

#, fuzzy
msgid ""
"table of connection options, with any of these components:   * "
"``timeout`` - number of seconds to wait for a ``curl`` API read request"
"    before timing out  * ``ca_path`` - path to a directory holding one or"
" more certificates to    verify the peer with  * ``ca_file`` - path to an"
" SSL certificate file to verify the peer with  * ``verify_host`` - set "
"on/off verification of the certificate's name    (CN) against host. See "
"also    `CURLOPT_SSL_VERIFYHOST "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSL_VERIFYHOST.html>`_  * "
"``verify_peer`` - set on/off verification of the peer's SSL    "
"certificate. See also    `CURLOPT_SSL_VERIFYPEER "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSL_VERIFYPEER.html>`_  * "
"``ssl_key`` - path to a private key file for a TLS and SSL client    "
"certificate. See also    `CURLOPT_SSLKEY "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSLKEY.html>`_  * ``ssl_cert`` - "
"path to a SSL client certificate file. See also    `CURLOPT_SSLCERT "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSLCERT.html>`_  * ``headers`` - "
"table of HTTP headers  * ``keepalive_idle`` - delay, in seconds, that the"
" operating system    will wait while the connection is idle before "
"sending keepalive    probes. See also    `CURLOPT_TCP_KEEPIDLE "
"<https://curl.haxx.se/libcurl/c/CURLOPT_TCP_KEEPIDLE.html>`_    and the "
"note below about keepalive_interval.  * ``keepalive_interval`` - the "
"interval, in seconds, that the operating    system will wait between "
"sending keepalive probes. See also    `CURLOPT_TCP_KEEPINTVL "
"<https://curl.haxx.se/libcurl/c/CURLOPT_TCP_KEEPINTVL.html>`_.    If both"
" keepalive_idle and keepalive_interval are set, then    Tarantool will "
"also set HTTP keepalive headers: Connection:Keep-Alive    and Keep-"
"Alive:timeout=<keepalive_idle>.    Otherwise Tarantool will send "
"Connection:close  * ``low_speed_time`` - set the \"low speed time\" -- "
"the time that the    transfer speed should be below the \"low speed "
"limit\" for the library    to consider it too slow and abort. See also"
"    `CURLOPT_LOW_SPEED_TIME "
"<https://curl.haxx.se/libcurl/c/CURLOPT_LOW_SPEED_TIME.html>`_  * "
"``low_speed_limit`` - set the \"low speed limit\" -- the average    "
"transfer speed in bytes per second that the transfer should be below    "
"during \"low speed time\" seconds for the library to consider it to be"
"    too slow and abort. See also    `CURLOPT_LOW_SPEED_LIMIT "
"<https://curl.haxx.se/libcurl/c/CURLOPT_LOW_SPEED_LIMIT.html>`_  * "
"``verbose`` - set on/off verbose mode  * ``unix_socket`` - a socket name "
"to use instead of an Internet address,    for a local connection. The "
"Tarantool server must be built with    ``libcurl`` 7.40 or later. See the"
" :ref:`second example <http-example2>`    later in this section.  * "
"``max_header_name_len`` - the maximal length of a header name. If a "
"header    name is bigger than this value, it is truncated to this length."
"    The default value is '32'."
msgstr ""
"таблица с параметрами подключения, которые могут содержать любые из "
"следующих компонентов:   * ``timeout`` -- количество секунд ожидания "
"API-запроса curl на чтение до превышения времени ожидания  * ``ca_path`` "
"-- путь к директории, где хранятся один или более сертификатов для "
"проверки подключенного узла  * ``ca_file`` -- путь к SSL-сертификату для "
"проверки подключенного узла  * ``verify_host`` -- включение/отключение "
"проверки имени сертификата (CN) для хоста. См. также    "
"`CURLOPT_SSL_VERIFYHOST "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSL_VERIFYHOST.html>`_  * "
"``verify_peer`` --  включение/отключение проверки SSL-сертификата "
"подключенного узла. См. также    `CURLOPT_SSL_VERIFYPEER "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSL_VERIFYPEER.html>`_  * "
"``ssl_key`` -- путь к файлу закрытого ключа для клиентского "
"TSL-сертификата и SSL-сертификата. См. также    `CURLOPT_SSLKEY "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSLKEY.html>`_  * ``ssl_cert`` --"
" путь к файлу клиентского SSL-сертификата. См. также    `CURLOPT_SSLCERT "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSLCERT.html>`_  * ``headers`` --"
" таблица HTTP-заголовков  * ``keepalive_idle`` -- время задержки в "
"секундах, в течение которого операционная система находится в режиме "
"ожидания подключения до отправки сообщений для поддержания в активном "
"состоянии keepalive. См. также    `CURLOPT_TCP_KEEPALIVE "
"<https://curl.haxx.se/libcurl/c/CURLOPT_TCP_KEEPALIVE.html>`_  * "
"``keepalive_interval`` -- время интервала в секундах, в течение которого "
"операционная система находится в режиме ожидания между отправкой "
"сообщений keepalive. См. также    `CURLOPT_TCP_KEEPIDLE "
"<https://curl.haxx.se/libcurl/c/CURLOPT_TCP_KEEPIDLE.html>`_    и "
"примечание ниже к keepalive_interval.  * ``keepalive_interval`` -- период"
" времени в секундах между отправками сообщений keepalive в операционной "
"системе. См. также    `CURLOPT_TCP_KEEPINTVL "
"<https://curl.haxx.se/libcurl/c/CURLOPT_TCP_KEEPINTVL.html>`_.    Если "
"заданы оба параметр keepalive_idle и keepalive_interval, то    Tarantool "
"отобразит HTTP-заголовки для keepalive: Connection:Keep-Alive    и Keep-"
"Alive:timeout=<keepalive_idle>.    В противном случае, Tarantool отправит"
" Connection:close  * ``low_speed_time``  -- установка \"времени работы с "
"низкой скоростью\" -- времени, в течение которого скорость передачи "
"должна быть ниже \"предела низкой скорости\", чтобы библиотека посчитала "
"работу слишком медленной и завершила ее. См. также    "
"`CURLOPT_LOW_SPEED_TIME "
"<https://curl.haxx.se/libcurl/c/CURLOPT_LOW_SPEED_TIME.html>`_  * "
"``low_speed_limit`` -- установка \"предела низкой скорости\" -- средней "
"скорости передачи в байтах в секунду, ниже которой должна быть скорость "
"передачи, чтобы библиотека посчитала работу слишком медленной и завершила"
" ее. См. также    `CURLOPT_LOW_SPEED_LIMIT "
"<https://curl.haxx.se/libcurl/c/CURLOPT_LOW_SPEED_LIMIT.html>`_  * "
"``verbose`` -- включение/отключение режима отображения подробной "
"информации  * ``unix_socket`` -- имя сокета, которое используется вместо "
"адреса в сети Интернет,    для локального соединения. Сборка сервера "
"Tarantool'а должна осуществляться с помощью ``libcurl`` 7.40 или более "
"поздней версии. См. :ref:`второй пример <http-example2>` далее в разделе."
"  * ``max_header_name_len`` -- максимальная длина имени заголовка. Если "
"имя заголовка больше данного значения, оно усекается до такой длины. По "
"умолчанию, '32'."

msgid "table of connection options, with any of these components:"
msgstr ""
"таблица с параметрами подключения, которые могут содержать любые из "
"следующих компонентов:"

#, fuzzy
msgid ""
"``timeout`` - number of seconds to wait for a ``curl`` API read request "
"before timing out"
msgstr ""
"``timeout`` -- количество секунд ожидания API-запроса curl на чтение до "
"превышения времени ожидания"

msgid ""
"``ca_path`` - path to a directory holding one or more certificates to "
"verify the peer with"
msgstr ""
"``ca_path`` -- путь к директории, где хранятся один или более "
"сертификатов для проверки подключенного узла"

msgid "``ca_file`` - path to an SSL certificate file to verify the peer with"
msgstr "``ca_file`` -- путь к SSL-сертификату для проверки подключенного узла"

msgid ""
"``verify_host`` - set on/off verification of the certificate's name (CN) "
"against host. See also `CURLOPT_SSL_VERIFYHOST "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSL_VERIFYHOST.html>`_"
msgstr ""
"``verify_host`` -- включение/отключение проверки имени сертификата (CN) "
"для хоста. См. также    `CURLOPT_SSL_VERIFYHOST "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSL_VERIFYHOST.html>`_"

msgid ""
"``verify_peer`` - set on/off verification of the peer's SSL certificate. "
"See also `CURLOPT_SSL_VERIFYPEER "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSL_VERIFYPEER.html>`_"
msgstr ""
"``verify_peer`` --  включение/отключение проверки SSL-сертификата "
"подключенного узла. См. также `CURLOPT_SSL_VERIFYPEER "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSL_VERIFYPEER.html>`_"

msgid ""
"``ssl_key`` - path to a private key file for a TLS and SSL client "
"certificate. See also `CURLOPT_SSLKEY "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSLKEY.html>`_"
msgstr ""
"``ssl_key`` -- путь к файлу закрытого ключа для клиентского "
"TSL-сертификата и SSL-сертификата. См. также `CURLOPT_SSLKEY "
"<https://curl.haxx.se/libcurl/c/CURLOPT_SSLKEY.html>`_"

msgid ""
"``ssl_cert`` - path to a SSL client certificate file. See also "
"`CURLOPT_SSLCERT <https://curl.haxx.se/libcurl/c/CURLOPT_SSLCERT.html>`_"
msgstr ""
"``ssl_cert`` -- путь к файлу клиентского SSL-сертификата. См. также    "
"`CURLOPT_SSLCERT <https://curl.haxx.se/libcurl/c/CURLOPT_SSLCERT.html>`_"

msgid "``headers`` - table of HTTP headers"
msgstr "``headers`` -- таблица HTTP-заголовков"

msgid ""
"``keepalive_idle`` - delay, in seconds, that the operating system will "
"wait while the connection is idle before sending keepalive probes. See "
"also `CURLOPT_TCP_KEEPIDLE "
"<https://curl.haxx.se/libcurl/c/CURLOPT_TCP_KEEPIDLE.html>`_ and the note"
" below about keepalive_interval."
msgstr ""
"``keepalive_idle`` -- время задержки в секундах, в течение которого "
"операционная система находится в режиме ожидания подключения до отправки "
"сообщений для поддержания в активном состоянии keepalive. См. также "
"`CURLOPT_TCP_KEEPIDLE "
"<https://curl.haxx.se/libcurl/c/CURLOPT_TCP_KEEPIDLE.html>`_ и примечание"
" ниже к keepalive_interval."

msgid ""
"``keepalive_interval`` - the interval, in seconds, that the operating "
"system will wait between sending keepalive probes. See also "
"`CURLOPT_TCP_KEEPINTVL "
"<https://curl.haxx.se/libcurl/c/CURLOPT_TCP_KEEPINTVL.html>`_. If both "
"keepalive_idle and keepalive_interval are set, then Tarantool will also "
"set HTTP keepalive headers: Connection:Keep-Alive and Keep-"
"Alive:timeout=<keepalive_idle>. Otherwise Tarantool will send "
"Connection:close"
msgstr ""
"``keepalive_interval`` -- период времени в секундах между отправками "
"сообщений keepalive в операционной системе. См. также "
"`CURLOPT_TCP_KEEPINTVL "
"<https://curl.haxx.se/libcurl/c/CURLOPT_TCP_KEEPINTVL.html>`_. Если "
"заданы оба параметр keepalive_idle и keepalive_interval, то Tarantool "
"отобразит HTTP-заголовки для keepalive: Connection:Keep-Alive и Keep-"
"Alive:timeout=<keepalive_idle>. В противном случае, Tarantool отправит "
"Connection:close."

msgid ""
"``low_speed_time`` - set the \"low speed time\" -- the time that the "
"transfer speed should be below the \"low speed limit\" for the library to"
" consider it too slow and abort. See also `CURLOPT_LOW_SPEED_TIME "
"<https://curl.haxx.se/libcurl/c/CURLOPT_LOW_SPEED_TIME.html>`_"
msgstr ""
"``low_speed_time`` -- установка \"времени работы с низкой скоростью\" -- "
"времени, в течение которого скорость передачи должна быть ниже \"предела "
"низкой скорости\", чтобы библиотека посчитала работу слишком медленной и "
"завершила ее. См. также    `CURLOPT_LOW_SPEED_TIME "
"<https://curl.haxx.se/libcurl/c/CURLOPT_LOW_SPEED_TIME.html>`_"

msgid ""
"``low_speed_limit`` - set the \"low speed limit\" -- the average transfer"
" speed in bytes per second that the transfer should be below during \"low"
" speed time\" seconds for the library to consider it to be too slow and "
"abort. See also `CURLOPT_LOW_SPEED_LIMIT "
"<https://curl.haxx.se/libcurl/c/CURLOPT_LOW_SPEED_LIMIT.html>`_"
msgstr ""
"``low_speed_limit`` -- установка \"предела низкой скорости\" -- средней "
"скорости передачи в байтах в секунду, ниже которой должна быть скорость "
"передачи, чтобы библиотека посчитала работу слишком медленной и завершила"
" ее. См. также    `CURLOPT_LOW_SPEED_LIMIT "
"<https://curl.haxx.se/libcurl/c/CURLOPT_LOW_SPEED_LIMIT.html>`_"

msgid "``verbose`` - set on/off verbose mode"
msgstr ""
"``verbose`` -- включение/отключение режима отображения подробной "
"информации"

msgid ""
"``unix_socket`` - a socket name to use instead of an Internet address, "
"for a local connection. The Tarantool server must be built with "
"``libcurl`` 7.40 or later. See the :ref:`second example <http-example2>` "
"later in this section."
msgstr ""
"``unix_socket`` -- имя сокета, которое используется вместо адреса в сети "
"Интернет,    для локального соединения. Сборка сервера Tarantool'а должна"
" осуществляться с помощью ``libcurl`` 7.40 или более поздней версии. См. "
":ref:`второй пример <http-example2>` далее в разделе."

msgid ""
"``max_header_name_len`` - the maximal length of a header name. If a "
"header name is bigger than this value, it is truncated to this length. "
"The default value is '32'."
msgstr ""
"``max_header_name_len`` -- максимальная длина имени заголовка. Если имя "
"заголовка больше данного значения, оно усекается до такой длины. По "
"умолчанию, '32'."

#, fuzzy
msgid "response information, with all of these components:"
msgstr "информация о подключении со всеми следующими компонентами:"

msgid "``status`` - HTTP response status"
msgstr "``status`` -- статус HTTP-ответа"

msgid "``reason`` - HTTP response status text"
msgstr "``reason`` -- текст статуса HTTP-ответа"

msgid "``headers`` - a Lua table with normalized HTTP headers"
msgstr "``headers`` -- Lua-таблица с нормализованными HTTP-заголовками"

msgid "``body`` - response body"
msgstr "``body`` -- тело сообщения-ответа"

msgid "``proto`` - protocol version"
msgstr "``proto`` -- версия протокола"

#, fuzzy
msgid "``cookies`` - a Lua table with response cookies and their options"
msgstr "``headers`` -- Lua-таблица с нормализованными HTTP-заголовками"

msgid "table"
msgstr "таблица"

msgid ""
"The ``cookies`` component contains a Lua table where the key is a cookie "
"name. The value is an array of two elements where the first one is the "
"cookie value and the second one is an array with the cookie’s options. "
"Possible options are: \"Expires\", \"Max-Age\", \"Domain\", \"Path\", "
"\"Secure\", \"HttpOnly\", \"SameSite\". Note that an option is a string "
"with '=' splitting the option's name and its value. `Here "
"<https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies>`_ you can "
"find more info."
msgstr ""

#, fuzzy
msgid "**Example**"
msgstr "**Пример:**"

msgid "You can use cookies information like this:"
msgstr ""

msgid ""
"tarantool> "
"require('http.client').get('https://www.tarantool.io/en/').cookies\n"
"---\n"
"- csrftoken:\n"
"  - bWJVkBybvX9LdJ8uLPOTVrit5P3VbRjE3potYVOuUnsSjYT5ahghDV06tXRkfnOl\n"
"  - - Max-Age=31449600\n"
"    - Path=/\n"
"...\n"
"\n"
"tarantool> cookies = "
"require('http.client').get('https://www.tarantool.io/en/').cookies\n"
"---\n"
"...\n"
"\n"
"tarantool> options = cookies['csrftoken'][2]\n"
"---\n"
"...\n"
"\n"
"tarantool> for _, option in ipairs(options) do\n"
"         > if option:startswith('csrftoken cookie's Max-Age = ') then\n"
"         > print(option)\n"
"         > end\n"
"         > end\n"
"\n"
"csrftoken cookie's Max-Age = 31449600\n"
"---\n"
"...\n"
"\n"
"tarantool>"
msgstr ""

msgid "The following \"shortcuts\" exist for requests:"
msgstr "Для запросов существуют следующие ускоренные методы:"

msgid ""
"``http_client:get(url, options)`` - shortcut for "
"``http_client:request(\"GET\", url, nil, opts)``"
msgstr ""
"``http_client:get(url, options)`` -- вспомогательный метод для "
"``http_client:request(\"GET\", url, nil, opts)``"

msgid ""
"``http_client:post (url, body, options)`` - shortcut for "
"``http_client:request(\"POST\", url, body, opts)``"
msgstr ""
"``http_client:post (url, body, options)`` -- ускоренный метод для "
"``http_client:request(\"POST\", url, body, opts)``"

msgid ""
"``http_client:put(url, body, options)`` - shortcut for "
"``http_client:request(\"PUT\", url, body, opts)``"
msgstr ""
"``http_client:put(url, body, options)`` -- ускоренный метод для "
"``http_client:request(\"PUT\", url, body, opts)``"

msgid ""
"``http_client:patch(url, body, options)`` - shortcut for "
"``http_client:request(\"PATCH\", url, body, opts)``"
msgstr ""
"``http_client:patch(url, body, options)`` -- ускоренный метод для "
"``http_client:request(\"PATCH\", url, body, opts)``"

msgid ""
"``http_client:options(url, options)`` - shortcut for "
"``http_client:request(\"OPTIONS\", url, nil, opts)``"
msgstr ""
"``http_client:options(url, options)`` -- ускоренный метод для "
"``http_client:request(\"OPTIONS\", url, nil, opts)``"

msgid ""
"``http_client:head(url, options)`` - shortcut for "
"``http_client:request(\"HEAD\", url, nil, opts)``"
msgstr ""
"``http_client:head(url, options)`` -- ускоренный метод для "
"``http_client:request(\"HEAD\", url, nil, opts)``"

msgid ""
"``http_client:delete(url, options)`` - shortcut for "
"``http_client:request(\"DELETE\", url, nil, opts)``"
msgstr ""
"``http_client:delete(url, options)`` -- ускоренный метод для "
"``http_client:request(\"DELETE\", url, nil, opts)``"

msgid ""
"``http_client:trace(url, options)`` - shortcut for "
"``http_client:request(\"TRACE\", url, nil, opts)``"
msgstr ""
"``http_client:trace(url, options)`` -- ускоренный метод для "
"``http_client:request(\"TRACE\", url, nil, opts)``"

msgid ""
"``http_client:connect:(url, options)`` - shortcut for "
"``http_client:request(\"CONNECT\", url, nil, opts)``"
msgstr ""
"``http_client:connect:(url, options)`` -- ускоренный метод для "
"``http_client:request(\"CONNECT\", url, nil, opts)``"

msgid ""
"Requests may be influenced by environment variables, for example users "
"can set up an http proxy by setting :samp:`HTTP_PROXY={proxy}` before "
"initiating any requests. See the web page document `Environment variables"
" libcurl understands <https://curl.haxx.se/libcurl/c/libcurl-env.html>`_."
msgstr ""
"На запросы могут влиять переменные окружения, например, пользователи "
"могут задать прокси-сервер с HTTP, указав "
":samp:`HTTP_PROXY={прокси-сервер}` перед выполнением каких-либо запросов."
" См. веб-документ по переменным окружения `Environment variables libcurl "
"understands <https://curl.haxx.se/libcurl/c/libcurl-env.html>`_."

msgid "The ``http_client:stat()`` function returns a table with statistics:"
msgstr ""
"Функция ``http_client:stat()`` возвращает таблицу со статистическими "
"данными:"

msgid "``active_requests`` - number of currently executing requests"
msgstr "``active_requests`` -- количество активно выполняемых запросов"

msgid "``sockets_added`` - total number of sockets added into an event loop"
msgstr ""
"``sockets_added`` -- общее количество сокетов, добавленных в событийный "
"цикл"

msgid "``sockets_deleted`` - total number of sockets sockets from an event loop"
msgstr ""
"``sockets_deleted`` -- общее количество сокетов, удаленных из событийного"
" цикла"

msgid "``total_requests`` - total number of requests"
msgstr "``total_requests`` -- общее количество запросов"

msgid ""
"``http_200_responses`` - total number of requests which have returned "
"code HTTP 200"
msgstr ""
"``http_200_responses`` -- общее количество запросов, которые вернули код "
"состояния HTTP 200"

msgid ""
"``http_other_responses`` - total number of requests which have not "
"returned code HTTP 200"
msgstr ""
"``http_other_responses`` -- общее количество запросов, которые не вернули"
" код состояния HTTP 200"

#, fuzzy
msgid ""
"``failed_requests`` - total number of requests which have failed "
"including system errors, ``curl`` errors, and HTTP errors"
msgstr ""
"``failed_requests`` -- общее количество невыполненных запросов, включая "
"системные ошибки, ошибки curl и HTTP-ошибки"

msgid "**Example 1:**"
msgstr "**Пример 1:**"

msgid ""
"Connect to an HTTP server, look at the size of the response for a 'GET' "
"request, and look at the statistics for the session."
msgstr ""
"Подключение к HTTP-серверу, просмотр размера ответа на 'GET'-запрос и "
"просмотр статистики по сессии."

msgid ""
"tarantool> http_client = require('http.client').new()\n"
"---\n"
"...\n"
"tarantool> r = http_client:request('GET','http://tarantool.org')\n"
"---\n"
"...\n"
"tarantool> string.len(r.body)\n"
"---\n"
"- 21725\n"
"...\n"
"tarantool> http_client:stat()\n"
"---\n"
"- total_requests: 1\n"
"  sockets_deleted: 2\n"
"  failed_requests: 0\n"
"  active_requests: 0\n"
"  http_other_responses: 0\n"
"  http_200_responses: 1\n"
"  sockets_added: 2"
msgstr ""
"tarantool> http_client = require('http.client').new()\n"
"---\n"
"...\n"
"tarantool> r = http_client:request('GET','http://tarantool.org')\n"
"---\n"
"...\n"
"tarantool> string.len(r.body)\n"
"---\n"
"- 21725\n"
"...\n"
"tarantool> http_client:stat()\n"
"---\n"
"- total_requests: 1\n"
"  sockets_deleted: 2\n"
"  failed_requests: 0\n"
"  active_requests: 0\n"
"  http_other_responses: 0\n"
"  http_200_responses: 1\n"
"  sockets_added: 2"

msgid "**Example 2:**"
msgstr "**Пример 2:**"

msgid "Start two Tarantool instances on the same computer."
msgstr "Запустите два экземпляра Tarantool'а на одном компьютере."

msgid "On the first Tarantool instance, listen on a Unix socket:"
msgstr "В первом экземпляре Tarantool'а включите прослушивание Unix-сокета:"

msgid "box.cfg{listen='/tmp/unix_domain_socket.sock'}"
msgstr "box.cfg{listen='/tmp/unix_domain_socket.sock'}"

msgid "On the second Tarantool instance, send via ``http_client``:"
msgstr "На втором экземпляре Tarantool'а отправьте с помощью ``http_client``:"

msgid ""
"box.cfg{}\n"
"http_client = require('http.client').new({5})\n"
"http_client:put('http://localhost/','body',{unix_socket = "
"'/tmp/unix_domain_socket.sock'})"
msgstr ""
"box.cfg{}\n"
"http_client = require('http.client').new({5})\n"
"http_client:put('http://localhost/','body',{unix_socket = "
"'/tmp/unix_domain_socket.sock'})"

msgid ""
"Terminal #1 will show an error message: \"Invalid MsgPack\". This is not "
"useful but demonstrates the syntax and demonstrates that was sent was "
"received."
msgstr ""
"Терминал №1 покажет сообщение об ошибке: \"Invalid MsgPack\". Данный "
"пример бесполезен, но наглядно демонстрирует синтаксис и получение "
"отправленного сообщения."
