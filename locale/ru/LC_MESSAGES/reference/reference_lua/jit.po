
msgid "Module jit"
msgstr ""

msgid "Overview"
msgstr ""

msgid ""
"The ``jit`` module has functions for tracing the `LuaJIT "
"<http://luajit.org>`_ Just-In-Time compiler's progress, showing the byte-"
"code or assembler output that the compiler produces, and in general "
"providing information about what LuaJIT does with Lua code."
msgstr ""

msgid "Index"
msgstr ""

msgid "Below is a list of all ``jit`` functions."
msgstr ""

msgid "In this document, we will use:"
msgstr ""

msgid "``jit_dis_x64`` for ``require('jit.dis_x64')``,"
msgstr ""

msgid "``jit_v`` for ``require('jit.v')``,"
msgstr ""

msgid "``jit_dump`` for ``require('jit.dump')``."
msgstr ""

msgid "Name"
msgstr ""

msgid "Use"
msgstr ""

msgid ":ref:`jit_bc.dump() <jit-bc-dump>`"
msgstr ""

msgid "Print the byte code of a function"
msgstr ""

msgid ":ref:`jit_dis_x86.disass() <jit-dis-x86-disass>`"
msgstr ""

msgid "Print the i386 assembler code of a string of bytes"
msgstr ""

msgid ":ref:`jit_dis_x64.disass() <jit-dis-x64-disass>`"
msgstr ""

msgid "Print the x86-64 assembler code of a string of bytes"
msgstr ""

msgid ""
":ref:`jit_dump.on() <jit-dump-on>`, :ref:`jit_dump.off() <jit-dump-off>`"
msgstr ""

msgid "Print the intermediate or machine code of the following Lua code"
msgstr ""

msgid ":ref:`jit_v.on() <jit-v-on>`, :ref:`jit_v.off() <jit-v-off>`"
msgstr ""

msgid "Print a trace of LuaJIT's progress compiling and interpreting code"
msgstr ""

msgid "Prints the byte code of a function."
msgstr ""

msgid "**Example:**"
msgstr ""

msgid ""
"tarantool> jit_bc = require('jit.bc')\n"
"---\n"
"...\n"
"\n"
"tarantool> function f()\n"
"         > print(\"D\")\n"
"         > end\n"
"---\n"
"...\n"
"\n"
"tarantool> jit_bc.dump(f)\n"
"-- BYTECODE -- 0x01113163c8:1-3\n"
"0001    GGET     0   0      ; \"print\"\n"
"0002    KSTR     2   1      ; \"D\"\n"
"0003    CALL     0   1   2\n"
"0004    RET0     0   1\n"
"\n"
"---\n"
"..."
msgstr ""

msgid ""
"function f()\n"
"  print(\"D\")\n"
"end\n"
"require('jit.bc').dump(f)"
msgstr ""

msgid ""
"For a list of available options, read `the source code of bc.lua "
"<https://github.com/tarantool/luajit/tree/tarantool-1.7/src/jit/bc.lua>`_."
msgstr ""

msgid "Prints the i386 assembler code of a string of bytes."
msgstr ""

msgid ""
"tarantool> -- Disassemble hexadecimal 97 which is the x86 code for xchg eax, edi\n"
"---\n"
"...\n"
"\n"
"tarantool> jit_dis_x86 = require('jit.dis_x86')\n"
"---\n"
"...\n"
"\n"
"tarantool> jit_dis_86.disass('\\x97')\n"
"00000000  97                xchg eax, edi\n"
"---\n"
"..."
msgstr ""

msgid ""
"For a list of available options, read `the source code of dis_x86.lua "
"<https://github.com/tarantool/luajit/tree/tarantool-1.7/src/jit/dis_x86.lua>`_."
msgstr ""

msgid "Prints the x86-64 assembler code of a string of bytes."
msgstr ""

msgid ""
"tarantool> -- Disassemble hexadecimal 97 which is the x86-64 code for xchg eax, edi\n"
"---\n"
"...\n"
"\n"
"tarantool> jit_dis_x64 = require('jit.dis_x64')\n"
"---\n"
"...\n"
"\n"
"tarantool> jit_dis_64.disass('\\x97')\n"
"00000000  97                xchg eax, edi\n"
"---\n"
"..."
msgstr ""

msgid ""
"For a list of available options, read `the source code of dis_x64.lua "
"<https://github.com/tarantool/luajit/tree/tarantool-1.7/src/jit/dis_x64.lua>`_."
msgstr ""

msgid "Prints the intermediate or machine code of the following Lua code."
msgstr ""

msgid ""
"tarantool> -- Show the machine code of a Lua \"for\" loop\n"
"tarantool> jit_dump = require('jit.dump')\n"
"tarantool> jit_dump.on('m')\n"
"tarantool> x = 0;\n"
"tarantool> for i = 1, 1e6 do\n"
"         > x = x + i\n"
"         > end\n"
"---- TRACE 1 start 0x01047fbc38:1\n"
"---- TRACE 1 mcode 148\n"
"104c29f6b  mov dword [r14-0xed0], 0x1\n"
"104c29f76  cvttsd2si ebp, [rdx]\n"
"104c29f7a  rorx rbx, [rdx-0x10], 0x2f\n"
"104c29f81  shr rbx, 0x11\n"
"104c29f85  mov rdx, [rbx+0x10]\n"
"104c29f89  cmp dword [rdx+0x34], +0x3f\n"
"104c29f8d  jnz 0x104c1a010  ->0\n"
"104c29f93  mov rcx, [rdx+0x28]\n"
"104c29f97  mov rdi, 0xfffd8001046b3d58\n"
"104c29fa1  cmp rdi, [rcx+0x320]\n"
"104c29fa8  jnz 0x104c1a010  ->0\n"
"104c29fae  lea rax, [rcx+0x318]\n"
"104c29fb5  cmp dword [rax+0x4], 0xfff90000\n"
"104c29fbc  jnb 0x104c1a010  ->0\n"
"104c29fc2  xorps xmm7, xmm7\n"
"104c29fc5  cvtsi2sd xmm7, ebp\n"
"104c29fc9  addsd xmm7, [rax]\n"
"104c29fcd  movsd [rax], xmm7\n"
"104c29fd1  add ebp, +0x01\n"
"104c29fd4  cmp ebp, 0x000f4240\n"
"104c29fda  jg 0x104c1a014   ->1\n"
"->LOOP:\n"
"104c29fe0  xorps xmm6, xmm6\n"
"104c29fe3  cvtsi2sd xmm6, ebp\n"
"104c29fe7  addsd xmm7, xmm6\n"
"104c29feb  movsd [rax], xmm7\n"
"104c29fef  add ebp, +0x01\n"
"104c29ff2  cmp ebp, 0x000f4240\n"
"104c29ff8  jle 0x104c29fe0  ->LOOP\n"
"104c29ffa  jmp 0x104c1a01c  ->3\n"
"---- TRACE 1 stop -> loop\n"
"\n"
"---\n"
"...\n"
"\n"
"tarantool> print(x)\n"
"500000500000\n"
"---\n"
"...\n"
"\n"
"tarantool> jit_dump.off()\n"
"---\n"
"..."
msgstr ""

msgid ""
"For a list of available options, read `the source code of dump.lua "
"<https://github.com/tarantool/luajit/tree/tarantool-1.7/src/jit/dump.lua>`_."
msgstr ""

msgid "Prints a trace of LuaJIT's progress compiling and interpreting code."
msgstr ""

msgid ""
"tarantool> -- Show what LuaJIT is doing for a Lua \"for\" loop\n"
"tarantool> jit_v = require('jit.v')\n"
"tarantool> jit_v.on()\n"
"tarantool> l = 0\n"
"tarantool> for i = 1, 1e6 do\n"
"         >     l = l + i\n"
"         > end\n"
"[TRACE   3 \"for i = 1, 1e6 do\n"
"    l = l + i\n"
"end\":1 loop]\n"
"---\n"
"...\n"
"\n"
"tarantool> print(l)\n"
"500000500000\n"
"---\n"
"...\n"
"\n"
"tarantool> jit_v.off()\n"
"---\n"
"..."
msgstr ""

msgid ""
"For a list of available options, read `the source code of v.lua "
"<https://github.com/tarantool/luajit/tree/tarantool-1.7/src/jit/v.lua>`_."
msgstr ""
