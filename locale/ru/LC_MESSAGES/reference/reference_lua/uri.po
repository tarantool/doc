msgid ""
msgstr ""
"Plural-Forms: nplurals=4; plural=((n%10==1 && n%100!=11) ? 0 : ((n%10 >= 2 && n%10 <=4 && (n%100 < 12 || n%100 > 14)) ? 1 : ((n%10 == 0 || (n%10 >= 5 && n%10 <=9)) || (n%100 >= 11 && n%100 <= 14)) ? 2 : 3));\n"
"X-Crowdin-Project: tarantool-docs\n"
"X-Crowdin-Project-ID: 442986\n"
"X-Crowdin-Language: ru\n"
"X-Crowdin-File: /en/reference/reference_lua/uri.pot\n"
"X-Crowdin-File-ID: 1248\n"
"Project-Id-Version: tarantool-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Russian\n"
"Language: ru_RU\n"
"PO-Revision-Date: 2021-04-16 05:03\n"

msgid "Module `uri`"
msgstr "Модуль `uri`"

msgid "Overview"
msgstr "Общие сведения"

msgid "A \"URI\" is a \"Uniform Resource Identifier\". The `IETF standard <https://www.ietf.org/rfc/rfc2396.txt>`_ says a URI string looks like this:"
msgstr "URI -- это Унифицированный идентификатор ресурса (Uniform Resource Identifier). Согласно `стандарту IETF <https://www.ietf.org/rfc/rfc2396.txt>`_, URI-строка выглядит следующим образом:"

msgid "[scheme:]scheme-specific-part[#fragment]"
msgstr "[схема:]специальная-часть-схемы[#фрагмент]"

msgid "A common type, a hierarchical URI, looks like this:"
msgstr "Общий тип, иерархический URI, выглядит так:"

msgid "[scheme:][//authority][path][?query][#fragment]"
msgstr "[схема:][//адрес][путь][?запрос][#фрагмент]"

msgid "For example the string ``'https://tarantool.org/x.html#y'`` has three components:"
msgstr "Например, строка ``'https://tarantool.org/x.html#y'`` содержит три компонента:"

msgid "``https`` is the scheme,"
msgstr "``https`` -- схема,"

msgid "``tarantool.org/x.html`` is the path,"
msgstr "``tarantool.org/x.html`` -- путь,"

msgid "``y`` is the fragment."
msgstr "``y`` -- фрагмент."

msgid "Tarantool's URI module provides routines which convert URI strings into their components, or turn components into URI strings."
msgstr "Модуль Tarantool'а URI включает в себя процедуры для разложения URI-строк на компоненты или объединения компонентов в URI-строку."

msgid "Index"
msgstr "Указатель"

msgid "Below is a list of all ``uri`` functions."
msgstr "Ниже приведен перечень всех функций модуля ``uri``."

msgid "Name"
msgstr "Имя"

msgid "Use"
msgstr "Назначение"

msgid ":ref:`uri.parse() <uri-parse>`"
msgstr ":ref:`uri.parse() <uri-parse>`"

msgid "Get a table of URI components"
msgstr "Получение таблицы URI-компонентов"

msgid ":ref:`uri.format() <uri-format>`"
msgstr ":ref:`uri.format() <uri-format>`"

msgid "Construct a URI from components"
msgstr "Создание URI из компонентов"

msgid "Parameters"
msgstr "Параметры"

msgid "a Uniform Resource Identifier"
msgstr "Унифицированный идентификатор ресурса"

msgid "return"
msgstr "возвращает"

msgid "URI-components-table. Possible components are fragment, host, login, password, path, query, scheme, service."
msgstr "таблица с компонентами URI. Доступные компоненты: fragment (фрагмент), host (хост), login (имя для входа), password (пароль), path (путь), query (запрос), scheme (схема), service (сервис)."

msgid "rtype"
msgstr "тип возвращаемого значения"

msgid "Table"
msgstr "Таблица"

msgid "**Example:**"
msgstr "**Пример:**"

msgid "tarantool> uri = require('uri')\n"
"---\n"
"...\n\n"
"tarantool> uri.parse('http://x.html#y')\n"
"---\n"
"- host: x.html\n"
"  scheme: http\n"
"  fragment: y\n"
"..."
msgstr "tarantool> uri = require('uri')\n"
"---\n"
"...\n\n"
"tarantool> uri.parse('http://x.html#y')\n"
"---\n"
"- host: x.html\n"
"  scheme: http\n"
"  fragment: y\n"
"..."

msgid "a series of name:value pairs, one for each component"
msgstr "ряд пар ключ-значение, одна для каждого компонента"

msgid "boolean. If this is supplied and is ``true``, then the password component is rendered in clear text, otherwise it is omitted."
msgstr "логическое значение. Если указать значение ``true``, то компонент пароля отображается открытым текстом, в остальных случаях не отображается."

msgid "URI-string. Thus uri.format() is the reverse of uri.parse()."
msgstr "URI-строка. Таким образом, uri.format() -- это операция, обратная uri.parse()."

msgid "string"
msgstr "строка"

msgid "tarantool> uri.format({host = 'x.html', scheme = 'http', fragment = 'y'})\n"
"---\n"
"- http://x.html#y\n"
"..."
msgstr "tarantool> uri.format({host = 'x.html', scheme = 'http', fragment = 'y'})\n"
"---\n"
"- http://x.html#y\n"
"..."

