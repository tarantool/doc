
msgid "Module uuid"
msgstr "Модуль uuid"

msgid "Overview"
msgstr "Общие сведения"

msgid ""
"A \"UUID\" is a `Universally unique identifier "
"<https://en.wikipedia.org/wiki/Universally_unique_identifier>`_. If an "
"application requires that a value be unique only within a single computer or"
" on a single database, then a simple counter is better than a UUID, because "
"getting a UUID is time-consuming (it requires a `syscall "
"<https://en.wikipedia.org/wiki/Syscall>`_). For clusters of computers, or "
"widely distributed applications, UUIDs are better. Tarantool generates UUIDs"
" following the rules for RFC 4122 `version 4 variant 1 "
"<https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)>`_."
msgstr ""
"UUID означает `универсальный уникальный идентификатор "
"<https://ru.wikipedia.org/wiki/UUID>`_. Если приложение требует, чтобы "
"значение было уникальным в рамках одной машины или одной БД, лучше "
"использовать простой счетчик, а не UUID. Это связано с тем, что получать "
"UUID-значения времязатратно и требует `системного вызова "
"<https://ru.wikipedia.org/wiki/%D0%A1%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D0%BD%D1%8B%D0%B9_%D0%B2%D1%8B%D0%B7%D0%BE%D0%B2>`_."
" Используйте UUID для кластеров машин и крупных распределенных приложений. "
"Tarantool генерирует UUID-значения по `варианту 1 версии 4 "
"<https://ru.wikipedia.org/wiki/UUID#%D0%92%D0%B5%D1%80%D1%81%D0%B8%D1%8F_4_(%D1%81%D0%BB%D1%83%D1%87%D0%B0%D0%B9%D0%BD%D1%8B%D0%B9)>`_"
" правил, определенных в RFC 4122."

msgid "API Reference"
msgstr "Справочник по API"

msgid "Below is list of all ``uuid`` functions and members."
msgstr "Ниже приведен перечень всех функций и элементов модуля ``uuid``."

msgid "Name"
msgstr "Имя"

msgid "Use"
msgstr "Назначение"

msgid ":ref:`uuid.NULL <uuid-null>`"
msgstr ":ref:`uuid.NULL <uuid-null>`"

msgid "A nil UUID object"
msgstr "Объект c нулевым UUID"

msgid ""
":ref:`uuid() <uuid-__call>` |br| :ref:`uuid.bin() <uuid-bin>` |br| "
":ref:`uuid.str() <uuid-str>`"
msgstr ""
":ref:`uuid() <uuid-__call>` |br| :ref:`uuid.bin() <uuid-bin>` |br| "
":ref:`uuid.str() <uuid-str>`"

msgid "Get a UUID"
msgstr "Получение UUID"

msgid ":ref:`uuid.new() <uuid-new>`"
msgstr ":ref:`uuid.new() <uuid-new>`"

msgid "Create a UUID"
msgstr "Создание UUID"

msgid ""
":ref:`uuid.fromstr() <uuid-fromstr>` |br| :ref:`uuid.frombin() <uuid-"
"frombin>` |br| :ref:`uuid_object:bin() <uuid-object_bin>` |br| "
":ref:`uuid_object:str() <uuid-object_str>`"
msgstr ""
":ref:`uuid.fromstr() <uuid-fromstr>` |br| :ref:`uuid.frombin() <uuid-"
"frombin>` |br| :ref:`uuid_object:bin() <uuid-object_bin>` |br| "
":ref:`uuid_object:str() <uuid-object_str>`"

msgid "Get a converted UUID"
msgstr "Получение конвертированного UUID"

msgid ":ref:`uuid.is_uuid() <uuid-is_uuid>`"
msgstr ":ref:`uuid.is_uuid() <uuid-is_uuid>`"

msgid "Check if the specified value has UUID type"
msgstr "Проверка, является ли указанное значение UUID"

msgid ":ref:`uuid_object:isnil() <uuid-isnil>`"
msgstr ":ref:`uuid_object:isnil() <uuid-isnil>`"

msgid "Check if a UUID is an all-zero value"
msgstr "Проверка, состоит ли UUID из одних нулей"

msgid ""
"A nil UUID object. Contains the all-zero UUID value -- "
"``00000000-0000-0000-0000-000000000000``."
msgstr ""

msgid ""
"Since version :doc:`2.4.1 </release/2.4.1>`. Create a UUID sequence. You can"
" use it in an index over a :ref:`UUID field <index-box_indexed-field-"
"types>`. For example, to create such index for a space named ``test``, say:"
msgstr ""

msgid ""
"tarantool> box.space.test:create_index(\"pk\", {parts={{field = 1, type = "
"'uuid'}}})"
msgstr ""

msgid "Now you can insert UUIDs into the space:"
msgstr "Теперь можно вставить UUID'ы в спейс:"

msgid ""
"tarantool> box.space.test:insert{uuid.new()}\n"
"---\n"
"- [e631fdcc-0e8a-4d2f-83fd-b0ce6762b13f]\n"
"...\n"
"\n"
"tarantool> box.space.test:insert{uuid.fromstr('64d22e4d-ac92-4a23-899a-e59f34af5479')}\n"
"---\n"
"- [64d22e4d-ac92-4a23-899a-e59f34af5479]\n"
"...\n"
"\n"
"tarantool> box.space.test:select{}\n"
"---\n"
"- - [64d22e4d-ac92-4a23-899a-e59f34af5479]\n"
"- [e631fdcc-0e8a-4d2f-83fd-b0ce6762b13f]\n"
"..."
msgstr ""

msgid "return"
msgstr "возвращает"

msgid "a UUID"
msgstr "UUID"

msgid "rtype"
msgstr "тип возвращаемого значения"

msgid "cdata"
msgstr "cdata."

msgid "Parameters"
msgstr "Параметры"

msgid ""
"Byte order of the resulting UUID:  * ``'l'`` -- little-endian * ``'b'`` -- "
"big-endian * ``'h'``, ``'host'`` -- endianness depends on host (default) * "
"``'n'``, ``'network'`` -- endianness depends on network"
msgstr ""

msgid "Byte order of the resulting UUID:"
msgstr ""

#, fuzzy
msgid "``'l'`` -- little-endian"
msgstr "'l' -- порядок от младшего к старшему,"

#, fuzzy
msgid "``'b'`` -- big-endian"
msgstr "'b' -- порядок от старшего к младшему,"

#, fuzzy
msgid "``'h'``, ``'host'`` -- endianness depends on host (default)"
msgstr "'h' -- порядок зависит от хоста (по умолчанию),"

#, fuzzy
msgid "``'n'``, ``'network'`` -- endianness depends on network"
msgstr "'n' -- порядок зависит от сети."

msgid "16-byte string"
msgstr "16-байтная строка"

msgid "36-byte binary string"
msgstr "36-байтная двоичная строка"

msgid "UUID in 36-byte hexadecimal string"
msgstr "UUID в 36-байтной шестнадцатеричной строке"

msgid "converted UUID"
msgstr "конвертированный UUID"

msgid "UUID in 16-byte binary string"
msgstr "UUID в 16-байтной двоичной строке"

msgid ""
"Byte order of the given string:  * ``'l'`` -- little-endian, * ``'b'`` -- "
"big-endian, * ``'h'``, ``'host'`` -- endianness depends on host (default), *"
" ``'n'``, ``'network'`` -- endianness depends on network."
msgstr ""

msgid "Byte order of the given string:"
msgstr ""

#, fuzzy
msgid "``'l'`` -- little-endian,"
msgstr "'l' -- порядок от младшего к старшему,"

#, fuzzy
msgid "``'b'`` -- big-endian,"
msgstr "'b' -- порядок от старшего к младшему,"

#, fuzzy
msgid "``'h'``, ``'host'`` -- endianness depends on host (default),"
msgstr "'h' -- порядок зависит от хоста (по умолчанию),"

#, fuzzy
msgid "``'n'``, ``'network'`` -- endianness depends on network."
msgstr "'n' -- порядок зависит от сети."

msgid "Since version :doc:`2.6.1 </release/2.6.1>`."
msgstr ""

msgid "a value to check"
msgstr "проверяемое значение"

msgid "``true`` if the specified value is a UUID, and ``false`` otherwise"
msgstr ""
"``true``, если указанное значение имеет тип UUID, в противном случае "
"``false``"

msgid "bool"
msgstr "bool (логический)"

msgid ""
"Byte order of the resulting UUID:  * ``'l'`` -- little-endian, * ``'b'`` -- "
"big-endian, * ``'h'``, ``'host'`` -- endianness depends on host (default), *"
" ``'n'``, ``'network'`` -- endianness depends on network."
msgstr ""

msgid "UUID converted from cdata input value."
msgstr "UUID, сконвертированный из введенного значения формата cdata."

msgid "16-byte binary string"
msgstr "16-байтная двоичная строка"

msgid "36-byte hexadecimal string"
msgstr "36-байтная шестнадцатеричная строка"

msgid ""
"The all-zero UUID value can be expressed as :ref:`uuid.NULL <uuid-null>`, or"
" as ``uuid.fromstr('00000000-0000-0000-0000-000000000000')``. The comparison"
" with an all-zero value can also be expressed as ``uuid_with_type_cdata == "
"uuid.NULL``."
msgstr ""
"Значение UUID из одних нулей может быть выражено как :ref:`uuid.NULL <uuid-"
"null>` или ``uuid.fromstr('00000000-0000-0000-0000-000000000000')``. "
"Сравнение со значением из одних нулей также может быть выражено как "
"``uuid_with_type_cdata == uuid.NULL``."

msgid "true if the value is all zero, otherwise false."
msgstr ""
"true (правда), если значение состоит из одних нулей, в противном случае "
"false (ложь)."

msgid "Example"
msgstr "Пример"

msgid ""
"tarantool> uuid = require('uuid')\n"
"---\n"
"...\n"
"tarantool> uuid(), uuid.bin(), uuid.str()\n"
"---\n"
"- 16ffedc8-cbae-4f93-a05e-349f3ab70baa\n"
"- !!binary FvG+Vy1MfUC6kIyeM81DYw==\n"
"- 67c999d2-5dce-4e58-be16-ac1bcb93160f\n"
"...\n"
"tarantool> uu = uuid()\n"
"---\n"
"...\n"
"tarantool> #uu:bin(), #uu:str(), type(uu), uu:isnil()\n"
"---\n"
"- 16\n"
"- 36\n"
"- cdata\n"
"- false\n"
"..."
msgstr ""
"tarantool> uuid = require('uuid')\n"
"---\n"
"...\n"
"tarantool> uuid(), uuid.bin(), uuid.str()\n"
"---\n"
"- 16ffedc8-cbae-4f93-a05e-349f3ab70baa\n"
"- !!binary FvG+Vy1MfUC6kIyeM81DYw==\n"
"- 67c999d2-5dce-4e58-be16-ac1bcb93160f\n"
"...\n"
"tarantool> uu = uuid()\n"
"---\n"
"...\n"
"tarantool> #uu:bin(), #uu:str(), type(uu), uu:isnil()\n"
"---\n"
"- 16\n"
"- 36\n"
"- cdata\n"
"- false\n"
"..."

#~ msgid ""
#~ "Since version :doc:`2.4.1 </release/2.4.1>`. Create a UUID sequence. You can"
#~ " use it in an index over a :ref:`UUID field "
#~ "<details_about_index_field_types>`. For example, to create such index for a "
#~ "space named ``test``, say:"
#~ msgstr ""

#~ msgid "``byte-order`` can be one of next flags:"
#~ msgstr "``byte-order`` может быть одним из следующих флагов:"

#~ msgid "one of ``'l'``, ``'b'``, ``'h'`` or ``'n'``."
#~ msgstr "один из ``'l'``, ``'b'``, ``'h'`` или ``'n'``."
