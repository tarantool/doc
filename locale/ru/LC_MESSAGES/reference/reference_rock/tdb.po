# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Tarantool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Tarantool 1.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-06 14:05+0000\n"
"PO-Revision-Date: 2019-12-06 16:16+0300\n"
"Last-Translator: \n"
"Language: ru\n"
"Language-Team: \n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

msgid "Module `tdb`"
msgstr "Модуль `tdb`"

msgid ""
"The Tarantool Debugger (abbreviation = ``tdb``) can be used with any Lua "
"program. The operational features include: setting breakpoints, examining"
" variables, going forward one line at a time, backtracing, and showing "
"information about fibers. The display features include: using different "
"colors for different situations, including line numbers, and adding "
"hints."
msgstr ""
"Отладчик Tarantool'а (сокращенно ``tdb``) можно использовать с любой "
"Lua-программой. Рабочие функции: определение точек прерывания, "
"исследование переменных, перебор строк по одной, обратная трассировка и "
"отображение информации о файберах. Функции вывода: использование "
"различных цветов в разных ситуациях, включая номера строк, и добавление "
"подсказок."

msgid ""
"It is not supplied as part of the Tarantool repository; it must be "
"installed separately. Here is the usual way:"
msgstr ""
"Модуль не поставляется в репозитории Tarantool'а, его следует "
"устанавливать отдельно. Это обычно делается следующим образом:"

msgid ""
"$ git clone --recursive https://github.com/Sulverus/tdb\n"
"$ cd tdb\n"
"$ make\n"
"$ sudo make install prefix=/usr/share/tarantool/"
msgstr ""
"$ git clone --recursive https://github.com/Sulverus/tdb\n"
"$ cd tdb\n"
"$ make\n"
"$ sudo make install prefix=/usr/share/tarantool/"

msgid ""
"To initiate ``tdb`` within a Lua program and set a breakpoint, edit the "
"program to include these lines:"
msgstr ""
"Чтобы запустить ``tdb`` в рамках Lua-программы и определить точку "
"прерывания, включите в программу следующие строки:"

msgid ""
"tdb = require('tdb')\n"
"tdb.start()"
msgstr ""
"tdb = require('tdb')\n"
"tdb.start()"

msgid ""
"To start the debugging session, execute the Lua program. Execution will "
"stop at the breakpoint, and it will be possible to enter debugging "
"commands."
msgstr ""
"Чтобы начать сессию отладки, выполните Lua-программу: выполнение "
"остановится на точке прерывания, и можно будет вводить команды отладчика."

msgid "Debugger Commands"
msgstr "Команды отладчика"

msgid ":codebold:`bt`"
msgstr ":codebold:`bt`"

msgid ""
"Backtrace -- show the stack (in red), with program/function names and "
"line numbers of whatever has been invoked to reach the current line."
msgstr ""
"Обратная трассировка -- отображение стека (красным) с именами "
"программы/функции и номерами строк, выполнение которых привело к текущей "
"строке."

msgid ":codebold:`c`"
msgstr ":codebold:`c`"

msgid "Continue till next breakpoint or till program ends."
msgstr ""
"Продолжение выполнения до следующей точки прерывания или до окончания "
"программы."

msgid ":codebold:`e`"
msgstr ":codebold:`e`"

msgid ""
"Enter evaluation mode. When the program is in evaluation mode, one can "
"execute certain Lua statements that would be valid in the context. This "
"is particularly useful for displaying the values of the program's "
"variables. Other debugger commands will not work until one exits "
"evaluation mode by typing :codebold:`-e`."
msgstr ""
"Вход в режим вычисления. Когда программа находится в режиме вычисления, "
"можно выполнять определенные запросы, которые будут действовать с точки "
"зрения контекста. Это особенно полезно для отображения значений "
"переменных программы. Другие команды отладчика не будут работать, пока не"
" выйти из режима оценки, набрав: :codebold:`-e`."

msgid ":codebold:`-e`"
msgstr ":codebold:`-e`"

msgid "Exit evaluation mode."
msgstr "Выход из режима оценка."

msgid ":codebold:`f`"
msgstr ":codebold:`f`"

msgid ""
"Display the fiber id, the program name, and the percentage of memory "
"used, as a table."
msgstr ""
"Отображение идентификатора файбера, имени программы и процентного "
"соотношения использованной памяти в виде таблицы."

msgid ":codebold:`n`"
msgstr ":codebold:`n`"

msgid "Go to the next line, skipping over any function calls."
msgstr "Переход на следующую строку с пропуском любых вызовов функций."

msgid ":codebold:`globals`"
msgstr ":codebold:`globals`"

msgid "Display names of variables or functions which are defined as global."
msgstr "Отображение имен переменных или функций, которые являются глобальными."

msgid ":codebold:`h`"
msgstr ":codebold:`h`"

msgid "Display a list of debugger commands."
msgstr "Отображение списка команд отладчика."

msgid ":codebold:`locals`"
msgstr ":codebold:`locals`"

msgid ""
"Display names and values of variables, for example the control variables "
"of a Lua \"for\" statement."
msgstr ""
"Отображение имен и значений переменных, например, переменных для "
"управления Lua-оператором \"for\"."

msgid ":codebold:`q`"
msgstr ":codebold:`q`"

msgid "Quit immediately."
msgstr "Немедленный выход."

msgid "Example Session"
msgstr "Пример сессии"

msgid ""
"Put the following program in a default directory and call it "
"\"example.lua\":"
msgstr ""
"Сохраните следующую программу в директории по умолчанию и назовите ее "
"\"example.lua\":"

msgid ""
"tdb = require('tdb')\n"
"tdb.start()\n"
"i = 1\n"
"j = 'a' .. i\n"
"print('end of program')"
msgstr ""
"tdb = require('tdb')\n"
"tdb.start()\n"
"i = 1\n"
"j = 'a' .. i\n"
"print('end of program')"

msgid "Now start Tarantool, using example.lua as the initialization file"
msgstr "Запустите Tarantool, используя example.lua в качестве файла инициализации."

msgid "$ tarantool example.lua"
msgstr "$ tarantool example.lua"

msgid "The screen should now look like this:"
msgstr "Теперь вывод на экране выглядит следующим образом:"

msgid ""
"$ :codebold:`tarantool example.lua`\n"
":codeblue:`(TDB)`  :codegreen:`Tarantool debugger v.0.0.3. Type h for "
"help`\n"
"example.lua\n"
":codeblue:`(TDB)`  :codegreen:`[example.lua]`\n"
":codeblue:`(TDB)`  :codenormal:`3: i = 1`\n"
":codeblue:`(TDB)>`"
msgstr ""
"$ :codebold:`tarantool example.lua`\n"
":codeblue:`(TDB)`  :codegreen:`Tarantool debugger v.0.0.3. Type h for "
"help`\n"
"example.lua\n"
":codeblue:`(TDB)`  :codegreen:`[example.lua]`\n"
":codeblue:`(TDB)`  :codenormal:`3: i = 1`\n"
":codeblue:`(TDB)>`"

msgid ""
"Debugger prompts are blue, debugger hints and information are green, and "
"the current line -- line 3 of example.lua -- is the default color. Now "
"enter six debugger commands:"
msgstr ""
"Запросы отладчика выделены синим, подсказки и информация -- зеленым, а "
"текущая строка -- 3 строка программы example.lua -- цветом, который "
"используется по умолчанию. Введите 6 команд отладчика:"

msgid ""
"n  -- go to next line\n"
"n  -- go to next line\n"
"e  -- enter evaluation mode\n"
"j  -- display j\n"
"-e -- exit evaluation mode\n"
"q  -- quit"
msgstr ""
"n  -- переход на следующую строку\n"
"n  -- переход на следующую строку\n"
"e  -- вход в режим оценки\n"
"j  -- отображение j\n"
"-e -- выход из режима оценки\n"
"q  -- выход"

msgid ""
"$ :codebold:`tarantool example.lua`\n"
":codeblue:`(TDB)`  :codegreen:`Tarantool debugger v.0.0.3. Type h for "
"help`\n"
"example.lua\n"
":codeblue:`(TDB)`  :codegreen:`[example.lua]`\n"
":codeblue:`(TDB)`  :codenormal:`3: i = 1`\n"
":codeblue:`(TDB)>` n\n"
":codeblue:`(TDB)`  :codenormal:`4: j = 'a' .. i`\n"
":codeblue:`(TDB)>` n\n"
":codeblue:`(TDB)`  :codenormal:`5: print('end of program')`\n"
":codeblue:`(TDB)>` e\n"
":codeblue:`(TDB)`  :codegreen:`Eval mode ON`\n"
":codeblue:`(TDB)>` j\n"
"j       a1\n"
":codeblue:`(TDB)>` -e\n"
":codeblue:`(TDB)`  :codegreen:`Eval mode OFF`\n"
":codeblue:`(TDB)>` q"
msgstr ""
"$ :codebold:`tarantool example.lua`\n"
":codeblue:`(TDB)`  :codegreen:`Tarantool debugger v.0.0.3. Type h for "
"help`\n"
"example.lua\n"
":codeblue:`(TDB)`  :codegreen:`[example.lua]`\n"
":codeblue:`(TDB)`  :codenormal:`3: i = 1`\n"
":codeblue:`(TDB)>` n\n"
":codeblue:`(TDB)`  :codenormal:`4: j = 'a' .. i`\n"
":codeblue:`(TDB)>` n\n"
":codeblue:`(TDB)`  :codenormal:`5: print('end of program')`\n"
":codeblue:`(TDB)>` e\n"
":codeblue:`(TDB)`  :codegreen:`Eval mode ON`\n"
":codeblue:`(TDB)>` j\n"
"j       a1\n"
":codeblue:`(TDB)>` -e\n"
":codeblue:`(TDB)`  :codegreen:`Eval mode OFF`\n"
":codeblue:`(TDB)>` q"

msgid ""
"Another debugger example can be found `here "
"<https://github.com/sulverus/tdb>`_."
msgstr ""
"Другой пример работы отладчика можно найти `здесь "
"<https://github.com/sulverus/tdb>`_."
