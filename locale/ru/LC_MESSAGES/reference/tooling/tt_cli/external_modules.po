
msgid "Extending the tt functionality"
msgstr ""

msgid ""
"The ``tt`` utility implements a modular architecture: its :doc:`commands "
"<commands>` are, in fact, separate modules. When you run ``tt`` with a "
"command, the corresponding module is executed with the given arguments."
msgstr ""

msgid ""
"The modular architecture enables the option to extend the ``tt`` "
"functionality with **external modules** (as opposed to **internal modules** "
"that implement built-in commands). Simply said, you can write any code you "
"want to execute from ``tt``, pack it into an executable, and run it with a "
"``tt`` command:"
msgstr ""

msgid "tt my-module-name my-args"
msgstr ""

msgid ""
"The name of the command that executes a module is the same as the name of "
"the module's executable."
msgstr ""

msgid "Module description and help"
msgstr ""

msgid ""
"Executables that implement external ``tt`` modules must have two flags:"
msgstr ""

msgid ""
"``--description`` -- print a short description of the module. The "
"description is shown alongside the command in the ``tt`` help."
msgstr ""

msgid ""
"``--help`` -- display help. The help message is shown when ``tt help "
"<module_name>`` is called."
msgstr ""

msgid "Location"
msgstr ""

msgid ""
"External modules must be located in the modules directory specified in the "
":ref:`configuration file <tt-config_file>`:"
msgstr ""

msgid ""
"tt:\n"
"  modules:\n"
"    directory: path/to/modules/dir"
msgstr ""

msgid ""
"To check if a module is available in ``tt``, call ``tt help``. It will show "
"the available external modules in the ``EXTERNAL COMMANDS`` section together"
" with their descriptions."
msgstr ""

msgid "Overloading built-in commands"
msgstr ""

msgid ""
"External modules can overload built-in ``tt`` commands. If you want to "
"change the behavior of a built-in command, create an external module with "
"the same name and your own implementation."
msgstr ""

msgid ""
"When ``tt`` sees two modules -- an external and an internal one -- with the "
"same name, it will use the external module by default."
msgstr ""

msgid ""
"For example, if you want ``tt`` to show the information about your Tarantool"
" application, write the external module ``version`` that outputs the "
"information you need. The ``tt version`` call will execute this module "
"instead of the built-in one:"
msgstr ""

msgid "tt version # Calls the external module if it's available"
msgstr ""

msgid ""
"You can force the use of the internal module by running ``tt`` with the "
"``--internal`` or ``-I`` :ref:`option <tt-global-options>`. The following "
"call will execute the built-in ``version`` even if there is an external "
"module with the same name:"
msgstr ""

msgid "tt version -I # Calls the internal module"
msgstr ""
