
msgid "Tarantool 1.10.13"
msgstr ""

msgid "Released on 2022-04-25."
msgstr ""

msgid "Release: :tarantool-release:`1.10.13`."
msgstr ""

msgid "Tag: ``1.10.13``."
msgstr ""

msgid "Overview"
msgstr ""

msgid ""
"1.10.13 is the next stable release in the :doc:`long-term support (LTS) "
"version </release/policy>` 1.10.x release series."
msgstr ""

msgid ""
"The label “stable” means there are 1.10.x-based applications running in "
"production for quite a while without known crashes, incorrect results or "
"other showstopper bugs."
msgstr ""

msgid ""
"This release introduces 1 improvement and resolves roughly 13 issues since "
"the :doc:`1.10.12 </release/1.10.12>` version."
msgstr ""

msgid "Compatibility"
msgstr ""

msgid ""
"Tarantool 1.10.x is backward compatible with Tarantool 1.9.x in binary data "
"layout, client-server protocol and replication protocol."
msgstr ""

msgid ""
"Please `upgrade "
"<https://www.tarantool.io/en/doc/1.10/book/admin/upgrades/>`__ using the "
"``box.schema.upgrade()`` procedure to unlock all the new features of the "
"1.10.x series."
msgstr ""

msgid "Functionality added or changed"
msgstr ""

msgid "Build"
msgstr ""

msgid "Support fedora-35 build (:tarantool-issue:`6692`)."
msgstr ""

msgid "Bugs fixed"
msgstr ""

msgid "Core"
msgstr ""

msgid "Fixed memory leak in interactive console (:tarantool-issue:`6817`)."
msgstr ""

msgid ""
"Fixed an assertion fail when passing tuple without primary key fields to "
"``before_replace`` trigger. Now tuple format is checked before the execution"
" of ``before_replace`` triggers and after each one (:tarantool-"
"issue:`6780`)."
msgstr ""

msgid ""
"Now inserting a tuple with the wrong ``id`` field into the ``_priv`` space "
"returns the correct error (:tarantool-issue:`6295`)."
msgstr ""

msgid ""
"Fixed a bug due to which all fibers created with "
"``fiber_attr_setstacksize()`` leaked until the thread exit. Their stacks "
"also leaked except when ``fiber_set_joinable(..., true)`` was used."
msgstr ""

msgid ""
"Fixed a crash when Tarantool was launched with multiple ``-e`` or ``-l`` "
"options without a space between the option and the value (:tarantool-"
"issue:`5747`)."
msgstr ""

msgid "Vinyl"
msgstr ""

msgid ""
"Immediate removal of compacted run files created after the last checkpoint "
"optimization now works for replica’s initial JOIN stage (:tarantool-"
"issue:`6568`)."
msgstr ""

msgid ""
"Fixed crash during recovery of a secondary index in case the primary index "
"contains incompatible phantom tuples (:tarantool-issue:`6778`)."
msgstr ""

msgid "Replication"
msgstr ""

msgid ""
"Fixed replicas failing to bootstrap when master is just re-started "
"(:tarantool-issue:`6966`)."
msgstr ""

msgid "LuaJIT"
msgstr ""

msgid ""
"Fixed top part of Lua stack (red zone, free slots, top slot) unwinding in "
"``lj-stack`` command."
msgstr ""

msgid "Added the value of ``g->gc.mmudata`` field to ``lj-gc`` output."
msgstr ""

msgid ""
"``string.char()`` builtin recording is fixed in case when no arguments are "
"given (:tarantool-issue:`6371`, :tarantool-issue:`6548`)."
msgstr ""

msgid ""
"Actually made JIT respect ``maxirconst`` trace limit while recording "
"(:tarantool-issue:`6548`)."
msgstr ""

msgid "Box"
msgstr ""

msgid ""
"Added iterator type checking and allow passing iterator as a "
"``box.index.{ALL,GT,…}`` directly (:tarantool-issue:`6501`)."
msgstr ""

msgid "Recovery"
msgstr ""

msgid ""
"When ``force_recovery`` cfg option is set, Tarantool is able to boot from "
"``snap``/``xlog`` combinations where ``xlog`` covers changes committed both "
"before and after ``snap`` creation. For example, ``0...0.xlog``, covering "
"everything up to ``vclock {1: 15}`` and ``0...09.snap``, corresponding to "
"``vclock {1: 9}`` (:tarantool-issue:`6794`)."
msgstr ""
