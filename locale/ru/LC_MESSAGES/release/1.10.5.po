msgid ""
msgstr ""
"Plural-Forms: nplurals=4; plural=((n%10==1 && n%100!=11) ? 0 : ((n%10 >= 2 && n%10 <=4 && (n%100 < 12 || n%100 > 14)) ? 1 : ((n%10 == 0 || (n%10 >= 5 && n%10 <=9)) || (n%100 >= 11 && n%100 <= 14)) ? 2 : 3));\n"
"X-Crowdin-Project: tarantool-docs\n"
"X-Crowdin-Project-ID: 442986\n"
"X-Crowdin-Language: ru\n"
"X-Crowdin-File: /en/release/1.10.5.pot\n"
"X-Crowdin-File-ID: 1746\n"
"Project-Id-Version: tarantool-docs\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language-Team: Russian\n"
"Language: ru_RU\n"
"PO-Revision-Date: 2021-04-23 11:58\n"

msgid "Tarantool 1.10.5"
msgstr ""

msgid "Release: :tarantool-release:`1.10.5`"
msgstr ""

msgid "Date: 2020-01-14 Tag: 1.10.5-0-g83a2ae9"
msgstr ""

msgid "Overview"
msgstr "Общие сведения"

msgid "1.10.5 is the next stable release of the 1.10.x series. The label “stable” means there are 1.10.x-based applications running in production for quite a while without known crashes, incorrect results or other showstopper bugs."
msgstr ""

msgid "This release resolves roughly 30 issues since 1.10.4. There may be bugs in less common areas. If you find any, feel free to report an issue at `GitHub <https://github.com/tarantool/tarantool/issues>`_."
msgstr ""

msgid "Compatibility"
msgstr "Совместимость"

msgid "Tarantool 1.10.x is backward compatible with Tarantool 1.9.x in binary data layout, client-server protocol and replication protocol. Please `upgrade <https://www.tarantool.io/en/doc/1.10/book/admin/upgrades/>`_ using the ``box.schema.upgrade()`` procedure to unlock all the new features of the 1.10.x series."
msgstr ""

msgid "Functionality added or changed"
msgstr "Изменения или добавления функциональности"

msgid "Lua"
msgstr "Lua"

msgid "Exit gracefully when a main script throws an error: notify systemd, log the error (:tarantool-issue:`4382`)."
msgstr ""

msgid "Enable ``__pairs`` and ``__ipairs`` metamethods from Lua 5.2 (:tarantool-issue:`4560`). We still conform Lua 5.1 API that is not always compatible with Lua 5.2. The change is only about those metamethods."
msgstr ""

msgid "Misc"
msgstr "Разное"

msgid "Add package builds and deployment for the following Linux distros:"
msgstr ""

msgid "Ubuntu 19.10 Eoan Ermine, (:tarantool-issue:`4583`)"
msgstr ""

msgid "CentOS 8, (:tarantool-issue:`4543`)"
msgstr ""

msgid "Fedora 31, (:tarantool-issue:`4612`)"
msgstr ""

msgid "Bugs fixed"
msgstr "Исправленные ошибки"

msgid "Core"
msgstr ""

msgid "fiber: make sure the guard page is created; refuse to create a new fiber otherwise (:tarantool-issue:`4541`). It is possible in case of heavy memory usage, say, when there is no resources to split VMAs."
msgstr ""

msgid "Forbid ``00000000-0000-0000-0000-000000000000`` as the value of ``box.cfg({<...>})`` options: ``replicaset_uuid`` and ``instance_uuid`` (:tarantool-issue:`4282`). It did not work as expected: the nil UUID was treated as absence of the value."
msgstr ""

msgid "Update cache of universe privileges without reconnect (:tarantool-issue:`2763`)."
msgstr ""

msgid "net.box: don’t fire the ``on_connect`` trigger on schema update (:tarantool-issue:`4593`). Also don’t fire the ``on_disconnect`` trigger if a connection never entered into the ``active`` state (e.g. when the first schema fetch is failed)."
msgstr ""

msgid "func: fix use-after-free on function unload. `fce9cf96 <https://github.com/tarantool/tarantool/commit/fce9cf96bfcbf0d0e9e5e4612218eeed3c7248ae>`_"
msgstr ""

msgid "Don’t destroy a session until ``box.session.on_disconnect(<...>)`` triggers are finished (:tarantool-issue:`4627`). This means, for example, that ``box.session.id()`` can be safely invoked from the ``on_disconnect`` trigger. Before this change ``box.session.id()`` returned garbage (usually 0) after yield in the ``on_disconnect`` trigger. *Note*: `tarantool/queue <https://github.com/tarantool/queue>`_ module is affected by this problem in `some scenarios <https://github.com/tarantool/queue/issues/103>`__. It is especially suggested to update Tarantool at least to this release if you’re using this module."
msgstr ""

msgid "Handle OOM gracefully during allocating a buffer for binary protocol response. `5c5a4e2d <https://github.com/tarantool/tarantool/commit/5c5a4e2d349004ae6ad062d96968a2b4cf4cc8ad>`_"
msgstr ""

msgid "func: Fix ``box.schema.func.drop(<..>)`` to unload unused modules (:tarantool-issue:`4648`). Also fix ``box.schema.func.create(<..>)`` to avoid loading a module again when another function from the module is loaded."
msgstr ""

msgid "Encode Lua number -2^63 as integer in ``msgpack.encode()`` and box’s functions (:tarantool-issue:`4672`)."
msgstr ""

msgid "Replication"
msgstr "Репликация"

msgid "Prefer to bootstrap a replica from a fully bootstrapped instance rather than from an instance that is in the process of bootstrapping (:tarantool-issue:`4527`)."
msgstr ""

msgid "This change enables the case when two nodes (B, C) are being bootstrapped simultaneously using the one that is already bootstrapped (A), while A is configured to replicate from {B, C} and B – from {A, C}."
msgstr ""

msgid "Return immediately from ``box.cfg{<...>}`` when an instance is reconfigured with ``replication_connect_quorum = 0`` (:tarantool-issue:`3760`)."
msgstr ""

msgid "This change also fixes the behaviour of reconfiguration with non-zero ``replication_connect_quorum``: ``box.cfg{<...>}`` returns immediately regardless of whether connections to upstreams are established."
msgstr ""

msgid "Auto reconnect a replica if password is invalid (:tarantool-issue:`4550`)."
msgstr ""

msgid "Use empty password when a URI in ``box.cfg{replication = <...>}`` is like ``login@host:port`` (:tarantool-issue:`4605`)."
msgstr ""

msgid "This behaviour matches the net.box’s one now. Explicit ``login:@host:port`` was necessary before, otherwise a replica displayed the following error:"
msgstr ""

msgid "Missing mandatory field 'tuple' in request"
msgstr ""

msgid "Fix segfault during replication configuration (``box.cfg{replication = <...>}`` call) (:tarantool-issue:`4440`, :tarantool-issue:`4576`, :tarantool-issue:`4586`, :tarantool-issue:`4643`)."
msgstr ""

msgid "Apply replication settings of ``box.cfg({<...>})`` in the strict order (:tarantool-issue:`4433`)."
msgstr ""

msgid "Fix handling of a socket read error in the console client (``console.connect(<URI>)`` or ``tarantoolctl connect/enter <...>``). `1f86e6cc <https://github.com/tarantool/tarantool/commit/1f86e6cc1f6a332676c2d53b92d71077652cb425>`_"
msgstr ""

msgid "Handle the “not enough memory” error gracefully when it is raised from ``lua_newthread()`` (:tarantool-issue:`4556`). There are several cases when a new Lua thread is created:"
msgstr ""

msgid "Start executing a Lua function call or an eval request (from a binary protocol, SQL or with ``box.func.<...>:call()``)."
msgstr ""

msgid "Create of a new fiber."
msgstr ""

msgid "Start execution of a trigger."
msgstr ""

msgid "Start of encoding into a YAML format (``yaml.encode()``)."
msgstr ""

msgid "Fix stack-use-after-scope in ``json.decode()`` (:tarantool-issue:`4637`)."
msgstr ""

msgid "Allow to use ``cdata<struct ibuf *>`` (e.g. buffer.IBUF_SHARED) as the argument to ``msgpack.encode()``. `6d38f0c5 <https://github.com/tarantool/tarantool/commit/6d38f0c5117b77de061f9843209ff391fa09924a>`_ Before this change the ``cdata<struct ibuf>`` type was allowed, but not the corresponding pointer type."
msgstr ""

msgid "A pointer returned by ``msgpack.decode*(cdata<[char] const *>)`` functions can be assigned to buffer.rpos now (and the same for msgpackffi) (:tarantool-issue:`3926`)."
msgstr ""

msgid "All those functions now return ``cdata<char *>`` or ``cdata<const char *>`` depending of a passed argument. Example of the code that did not work: ``res, buf.rpos = msgpack.decode(buf.rpos, buf:size())``."
msgstr ""

msgid "Fix race in ``fio.mktree()`` when two tarantool processes create the same directory tree simultaneously (:tarantool-issue:`4660`). This problem affects `tarantool/cartrige <https://github.com/tarantool/cartrige>`_, see `cartrige#gh-382 <https://github.com/tarantool/cartridge/issues/382>`_."
msgstr ""

msgid "HTTP client"
msgstr ""

msgid "Disable verbose mode when ``{verbose = false}`` is passed. `28f8a5eb <https://github.com/tarantool/tarantool/commit/28f8a5eb5ad29447f5e27c7ccbf1eb7a857aa490>`_"
msgstr ""

msgid "Fix assertion fail after a curl write error (:tarantool-issue:`4232`)."
msgstr ""

msgid "LuaJIT"
msgstr ""

msgid "Fix the “Data segment size exceeds process limit” error on FreeBSD/x64: do not change resource limits when it is not necessary (:tarantool-issue:`4537`)."
msgstr ""

msgid "fold: keep type of emitted CONV in sync with its mode. `LuaJIT#524 <https://github.com/LuaJIT/LuaJIT/issues/524>`_ This fixes the following assertion fail:"
msgstr ""

msgid "asm_conv: Assertion \\`((IRType)((ir->t).irt & IRT_TYPE)) != st’ failed"
msgstr ""

msgid "Fix CLI boolean options handling in ``tarantoolctl cat <...>``, such as ``--show-system`` (:tarantool-issue:`4076`)."
msgstr ""

msgid "Fix segfault (out of bounds access) when a stack unwinding error occurs at backtrace printing (:tarantool-issue:`4636`). Backtrace is printed on SIGFPE and SIGSEGV signals or when LuaJIT finds itself in the unrecoverable state (``lua_atpanic()``)."
msgstr ""

msgid "Clear terminal state on panic (:tarantool-issue:`4466`)."
msgstr ""

msgid "Building from sources"
msgstr ""

msgid "Fix OpenSSL linking problems on FreeBSD (:tarantool-issue:`4490`)."
msgstr ""

msgid "Fix linking problems on Mac OS when several toolchains are in PATH (:tarantool-issue:`4587`)."
msgstr ""

msgid "Fix GCC 9 warning on ``strncpy()`` (:tarantool-issue:`4515`)."
msgstr ""

