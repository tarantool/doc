
msgid "Tarantool 1.7"
msgstr "Tarantool 1.7"

msgid "Release: :tarantool-release:`1.7.0`"
msgstr ""

msgid "**Release 1.7.6**"
msgstr "**Версия 1.7.6**"

msgid ""
"Release type: stable. Release date: 2017-11-07.  Tag: 1.7.6-0-g7b2945d6c. "
"Release: https://groups.google.com/forum/#!topic/tarantool/hzc7O2YDZUc or "
":tarantool-release:`1.7.6.`"
msgstr ""

msgid ""
"This is the next stable release in the 1.7 series. It resolves more than 75 "
"issues since 1.7.5."
msgstr ""
"Данная сборка представляет собой очередную стабильную версию в серии 1.7. "
"Это обновление содержит более 75 исправлений по сравнению с версией 1.7.5."

msgid "What's new in Tarantool 1.7.6?"
msgstr "Что нового в Tarantool 1.7.6?"

msgid ""
"In addition to :ref:`rollback <box-rollback>` of a transaction, there is now"
" rollback to a defined point within a transaction -- :ref:`savepoint <box-"
"savepoint>` support."
msgstr ""
"В дополнение к :ref:`откату <box-rollback>` транзакции, появился откат на "
"определенную точку в пределах транзакции -- поддержка :ref:`точки сохранения"
" <box-savepoint>`."

msgid ""
"There is a new object type: :ref:`sequences <index-box_sequence>`. The older"
" option, :ref:`auto-increment <box_space-auto_increment>`, will be "
"deprecated."
msgstr ""
"Появился новый объектный тип: :ref:`последовательности <index-"
"box_sequence>`. Устаревший вариант, :ref:`автоматическое увеличение "
"<box_space-auto_increment>`, объявлен устаревшим."

msgid "String indexes can have :ref:`collations <index-collation>`."
msgstr "В строковых индексах появилась :ref:`сортировка <index-collation>`."

msgid "New options are available for:"
msgstr "Добавлены новые опции:"

msgid ":ref:`net_box <net_box-module>` (timeouts),"
msgstr ":ref:`net_box <net_box-module>` (время ожидания),"

msgid ":ref:`string <string-module>` functions,"
msgstr "функции :ref:`string <string-module>`,"

msgid ""
"space :ref:`formats <box_space-format>` (user-defined field names and "
"types),"
msgstr ""
":ref:`форматы <box_space-format>` для спейса (имена и типы полей, задаваемые"
" пользователем),"

msgid ":ref:`base64 <digest-base64_encode>` (``urlsafe`` option), and"
msgstr ":ref:`base64 <digest-base64_encode>` (опция ``urlsafe``),  а также"

#, fuzzy
msgid ""
"index :ref:`creation <box_space-create_index>` (collation, :ref:`is-nullable"
" <key_part_is_nullable>`, field names)."
msgstr ""
":ref:`создание <box_space-create_index>` индекса (сортировка, :ref:`is-"
"nullable <box_space-is_nullable>` (возможность допустить неопределенное "
"значение), имена полей)."

msgid "Incompatible changes:"
msgstr "Несовместимые изменения:"

msgid ""
"Layout of ``box.space._index`` has been extended to support "
":ref:`is_nullable <key_part_is_nullable>` and :ref:`collation <index-"
"collation>` features. All new indexes created on columns with "
"``is_nullable`` or ``collation`` properties will have the new definition "
"format. Please update your client libraries if you plan to use these new "
"features (:tarantool-issue:`2802`)."
msgstr ""

msgid ""
":ref:`fiber_name() <fiber_object-name_get>` now raises an exception instead "
"of truncating long fiber names. We found that some Lua modules such as "
"`expirationd <https://tarantool.github.io/expirationd/>`_ use "
"``fiber.name()`` as a key to identify background tasks. If a name is "
"truncated, this fact was silently missed. The new behavior allows to detect "
"bugs caused by ``fiber.name()`` truncation. Please use ``fiber.name(name, { "
"truncate = true })`` to emulate the old behavior (:tarantool-issue:`2622`)."
msgstr ""

msgid ""
":ref:`space:format() <box_space-format>` is now validated on DML operations."
" Previously ``space:format()`` was only used by client libraries, but "
"starting from Tarantool 1.7.6, field types in ``space:format()`` are "
"validated on the server side on every DML operation, and field names can be "
"used in indexes and Lua code. If you used ``space:format()`` in a non-"
"standard way, please update layout and type names according to the official "
"documentation for space formats."
msgstr ""

msgid "Functionality added or changed:"
msgstr "Изменения или добавления функциональности:"

msgid ""
"Hybrid schema-less + schemaful data model. Earlier Tarantool versions "
"allowed to store arbitrary MessagePack documents in spaces. Starting from "
"Tarantool 1.7.6, you can use :ref:`space:format() <box_space-format>` to "
"define schema restrictions and constraints for tuples in spaces. Defined "
"field types are automatically validated on every DML operation, and defined "
"field names can be used instead of field numbers in Lua code. A new function"
" :ref:`tuple:tomap() <box_tuple-tomap>` was added to convert a tuple into a "
"key-value Lua dictionary."
msgstr ""
"Гибридная модель данных без схемы + со схемой. Раньше версии Tarantool "
"позволяли хранить произвольный набор документов в формате MessagePack в "
"спейсах. Начиная с версии Tarantool 1.7.6, можно использовать "
":ref:`space:format() <box_space-format>` для определения условий и "
"ограничений схемы для кортежей в спейсах. Определенные типы полей "
"автоматически проверяются при каждой DML-операции, а определенные имена "
"полей могут использоваться вместо номеров полей в Lua-коде. Добавлена новая "
"функция :ref:`tuple:tomap() <box_tuple-tomap>` для конвертации кортежа в "
"Lua-словарь пар ключ-значение."

msgid ""
"Collation and Unicode support. By default, when Tarantool compares strings, "
"it takes into consideration only the numeric value of each byte in the "
"string. To allow the ordering that you see in phone books and dictionaries, "
"Tarantool 1.7.6 introduces support for collations based on the `Default "
"Unicode Collation Element Table (DUCET) "
"<http://unicode.org/reports/tr10/#Default_Unicode_Collation_Element_Table>`_"
" and the rules described in `Unicode® Technical Standard #10 Unicode "
"Collation Algorithm (UTS #10 UCA) <http://unicode.org/reports/tr10>`_ See "
":ref:`collations <index-collation>`."
msgstr ""
"Поддержка сортировки и Юникода. По умолчанию, когда Tarantool сопоставляет "
"строки, он берет во внимание только числовое значение каждого байта в "
"строке. Чтобы задействовать такое распределение, как в телефонных "
"справочниках и словарях, в Tarantool версии 1.7.6 впервые поддерживается "
"сортировка по Таблице сортировки символов Юникода по умолчанию (`Default "
"Unicode Collation Element Table (DUCET) "
"<http://unicode.org/reports/tr10/#Default_Unicode_Collation_Element_Table>`_)"
" и в соответствии с правилами, описанными в Техническом стандарте Юникода "
"№10 -- Алгоритм сортировки по Юникоду (`Unicode® Technical Standard #10 "
"Unicode Collation Algorithm (UTS #10 UCA) "
"<http://unicode.org/reports/tr10>`_). См. :ref:`сортировку <index-"
"collation>`."

msgid ""
"NULL values in unique and non-unique indexes. By default, all fields in "
"Tarantool are  \"NOT NULL\". Starting from Tarantool 1.7.6, you can use "
"``is_nullable`` option in :ref:`space:format() <box_space-format>` or "
":ref:`inside an index part definition <key_part_is_nullable>` to allow "
"storing NULL in indexes. Tarantool partially implements `three-valued logic "
"<https://en.wikipedia.org/wiki/Three-valued_logic>`_ from the SQL standard "
"and allows storing multiple NULL values in unique indexes (:tarantool-"
"issue:`1557`)."
msgstr ""

msgid ""
"Sequences and a new implementation of :ref:`auto_increment() <box_space-"
"auto_increment>`. Tarantool 1.7.6 introduces new :ref:`sequence number "
"generators <index-box_sequence>` (like CREATE SEQUENCE in SQL). This feature"
" is used to implement new persistent auto increment in spaces (:tarantool-"
"issue:`389`)."
msgstr ""

msgid ""
"Vinyl: introduced gap locks in Vinyl transaction manager. The new locking "
"mechanism in Vinyl TX manager reduces the number of conflicts in "
"transactions (:tarantool-issue:`2671`)."
msgstr ""

msgid ""
"net.box: :ref:`on_connect <box_session-on_connect>` and :ref:`on_disconnect "
"<box_session-on_disconnect>` triggers (:tarantool-issue:`2858`)."
msgstr ""

msgid ""
"Structured logging in :ref:`JSON format <cfg_logging-log_format>` "
"(:tarantool-issue:`2795`)."
msgstr ""

msgid ""
"(Lua) Lua: :ref:`string.strip() <string-strip>` (:tarantool-issue:`2785`)."
msgstr ""

msgid ""
"(Lua) added :ref:`base64_urlsafe_encode() <digest-base64_encode>` to "
"``digest`` module (:tarantool-issue:`2777`)."
msgstr ""

msgid ""
"Log conflicted keys in master-master replication (:tarantool-issue:`2779`)."
msgstr ""

msgid ""
"Allow to disable backtrace in :ref:`fiber.info() <fiber-info>` (:tarantool-"
"issue:`2878`)."
msgstr ""

msgid ""
"Implemented ``tarantoolctl rocks make *.spec`` (:tarantool-issue:`2846`)."
msgstr ""

msgid ""
"Extended the default loader to look for ``.rocks`` in the parent dir "
"hierarchy (:tarantool-issue:`2676`)."
msgstr ""

msgid ""
"``SOL_TCP`` options support in :ref:`socket:setsockopt() <socket-"
"setsockopt>` (:tarantool-issue:`598`)."
msgstr ""

msgid ""
"Partial emulation of LuaSocket on top of Tarantool Socket (:tarantool-"
"issue:`2727`)."
msgstr ""

msgid "Developer tools:"
msgstr "Инструменты разработчика:"

msgid ""
"Integration with IntelliJ IDEA with debugging support. Now you can use "
"IntelliJ IDEA as an IDE to develop and debug Lua applications for Tarantool."
" See :ref:`Using IDE <app_server-using_ide>`."
msgstr ""
"Интеграция с IntelliJ IDEA с поддержкой отладки. Появилась возможность "
"использовать IntelliJ IDEA в качестве IDE для разработки и отладки Lua-"
"приложений для Tarantool. См. :ref:`Использование IDE <app_server-"
"using_ide>`."

msgid ""
"Integration with `MobDebug <https://github.com/pkulchenko/MobDebug>`_ remote"
" Lua debugger (:tarantool-issue:`2728`)."
msgstr ""

msgid ""
"Configured ``/usr/bin/tarantool`` as an alternative Lua interpreter on "
"Debian/Ubuntu (:tarantool-issue:`2730`)."
msgstr ""

msgid "New rocks:"
msgstr "Новые сторонние библиотеки:"

msgid ""
"`smtp.client <https://github.com/tarantool/smtp>`_ - support SMTP via "
"``libcurl``."
msgstr ""
"`smtp.client <https://github.com/tarantool/smtp>`_ -- поддержка SMTP по "
"``libcurl``."

msgid "**Release 1.7.5**"
msgstr "**Версия 1.7.5**"

msgid ""
"Release type: stable. Release date: 2017-08-22.  Tag: 1.7.5. Release: :doc-"
"issue:`289` or :tarantool-release:`1.7.5.`"
msgstr ""

msgid ""
"This is a stable release in the 1.7 series. This release resolves more than "
"160 issues since 1.7.4."
msgstr ""
"Данная сборка представляет собой стабильную версию в серии 1.7. Это "
"обновление содержит более 160 исправлений по сравнению с версией 1.7.4."

msgid ""
"(Vinyl) a new :ref:`force_recovery <cfg_binary_logging_snapshots-"
"force_recovery>` mode to recover broken disk files. Use "
"``box.cfg{force_recovery=true}`` to recover corrupted data files after "
"hardware issues or power outages (:tarantool-issue:`2253`)."
msgstr ""

msgid ""
"(Vinyl) index options can be changed on the fly without rebuild. Now "
":ref:`page_size <cfg_storage-vinyl_page_size>`, :ref:`run_size_ratio "
"<cfg_storage-vinyl_run_size_ratio>`, :ref:`run_count_per_level <cfg_storage-"
"vinyl_run_count_per_level>` and :ref:`bloom_fpr <cfg_storage-"
"vinyl_bloom_fpr>` index options can be dynamically changed via "
":ref:`index:alter() <box_index-alter>`. The changes take effect in newly "
"created data files only (:tarantool-issue:`2109`)."
msgstr ""

msgid ""
"(Vinyl) improve :ref:`box.info.vinyl() <box_introspection-box_info>` and "
"``index:info()`` output (:tarantool-issue:`1662`)."
msgstr ""

msgid ""
"(Vinyl) introduce :ref:`box.cfg.vinyl_timeout <cfg_basic-vinyl_timeout>` "
"option to control quota throttling (:tarantool-issue:`2014`)."
msgstr ""

msgid ""
"Memtx: stable :ref:`index:pairs() <box_index-index_pairs>` iterators for the"
" TREE index. TREE iterators are automatically restored to a proper position "
"after index's modifications (:tarantool-issue:`1796`)."
msgstr ""

msgid ""
"(Memtx) :ref:`predictable order <box_index-index_pairs>` for non-unique TREE"
" indexes. Non-unique TREE indexes preserve the sort order for duplicate "
"entries (:tarantool-issue:`2476`)."
msgstr ""

msgid ""
"(Memtx+Vinyl) dynamic configuration of :ref:`max tuple size <cfg_storage-"
"memtx_max_tuple_size>`. Now ``box.cfg.memtx_max_tuple_size`` and "
"``box.cfg.vinyl_max_tuple_size`` configuration options can be changed on the"
" fly without need to restart the server (:tarantool-issue:`2667`)."
msgstr ""

msgid ""
"(Memtx+Vinyl) new implementation. Space :ref:`truncation <box_space-"
"truncate>` doesn't cause re-creation of all indexes any more (:tarantool-"
"issue:`618`)."
msgstr ""

msgid ""
"Extended the :ref:`maximal length <limitations_length>` of all identifiers "
"from 32 to 65k characters. Space, user and function names are not limited by"
" 32 characters anymore (:tarantool-issue:`944`)."
msgstr ""

msgid ""
":ref:`Heartbeat <cfg_replication-replication_timeout>` messages for "
"replication. Replication client now sends the selective acknowledgments for "
"processed records and automatically re-establish stalled connections. This "
"feature also changes :ref:`box.info.replication[replica_id].vclock "
"<box_info_replication>`. to display committed vclock of remote replica "
"(:tarantool-issue:`2484`)."
msgstr ""

msgid ""
"Keep track of remote replicas during WAL maintenance. Replication master now"
" automatically preserves xlogs needed for remote replicas (:tarantool-"
"issue:`748`)."
msgstr ""

msgid ""
"Enabled :ref:`box.tuple.new() <box_tuple-new>` to work without ``box.cfg()``"
" (:tarantool-issue:`2047`)."
msgstr ""

msgid ""
":ref:`box.atomic(fun, ...) <box-atomic>` wrapper to execute function in a "
"transaction (:tarantool-issue:`818`)."
msgstr ""

msgid ""
":ref:`box.session.type() <box_session-type>` helper to determine session "
"type (:tarantool-issue:`2642`)."
msgstr ""

msgid ""
"Hot code :ref:`reload <box_schema-func_reload>` for stored C stored "
"procedures. Use ``box.schema.func.reload('modulename.function')`` to reload "
"dynamic shared libraries on the fly (:tarantool-issue:`910`)."
msgstr ""

msgid ""
":ref:`string.hex() <string-hex>` and ``str:hex()`` Lua API (:tarantool-"
"issue:`2522`)."
msgstr ""

msgid ""
"Package manager based on LuaRocks. Use ``tarantoolctl rocks install "
"MODULENAME`` to install MODULENAME Lua module from "
"https://rocks.tarantool.org/. (:tarantool-issue:`2067`)."
msgstr ""

msgid ""
"Lua 5.1 command line options. Tarantool binary now supports '-i', '-e', '-m'"
" and '-l' command line options (:tarantool-issue:`1265`)."
msgstr ""

msgid ""
"Experimental GC64 mode for LuaJIT. GC64 mode allow to operate the full "
"address space on 64-bit hosts. Enable via ``-DLUAJIT_ENABLE_GC64=ON compile-"
"time`` configuration option (:tarantool-issue:`2643`)."
msgstr ""

msgid ""
"Syslog logger now support non-blocking mode. "
":ref:`box.cfg{log_nonblock=true} <cfg_logging-log_nonblock>` now also works "
"for syslog logger (:tarantool-issue:`2466`)."
msgstr ""

msgid ""
"Added a VERBOSE :ref:`log level <cfg_logging-log_level>` beyond INFO "
"(:tarantool-issue:`2467`)."
msgstr ""

msgid ""
"Tarantool now automatically makes snapshots every hour. Please set "
":ref:`box.cfg{checkpoint_interval=0  <cfg_checkpoint_daemon-"
"checkpoint_interval>` to restore pre-1.7.5 behavior (:tarantool-"
"issue:`2496`)."
msgstr ""

msgid ""
"Increase precision for percentage ratios provided by :ref:`box.slab.info() "
"<box_slab_info>` (:tarantool-issue:`2082`)."
msgstr ""

msgid ""
"Stack traces now contain symbols names on all supported platforms. Previous "
"versions of Tarantool didn't display meaningful function names in "
":ref:`fiber.info() <fiber-info>` on non-x86 platforms (:tarantool-"
"issue:`2103`)."
msgstr ""

msgid ""
"Allowed to create fiber with custom stack size from C API (:tarantool-"
"issue:`2438`)."
msgstr ""

msgid "Added ``ipc_cond`` to public C API (:tarantool-issue:`1451`)."
msgstr ""

msgid ""
":ref:`http.client <http-module>` (built-in) - libcurl-based HTTP client with"
" SSL/TLS support (:tarantool-issue:`2083`)."
msgstr ""

msgid ""
":ref:`iconv <iconv-converter>` (built-in) - bindings for iconv (:tarantool-"
"issue:`2587`)."
msgstr ""

msgid ""
"`authman <https://github.com/mailru/tarantool-authman>`_ - API for user "
"registration and login in your site using email and social networks."
msgstr ""
"`authman <https://github.com/mailru/tarantool-authman>`_ - API для "
"регистрации пользователя и входа в систему с использованием email и "
"социальных сетей."

msgid ""
"`document <https://github.com/tarantool/document>`_ - store nested documents"
" in Tarantool."
msgstr ""
"`document <https://github.com/tarantool/document>`_ - хранит вложенные "
"документы в Tarantool."

msgid ""
"`synchronized <https://github.com/tarantool/synchronized>`_ - critical "
"sections for Lua."
msgstr ""
"`synchronized <https://github.com/tarantool/synchronized>`_ - критические "
"секции для Lua."

msgid "**Release 1.7.4**"
msgstr "**Версия 1.7.4**"

msgid ""
"Release type: release candidate. Release date: 2017-05-12. Release tag: Tag:"
" 1.7.4."
msgstr ""
"Тип версии: предварительная версия. Дата выхода: 2017-05-12.  Тег версии: "
"1.7.4."

msgid ""
"Release: :tarantool-release:`1.7.4` or "
"https://groups.google.com/forum/#!topic/tarantool/3x88ATX9YbY"
msgstr ""

msgid ""
"This is a release candidate in the 1.7 series. Vinyl Engine, the flagship "
"feature of 1.7.x, is now feature complete."
msgstr ""
"Данная сборка представляет собой предварительную версию перед выпуском "
"нового релиза в серии 1.7. Движок vinyl, ключевой компонент 1.7.x, обладает "
"полностью реализованной заявленной функциональностью."

msgid "Incompatible changes"
msgstr "Несовместимые изменения"

msgid "``box.cfg()`` options were changed to add Vinyl support:"
msgstr ""
"Для поддержки vinyl были внесены следующие изменения в параметры "
"``box.cfg()``:"

msgid "``snap_dir`` renamed to ``memtx_dir``"
msgstr "переименование ``snap_dir`` в ``memtx_dir``"

msgid ""
"``slab_alloc_arena`` (gigabytes) renamed to ``memtx_memory`` (bytes), "
"default value changed from 1Gb to 256MB"
msgstr ""
"переименование ``slab_alloc_arena`` (гигабайты) в ``memtx_memory`` (байты), "
"значение, используемое по умолчанию, изменилось с 1 Гб на 256 МБ"

msgid "``slab_alloc_minimal`` renamed to ``memtx_min_tuple_size``"
msgstr "переименование ``slab_alloc_minimal`` в ``memtx_min_tuple_size``"

msgid "``slab_alloc_maximal`` renamed to ``memtx_max_tuple_size``"
msgstr "переименование ``slab_alloc_maximal`` в ``memtx_max_tuple_size``"

msgid "``slab_alloc_factor`` is deprecated, not relevant in 1.7.x"
msgstr "``slab_alloc_factor`` больше не используется, не применимо в 1.7.x"

msgid "``snapshot_count`` renamed to ``checkpoint_count``"
msgstr "переименование ``snapshot_count`` в ``checkpoint_count``"

msgid "``snapshot_period`` renamed to ``checkpoint_interval``"
msgstr "переименование ``snapshot_period`` в ``checkpoint_interval``"

msgid "``logger`` renamed to ``log``"
msgstr "переименование ``logger`` в ``log``"

msgid "``logger_nonblock`` renamed to ``log_nonblock``"
msgstr "переименование ``logger_nonblock`` в ``log_nonblock``"

msgid "``logger_level`` renamed to ``log_level``"
msgstr "переименование ``logger_level`` в ``log_level``"

msgid "``replication_source`` renamed to ``replication``"
msgstr "переименование ``replication_source`` в ``replication``"

msgid ""
"``panic_on_snap_error = true`` and ``panic_on_wal_error = true`` superseded "
"by ``force_recovery = false``"
msgstr ""
"``panic_on_snap_error = true`` и ``panic_on_wal_error = true`` заменены "
"``force_recovery = false``"

msgid ""
"Until Tarantool 1.8, you can use deprecated parameters for both initial and "
"runtime configuration, but such usage will print a warning in the server log"
" (:tarantool-issue:`1927` and :tarantool-issue:`2042`)."
msgstr ""

msgid ""
"Hot standy mode is now off by default. Tarantool automatically detects "
"another running instance in the same ``wal_dir`` and refuses to start. Use "
"``box.cfg {hot_standby = true}`` to enable the hot standby mode (:tarantool-"
"issue:`775`)."
msgstr ""

msgid ""
"UPSERT via a secondary key was banned to avoid unclear semantics "
"(:tarantool-issue:`2226`)."
msgstr ""

msgid ""
"``box.info`` and ``box.info.replication`` format was changed to display "
"information about upstream and downstream connections ((:tarantool-"
"issue:`723`):"
msgstr ""

msgid ""
"Added ``box.info.replication[instance_id].downstream.vclock`` to display the"
" last sent row to remote replica."
msgstr ""
"Добавление ``box.info.replication[instance_id].downstream.vclock`` для "
"отображения последней строки, отправленной на удаленную реплику."

msgid "Added ``box.info.replication[instance_id].id``."
msgstr "Добавление ``box.info.replication[instance_id].id``."

msgid "Added ``box.info.replication[instance_id].lsn``."
msgstr "Добавление ``box.info.replication[instance_id].lsn``."

msgid ""
"Moved ``box.info.replication[instance_id].{vclock,status,error}`` to "
"``box.info.replication[instance_id].upstream.{vclock,status,error}``."
msgstr ""
"Перемещение ``box.info.replication[instance_id].{vclock,status,error}`` в "
"``box.info.replication[instance_id].upstream.{vclock,status,error}``."

msgid ""
"All registered replicas from ``box.space._cluster`` are included to "
"``box.info.replication`` output."
msgstr ""
"Включение всех зарегистрированных реплик из ``box.space._cluster`` в вывод "
"``box.info.replication``."

msgid "``box.info.server.id`` renamed ``box.info.id``"
msgstr "Переименование ``box.info.server.id`` в ``box.info.id``"

msgid "``box.info.server.lsn`` renamed ``box.info.lsn``"
msgstr "Переименование ``box.info.server.lsn`` в ``box.info.lsn``"

msgid "``box.info.server.uuid`` renamed ``box.info.uuid``"
msgstr "Переименование ``box.info.server.uuid`` в ``box.info.uuid``"

msgid "``box.info.cluster.signature`` renamed to ``box.info.signature``"
msgstr ""
"Переименование ``box.info.cluster.signature`` в ``box.info.signature``"

msgid ""
"``box.info.id`` and ``box.info.lsn`` now return `nil` instead of `-1` during"
" initial cluster bootstrap."
msgstr ""
"Возврат значения `nil` вместо `-1` функциями ``box.info.id`` и "
"``box.info.lsn`` во время начальной настройки кластера."

msgid "``net.box``: added per-request options to all requests:"
msgstr "``net.box``: добавление запрошенные параметров во все запросы:"

msgid ""
"``conn.call(func_name, arg1, arg2,...)`` changed to ``conn.call(func_name, "
"{arg1, arg2, ...}, opts)``"
msgstr ""
"изменение ``conn.call(func_name, arg1, arg2,...)`` на ``conn.call(func_name,"
" {arg1, arg2, ...}, opts)``"

msgid ""
"``conn.eval(func_name, arg1, arg2,...)`` changed to ``conn.eval(func_name, "
"{arg1, arg2, ...}, opts)``"
msgstr ""
"изменение ``conn.eval(func_name, arg1, arg2,...)`` на ``conn.eval(func_name,"
" {arg1, arg2, ...}, opts)``"

msgid ""
"All requests now support ``timeout = <seconds>``, ``buffer = <ibuf>`` "
"options."
msgstr ""
"Все запросы поддерживают параметры ``timeout = <seconds>``(время задержки в "
"секундах), ``buffer = <ibuf>`` (буфер)."

msgid "Added ``connect_timeout`` option to ``netbox.connect()``."
msgstr "Добавление опции ``connect_timeout`` в ``netbox.connect()``."

msgid ""
"``netbox:timeout()`` and ``conn:timeout()`` are now deprecated. Use "
"``netbox.connect(host, port, { call_16 = true })`` for 1.6.x-compatible "
"behavior (:tarantool-issue:`2195`)."
msgstr ""

msgid ""
"systemd configuration changed to support ``Type=Notify`` / ``sd_notify()``. "
"Now ``systemctl start tarantool@INSTANCE`` will wait until Tarantool has "
"started and recovered from xlogs. The recovery status is reported to "
"``systemctl status tarantool@INSTANCE`` (:tarantool-issue:`1923`)."
msgstr ""

msgid ""
"``log`` module now doesn't prefix all messages with the full path to "
"tarantool binary when used without ``box.cfg()`` (:tarantool-issue:`1876`)."
msgstr ""

msgid ""
"``require('log').logger_pid()`` was renamed to ``require('log').pid()`` "
"(:tarantool-issue:`2917`)."
msgstr ""

msgid ""
"Removed Lua 5.0 compatible defines and functions (:tarantool-issue:`2396`):"
msgstr ""

msgid "``luaL_reg`` removed in favor of ``luaL_Reg``"
msgstr "``luaL_Reg`` заменяет удаленный ``luaL_reg``"

msgid "``luaL_getn(L, i)`` removed in favor of ``lua_objlen(L, i)``"
msgstr "``lua_objlen(L, i)`` заменяет удаленный ``luaL_getn(L, i)``"

msgid "``luaL_setn(L, i, j)`` removed (was no-op)"
msgstr "Удаление ``luaL_setn(L, i, j)`` (пустая операция)"

msgid "``lua_ref(L, lock)`` removed in favor of ``luaL_ref(L, lock)``"
msgstr "``luaL_ref(L, lock)`` заменяет удаленный ``lua_ref(L, lock)``"

msgid ""
"``lua_getref(L,ref)`` removed in favor of ``lua_rawgeti(L, "
"LUA_REGISTRYINDEX, (ref))``"
msgstr ""
"``lua_rawgeti(L, LUA_REGISTRYINDEX, (ref))`` заменяет удаленный "
"``lua_getref(L,ref)``"

msgid "``lua_unref(L, ref)`` removed in favor of ``luaL_unref(L, ref)``"
msgstr "``luaL_unref(L, ref)`` заменяет удаленный ``lua_unref(L, ref)``."

msgid "``math.mod()`` removed in favor of ``math.fmod()``"
msgstr "``math.fmod()`` заменяет удаленный ``math.mod()``"

msgid "``string.gfind()`` removed in favor of ``string.gmatch()``"
msgstr "``string.gmatch()`` заменяет удаленный ``string.gfind()``"

msgid ""
"(Vinyl) multi-level compaction. The compaction scheduler now groups runs of "
"the same range into levels to reduce the write amplification during "
"compaction. This design allows Vinyl to support 1:100+ ram:disk use-cases "
"(:tarantool-issue:`1821`)."
msgstr ""

msgid ""
"(Vinyl) bloom filters for sorted runs. Bloom filter is a probabilistic data "
"structure which can be used to test whether a requested key is present in a "
"run file without reading the actual file from the disk. Bloom filter may "
"have false-positive matches but false-negative matches are impossible. This "
"feature reduces the number of seeks needed for random lookups and speeds up "
"REPLACE/DELETE with enabled secondary keys (:tarantool-issue:`1919`)."
msgstr ""

msgid ""
"(Vinyl) key-level cache for point lookups and range queries. Vinyl storage "
"engine caches selected keys and key ranges instead of entire disk pages like"
" in traditional databases. This approach is more efficient because the cache"
" is not polluted with raw disk data (:tarantool-issue:`1692`)."
msgstr ""

msgid ""
"(Vinyl) implemented`). Now all in-memory indexes of a space store pointers "
"to the same tuples instead of cached secondary key index data. This feature "
"significantly reduces the memory footprint in case of secondary keys "
"(:tarantool-issue:`1908`)."
msgstr ""

msgid ""
"(Vinyl) new implementation of initial state transfer of JOIN command in "
"replication protocol. New replication protocol fixes problems with "
"consistency and secondary keys. We implemented a special kind of low-cost "
"database-wide read-view to avoid dirty reads in JOIN procedure. This trick "
"wasn't not possible in traditional B-Tree based databases (:tarantool-"
"issue:`2001`)."
msgstr ""

msgid ""
"(Vinyl) index-wide mems/runs. Removed ranges from in-memory and and the stop"
" layer of LSM tree on disk (:tarantool-issue:`2209`)."
msgstr ""

msgid ""
"(Vinyl) coalesce small ranges. Before dumping or compacting a range, "
"consider coalescing it with its neighbors (:tarantool-issue:`1735`)."
msgstr ""

msgid ""
"(Vinyl) implemented transnational journal for metadata. Now information "
"about all Vinyl files is logged in a special ``.vylog`` file (:tarantool-"
"issue:`1967`)."
msgstr ""

msgid ""
"(Vinyl) implemented consistent secondary keys (:tarantool-issue:`2410`)."
msgstr ""

msgid ""
"(Memtx+Vinyl) implemented low-level Lua API to create consistent backups. of"
" Memtx + Vinyl data. The new feature provides ``box.backup.start()/stop()`` "
"functions to create backups of all spaces. :ref:`box.backup.start() "
"<reference_lua-box_backup-backup_start>` pauses the Tarantool garbage "
"collector and returns the list of files to copy. These files then can be "
"copied be any third-party tool, like cp, ln, tar, rsync, etc. "
"``box.backup.stop()`` lets the garbage collector continue. Created backups "
"can be restored instantly by copying into a new directory and starting a new"
" Tarantool instance. No special preparation, conversion or unpacking is "
"needed (:tarantool-issue:`1916`)."
msgstr ""

msgid ""
"(Vinyl) added statistics for background workers to ``box.info.vinyl()`` "
"(:tarantool-issue:`2005`)."
msgstr ""

msgid ""
"(Memtx+Vinyl) reduced the memory footprint for indexes which keys are "
"sequential and start from the first field. This optimization was necessary "
"for secondary keys in Vinyl, but we optimized Memtx as well (:tarantool-"
"issue:`2046`)."
msgstr ""

msgid ""
"LuaJIT was rebased on the latest 2.1.0b3 with out patches (:tarantool-"
"issue:`2396`):"
msgstr ""

msgid "Added JIT compiler backend for ARM64"
msgstr "Добавлен бэкенд для JIT-компилятора для архитектуры ARM64"

msgid "Added JIT compiler backend and interpreter for MIPS64"
msgstr ""
"Добавлен бэкенд и интерпретатор для JIT-компилятора для архитектуры MIPS64"

msgid "Added some more Lua 5.2 and Lua 5.3 extensions"
msgstr "Добавлены некоторые расширения для Lua 5.2 и Lua 5.3"

msgid "Fixed several bugs"
msgstr "Исправление нескольких ошибок"

msgid "Removed Lua 5.0 legacy (see incompatible changes above)."
msgstr ""
"Удалены устаревшие функции Lua 5.0 (см. несовместимые изменения выше)."

msgid ""
"Enabled a new smart string hashing algorithm in LuaJIT to avoid significant "
"slowdown when a lot of collisions are generated. Contributed by Yury Sokolov"
" (@funny-falcon) and Nick Zavaritsky (@mejedi). See "
"https://github.com/tarantool/luajit/pull/2."
msgstr ""
"Запущен новый умный алгоритм хеширования строк в LuaJIT, чтобы избежать "
"замедления работы в случае множества коллизий. Разработали Юрий Соколов "
"(@funny-falcon) и Ник Заварицкий (@mejedi). См. "
"https://github.com/tarantool/luajit/pull/2."

msgid ""
"``box.snapshot()`` now updates mtime of a snapshot file if there were no "
"changes to the database since the last snapshot. (:tarantool-issue:`2045`)."
msgstr ""

msgid ""
"Implemented ``space:bsize()`` to return the memory size utilized by all "
"tuples of the space. Contributed by Roman Tokarev (@rtokarev). (:tarantool-"
"issue:`2043`)."
msgstr ""

msgid "Exported new Lua/C functions to public API:"
msgstr "Новые функции Lua/C вынесены в общедоступный API:"

msgid "``luaT_pushtuple``, ``luaT_istuple`` (:tarantool-issue:`1878`)"
msgstr ""

msgid ""
"``luaT_error``, ``luaT_call``, ``luaT_cpcall`` (:tarantool-issue:`2291`)"
msgstr ""

msgid "``luaT_state`` (:tarantool-issue:`2416`)"
msgstr ""

msgid ""
"Exported new Box/C functions to public API: ``box_key_def``, "
"``box_tuple_format``, ``tuple_compare()``, ``tuple_compare_with_key()``. "
"(:tarantool-issue:`2225`)."
msgstr ""

msgid ""
"xlogs now can be rotated based on size (``wal_max_size``) as well as the "
"number of written rows (``rows_per_wal``). (:tarantool-issue:`173`)."
msgstr ""

msgid ""
"Added ``string.split()``, ``string.startswith()``, ``string.endswith()``, "
"``string.ljust()``, ``string.rjust()``, ``string.center()`` API (:tarantool-"
"issue:`2211`, :tarantool-issue:`2214`, :tarantool-issue:`2415`)."
msgstr ""

msgid ""
"Added ``table.copy()`` and ``table.deepcopy()`` functions. (:tarantool-"
"issue:`2212`)."
msgstr ""

msgid ""
"Added ``pwd`` module to work with UNIX users and groups. (:tarantool-"
"issue:`2213`)."
msgstr ""

msgid ""
"Removed noisy \"client unix/: connected\" messages from logs. Use "
"``box.session.on_connect()``/``on_disconnect()`` triggers instead. "
"(:tarantool-issue:`1938`)."
msgstr ""

msgid ""
"``box.session.on_connect()``/``on_disconnect()``/``on_auth()`` triggers now "
"also fired for admin console connections."
msgstr ""
"Триггеры ``box.session.on_connect()``/``on_disconnect()``/``on_auth()`` "
"также срабатывают для подключений административной консоли."

msgid ""
"tarantoolctl: ``eval``, ``enter``, ``connect`` commands now support UNIX "
"pipes (:tarantool-issue:`672`)."
msgstr ""

msgid ""
"tarantoolctl: improved error messages and added a new man page (:tarantool-"
"issue:`1488`)."
msgstr ""

msgid ""
"tarantoolctl: added filter by ``replica_id`` to ``cat`` and ``play`` "
"commands (:tarantool-issue:`2301`)."
msgstr ""

msgid ""
"tarantoolctl: ``start``, ``stop`` and ``restart`` commands now redirect to "
"``systemctl start/stop/restart`` when systemd is enabled (:tarantool-"
"issue:`2254`)."
msgstr ""

msgid ""
"net.box: added ``buffer = <buffer>`` per-request option to store raw "
"MessagePack responses into a C buffer (:tarantool-issue:`2195`)."
msgstr ""

msgid "net.box: added ``connect_timeout`` option (:tarantool-issue:`2054`)."
msgstr ""

msgid "net.box: added ``on_schema_reload()`` hook (:tarantool-issue:`2021`)."
msgstr ""

msgid ""
"net.box: exposed ``conn.schema_version`` and ``space.connection`` to API "
"(:tarantool-issue:`2412`)."
msgstr ""

msgid ""
"log: ``debug()``/``info()``/``warn()``/``error()`` now doesn't fail on "
"formatting errors (:tarantool-issue:`889`)."
msgstr ""

msgid ""
"crypto: added HMAC support. Contributed by Andrey Kulikov (@amdei) "
"(:tarantool-issue:`725`)."
msgstr ""

msgid "**Release 1.7.3**"
msgstr "**Версия 1.7.3**"

msgid ""
"Release type: beta. Release date: 2016-12-24. Release tag: Tag: "
"1.7.3-0-gf0c92aa."
msgstr ""
"Тип версии: бета. Дата выхода: 2016-12-24.  Тег версии: 1.7.3-0-gf0c92aa."

msgid "Release: :tarantool-release:`1.7.3`"
msgstr ""

msgid "This is the second beta release in the 1.7 series."
msgstr "Данная сборка представляет собой вторую бета-версию в серии 1.7."

msgid ""
"Broken ``coredump()`` Lua function was removed. Use ``gdb -batch -ex "
"\"generate-core-file\" -p $PID`` instead (:tarantool-issue:`1886`)."
msgstr ""

msgid ""
"Vinyl disk layout was changed since 1.7.2 to add ZStandard compression and "
"improve the performance of secondary keys. Use the replication mechanism to "
"upgrade from 1.7.2 beta (:tarantool-issue:`1656`)."
msgstr ""

msgid "Substantial progress on stabilizing the Vinyl storage engine:"
msgstr "Значительный прогресс в стабилизации движка базы данных Vinyl:"

msgid "Fix most known crashes and bugs with bad results."
msgstr ""
"Исправлены большинство известных отказов системы и ошибок, выдающих плохие "
"результаты."

msgid "Switch to use XLOG/SNAP format for all data files."
msgstr "Замена формата всех файлов с данными на XLOG/SNAP."

msgid "Enable ZStandard compression for all data files."
msgstr ""
"Использование механизма компрессии ZStandard для всех файлов с данными."

msgid ""
"Squash UPSERT operations on the fly and merge hot keys using a background "
"fiber."
msgstr ""
"Сжатие операций UPSERT на лету и объединение горячих клавиш с помощью "
"фонового файбера."

msgid ""
"Significantly improve the performance of index:pairs() and index:count()."
msgstr ""
"Значительное улучшение производительности index:pairs() и index:count()."

msgid "Remove unnecessary conflicts from transactions."
msgstr "Удаление ненужных конфликтов из транзакций."

msgid "In-memory level was mostly replaced by memtx data structures."
msgstr "Уровень In-memory по большей части заменен структурами данных  memtx."

msgid "Specialized allocators are used in most places."
msgstr ""
"В большинстве случаев используются специализированные распределители "
"ресурсов."

msgid ""
"We're still actively working on Vinyl and plan to add multi-level compaction"
" and improve the performance of secondary keys in 1.7.4. This implies a data"
" format change."
msgstr ""
"Мы все еще активно работаем над Vinyl'ом и планируем добавить многоуровневое"
" слияние и улучшить производительность в работе со вторичными ключами в "
"версии 1.7.4. Это подразумевает изменение формата данных."

msgid ""
"Support for DML requests for space:on_replace() triggers (:tarantool-"
"issue:`587`)."
msgstr ""

msgid ""
"UPSERT can be used with the empty list of operations (:tarantool-"
"issue:`1854`)."
msgstr ""

msgid ""
"Lua functions to manipulate environment variables (:tarantool-issue:`1718`)."
msgstr ""

msgid ""
"Lua library to read Tarantool snapshots and xlogs (:tarantool-issue:`1782`)."
msgstr ""

msgid ""
"New ``play`` and ``cat`` commands in ``tarantoolctl`` (:tarantool-"
"issue:`1861`)."
msgstr ""

msgid ""
"Improve support for the large number of active network clients. "
"Issue#5#1892."
msgstr ""
"Улучшена поддержка большого количества активных сетевых клиентов. Проблема "
"#5#1892."

msgid ""
"Support for ``space:pairs(key, iterator-type)`` syntax (:tarantool-"
"issue:`1875`)."
msgstr ""

msgid ""
"Automatic cluster bootstrap now also works without authorization "
"(:tarantool-issue:`1589`)."
msgstr ""

msgid ""
"Replication retries to connect to master indefinitely (:tarantool-"
"issue:`1511`)."
msgstr ""

msgid ""
"Temporary spaces now work with ``box.cfg { read_only = true }`` (:tarantool-"
"issue:`1378`)."
msgstr ""

msgid ""
"The maximum length of space names increased to 64 bytes (was 32) "
"(:tarantool-issue:`2008`)."
msgstr ""

msgid "**Release 1.7.2**"
msgstr "**Версия 1.7.2**"

msgid ""
"Release type: beta. Release date: 2016-09-29. Release tag: Tag: "
"`1.7.2-1-g92ed6c4`."
msgstr ""
"Тип версии: бета. Дата выхода: 2016-09-29.  Тег версии: `1.7.2-1-g92ed6c4`."

msgid ""
"Release: https://groups.google.com/forum/#!topic/tarantool-ru/qUYUesEhRQg or"
" :tarantool-release:`1.7.2`"
msgstr ""

msgid "This is a release in the 1.7 series."
msgstr "Данная сборка представляет собой версию в серии 1.7."

msgid ""
"A new binary protocol command for CALL, which no more restricts a function "
"to returning an array of tuples and allows returning an arbitrary "
"MsgPack/JSON result, including scalars, nil and void (nothing). The old CALL"
" is left intact for backward compatibility. It will be removed in the next "
"major release. All programming language drivers will be gradually changed to"
" use the new CALL (:tarantool-issue:`1296`)."
msgstr ""

msgid ""
"Vinyl storage engine finally reached the beta stage. This release fixes more"
" than 90 bugs in Vinyl, in particular, removing unpredictable latency "
"spikes, all known crashes and bad/lost result bugs."
msgstr ""
"Разработка движка базы данных Vinyl, наконец, перешла в бета-стадию. В "
"данной версии исправлены более 90 ошибок в Vinyl'е, в частности, удаление "
"непредсказуемых скачков задержки отклика, все известные отказы системы и "
"ошибки, выдающие плохие результаты или их отсутствие."

msgid ""
"new cooperative multitasking based architecture to eliminate latency spikes,"
msgstr ""
"новая архитектура на основе кооперативной многозадачности для устранения "
"скачков задержки отклика,"

msgid "support for non-sequential multi-part keys,"
msgstr "поддержка непоследовательных составных ключей,"

msgid "support for secondary keys,"
msgstr "поддержка вторичных ключей,"

msgid "support for ``auto_increment()``,"
msgstr "поддержка ``auto_increment()``,"

msgid "number, integer, scalar field types in indexes,"
msgstr ""
"типы полей в индексах: number (число), integer (целое число), scalar "
"(скаляр),"

msgid "INSERT, REPLACE and UPDATE return new tuple, like in memtx."
msgstr ""
"операции INSERT, REPLACE и UPDATE возвращают новый кортеж, как в memtx'е."

msgid ""
"We're still actively working on Vinyl and plan to add ``zstd`` compression "
"and a new memory allocator for Vinyl in-memory index in 1.7.3. This implies "
"a data format change which we plan to implement before 1.7 becomes generally"
" available."
msgstr ""
"Мы все еще активно работаем над Vinyl'ом и планируем добавить механизм "
"компрессии ``zstd`` и новый распределитель ресурсов для Vinyl'а в версии "
"1.7.3. Это подразумевает изменение формата данных, который планируется "
"внедрить до того, как версия 1.7 станет общедоступной."

msgid ""
"Tab-based autocompletion in the interactive console, "
"``require('console').connect()``, ``tarantoolctl enter`` and ``tarantoolctl "
"connect`` commands (:tarantool-issue:`86` and :tarantool-issue:`1790`). Use "
"the TAB key to auto complete the names of Lua variables, functions and meta-"
"methods."
msgstr ""

msgid ""
"A new implementation of ``net.box`` improving performance and solving "
"problems when the Lua garbage collector handles dead connections "
"(:tarantool-issue:`799`, :tarantool-issue:`800`, :tarantool-issue:`1138` and"
" :tarantool-issue:`1750`)."
msgstr ""

msgid ""
"memtx snapshots and xlog files are now compressed on the fly using the fast "
"`ZStandard <https://github.com/facebook/zstd>`_ compression algorithm. "
"Compression options are configured automatically to get an optimal trade-off"
" between CPU utilization and disk throughput."
msgstr ""
"Появилась компрессия снимков memtx и xlog-файлов на лету с использованием "
"быстрого алгоритма компрессии `ZStandard "
"<https://github.com/facebook/zstd>`_. Компрессия настраивается автоматически"
" для получения оптимального соотношения между использованием ЦП и пропускной"
" способностью диска."

msgid ""
"``fiber.cond()`` - a new synchronization mechanism for cooperative "
"multitasking (:tarantool-issue:`1731`)."
msgstr ""

msgid ""
"Tarantool can now be installed using universal Snappy packages "
"(http://snapcraft.io/) with ``snap install tarantool --channel=beta``."
msgstr ""
"Tarantool теперь можно устанавливать из универсальных Snappy-пакетов "
"(http://snapcraft.io/) с помощью команды ``snap install tarantool "
"--channel=beta``."

msgid "New rocks and packages:"
msgstr "Новые модули и пакеты:"

msgid ""
"`curl <https://github.com/tarantool/tarantool-curl>`_ - non-blocking "
"bindings for libcurl"
msgstr ""
"`curl <https://github.com/tarantool/tarantool-curl>`_ - неблокирующие "
"привязки для libcurl"

msgid ""
"`prometheus <https://github.com/tarantool/prometheus>`_ - Prometheus metric "
"collector for Tarantool"
msgstr ""
"`prometheus <https://github.com/tarantool/prometheus>`_ - сборщик метрик "
"Prometheus для Tarantool"

msgid ""
"`gis <https://github.com/tarantool/gis>`_ - a full-featured geospatial "
"extension for Tarantool"
msgstr ""
"`gis <https://github.com/tarantool/gis>`_ - полнофункциональное "
"геопространственное расширение для Tarantool"

msgid ""
"`mqtt <https://github.com/tarantool/mqtt>`_ - an MQTT protocol client for "
"Tarantool"
msgstr ""
"`mqtt <https://github.com/tarantool/mqtt>`_ - клиент MQTT-протокола для "
"Tarantool"

msgid ""
"`luaossl <https://github.com/tarantool/luaossl>`_ - the most comprehensive "
"OpenSSL module in the Lua universe"
msgstr ""
"`luaossl <https://github.com/tarantool/luaossl>`_ -  самый полноценный "
"OpenSSL-модуль во вселенной Lua"

msgid "Deprecated, removed features and minor incompatibilities:"
msgstr "Устаревшие, удаленные и несовместимые функции:"

msgid ""
"``num`` and ``str`` fields type names are deprecated, use ``unsigned`` and "
"``string`` instead (:tarantool-issue:`1534`)."
msgstr ""

msgid ""
"``space:inc()`` and ``space:dec()`` were removed (deprecated in 1.6.x) "
"(:tarantool-issue:`1289`)."
msgstr ""

msgid ""
"``fiber:cancel()`` is now asynchronous and doesn't wait for the fiber to end"
" (:tarantool-issue:`1732`)."
msgstr ""

msgid ""
"Implicit error-prone ``tostring()`` was removed from ``digest`` API "
"(:tarantool-issue:`1591`)."
msgstr ""

msgid ""
"Support for SHA-0 (``digest.sha()``) was removed due to OpenSSL upgrade."
msgstr ""
"Поддержка SHA-0 (``digest.sha()``) прекращается по причине обновления "
"OpenSSL."

msgid ""
"``net.box`` now uses one-based indexes for ``space.name.index[x].parts`` "
"(:tarantool-issue:`1729`)."
msgstr ""

msgid ""
"Tarantool binary now dynamically links with ``libssl.so`` during compile "
"time instead of loading it at the run time."
msgstr ""
"Бинарный файл Tarantool будет динамически связываться с ``libssl.so`` во "
"время компиляции вместо загрузки во время выполнения."

msgid ""
"Debian and Ubuntu packages switched to use native ``systemd`` configuration "
"alongside with old-fashioned ``sysvinit`` scripts."
msgstr ""
"Пакеты Debian и Ubuntu будут использовать встроенную конфигурацию "
"``systemd`` вместе с вышедшими из употребления скриптами ``sysvinit``."

msgid ""
"``systemd`` provides its own facilities for multi-instance management. To "
"upgrade, perform the following steps:"
msgstr ""
"В ``systemd`` появляется возможность управления несколькими экземплярами. "
"Чтобы обновить, выполните следующие действия:"

msgid "Install new 1.7.2 packages."
msgstr "Установите новые пакеты версии 1.7.2."

msgid ""
"Ensure that ``INSTANCENAME.lua`` file is present in "
"``/etc/tarantool/instances.enabled``."
msgstr ""
"Убедитесь в наличии файла ``ИМЯ_ЭКЗЕМПЛЯРА.lua`` в директории "
"``/etc/tarantool/instances.enabled``."

msgid "Stop INSTANCENAME using ``tarantoolctl stop INSTANCENAME``."
msgstr "Остановите ЭКЗЕМПЛЯР с помощью ``tarantoolctl stop ИМЯ_ЭКЗЕМПЛЯРА``."

msgid "Start INSTANCENAME using ``systemctl start tarantool@INSTANCENAME``."
msgstr ""
"Запустите ЭКЗЕМПЛЯР с помощью ``systemctl start tarantool@ИМЯ_ЭКЗЕМПЛЯРА``."

msgid ""
"Enable INSTANCENAME during system boot using ``systemctl enable "
"trantool@INTANCENAME``."
msgstr ""
"Включите ЭКЗЕМПЛЯР во время загрузки системы с помощью ``systemctl enable "
"tarantool@ИМЯ_ЭКЗЕМПЛЯРА``."

msgid ""
"Say ``systemctl disable tarantool; update-rc.d tarantool remove`` to disable"
" sysvinit-compatible wrappers."
msgstr ""
"Введите команду ``systemctl disable tarantool; update-rc.d tarantool "
"remove``, чтобы отключить надстройки, совместимые с sysvinit."

msgid ""
"Refer to (:tarantool-issue:`1291`), comment and :ref:`the administration "
"chapter <admin>` for additional information."
msgstr ""

msgid ""
"Debian and Ubuntu packages start a ready-to-use ``example.lua`` instance on "
"a clean installation of the package. The default instance grants universe "
"permissions for ``guest`` user and listens on \"localhost:3313\"."
msgstr ""

msgid "Fedora 22 packages were deprecated (EOL)."
msgstr "Пакеты для Fedora 22 объявлены устаревшими (прекращение поддержки)."

msgid "**Release 1.7.1**"
msgstr "**Версия 1.7.1**"

msgid "Release type: alpha. Release date: 2016-07-11."
msgstr "Тип версии: альфа. Дата выхода: 2016-07-11."

msgid ""
"Release: https://groups.google.com/forum/#!topic/tarantool/KGYj3VKJKb8 or "
":tarantool-release:`1.7.1`"
msgstr ""

msgid ""
"This is the first alpha in the 1.7 series. The main feature of this release "
"is a new storage engine, called \"vinyl\". Vinyl is a write optimized "
"storage engine, allowing the amount of data stored exceed the amount of "
"available RAM 10-100x times. Vinyl is a continuation of the Sophia engine "
"from 1.6, and effectively a fork and a distant relative of Dmitry "
"Simonenko's Sophia. Sophia is superseded and replaced by Vinyl. Internally "
"it is organized as a log structured merge tree. However, it takes a serious "
"effort to improve on the traditional deficiencies of log structured storage,"
" such as poor read performance and unpredictable write latency. A single "
"index is range partitioned among many LSM data structures, each having its "
"own in-memory buffers of adjustable size. Range partitioning allows merges "
"of LSM levels to be more granular, as well as to prioritize hot ranges over "
"cold ones in access to resources, such as RAM and I/O. The merge scheduler "
"is designed to minimize write latency while ensuring read performance stays "
"within acceptable limits. Vinyl today only supports a primary key index. The"
" index can consist of up to 256 parts, like in MemTX, up from 8 in Sophia. "
"Partial key reads are supported. Support of non-sequential multi part keys, "
"as well as secondary keys is on the short term todo. Our intent is to remove"
" all limitations currently present in Vinyl, making it a first class citizen"
" in Tarantool."
msgstr ""
"Данная сборка представляет собой первую альфа-версию в серии 1.7. Основной "
"функцией данной версии является новый движок базы данных под названием "
"\"vinyl\". Vinyl представляет собой оптимизированный для записи движок базы "
"данных, который позволяет сохранять объем сохраняемых данных, превышающий "
"объем доступной памяти в 10-100 раз. Vinyl является продолжением движка "
"Sophia из версии 1.6, а именно ответвлением и дальним родственником Sophia "
"Дмитрия Симоненко. Новый Vinyl заменяет Sophia. Он реализован в виде "
"журнально-структурированного дерева со слиянием (log-structured merge tree "
"-- LSM-tree). Однако усовершенствование таких традиционных недостатков "
"журнально-структурированных хранилищ, как низкая производительность при "
"чтении и непредсказуемая задержка во времени при записи, стоит больших "
"усилий. Отдельный индекс секционирован по диапазонам между многими "
"структурами данных LSM, в каждой из который находятся собственные буферы "
"оперативной памяти регулируемого размера. Секционирование по диапазонам "
"позволяет осуществить слияние LSM-уровней, чтобы добиться большей "
"детализации, а также отдать приоритет горячим диапазонам по отношению к "
"холодным в том, что касается доступа к ресурсам, таким как оперативная "
"память и ввод-вывод. Планировщик слияний предназначен для сведения времени "
"задержки записи к минимуму, а также для поддержания производительности при "
"чтении в приемлемых пределах. На сегодняшний день Vinyl поддерживает только "
"первичные индексы. Индекс может состоять из 256 частей, как в MemTX'е, по "
"сравнению с 8 в Sophia. Поддерживает чтение по компонентам ключа. Вскоре "
"ожидается поддержка непоследовательных составных ключей, а также вторичных "
"ключей. Наше намерение заключается в том, чтобы убрать любые ограничения, "
"которые есть сейчас в Vinyl'е, чтобы сделать его полноценным компонентом "
"Tarantool."

msgid ""
"The disk-based storage engine, which was called ``sophia`` or ``phia`` in "
"earlier versions, is superseded by the ``vinyl`` storage engine."
msgstr ""
"Дисковый движок, который в более ранних версиях Tarantool назывался "
"``sophia`` или ``phia``, заменен новым движком под названием ``vinyl``."

msgid "There are new types for indexed fields."
msgstr "Добавлены новые типы индексируемых полей."

msgid "The LuaJIT version is updated."
msgstr "Обновлена версия LuaJIT."

msgid ""
"Automatic replica set bootstrap (for easier configuration of a new replica "
"set) is supported."
msgstr ""
"Поддерживается автоматическая настройка набора реплик, что существенно "
"упрощает настройку нового набора реплик."

msgid "The ``space_object:inc()`` function is removed."
msgstr "Функция ``space_object:inc()`` объявлена устаревшей."

msgid "The ``space_object:dec()`` function is removed."
msgstr "Функция ``space_object:dec()`` объявлена устаревшей."

msgid "The ``space_object:bsize()`` function is added."
msgstr "Добавлена функция ``space_object:bsize()``."

msgid ""
"The ``box.coredump()`` function is removed, for an alternative see "
":ref:`Core dumps <admin-core_dumps>`."
msgstr ""
"Удалена функция ``box.coredump()``, аналог см. в главе :ref:`Создание дампов"
" памяти <admin-core_dumps>`."

msgid "The ``hot_standby`` configuration option is added."
msgstr "Добавлена опция настройки ``hot_standby`` (горячий резерв)."

msgid "Configuration parameters revised or renamed:"
msgstr "Исправленные или переименованные конфигурационные параметры:"

msgid "``slab_alloc_arena`` (in gigabytes) to ``memtx_memory`` (in bytes),"
msgstr "``slab_alloc_arena`` (в гигабайтах) в ``memtx_memory`` (в байтах),"

msgid "``slab_alloc_minimal`` to ``memtx_min_tuple_size``,"
msgstr "``slab_alloc_minimal`` в ``memtx_min_tuple_size``,"

msgid "``slab_alloc_maximal`` to ``memtx_max_tuple_size``,"
msgstr "``slab_alloc_maximal`` в ``memtx_max_tuple_size``,"

msgid "``replication_source`` to ``replication``,"
msgstr "``replication_source`` в ``replication``,"

msgid "``snap_dir`` to ``memtx_dir``,"
msgstr "``snap_dir`` в ``memtx_dir``,"

msgid "``logger`` to ``log``,"
msgstr "``logger`` в ``log``,"

msgid "``logger_nonblock`` to ``log_nonblock``,"
msgstr "``logger_nonblock`` в ``log_nonblock``,"

msgid "``snapshot_count`` to ``checkpoint_count``,"
msgstr "``snapshot_count`` в ``checkpoint_count``,"

msgid "``snapshot_period`` to ``checkpoint_interval``,"
msgstr "``snapshot_period`` в ``checkpoint_interval``,"

msgid ""
"``panic_on_wal_error`` and ``panic_on_snap_error`` united under "
"``force_recovery``."
msgstr ""
"``panic_on_wal_error`` и ``panic_on_snap_error`` объединены в  "
"``force_recovery``."

msgid ""
"Until Tarantool 1.8, you can use :ref:`deprecated parameters "
"<cfg_deprecated>` for both initial and runtime configuration, but Tarantool "
"will display a warning. Also, you can specify both deprecated and up-to-date"
" parameters, provided that their values are harmonized. If not, Tarantool "
"will display an error."
msgstr ""
"В версиях Tarantool до 1.8 можно использовать :ref:`устаревшие  параметры "
"<cfg_deprecated>` как для начальной, так и для рабочей конфигурации, но в "
"таком случае Tarantool выдаст предупреждение. Также можно указывать как "
"устаревшие, так и новые параметры при условии, что их значения согласованы. "
"В противном случае, Tarantool выдаст ошибку."

msgid ""
"Automatic replication cluster bootstrap; it's now much easier to configure a"
" new replication cluster."
msgstr ""
"У кластера репликации появилась возможность автоматической настройки, что "
"существенно упрощает настройку нового кластера."

msgid "New indexable data types: INTEGER and SCALAR."
msgstr ""
"Новые индексируемые типы данных: INTEGER (целое число) и SCALAR (скаляр)."

msgid "Code refactoring and performance improvements."
msgstr "Рефакторинг кода и улучшение производительности."

msgid "Updated LuaJIT to 2.1-beta116."
msgstr "LuaJIT обновлен до версии 2.1-beta116."

#~ msgid ""
#~ "Layout of ``box.space._index`` has been extended to support "
#~ ":ref:`is_nullable <box_space-is_nullable>` and :ref:`collation <index-"
#~ "collation>` features. All new indexes created on columns with "
#~ "``is_nullable`` or ``collation`` properties will have the new definition "
#~ "format. Please update your client libraries if you plan to use these new "
#~ "features (:tarantool-issue:`2802`)."
#~ msgstr ""

#~ msgid ""
#~ ":ref:`fiber_name() <fiber_object-name_get>` now raises an exception instead "
#~ "of truncating long fiber names. We found that some Lua modules such as "
#~ ":ref:`expirationd <expirationd-module>` use ``fiber.name()`` as a key to "
#~ "identify background tasks. If a name is truncated, this fact was silently "
#~ "missed. The new behavior allows to detect bugs caused by ``fiber.name()`` "
#~ "truncation. Please use ``fiber.name(name, { truncate = true })`` to emulate "
#~ "the old behavior (:tarantool-issue:`2622`)."
#~ msgstr ""

#~ msgid ""
#~ "NULL values in unique and non-unique indexes. By default, all fields in "
#~ "Tarantool are  \"NOT NULL\". Starting from Tarantool 1.7.6, you can use "
#~ "``is_nullable`` option in :ref:`space:format() <box_space-format>` or "
#~ ":ref:`inside an index part definition <box_space-is_nullable>` to allow "
#~ "storing NULL in indexes. Tarantool partially implements `three-valued logic "
#~ "<https://en.wikipedia.org/wiki/Three-valued_logic>`_ from the SQL standard "
#~ "and allows storing multiple NULL values in unique indexes (:tarantool-"
#~ "issue:`1557`)."
#~ msgstr ""
