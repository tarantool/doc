
msgid "Tarantool 2.10.4"
msgstr ""

msgid "Released on 2022-11-11."
msgstr ""

msgid "Release: :tarantool-release:`2.10.4`."
msgstr ""

msgid "Tag: ``2.10.4``."
msgstr ""

msgid "Overview"
msgstr ""

msgid ""
"2.10.4 is the fifth :doc:`stable </release/policy/>` version of the 2.10 "
"release series. It introduces 5 improvements and resolves 28 bugs since "
"2.10.3."
msgstr ""

msgid ""
"The “stable” label means that we have all planned features implemented and "
"we see no high-impact issues. However, if you encounter an issue, feel free "
"to `report it <https://github.com/tarantool/tarantool/issues>`__ on GitHub."
msgstr ""

msgid "Compatibility"
msgstr ""

msgid ""
"Tarantool 2.x is backward compatible with Tarantool 1.10.x in the binary "
"data layout, client-server protocol, and replication protocol."
msgstr ""

msgid ""
"Please :doc:`upgrade </book/admin/upgrades>` using the "
"``box.schema.upgrade()`` procedure to unlock all the new features of the 2.x"
" series."
msgstr ""

msgid ""
"Now the empty string, ``n``, ``nu``, ``s``, and ``st`` (that is, leading "
"parts of ``num`` and ``str``) are not accepted as valid field types "
"(:tarantool-issue:`5940`). :ref:`This instruction <admin-"
"upgrades-2.10.4_illegal_type_name>` will help you upgrade to Tarantool "
"2.10.4 and newer if you've previously used these values in field types."
msgstr ""

msgid "Functionality added or changed"
msgstr ""

msgid "Core"
msgstr ""

msgid ""
"The JSON log format can now be used with the syslog logger (:tarantool-"
"issue:`7860`)."
msgstr ""

msgid "SQL"
msgstr ""

msgid ""
"New rules are applied to determine the type of CASE operation (:tarantool-"
"issue:`6990`)."
msgstr ""

msgid ""
"Now ``NULLIF()`` call results have the same type as its first argument "
"(:tarantool-issue:`6989`)."
msgstr ""

msgid "Build"
msgstr ""

msgid ""
"Diagnostics now provide relative file paths instead of absolute ones "
"(:tarantool-issue:`7808`)."
msgstr ""

msgid ""
"Now the compiler info displayed in ``tarantool.build.compiler`` and "
"``tarantool --version`` shows the ID and the version of the compiler that "
"was used to build Tarantool. The output has the format "
"``${CMAKE_C_COMPILER_ID}-${CMAKE_C_COMPILER_VERSION}``, for example, "
"``Clang-14.0.0.14000029`` (:tarantool-issue:`7888`)."
msgstr ""

msgid "Bugs fixed"
msgstr ""

msgid ""
"Fixed creation of spaces with a constraint and a foreign key on the same "
"field (:tarantool-issue:`7645`)."
msgstr ""

msgid ""
"Now the same error is returned when a password or a username provided during"
" authorization is incorrect. This prevents user enumeration (:tarantool-sec-"
"issue:`16`)."
msgstr ""

msgid ""
"Added boundary checking for ``getenv()`` return values. Also, for security "
"reasons, Tarantool code now copies these values instead of using them "
"directly (:tarantool-issue:`7797`)."
msgstr ""

msgid ""
"``os.getenv()`` now always returns values of sane size (:tarantool-"
"issue:`7797`)."
msgstr ""

msgid ""
"Fixed the ``BEGIN``, ``COMMIT``, and ``ROLLBACK`` counters in the "
"``box.stat()`` output. Now they show the number of started, committed, and "
"rolled back transactions (:tarantool-issue:`7583`)."
msgstr ""

msgid ""
"Fixed a crash that could occur during log rotation and application exit "
"(:tarantool-issue:`4450`)."
msgstr ""

msgid ""
"Fixed a possible buffer overflow in ``mp_decode_decimal()`` and "
"``decimal_unpack()`` when an input string was too long (:tarantool-sec-"
"issue:`17`)."
msgstr ""

msgid ""
"Fixed a bug in the MsgPack library that could lead to a failure to detect "
"invalid MsgPack input and, as a result, an out-of-bounds read (:tarantool-"
"sec-issue:`18`)."
msgstr ""

msgid ""
"If an error occurs during a snapshot recovery, its log now contains "
"information about the row that caused the error (:tarantool-issue:`7917`)."
msgstr ""

msgid "Memtx"
msgstr ""

msgid ""
"Fixed possible loss of committed tuples in secondary indexes with MVCC "
"transaction manager (:tarantool-issue:`7712`)."
msgstr ""

msgid ""
"Fixed an assertion being triggered on ``space:drop`` (:tarantool-"
"issue:`7757`)."
msgstr ""

msgid ""
"Fixed possible violation of the secondary index uniqueness with the "
"transaction manager enabled (:tarantool-issue:`7761`)."
msgstr ""

msgid "LuaJIT"
msgstr ""

msgid ""
"Backported patches from vanilla LuaJIT trunk (:tarantool-issue:`7230`). In "
"the scope of this activity, the following issues have been resolved:"
msgstr ""

msgid "Fix overflow check in ``unpack()`` optimized by a compiler."
msgstr ""

msgid ""
"Fix recording of ``tonumber()`` with cdata argument for failed conversions "
"(:tarantool-issue:`7655`)."
msgstr ""

msgid "Fix concatenation operation on cdata. It always raises an error now."
msgstr ""

msgid ""
"Fixed the Lua stack dump command (``lj-stack``) to support Python 2: "
"unpacking arguments within the list initialization is not supported in it "
"(:tarantool-issue:`7458`)."
msgstr ""

msgid "Lua"
msgstr ""

msgid ""
"Fixed a crash in ``msgpack.decode`` in case the input string contains an "
"invalid MsgPack header ``0xc1`` (:tarantool-issue:`7818`)."
msgstr ""

msgid ""
"Fixed an assertion when ``INDEXED BY`` was used with an index that was at "
"least third in a space (:tarantool-issue:`5976`)."
msgstr ""

msgid ""
"Fixed a crash that could occur when selecting tuples with more fields than "
"specified in the space format (:tarantool-issue:`5310`, :tarantool-"
"issue:`4666`)."
msgstr ""

msgid ""
"Fixed an assertion in ``JOIN`` when using an unsupported index (:tarantool-"
"issue:`5678`)."
msgstr ""

msgid ""
"Creating indexes on newly added fields no longer leads to assertions in "
"``SELECT`` queries (:tarantool-issue:`5183`)."
msgstr ""

msgid ""
"Re-running a prepared statement that generates new auto-increment IDs no "
"longer causes an error (:tarantool-issue:`6422`)."
msgstr ""

msgid ""
"An error is now thrown if too many indexes were created in SQL (:tarantool-"
"issue:`5526`)."
msgstr ""

msgid "Box"
msgstr ""

msgid ""
"Revoked execute access rights to the ``LUA`` function from the public role "
"(:tarantool-sec-issue:`14`)."
msgstr ""

msgid ""
"Fixed a bug when ``type = box.NULL`` in ``key_def.new()`` resulted in ``type"
" = 'unsigned'`` (:tarantool-issue:`5222`)."
msgstr ""

msgid ""
"The ``_vfunc`` system space now has the same format as ``_func`` "
"(:tarantool-issue:`7822`)."
msgstr ""

msgid ""
"Fixed a crash on recovery from snapshots that don’t include system spaces "
"(:tarantool-issue:`7800`)."
msgstr ""

msgid ""
"Fixed a bug that occurred when a foreign key was created together with "
"fields that participate in that foreign key (:tarantool-issue:`7652`)."
msgstr ""

msgid "Datetime"
msgstr ""

msgid ""
"Fixed interval arithmetic for boundaries crossing DST (:tarantool-"
"issue:`7700`)."
msgstr ""

msgid ""
"Results of datetime arithmetic operations could get a different timezone if "
"the DST boundary has been crossed during the operation:"
msgstr ""

msgid ""
"tarantool> datetime.new{year=2008, month=1, day=1,\n"
"                        tz='Europe/Moscow'} +\n"
"           datetime.interval.new{month=6}\n"
"---\n"
"- 2008-07-01T01:00:00 Europe/Moscow\n"
"..."
msgstr ""

msgid ""
"Now we resolve ``tzoffset`` at the end of operation if ``tzindex`` is not 0."
msgstr ""

msgid ""
"Fixed subtractions for datetimes with different timezones (:tarantool-"
"issue:`7698`)."
msgstr ""

msgid ""
"Previously, the timezone difference (``tzoffset``) was ignored in datetime "
"subtraction operations:"
msgstr ""

msgid ""
"tarantool> datetime.new{tz='MSK'} - datetime.new{tz='UTC'}\n"
"---\n"
"- +0 seconds\n"
"...\n"
"tarantool> datetime.new{tz='MSK'}.timestamp -\n"
"           datetime.new{tz='UTC'}.timestamp\n"
"---\n"
"- -10800\n"
"..."
msgstr ""

msgid ""
"Now this difference is accumulated in the minute component of the resulting "
"interval:"
msgstr ""

msgid ""
"tarantool> datetime.new{tz='MSK'} - datetime.new{tz='UTC'}\n"
"---\n"
"- -180 minutes\n"
"..."
msgstr ""
