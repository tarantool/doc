
msgid "Tarantool Releases in August 2021"
msgstr "Релизы Tarantool в августе 2021"

msgid "Date: 2021-08-19"
msgstr "Дата: 2021-08-19"

msgid "Introduction"
msgstr "Общие сведения"

msgid ""
"Meet the new Tarantool releases of August 2021: :tarantool-release:`2.8.2`, "
":tarantool-release:`2.7.3`, :tarantool-release:`1.10.11`."
msgstr ""
"В августе 2021 года вышли новые релизы Tarantool: :tarantool-"
"release:`2.8.2`, :tarantool-release:`2.7.3` и :tarantool-release:`1.10.11`."

msgid ""
"Also, check the new Tarantool beta release of August 2021: :tarantool-"
"release:`2.10.0-beta1`."
msgstr ""
"Кроме того, выпущен бета-релиз Tarantool :tarantool-release:`2.10.0-beta1`."

msgid "Automated Raft-based failover out of the box"
msgstr ""
"Основанное на Raft автоматизированное восстановление после сбоев работает "
"\"из коробки\""

msgid ""
"The Raft-based failover algorithm is now a part of Tarantool, available out "
"of the box. Use it to improve data safety and reliability of Tarantool "
"applications."
msgstr ""
"Алгоритм восстановления после сбоев, основанный на Raft, теперь входит в "
"состав сборки Tarantool. Используйте этот алгоритм, чтобы повысить "
"безопасность данных и надежность приложений Tarantool."

msgid "Using interactive transactions with any programming language"
msgstr ""
"Использование интерактивных транзакций с любым языком программирования"

msgid ""
"Write applications with interactive transactions in the programming language"
" of your choice."
msgstr ""
"Пишите приложения с интерактивными транзакциями на любом языке "
"программирования по вашему выбору."

msgid ""
"Interactive transactions are now part of iproto and can be used by "
"applications in any programming language."
msgstr ""
"Эти транзакции теперь поддерживает протокол iproto, и их могут использовать "
"приложения на любом языке."

msgid "Compatibility"
msgstr "Совместимость"

msgid ""
"Tarantool 2.x is backward compatible with Tarantool 1.10.x regarding the "
"binary data layout, client-server protocol, and replication protocol."
msgstr ""
"Tarantool 2.x обратно совместим с Tarantool 1.10.x в отношении структуры "
"двоичных данных, клиент-серверного протокола и протокола репликации."

msgid ""
"`Upgrade <https://www.tarantool.io/en/doc/latest/book/admin/upgrades/>`__ "
"using the ``box.schema.upgrade()`` procedure to unlock all the new features "
"of the 2.x series."
msgstr ""
"Чтобы получить доступ ко всем новым функциям серии 2.x, `обновите Tarantool "
"<https://www.tarantool.io/en/doc/latest/book/admin/upgrades/>`__ с помощью "
"``box.schema.upgrade()``."

msgid ""
"Some changes are labeled as **[Breaking change]**. It means that the old "
"behavior was considered error-prone and therefore changed to protect users "
"from unintended mistakes. However, there is a small probability that someone"
" can rely on the old behavior, and this label is to bring attention to the "
"things that have been changed."
msgstr ""
"Некоторые изменения помечены как **[Критическое изменение]**. Это означает, "
"что старое поведение, вызывавшее сбои, было изменено, чтобы защитить "
"пользователей от непреднамеренных ошибок. Тем не менее есть небольшая "
"вероятность, что кто-то из пользователей будет полагаться на старое "
"поведение. Поэтому, чтобы привлечь внимание к изменениям, была добавлена "
"особая пометка."

msgid "New and updated features"
msgstr "Новые и обновленные функциональные возможности"

msgid "Core"
msgstr "Основные функции (Core)"

msgid ""
"The information about the state of synchronous replication is now available "
"via the ``box.info.synchro`` interface (:tarantool-release:`2.7.3`, "
":tarantool-release:`2.10.0-beta1`, :tarantool-issue:`5191`)."
msgstr ""
"Информацию о состоянии синхронной репликации теперь можно получить через "
"интерфейс ``box.info.synchro`` (:tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`5191`)."

msgid ""
"The UUID field type is now part of the ``SCALAR`` field type (:tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6042`)."
msgstr ""
"Тип поля ``UUID`` теперь входит в тип ``SCALAR`` (:tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6042`)."

msgid ""
"The ``UUID`` field type is now available in SQL. A new UUID can be generated"
" using the new SQL built-in function ``UUID()`` (:tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`5886`)."
msgstr ""
"В SQL теперь есть поля типа ``UUID``. Чтобы создать UUID-значение, можно "
"использовать новую встроенную функцию ``UUID()`` (:tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`5886`)."

msgid ""
"**[Breaking change]** The ``timeout()`` method of the ``net.box`` "
"connection, marked deprecated more than four years ago (in ``1.7.4``), has "
"been dropped. It negatively affected the performance of hot ``net.box`` "
"methods, such as ``call()`` and ``select()`` if they were called without a "
"specified timeout (:tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`6242`)."
msgstr ""
"**[Критическое изменение]** Метод ``timeout()`` соединения ``net.box``, "
"объявленный устаревшим более четырех лет назад (в релизе ``1.7.4``), теперь "
"удален. Он ухудшал производительность часто используемых методов "
"``net.box``, например ``call()`` и ``select()``, если их вызывали, не "
"указывая тайм-аут (:tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`6242`)."

msgid ""
"Improved ``net.box`` performance by up to 70% by rewriting hot code paths in"
" C (:tarantool-release:`2.10.0-beta1`, :tarantool-issue:`6241`)."
msgstr ""
"Переписали на языке C часто используемые участки кода ``net.box``, что "
"улучшило производительность этого модуля в пределах 70% (:tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6241`)."

msgid ""
"Introduced compact tuples that allow saving 4 bytes per tuple in case of "
"small userdata (:tarantool-release:`2.10.0-beta1`, :tarantool-issue:`5385`)"
msgstr ""
"Добавлены компактные кортежи для небольших пользовательских данных. За счёт "
"более коротких полей размера и смещения каждый кортеж занимает на 4 байта "
"меньше (:tarantool-release:`2.10.0-beta1`, :tarantool-issue:`5385`)"

msgid ""
"Now streams and interactive transactions over streams are implemented in "
"iproto. Every stream is associated with its ID, which is unique within one "
"connection. All requests with the same non-zero stream ID belong to the same"
" stream. All requests in the stream are processed synchronously. The next "
"request will not start executing until the previous one is completed. If a "
"request's stream ID is ``0``, it does not belong to any stream and is "
"processed in the old way."
msgstr ""
"Теперь в протоколе iproto реализованы стримы (streams), где совершаются "
"интерактивные транзакции. У каждого стрима есть идентификатор ID, уникальный"
" внутри соединения. Все запросы с одним и тем же ненулевым ID относятся к "
"одному стриму и обрабатываются синхронно: следующий запрос не начинает "
"выполняться, пока не завершен предыдущий. Запросы с ID, равным ``0``, не "
"привязаны к конкретному стриму и обрабатываются по-старому."

msgid ""
"In ``net.box``, a stream is an object above the connection that has the same"
" methods but allows executing requests sequentially. The ID is generated on "
"the client side automatically. If a user writes their own connector and "
"wants to use streams, they must transmit the ``stream_id`` over the iproto "
"protocol."
msgstr ""
"В модуле ``net.box`` стрим (stream) — это объект-обертка вокруг соединения. "
"Он обладает теми же методами, но может выполнять запросы последовательно. ID"
" потока создается на стороне клиента автоматически. Чтобы задействовать "
"стримы с пользовательскими коннекторами, необходимо передавать ``stream_id``"
" по протоколу iproto."

msgid ""
"The primary purpose of streams is transactions via iproto. As each stream "
"can start a transaction, several transactions can be multiplexed over one "
"connection. There are multiple ways to begin, commit, and rollback a "
"transaction. One can do that using the appropriate stream methods, ``call``,"
" ``eval``, or ``execute`` with the SQL transaction syntax. Users can mix "
"these methods. For example, one might start a transaction using "
"``stream:begin()``, and commit it with ``stream:call('box.commit')`` or "
"``stream:execute('COMMIT')``. If any request fails during the transaction, "
"it will not affect the other requests in the transaction. If a disconnect "
"occurs while there is an active transaction in the stream, that transaction "
"will be rolled back if it hasn't been committed before the connection "
"failure."
msgstr ""
"Основное предназначение стримов --- выполнение транзакций через протокол "
"iproto. Поскольку каждый стрим может запустить транзакцию, одно соединение "
"способно мультиплексировать несколько транзакций. Начать транзакцию, сделать"
" ее коммит и отменить ее можно, используя с синтаксисом транзакции SQL "
"различные методы стрима: ``call``, ``eval`` или ``execute``. Пользователь "
"может смешивать эти методы. Например, можно начать транзакцию с помощью "
"``stream:begin()``, а коммит провести, используя "
"``stream:call('box.commit')`` или ``stream:execute('COMMIT')``. Если какой-"
"либо запрос завершится ошибкой во время транзакции, это не повлияет на "
"остальные запросы. Если во время активной транзакции в стриме произойдет "
"сбой подключения, эта транзакция будет отменена, если она не прошла коммит "
"до сбоя."

msgid ""
"Added the new ``memtx_allocator`` option to ``box.cfg{}``. It allows "
"selecting an appropriate allocator for memtx tuples if necessary. The "
"possible values are ``system`` for the malloc allocator and ``small`` for "
"the default small allocator."
msgstr ""
"В ``box.cfg{}`` добавили настройку ``memtx_allocator``. Она позволяет при "
"необходимости выбрать подходящий аллокатор для кортежей memtx. Возможные "
"значения: ``system`` для аллокатора malloc и ``small`` для аллокатора по "
"умолчанию."

msgid ""
"Implemented the system allocator based on malloc. The slab allocator, which "
"is used for tuple allocation, has a particular disadvantage---it is prone to"
" unresolvable fragmentation on specific workloads (size migration). In this "
"case, the user should be able to choose another allocator. The system "
"allocator is based on the malloc function but restricted by the same quota "
"as the slab allocator. The system allocator does not alloc all the memory at"
" the start. Instead, it allocates memory as needed, checking that the quota "
"is not exceeded (:tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`5419`)."
msgstr ""
"Реализован системный аллокатор на основе malloc. У аллокатора slab, который "
"используется для кортежей, есть особый недостаток: он может приводить к "
"неразрешимой фрагментации при определенных рабочих нагрузках (миграция "
"размера). В этом случае пользователю нужна возможность выбрать другой "
"аллокатор. Системный аллокатор основан на функции malloc, но ограничен той "
"же квотой, что и slab-аллокатор. Системный аллокатор не распределяет всю "
"память в начале, а выделяет ее по мере необходимости, проверяя, не превышена"
" ли квота (:tarantool-release:`2.10.0-beta1`, :tarantool-issue:`5419`)."

msgid "Replication"
msgstr "Репликация"

msgid ""
"Introduced the ``box.info.replication[n].downstream.lag`` field to monitor "
"the state of replication. This represents the lag between the moment when "
"the main node writes a certain transaction to its WAL and the moment it "
"receives an ack for this transaction from the replica (:tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`5447`)."
msgstr ""
"Добавлено поле ``box.info.replication[n].downstream.lag``, позволяющее "
"отслеживать состояние репликации. Значение этого поля --- временной "
"промежуток между моментом, когда основной узел записывает транзакцию в WAL-"
"файл, и моментом, когда приходит подтверждение для этой транзакции от "
"реплики. (:tarantool-release:`2.10.0-beta1`, :tarantool-issue:`5447`)."

msgid ""
"Introduced ``on_election`` triggers. The triggers can be registered via the "
"``box.ctl.on_election()`` interface and run asynchronously each time "
"``box.info.election`` changes (:tarantool-release:`2.10.0-beta1`, "
":tarantool-issue:`5819`)."
msgstr ""
"Добавлены триггеры ``on_election``. Их можно зарегистрировать через "
"интерфейс ``box.ctl.on_election()`` и запускать асинхронно при каждом "
"изменении ``box.info.election`` (:tarantool-release:`2.10.0-beta1`, "
":tarantool-issue:`5819`)."

msgid "LuaJIT"
msgstr "LuaJIT"

msgid ""
"Introduced support for ``LJ_DUALNUM`` mode in ``luajit-gdb.py`` (:tarantool-"
"release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6224`)."
msgstr ""
"Добавлена поддержка режима ``LJ_DUALNUM`` в файле ``luajit-gdb.py`` "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6224`)."

msgid ""
"Introduced preliminary support of GNU/Linux ARM64 and MacOS M1 (:tarantool-"
"release:`2.10.0-beta1`). In the scope of this activity, the following issues"
" have been resolved:"
msgstr ""
"Добавлена предварительная поддержка GNU/Linux ARM64 и MacOS M1 (:tarantool-"
"release:`2.10.0-beta1`). При этом были решены следующие проблемы:"

msgid ""
"Introduced support for the full 64-bit range of lightuserdata values "
"(:tarantool-issue:`2712`)."
msgstr ""
"Добавлена поддержка всего 64-битного интервала значений lightuserdata "
"(:tarantool-issue:`2712`)."

msgid ""
"Fixed memory remapping issue when the page left 47-bit segments (:tarantool-"
"issue:`2712`)."
msgstr ""
"Исправлена проблема с переназначением памяти, когда страница оставляла "
"47-битные сегменты (:tarantool-issue:`2712`)."

msgid "Fixed M1 architecture detection (:tarantool-issue:`6065`)."
msgstr "Исправлено распознавание архитектуры M1 (:tarantool-issue:`6065`)."

msgid ""
"Fixed variadic arguments handling in FFI on M1 (:tarantool-issue:`6066`)."
msgstr ""
"Исправлена обработка переменного количества аргументов в библиотеке FFI для "
"архитектуры M1 (:tarantool-issue:`6066`)."

msgid ""
"Fixed ``table.move`` misbehaviour in case of table reallocation (:tarantool-"
"issue:`6084`)."
msgstr ""
"Исправлено поведение ``table.move`` при реаллокации таблицы (:tarantool-"
"issue:`6084`)."

msgid ""
"Fixed Lua stack inconsistency when ``xpcall`` is called on ARM64 with the "
"invalid second argument (:tarantool-issue:`6093`)."
msgstr ""
"Исправлена несогласованность стека Lua, возникавшая, когда функция "
"``xpcall`` на ARM64 вызывалась с недопустимым вторым аргументом (:tarantool-"
"issue:`6093`)."

msgid ""
"Fixed ``BC_USETS`` bytecode semantics for closed upvalues and gray strings."
msgstr ""
"Исправлена семантика байт-кода ``BC_USETS`` для закрытых значений и серых "
"строк."

msgid ""
"Fixed side exit jump target patching with regard to the range values of a "
"particular instruction (:tarantool-issue:`6098`)."
msgstr ""
"Исправлен патчинг инструкции безусловного перехода (jump) на сторонний выход"
" из трассы с учетом допустимых диапазонов прыжков для архитектуры ARM64. "
"(:tarantool-issue:`6098`)."

msgid ""
"Fixed the issue on ARM64 where the current Lua coroutine wasn't restored on "
"the exception path (:tarantool-issue:`6189`)."
msgstr ""
"Ранее на архитектуре ARM64 текущая Lua-корутина не восстанавливалась на пути"
" исключения. Теперь эта ошибка исправлена (:tarantool-issue:`6189`)."

msgid "Lua"
msgstr "Lua"

msgid ""
"Introduced the new method ``table.equals``. It compares two tables by value "
"with respect to the ``__eq`` metamethod (:tarantool-release:`2.8.2`, "
":tarantool-release:`2.7.3`, :tarantool-release:`2.10.0-beta1`)."
msgstr ""
"Добавлен новый метод ``table.equals``. Он сравнивает значения двух таблиц с "
"помощью метаметода ``__eq`` (:tarantool-release:`2.8.2`, :tarantool-"
"release:`2.7.3`, :tarantool-release:`2.10.0-beta1`)."

msgid "Digest"
msgstr "Модуль digest"

msgid ""
"Introduced new hash types---``xxhash32`` and ``xxhash64``---in the digest "
"module. (:tarantool-release:`2.10.0-beta1`, :tarantool-issue:`2003`)."
msgstr ""
"В модуль digest добавлены новые типы хэш-сумм: ``xxhash32`` и ``xxhash64`` "
"(:tarantool-release:`2.10.0-beta1`, :tarantool-issue:`2003`)."

msgid "Fiber"
msgstr "Модуль fiber"

msgid ""
"Introduced ``fiber_object:info()`` to get info from a fiber. Works as "
"``require(fiber).info()`` but only for one fiber (:tarantool-"
"release:`2.10.0-beta1`)."
msgstr ""
"Новая функция ``fiber_object:info()`` позволяет получать информацию от "
"файбера. Функция работает аналогично ``require(fiber).info()``, но только "
"для одного файбера (:tarantool-release:`2.10.0-beta1`)."

msgid ""
"Introduced ``fiber_object:csw()`` to get ``csw`` from a fiber. Also, now "
"``csw`` (Context SWitch) of the new fiber is always equal to zero. "
"Previously, it could be greater than zero (:tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`5799`)."
msgstr ""
"Новая функция ``fiber_object:csw()`` позволяет получать от файбера значение "
"``csw`` (Context SWitch, переключение контекста). Также теперь значение "
"``csw`` нового файбера всегда равно нулю. Раньше оно могло быть "
"положительным (:tarantool-release:`2.10.0-beta1`, :tarantool-issue:`5799`)."

msgid ""
"Changed ``fiber.info()`` to hide backtraces of idle fibers (:tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`4235`)."
msgstr ""
"Изменен вывод функции ``fiber.info()``. Из него исключена обратная "
"трассировка файберов в состоянии idle (:tarantool-release:`2.10.0-beta1`, "
":tarantool-issue:`4235`)."

msgid "Logging"
msgstr "Запись в журнал"

msgid ""
"The ``log`` module now supports symbolic representation of log levels. Now "
"it is possible to specify levels the same way as in the ``box.cfg{}`` call "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`5882`)."
msgstr ""
"Модуль ``log`` теперь поддерживает символьное представление уровней "
"журналирования: можно указывать уровни так же, как при вызове ``box.cfg{}`` "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`5882`)."

msgid "For example, instead of"
msgstr "Например, вместо"

msgid "require('log').cfg{level = 6}"
msgstr "require('log').cfg{level = 6}"

msgid "it is possible to use"
msgstr "можно использовать"

msgid "require('log').cfg{level = 'verbose'}"
msgstr "require('log').cfg{level = 'verbose'}"

msgid "SQL"
msgstr "SQL"

msgid ""
"Descriptions of type mismatch error and inconsistent type error have become "
"more informative (:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, "
":tarantool-release:`2.10.0-beta1`, :tarantool-issue:`6176`)."
msgstr ""
"Описание ошибок несоответствия и несовместимости типов стало более "
"информативным (:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, "
":tarantool-release:`2.10.0-beta1`, :tarantool-issue:`6176`)."

msgid ""
"Removed explicit cast from ``BOOLEAN`` to numeric types and vice versa "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`4770`)."
msgstr ""
"Удалено явное приведение ``BOOLEAN`` к числовым типам, а числовых типов --- "
"к значениям ``BOOLEAN`` (:tarantool-release:`2.8.2`, :tarantool-"
"release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`4770`)."

msgid "Example:"
msgstr "Пример:"

msgid ""
"CAST(FALSE AS INTEGER) was 0 in version 2.8.\n"
"Now it will cause an error."
msgstr ""
"В версии 2.8 преобразование CAST(FALSE AS INTEGER) давало результат 0. "
"Теперь оно вызывает ошибку."

msgid ""
"Removed explicit cast from ``VARBINARY`` to numeric types and vice versa "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`4772`, :tarantool-issue:`5852`)."
msgstr ""
"Удалено явное приведение ``VARBINARY`` к числовым типам, а числовых типов "
"--- к значениям ``VARBINARY`` (:tarantool-release:`2.8.2`, :tarantool-"
"release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-issue:`4772`,"
" :tarantool-issue:`5852`)."

msgid ""
"Fixed a bug where a string that is not ``NULL``-terminated could not be cast"
" to ``BOOLEAN``, even if the conversion would be successful according to the"
" rules (:tarantool-release:`2.8.2`, :tarantool-release:`2.10.0-beta1`, "
":tarantool-release:`2.7.3`)."
msgstr ""
"Исправлена ошибка, из-за которой строку, не заканчивающуюся ``NULL``, нельзя"
" было перевести в ``BOOLEAN``, даже если по правилам преобразование было бы "
"успешным (:tarantool-release:`2.8.2`, :tarantool-release:`2.10.0-beta1`, "
":tarantool-release:`2.7.3`)."

msgid ""
"Now a numeric value can be cast to another numeric type only if the cast is "
"precise. In addition, a ``UUID`` value cannot be implicitly cast to "
"``STRING/VARBINARY``. Also, a ``STRING/VARBINARY`` value cannot be "
"implicitly cast to a ``UUID`` (:tarantool-release:`2.10.0-beta1`, "
":tarantool-issue:`4470`)."
msgstr ""
"Теперь числовое значение может приводиться к другому числовому типу, только "
"если приведение точное. Кроме того, значение ``UUID`` не может быть неявно "
"преобразовано в ``STRING/VARBINARY``, а ``STRING/VARBINARY`` --- в ``UUID`` "
"(:tarantool-release:`2.10.0-beta1`, :tarantool-issue:`4470`)."

msgid ""
"Now any number can be compared to any other number, and values of any scalar"
" type can be compared to any other value of the same type. A value of a non-"
"numeric scalar type cannot be compared with a value of any other scalar type"
" (:tarantool-release:`2.10.0-beta1`, :tarantool-issue:`4230`)."
msgstr ""
"Теперь любое число можно сравнивать с любым числом, а значения любого "
"скалярного типа --- с любым значением того же типа. Значение нечислового "
"скалярного типа нельзя сравнивать со значениями других скалярных типов "
"(:tarantool-release:`2.10.0-beta1`, :tarantool-issue:`4230`)."

msgid ""
"Removed SQL built-in functions from the ``_func`` system space (:tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6106`)."
msgstr ""
"Из системного спейса ``_func`` удалены встроенные функции SQL (:tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6106`)."

msgid ""
"The function is now looked up first in SQL built-in functions and then in "
"user-defined functions (:tarantool-release:`2.10.0-beta1`)."
msgstr ""
"Функция теперь ищется сначала среди встроенных функций SQL, а затем в "
"пользовательских функциях (:tarantool-release:`2.10.0-beta1`)."

msgid ""
"Fixed incorrect error message in case of misuse of the function setting the "
"default value (:tarantool-release:`2.10.0-beta1`)."
msgstr ""
"Когда неправильно используется функция, устанавливающая значение по "
"умолчанию, появляется сообщение об ошибке. Теперь оно исправлено "
"(:tarantool-release:`2.10.0-beta1`)."

msgid ""
"The ``TYPEOF()`` function with ``NULL`` as an argument now returns ``NULL`` "
"if the type cannot be determined from context. (:tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`5956`)."
msgstr ""
"Если функции ``TYPEOF()`` передано значение ``NULL`` и она не может "
"определить тип из контекста, то она возвращает ``NULL`` (:tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`5956`)."

msgid ""
"Also, ``TYPEOF(-NaN)`` will now return ``DOUBLE``, and "
"``TYPEOF(map_column)`` will now return ``VARBINARY`` instead of ``map``."
msgstr ""
"Также ``TYPEOF(-NaN)`` теперь возвращает ``DOUBLE``, а "
"``TYPEOF(map_column)`` --- ``VARBINARY``, а не ``map``, как раньше."

msgid ""
"SELECT TYPEOF(NULL); was BOOLEAN in version 2.8.\n"
"Now it will be NULL."
msgstr ""
"В версии 2.8 результат запроса ``SELECT TYPEOF(NULL);`` был ``BOOLEAN``. "
"Теперь он будет ``NULL``."

msgid ""
"Reworked the ``SCALAR`` and ``NUMBER`` types in SQL. Removed the implicit "
"cast from ``SCALAR`` to any other scalar type. Also, removed the implicit "
"cast from ``NUMBER`` values to any other numeric type. It means that "
"arithmetic and bitwise operations and concatenation are no longer allowed "
"for ``SCALAR`` and ``NUMBER`` values. In addition, any ``SCALAR`` value can "
"now be compared with values of any other scalar type using the ``SCALAR`` "
"rules (:tarantool-release:`2.10.0-beta1`, :tarantool-issue:`6221`)."
msgstr ""
"В SQL переработаны типы ``SCALAR`` и ``NUMBER``. Удалено неявное приведение "
"значений ``SCALAR`` к другим скалярным типам, а значений ``NUMBER`` — к "
"другим числовым типам. Это означает, что для значений ``SCALAR`` и "
"``NUMBER`` больше не разрешены ни арифметические, ни побитовые операции, а "
"также не поддерживается конкатенация. Кроме того, любое значение ``SCALAR`` "
"теперь можно сравнивать по правилам этого типа со значениями любого другого "
"скалярного типа (:tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`6221`)."

msgid ""
"The field type ``DECIMAL`` is now available in SQL. Added an implicit cast "
"from ``INTEGER`` and ``DOUBLE`` to ``DECIMAL`` and vice versa. ``DECIMAL`` "
"can participate in arithmetic operations and comparisons with other defined "
"numeric types (:tarantool-release:`2.10.0-beta1`, :tarantool-issue:`4415`)."
msgstr ""
"Теперь в SQL есть поля типа ``DECIMAL``. Добавлено неявное преобразование "
"как из ``INTEGER`` и ``DOUBLE`` в ``DECIMAL``, так и в обратном направлении."
" Значения типа ``DECIMAL`` можно использовать в арифметических операциях и "
"сравнениях вместе со значениями других определенных числовых типов "
"(:tarantool-release:`2.10.0-beta1`, :tarantool-issue:`4415`)."

msgid ""
"**[Breaking change]** The argument types of SQL built-in functions are now "
"checked in most cases during parsing. In addition, the number of arguments "
"is now always checked during parsing (:tarantool-release:`2.10.0-beta1`, "
":tarantool-issue:`6105`)."
msgstr ""
"**[Критическое изменение]** Проверка типов аргументов встроенных функций SQL"
" теперь обычно проходит во время синтаксического анализа. Кроме того, в это "
"время всегда проверяется количество аргументов (:tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6105`)."

msgid ""
"**[Breaking change]** for the ``NUMBER`` data type  (:tarantool-"
"release:`2.10.0-beta1`). Arithmetic (``+ * - / % & | ~``) operations and "
"bit-shift operations (``>> <<``) are now illegal."
msgstr ""
"**[Критическое изменение]** Для типа данных ``NUMBER`` теперь недопустимы ни"
" арифметические операции (``+ * - / % & | ~``), ни операции сдвига (``>> "
"<<``) (:tarantool-release:`2.10.0-beta1`)."

msgid ""
"SELECT number_column + 1 was legal in version 2.8.\n"
"Now it will cause an error."
msgstr ""
"В версии 2.8 запрос ``SELECT number_column + 1`` мог выполниться. Теперь он "
"вызывает ошибку."

msgid ""
"**[Breaking change]** for the ``SCALAR`` data type  (:tarantool-"
"release:`2.10.0-beta1`). Arithmetic (``+ * - / % & | ~``) operations and "
"bit-shift operations (``>> <<``) are now illegal. Concatenation (``||``) "
"operations are now illegal. Values in ``SCALAR`` columns now have data type "
"``SCALAR``, not the value's data type."
msgstr ""
"**[Критическое изменение]** Для типа данных ``SCALAR`` теперь недопустимы ни"
" арифметические операции (``+ * - / % & | ~``), ни операции сдвига (``>> "
"<<``), ни конкатенация (``||``). В столбцах типа ``SCALAR`` теперь "
"содержатся значения только этого типа, а не исходных типов (:tarantool-"
"release:`2.10.0-beta1`)."

msgid ""
"TYPEOF(CAST(1 AS SCALAR)) was INTEGER in version 2.8.\n"
"Now it will be SCALAR."
msgstr ""
"В версии 2.8 результат ``TYPEOF(CAST(1 AS SCALAR))`` был ``INTEGER``. Теперь"
" это ``SCALAR``."

msgid ""
"**[Breaking change]**: Arithmetic operators must now have numeric operands. "
"String operands are illegal."
msgstr ""
"**[Критическое изменение]** Арифметические операции теперь требуют числовых "
"операндов. Строковые операнды недопустимы."

msgid ""
"SELECT 1 + '1' was 2 in version 2.8.\n"
"Now it will cause an error."
msgstr ""
"В версии 2.8 запрос ``SELECT 1 + '1'`` выполнялся с результатом ``2``.\n"
"Теперь такой запрос вызывает ошибку."

msgid ""
"**[Breaking change]** in operations on SCALAR columns. Since the type of a "
"value no longer determines whether an operation is valid, comparisons and "
"functions that require a specific type no longer work."
msgstr ""
"**[Критическое изменение]** Для столбцов типа ``SCALAR`` операции сравнения "
"и функции, требующие определенного типа, больше не работают. Тип значения "
"больше не определяет, является ли операция допустимой."

msgid ""
"if table T has only one row with a scalar column containing 'a':\n"
"UPPER(scalar_column) was 'A' in version 2.8.\n"
"Now it will cause an error."
msgstr ""
"Запрос ``UPPER(scalar_column)`` к таблице ``T`` с одной строкой со скалярным столбцом, содержащим символ ``'a'``, в версии Tarantool 2.8 выполнялся с результатом ``'А'``.\n"
"Теперь такой запрос вызывает ошибку."

msgid ""
"**[Breaking change]** for the ``HEX()`` function (:tarantool-"
"release:`2.10.0-beta1`). ``STRING`` arguments are no longer acceptable; only"
" ``VARBINARY`` arguments are allowed."
msgstr ""
"**[Критическое изменение]** Аргументы типа ``STRING`` для функции ``HEX()`` "
"больше не поддерживаются. Разрешены только аргументы типа ``VARBINARY`` "
"(:tarantool-release:`2.10.0-beta1`)."

msgid ""
"HEX('a') was '41' in version 2.8.\n"
"Now it will cause an error."
msgstr ""
"В версии 2.8 значение выражения ``HEX('a')`` было ``'41'``.\n"
"Теперь это выражение вызывает ошибку."

msgid ""
"**[Breaking change]** for the ``POSITION()`` function (:tarantool-"
"release:`2.10.0-beta1`). ``VARBINARY`` arguments are no longer acceptable; "
"only ``STRING`` arguments are allowed."
msgstr ""
"**[Критическое изменение]** Для функции ``POSITION()`` аргументы типа "
"``VARBINARY`` больше не допускаются. Разрешены только аргументы типа "
"``STRING`` (:tarantool-release:`2.10.0-beta1`)."

msgid ""
"POSITION(X'41',X'41') was 1 in version 2.8.\n"
"Now it will cause an error."
msgstr ""
"В версии 2.8 значение выражения ``POSITION(X'41',X'41')`` было ``1``.\n"
"Теперь это выражение вызывает ошибку."

msgid "Luarocks"
msgstr "LuaRocks"

msgid ""
"Set ``FORCE_CONFIG=false`` for luarocks config to allow loading project-side"
" ``.rocks/config-5.1.lua`` (:tarantool-release:`2.10.0-beta1`)."
msgstr ""
"Установлен параметр ``FORCE_CONFIG=false``, чтобы конфигурация luarocks "
"могла загружать файл ``.rocks/config-5.1.lua`` на стороне проекта "
"(:tarantool-release:`2.10.0-beta1`)."

msgid "Build"
msgstr "Сборка"

msgid ""
"Fedora 34 builds are now supported (:tarantool-release:`2.8.2`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6074`)."
msgstr ""
"Теперь поддерживаются сборки для Fedora 34 (:tarantool-release:`2.8.2`, "
":tarantool-release:`2.10.0-beta1`, :tarantool-issue:`6074`)."

msgid "Fedora 28 and 29 builds are no longer supported."
msgstr "Сборки для Fedora 28 и 29 больше не поддерживаются."

msgid "Bugs fixed"
msgstr "Исправленные ошибки"

msgid ""
"**[Breaking change]** ``fiber.wakeup()`` in Lua and ``fiber_wakeup()`` in C "
"became NOP on the currently running fiber. Previously they allowed "
"“ignoring” the next yield or sleep, which resulted in unexpected erroneous "
"wake-ups. Calling these functions right before ``fiber.create()`` in Lua or "
"``fiber_start()`` in C could lead to a crash (in debug build) or undefined "
"behaviour (in release build) (:tarantool-issue:`6043`)."
msgstr ""
"**[Критическое изменение]** Запуск функций ``fiber.wakeup()`` в Lua и "
"``fiber_wakeup()`` в C больше не срабатывает в текущем файбере. Ранее эти "
"функции позволяли игнорировать следующий переход в спящий режим или передачу"
" управления с помощью ``yield``, что приводило к неожиданным ошибочным "
"пробуждениям. Вызов функций непосредственно перед ``fiber.create()`` в коде "
"на Lua или ``fiber_start()`` в коде на C в отладочной сборке мог привести к "
"сбою, а в релизной --- к неопределенному поведению (:tarantool-"
"issue:`6043`)."

msgid ""
"There was a single use case for the previous behaviour: rescheduling in the "
"same event loop iteration, which is not the same as ``fiber.sleep(0)`` in "
"Lua and ``fiber_sleep(0)`` in C. It could be done in the following way:"
msgstr ""
"Прежнее поведение отличалось от ``fiber.sleep(0)`` в Lua и "
"``fiber_sleep(0)`` в C и было полезно в единственном случае --- когда "
"требовалось запланировать дальнейшее выполнение файбера на конец текущей "
"итерации событийного цикла. Ниже показано, как это можно было сделать."

msgid "in C:"
msgstr "На C:"

msgid ""
"fiber_wakeup(fiber_self());\n"
"fiber_yield();"
msgstr ""
"fiber_wakeup(fiber_self());\n"
"fiber_yield();"

msgid "and in Lua:"
msgstr "На Lua:"

msgid ""
"fiber.self():wakeup()\n"
"fiber.yield()"
msgstr ""
"fiber.self():wakeup()\n"
"fiber.yield()"

msgid ""
"To get the same effect in C, one can now use ``fiber_reschedule()``. In Lua,"
" it is now impossible to reschedule the current fiber directly in the same "
"event loop iteration. One can reschedule self through a second fiber, but it"
" is strongly discouraged:"
msgstr ""
"Чтобы добиться того же результата в C, можно использовать "
"``fiber_reschedule()``. В Lua теперь невозможно перепланировать выполнение "
"файбера на конец текущей итерации событийного цикла. Файбер может изменить "
"свое место в цикле через другой файбер, но это категорически не "
"рекомендуется:"

msgid ""
"-- do not use this code\n"
"local self = fiber.self()\n"
"fiber.new(function() self:wakeup() end)\n"
"fiber.sleep(0)"
msgstr ""
"-- не используйте этот код\n"
"local self = fiber.self()\n"
"fiber.new(function() self:wakeup() end)\n"
"fiber.sleep(0)"

msgid ""
"Fixed memory leak on ``box.on_commit()`` and ``box.on_rollback()`` "
"(:tarantool-issue:`6025`)."
msgstr ""
"Исправлена утечка памяти в функциях ``box.on_commit()`` и "
"``box.on_rollback()`` (:tarantool-issue:`6025`)."

msgid ""
"``fiber_join()`` now checks if the argument is a joinable fiber. The absence"
" of this check could lead to unpredictable results. Note that the change "
"affects the C level only; in the Lua interface, ``fiber:join()`` protection "
"is already enabled (:tarantool-release:`2.8.2`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-release:`2.7.3`)."
msgstr ""
"Функция ``fiber_join()`` теперь проверяет, является ли ее аргумент файбером,"
" который можно присоединить. Отсутствие этой проверки могло бы привести к "
"непредсказуемым результатам. Обратите внимание, что изменение затрагивает "
"только уровень C. В интерфейсе Lua защита функции ``fiber:join()`` уже "
"включена (:tarantool-release:`2.8.2`, :tarantool-release:`2.10.0-beta1`, "
":tarantool-release:`2.7.3`)."

msgid ""
"Now Tarantool yields when it scans ``.xlog`` files for the latest applied "
"vclock and finds the right place to start recovering from. It means that the"
" instance becomes responsive right after the ``box.cfg`` call even if an "
"empty ``.xlog`` was not created on the previous exit."
msgstr ""
"Теперь Tarantool выполняет yield, когда сканирует файлы ``.xlog`` в поиске "
"последних примененных векторных часов (vclock) и точки восстановления. Это "
"означает, что экземпляр начинает реагировать сразу после вызова ``box.cfg``,"
" даже если пустой ``.xlog`` не был создан при предыдущем завершении работы."

msgid ""
"This fix also prevents the relay from timing out when a freshly subscribed "
"replica needs rows from the end of a relatively long (hundreds of MBs) "
"``.xlog`` file (:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, "
":tarantool-release:`2.10.0-beta1`, :tarantool-issue:`5979`)."
msgstr ""
"Это исправление также предотвращает тайм-аут потока relay в случае, когда "
"только что подписанной реплике требуются строки из конца относительно "
"длинного (сотни мегабайт) файла ``.xlog`` (:tarantool-release:`2.8.2`, "
":tarantool-release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`5979`)."

msgid ""
"The counter in ``N rows processed`` log messages no longer resets on each "
"newly recovered ``xlog`` (:tarantool-release:`2.8.2`, :tarantool-"
"release:`2.7.3`, :tarantool-release:`2.10.0-beta1`)."
msgstr ""
"Счетчик в сообщениях журнала ``N rows processed`` (обработано N строк) "
"больше не сбрасывается при каждом вновь восстановленном файле ``xlog`` "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`)."

msgid ""
"Fixed wrong type specification when printing fiber state change. It could "
"lead to negative fiber IDs in the logs (:tarantool-release:`2.10.0-beta1`, "
":tarantool-issue:`5846`)."
msgstr ""
"Изменения состояния файбера теперь печатаются без ошибок. Неправильная "
"спецификация типа раньше приводила к тому, что в журнал записывались "
"отрицательные идентификаторы файберов (:tarantool-release:`2.10.0-beta1`, "
":tarantool-issue:`5846`)."

msgid "For example,"
msgstr "Например,"

msgid "main/-244760339/cartridge.failover.task I> Instance state changed"
msgstr "main/-244760339/cartridge.failover.task I> Instance state changed"

msgid "instead of proper"
msgstr "вместо правильного варианта:"

msgid "main/4050206957/cartridge.failover.task I> Instance state changed"
msgstr "main/4050206957/cartridge.failover.task I> Instance state changed"

msgid ""
"Fiber IDs are now to monotonically increasing unsigned 8-byte integers, so "
"there is no ID wrapping anymore. It allows detecting fiber precedence by ID "
"(:tarantool-release:`2.10.0-beta1`, :tarantool-issue:`5846`)."
msgstr ""
"Идентификаторы файберов теперь представляют собой монотонно увеличивающиеся "
"8-байтовые беззнаковые целые, поэтому больше нет перехода ID через ноль. Так"
" что теперь можно определять порядок запуска файберов по их идентификаторам "
"(:tarantool-release:`2.10.0-beta1`, :tarantool-issue:`5846`)."

msgid ""
"Fixed a crash in JSON update on tuple/space, where the update included two "
"or more operations that accessed fields in reversed order and these fields "
"didn’t exist. Example: ``box.tuple.new({1}):update({{'=', 4, 4}, {'=', 3, "
"3}})`` (:tarantool-release:`2.8.2`, :tarantool-release:`2.10.0-beta1`, "
":tarantool-issue:`6069`)."
msgstr ""
"Исправлена ошибка обновления JSON в кортеже/спейсе, которая возникала, когда"
" две или более операции обращались к несуществующим полям в обратном "
"порядке. Пример: ``box.tuple.new({1}):update({{'=', 4, 4}, {'=', 3, 3}})`` "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`6069`)."

msgid ""
"Fixed invalid results of the ``json`` module’s ``encode`` function when it "
"was used from the Lua garbage collector. For example, this could happen in "
"functions used as ``ffi.gc()`` (:tarantool-issue:`6050`)."
msgstr ""
"Исправлена ошибка, из-за которой функция ``encode`` модуля ``json`` "
"возвращала некорректные результаты, когда вызывалась из сборщика мусора Lua "
"--- например, через функцию-финализатор, установленную на объект с помощью "
"``ffi.gc()`` (:tarantool-issue:`6050`)."

msgid ""
"Added a check for user input of the number of iproto threads: value must be "
"greater than zero and less than or equal to 1000 (:tarantool-"
"release:`2.8.2`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`6005`)."
msgstr ""
"Теперь количество введенных пользователем потоков iproto проверяется: "
"значение должно быть больше нуля и не больше 1000 (:tarantool-"
"release:`2.8.2`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`6005`)."

msgid ""
"Changing a listed address can no longer cause iproto threads to close the "
"same socket several times (:tarantool-release:`2.8.2`, :tarantool-"
"release:`2.10.0-beta1`)"
msgstr ""
"Изменение адреса из списка больше не может привести к тому, что потоки "
"iproto будут закрывать один и тот же сокет несколько раз (:tarantool-"
"release:`2.8.2`, :tarantool-release:`2.10.0-beta1`)"

msgid ""
"Tarantool now always removes the Unix socket correctly when it exits "
"(:tarantool-release:`2.8.2`)."
msgstr ""
"Tarantool теперь всегда корректно удаляет Unix-сокет при завершении работы "
"(:tarantool-release:`2.8.2`)."

msgid ""
"Simultaneously updating a key in different transactions does not longer "
"result in a MVCC crash (:tarantool-release:`2.8.2`, :tarantool-"
"release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`6131`)."
msgstr ""
"Одновременное обновление ключа в разных транзакциях больше не приводит к "
"сбою механизма MVCC (:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`,"
" :tarantool-release:`2.10.0-beta1`, :tarantool-issue:`6131`)."

msgid ""
"Fixed a bug where memtx MVCC crashed during reading uncommitted DDL "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`5515`)."
msgstr ""
"Исправлена ошибка, из-за которой механизм MVCC движка memtx аварийно "
"завершал работу при чтении не прошедшего коммит DDL-запроса (:tarantool-"
"release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`5515`)."

msgid ""
"Fixed a bug where memtx MVCC crashed if an index was created in the "
"transaction thread (:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, "
":tarantool-release:`2.10.0-beta1`, :tarantool-issue:`6137`)."
msgstr ""
"Исправлена ошибка, из-за которой механизм MVCC движка memtx аварийно "
"завершал работу, если в потоке обработчика транзакций создавался индекс "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6137`)."

msgid ""
"Fixed a MVCC segmentation fault that arose when updating the entire space "
"concurrently (:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, "
":tarantool-release:`2.10.0-beta1`, :tarantool-issue:`5892`)."
msgstr ""
"Исправлена ошибка сегментации в механизме MVCC, возникавшая, когда спейс "
"целиком обновлялся посредством нескольких параллельных транзакций "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`5892`)."

msgid ""
"Fixed a bug with failed assertion after a stress update of the same key "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6193`)."
msgstr ""
"Исправлена ошибка, приводившая к сбою проверочного утверждения после стресс-"
"обновления одного и того же ключа (:tarantool-release:`2.8.2`, :tarantool-"
"release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`6193`)."

msgid ""
"Fixed a crash where ``box.snapshot`` could be called during an incomplete "
"transaction (:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, "
":tarantool-release:`2.10.0-beta1`, :tarantool-issue:`6229`)."
msgstr ""
"Исправлен сбой, из-за которого команду ``box.snapshot`` можно было вызвать "
"до завершения транзакции (:tarantool-release:`2.8.2`, :tarantool-"
"release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`6229`)."

msgid ""
"Fixed console client connection failure in case of request timeout "
"(:tarantool-issue:`6249`)."
msgstr ""
"Исправлен сбой подключения консольного клиента, возникавший при тайм-ауте "
"запроса (:tarantool-issue:`6249`)."

msgid ""
"Added a missing broadcast to ``net.box.future:discard()`` so that now fibers"
" waiting for a request result wake up when the request is discarded "
"(:tarantool-issue:`6250`)."
msgstr ""
"В функцию ``net.box.future:discard()`` добавлена отправка широковещательного"
" сообщения. Теперь файберы, ожидающие результата запроса, просыпаются, когда"
" запрос отбрасывается (:tarantool-issue:`6250`)."

msgid ""
"``box.info.uuid``, ``box.info.cluster.uuid``, and ``tostring(decimal)`` with"
" any decimal number in Lua could sometimes return garbage if there were "
"``__gc`` handlers in the user’s code (:tarantool-release:`2.8.2`, "
":tarantool-release:`2.7.3`, :tarantool-issue:`6259`)."
msgstr ""
"Раньше, если в коде пользователя были обработчики ``__gc``, то функции "
"``box.info.uuid``, ``box.info.cluster.uuid`` и ``tostring(decimal)`` с любым"
" десятичным числом в Lua иногда могли возвращать мусор. Эта ошибка "
"исправлена (:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, "
":tarantool-issue:`6259`)."

msgid ""
"Fixed an error message that appeared in a particular case during MVCC "
"operation (:tarantool-issue:`6247`)."
msgstr ""
"Исправлено сообщение об ошибке, которое могло приводить к сбою в конкретном "
"случае во время работы MVCC (:tarantool-issue:`6247`)."

msgid ""
"Fixed a repeatable read violation after delete (:tarantool-release:`2.8.2`, "
":tarantool-release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`6206`)."
msgstr ""
"Исправлено нарушение повторяющегося чтения, возникавшее после операции "
"удаления (:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, "
":tarantool-release:`2.10.0-beta1`, :tarantool-issue:`6206`)."

msgid ""
"Fixed a bug where the MVCC engine didn't track the ``select{}`` hash "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6040`)."
msgstr ""
"Исправлена ошибка, из-за которой движок MVCC не отслеживал хэш ``select{}`` "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6040`)."

msgid ""
"Fixed a crash in MVCC after a drop of space with several indexes "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6274`)."
msgstr ""
"Исправлен сбой в MVCC, возникавший после удаления спейса с несколькими "
"индексами (:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, "
":tarantool-release:`2.10.0-beta1`, :tarantool-issue:`6274`)."

msgid ""
"Fixed a bug where the GC could leave tuples in secondary indexes "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6234`)."
msgstr ""
"Исправлена ошибка, из-за которой сборщик мусора мог оставлять кортежи во "
"вторичных индексах (:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, "
":tarantool-release:`2.10.0-beta1`, :tarantool-issue:`6234`)."

msgid ""
"Disallow yields after DDL operations in MVCC mode. It fixes a crash that "
"took place when several transactions referred to system spaces (:tarantool-"
"release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`5998`)."
msgstr ""
"Запрещена передача управления через yield после DDL-операций в режиме MVCC. "
"Это исправило сбой, который происходил, когда несколько транзакций ссылались"
" на системные спейсы (:tarantool-release:`2.8.2`, :tarantool-"
"release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`5998`)."

msgid ""
"Fixed a bug in MVCC that happened on rollback after a DDL operation "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`5998`)."
msgstr ""
"Исправлена ошибка в механизме MVCC, возникавшая при отмене операции DDL "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`5998`)."

msgid ""
"Fixed a bug where rollback resulted in unserializable behavior (:tarantool-"
"release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6325`)."
msgstr ""
"Исправлена ошибка, из-за которой отмена транзакции приводила к "
"несериализуемому поведению (:tarantool-release:`2.8.2`, :tarantool-"
"release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`6325`)."

msgid "Vinyl"
msgstr "Vinyl"

msgid ""
"Fixed possible keys divergence during secondary index build, which might "
"lead to missing tuples (:tarantool-release:`2.8.2`, :tarantool-"
"release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`6045`)."
msgstr ""
"Ранее при построении вторичного индекса могли расходиться ключи, что иногда "
"приводило к потере кортежей. Эта ошибка исправлена (:tarantool-"
"release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6045`)."

msgid ""
"Fixed the race between Vinyl garbage collection and compaction that resulted"
" in a broken vylog and recovery failure (:tarantool-release:`2.8.2`, "
":tarantool-release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`5436`)."
msgstr ""
"Ликвидирована гонка в Vinyl между сборкой мусора и слиянием, приводившая к "
"повреждению vylog и сбою восстановления (:tarantool-release:`2.8.2`, "
":tarantool-release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`5436`)."

msgid ""
"Fixed the use after free in the relay thread when using elections "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6031`)."
msgstr ""
"Исправлен cбой обращения к памяти в потоке relay при включенных выборах "
"лидера (:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6031`)."

msgid ""
"Fixed a possible crash when a synchronous transaction was followed by an "
"asynchronous transaction right when its confirmation was being written "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6057`)."
msgstr ""
"Устранена вероятность сбоя в момент, когда за синхронной транзакцией следует"
" асинхронная, а подтверждение первой еще записывается (:tarantool-"
"release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6057`)."

msgid ""
"Fixed an error where a replica, while attempting to subscribe to a foreign "
"cluster with a different replicaset UUID, didn’t notice it is impossible and"
" instead became stuck in an infinite retry loop printing a "
"``TOO_EARLY_SUBSCRIBE`` error (:tarantool-release:`2.8.2`, :tarantool-"
"release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`6094`)."
msgstr ""
"Исправлена ошибка, из-за которой реплика при попытке подписаться на внешний "
"кластер с другим UUID набора реплик не замечала, что это невозможно, и "
"вместо этого попадала в бесконечный цикл повторных попыток, выводя ошибку "
"``TOO_EARLY_SUBSCRIBE`` (:tarantool-release:`2.8.2`, :tarantool-"
"release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`6094`)."

msgid ""
"Fixed an error where a replica, while attempting to join a cluster with "
"exclusively read-only replicas available, just booted its own replicaset, "
"instead of failing or retrying. Now it fails with an error about the other "
"nodes being read-only so they can’t register the new replica (:tarantool-"
"release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`5613`)."
msgstr ""
"Исправлена ошибка, из-за которой реплика при попытке присоединиться к "
"кластеру с репликами, доступными только для чтения, просто использовала "
"собственный набор реплик, вместо того чтобы сообщить о сбое или повторить "
"попытку. Теперь такая ситуация приводит к сбою с сообщением об ошибке, "
"объясняющим, что другие узлы доступны только для чтения и поэтому не могут "
"зарегистрировать новую реплику (:tarantool-release:`2.8.2`, :tarantool-"
"release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`5613`)."

msgid ""
"Fixed error reporting associated with transactions received from remote "
"instances via replication. Any error raised while such a transaction was "
"being applied was always reported as ``Failed to write to disk`` regardless "
"of what really happened. Now the correct error is shown. For example, ``Out "
"of memory``, or ``Transaction has been aborted by conflict``, and so on "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6027`)."
msgstr ""
"Исправлены сообщения об ошибках, связанных с транзакциями, которые были "
"получены от удаленных экземпляров через репликацию. Любая ошибка, "
"возникавшая во время применения такой транзакции, всегда сопровождалась "
"сообщением \"Не удалось записать на диск\" (``Failed to write to disk``), "
"независимо от того, что произошло на самом деле. Теперь ошибка отображается "
"правильно. Например: \"Не хватает памяти\" (``Out of memory``) или "
"\"Транзакция прервана из-за конфликта\" (``Transaction has been aborted by "
"conflict``) (:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, "
":tarantool-release:`2.10.0-beta1`, :tarantool-issue:`6027`)."

msgid ""
"Fixed replication occasionally stopping with ``ER_INVALID_MSGPACK`` when the"
" replica is under high load (:tarantool-issue:`4040`)."
msgstr ""
"Исправлен сбой, из-за которого репликация иногда останавливалась с ошибкой "
"``ER_INVALID_MSGPACK``, когда реплика была под высокой нагрузкой "
"(:tarantool-issue:`4040`)."

msgid ""
"Fixed a cluster sometimes being unable to bootstrap if it contains nodes "
"with ``election_mode`` set to ``manual`` or ``voter`` (:tarantool-"
"release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6018`)."
msgstr ""
"Исправлена ошибка, из-за которой кластер иногда не мог загрузиться, если "
"содержал узлы, у которых для параметра ``election_mode`` установлено "
"значение ``manual`` или ``voter`` (:tarantool-release:`2.8.2`, :tarantool-"
"release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`6018`)."

msgid ""
"Fixed a possible crash when ``box.ctl.promote()`` was called in a cluster "
"with more than three instances. The crash happened in the debug build. In "
"the release build, it could lead to undefined behaviour. It was likely to "
"happen if a new node was added shortly before the promotion (:tarantool-"
"release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`5430`)."
msgstr ""
"Исправлен сбой, иногда происходивший при вызове функции "
"``box.ctl.promote()`` в кластере с более чем тремя экземплярами. Сбой "
"возникал в отладочной сборке и мог приводить к неопределенному поведению в "
"релизной сборке. Эта проблема обычно проявлялась, если незадолго до вызова "
"``box.ctl.promote()`` добавлялся новый узел (:tarantool-release:`2.8.2`, "
":tarantool-release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`5430`)."

msgid ""
"Fixed a rare error appearing when MVCC (``box.cfg.memtx_use_mvcc_engine``) "
"was enabled and more than one replica joined the cluster. The join could "
"fail with the error ``\"ER_TUPLE_FOUND: Duplicate key exists in unique index"
" 'primary' in space '_cluster'\"``. The same could happen at the bootstrap "
"of a cluster having more than three nodes (:tarantool-release:`2.8.2`, "
":tarantool-release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`5601`)."
msgstr ""
"Исправлена редкая ошибка, возникавшая, когда более чем одна реплика "
"присоединялась к кластеру при включенном механизме MVCC "
"(``box.cfg.memtx_use_mvcc_engine = true``). Ранее присоединение могло "
"завершаться с ошибкой ``ER_TUPLE_FOUND: Duplicate key exists in unique index"
" 'primary' in space '_cluster'``. То же самое могло происходить при "
"инициализации кластера с более чем тремя узлами (:tarantool-release:`2.8.2`,"
" :tarantool-release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`5601`)."

msgid "Raft"
msgstr "Raft"

msgid ""
"Fixed a rare crash with leader election enabled (any mode except ``off``), "
"which could happen if a leader resigned from its role while another node was"
" writing something elections-related to WAL. The crash was in the debug "
"build, and in the release build it would lead to undefined behaviour "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6129`)."
msgstr ""
"Исправлен редкий сбой, возникавший при включенных выборах лидера (значение "
"параметра ``election_mode`` --- любое, кроме ``off``). Этот сбой мог "
"произойти, если лидер отказался от своей роли, а другой узел в это время "
"записывал в WAL что-то, связанное с выборами. Сбой происходил в отладочной "
"сборке, а в релизной сборке наблюдалось неопределенное поведение "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6129`)."

msgid ""
"Fixed an error where a new replica in a Raft cluster tried to join from a "
"follower instead of a leader and failed with the error ``ER_READONLY`` "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6127`)."
msgstr ""
"Исправлен сбой, из-за которого новая реплика в кластере Raft пыталась "
"присоединиться не от лидера, а от другой реплики, что приводило к ошибке "
"``ER_READONLY`` (:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, "
":tarantool-release:`2.10.0-beta1`, :tarantool-issue:`6127`)."

msgid ""
"Fixed optimization for single-char strings in the ``IR_BUFPUT`` assembly "
"routine."
msgstr ""
"Исправлена оптимизация для односимвольных строк в процедуре сборки "
"``IR_BUFPUT``."

msgid ""
"Fixed slots alignment in the ``lj-stack`` command output when ``LJ_GC64`` is"
" enabled (:tarantool-issue:`5876`)."
msgstr ""
"Исправлено выравнивание в выводе команды ``lj-stack`` при включенном "
"параметре ``LJ_GC64`` (:tarantool-issue:`5876`)."

msgid "Fixed dummy frame unwinding in the ``lj-stack`` command."
msgstr ""
"В выводе команды ``lj-stack`` исправлено отображение стека Lua без вызванных"
" функций."

msgid ""
"Fixed detection of inconsistent renames even in the presence of sunk values "
"(:tarantool-issue:`4252`, :tarantool-issue:`5049`, :tarantool-issue:`5118`)."
msgstr ""
"Исправлено обнаружение несогласованных переименований. Теперь оно также "
"работает при наличии слотов, не предполагающих аллокацию памяти под объекты "
"(sunk values) (:tarantool-issue:`4252`, :tarantool-issue:`5049`, :tarantool-"
"issue:`5118`)."

msgid ""
"Fixed the VM register allocation order provided by LuaJIT frontend in case "
"of ``BC_ISGE`` and ``BC_ISGT`` (:tarantool-issue:`6227`)."
msgstr ""
"Исправлен порядок аллокации регистров виртуальных машин, обеспечиваемый "
"интерфейсом LuaJIT в случае ``BC_ISGE`` и ``BC_ISGT`` (:tarantool-"
"issue:`6227`)."

msgid ""
"Fixed a bug where multibyte characters broke ``space:fselect()`` output "
"(:tarantool-release:`2.10.0-beta1`)."
msgstr ""
"Исправлена ошибка, из-за которой многобайтовые символы нарушали вывод "
"команды ``space:fselect()`` (:tarantool-release:`2.10.0-beta1`)."

msgid ""
"When an error occurs during encoding call results, the auxiliary "
"lightuserdata value is not removed from the main Lua coroutine stack. Before"
" the fix, it led to undefined behaviour during the next usage of this Lua "
"coroutine (:tarantool-issue:`4617`)."
msgstr ""
"Когда во время кодирования результатов вызова возникала ошибка, "
"вспомогательное значение lightuserdata не удалялось из стека главной "
"корутины Lua. До исправления это приводило к неопределенному поведению при "
"следующем использовании этой корутины (:tarantool-issue:`4617`)."

msgid ""
"Fixed a Lua C API misuse when the error is raised during call results "
"encoding in an unprotected coroutine and expected to be caught in a "
"different, protected coroutine (:tarantool-issue:`6248`)."
msgstr ""
"Исправлен сбой, из-за которого API для языка C в Lua использовался "
"некорректно. Ранее об ошибке в незащищенной корутине объявлялось во время "
"кодирования результатов вызова, а затем ожидалось, что эта ошибка будет "
"обработана в другой, защищенной корутине (:tarantool-issue:`6248`)."

msgid "Triggers"
msgstr "Триггеры"

msgid ""
"Fixed a possible crash in case trigger removes itself. Fixed a possible "
"crash in case someone destroys a trigger when it yields (:tarantool-"
"issue:`6266`)."
msgstr ""
"Исправлен сбой, связанный с тем, что триггер удалял сам себя. Исправлен "
"также сбой, возникавший при удалении триггера в момент, когда тот передавал "
"управление с помощью yield (:tarantool-issue:`6266`)."

msgid ""
"User-defined functions can now return a VARBINARY result to SQL (:tarantool-"
"release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6024`)."
msgstr ""
"Пользовательские функции теперь могут возвращать в SQL результат типа "
"VARBINARY (:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, "
":tarantool-release:`2.10.0-beta1`, :tarantool-issue:`6024`)."

msgid ""
"Fixed assert when a DOUBLE value greater than -1.0 and less than 0.0 is cast"
" to INTEGER and UNSIGNED (:tarantool-release:`2.8.2`, :tarantool-"
"release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`6225`)."
msgstr ""
"Устранен сбой, возникавший, когда значение типа DOUBLE больше -1.0 и меньше "
"0.0 приводилось к типу INTEGER или UNSIGNED (:tarantool-release:`2.8.2`, "
":tarantool-release:`2.7.3`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`6225`)."

msgid ""
"Removed spontaneous conversion from INTEGER to DOUBLE in a field of the "
"NUMBER type (:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, "
":tarantool-release:`2.10.0-beta1`, :tarantool-issue:`5335`)."
msgstr ""
"Устранено самопроизвольное преобразование из INTEGER в DOUBLE в поле типа "
"NUMBER (:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`5335`)."

msgid ""
"All arithmetic operations can now accept numeric values only (:tarantool-"
"release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`5756`)."
msgstr ""
"Все арифметические операции теперь принимают только числовые значения "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.7.3`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`5756`)."

msgid ""
"Now ``QUOTE()`` returns the argument if the argument is DOUBLE, which is the"
" same behavior as with other numeric types. For types different from "
"numeric, the function returns a STRING (:tarantool-release:`2.10.0-beta1`, "
":tarantool-issue:`6239`)."
msgstr ""
"Теперь функция ``QUOTE()`` возвращает свой аргумент, если его тип --- "
"``DOUBLE``. Это соответствует ее поведению для других числовых типов. Для "
"нечисловых типов функция возвращает результат типа ``STRING`` (:tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6239`)."

msgid ""
"The ``TRIM()`` function now does not lose collation when executed with the "
"keywords BOTH, LEADING, or TRAILING (:tarantool-release:`2.10.0-beta1`, "
":tarantool-issue:`6299`)."
msgstr ""
"Функция ``TRIM()`` теперь не теряет настройки сравнения символов, когда "
"выполняется с ключевыми словами ``BOTH``, ``LEADING`` или ``TRAILING`` "
"(:tarantool-release:`2.10.0-beta1`, :tarantool-issue:`6299`)."

msgid "MVCC"
msgstr "MVCC"

msgid ""
"Fixed MVCC interaction with ephemeral spaces: TX manager now ignores them "
"(:tarantool-release:`2.8.2`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`6095`)."
msgstr ""
"Исправлена ошибка, возникавшая во время исполнения SQL-запроса при "
"включенном механизме MVCC (:tarantool-release:`2.8.2`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6095`)."

msgid ""
"Fixed loss of tuples after a conflict exception (:tarantool-release:`2.8.2`,"
" :tarantool-release:`2.10.0-beta1`, :tarantool-issue:`6132`)."
msgstr ""
"После конфликта кортежи больше не теряются (:tarantool-release:`2.8.2`, "
":tarantool-release:`2.10.0-beta1`, :tarantool-issue:`6132`)."

msgid ""
"Fixed a segfault during update/delete of the same tuple (:tarantool-"
"release:`2.8.2`, :tarantool-release:`2.10.0-beta1`, :tarantool-"
"issue:`6021`)."
msgstr ""
"Исправлена ошибка сегментации, возникавшая при обновлении/удалении одного и "
"того же кортежа (:tarantool-release:`2.8.2`, :tarantool-"
"release:`2.10.0-beta1`, :tarantool-issue:`6021`)."
