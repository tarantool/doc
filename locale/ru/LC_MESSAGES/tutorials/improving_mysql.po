
msgid "Improving MySQL with Tarantool"
msgstr "Улучшаем работу MySQL с помощью Tarantool"

msgid ""
"Replicating MySQL is one of the Tarantool’s killer functions. It allows you "
"to keep your existing MySQL database while at the same time accelerating it "
"and scaling it out horizontally. Even if you aren’t interested in extensive "
"expansion, simply replacing existing replicas with Tarantool can save you "
"money, because Tarantool is more efficient per core than MySQL. To read a "
"testimonial of a company that implemented Tarantool replication on a large "
"scale, please see `here <https://dzone.com/articles/next-level-mysql-"
"performance-tarantool-as-a-replic>`_."
msgstr ""
"MySQL-репликация — это одна из важнейших функций Tarantool. Она позволяет "
"ускорить работу с существующей базой данных MySQL, а также значительно "
"расширить базу за счет горизонтального масштабирования. Даже если вы не "
"заинтересованы в расширении, сама замена существующих реплик на Tarantool "
"может сэкономить вам деньги, потому что Tarantool более эффективно работает "
"с ядром, чем MySQL. Отзыв компании, которая широко использует репликацию в "
"Tarantool, можно прочитать `здесь <https://dzone.com/articles/next-level-"
"mysql-performance-tarantool-as-a-replic>`_."

msgid "Notes:"
msgstr "Примечания:"

msgid ""
"if you run into any trouble with regards to the basics of Tarantool, you may"
" wish to consult the :ref:`Getting started guide <getting_started_db>` or "
"the :ref:`Data model description <box_data_model>`."
msgstr ""
"если вы столкнетесь с какими-либо проблемами в отношении основ работы с "
"Tarantool, то можете обратиться к :ref:`руководству для начинающих "
"<getting_started_db>` или :ref:`описанию модели данных <box_data_model>`."

msgid ""
"these instructions are for **CentOS 7.5** and **MySQL 5.7**. They also "
"assume that you have systemd installed and are working with an existing "
"MySQL installation."
msgstr ""
"приведенные ниже инструкции относятся к **CentOS 7.5** и **MySQL 5.7**. "
"Также предполагается, что у вас установлен модуль systemd и вы работаете с "
"существующей MySQL-установкой."

msgid ""
"a helpful log for troubleshooting during this tutorial is "
"``replicatord.log`` in ``/var/log``. You can also have a look at the "
"instance’s log ``example.log`` in ``/var/log/tarantool``."
msgstr ""
"во время выполнения практикума вам может пригодиться журнал для устранения "
"неполадок ``replicatord.log``, который находится в ``/var/log``. Также "
"обратите внимание на журнал экземпляра ``example.log`` в "
"``/var/log/tarantool``."

msgid "So let’s proceed."
msgstr "Итак, начнем."

msgid "First we’ll install the necessary packages in CentOS:"
msgstr "Для начала установим необходимые пакеты для CentOS:"

msgid ""
"yum -y install git ncurses-devel cmake gcc-c++ boost boost-devel wget unzip "
"nano bzip2 mysql-devel mysql-lib"
msgstr ""

msgid "Next we’ll clone the Tarantool-MySQL replication package from GitHub:"
msgstr "Затем клонируем пакет репликации Tarantool-MySQL из GitHub:"

msgid "git clone https://github.com/tarantool/mysql-tarantool-replication.git"
msgstr ""

msgid "Now we can build the replicator with cmake:"
msgstr "Сейчас мы можем собрать репликатор с помощью cmake:"

msgid ""
"cd mysql-tarantool-replication\n"
"git submodule update --init --recursive\n"
"cmake .\n"
"make"
msgstr ""

msgid ""
"Our replicator will run as a systemd daemon called replicatord, so let’s "
"edit its systemd service file, ``replicatord.service``, in the mysql-"
"tarantool-replication repo."
msgstr ""
"Репликатор будет работать в виде демона systemd под названием replicatord, "
"поэтому давайте отредактируем его служебный файл systemd, а именно "
"``replicatord.service``, в репозитории"

msgid "nano replicatord.service"
msgstr ""

msgid "Change the following line:"
msgstr "Измените следующую строку:"

msgid ""
"ExecStart=/usr/local/sbin/replicatord -c /usr/local/etc/replicatord.cfg"
msgstr ""

msgid "Replace the ``.cfg`` extension with ``.yml``:"
msgstr "Замените расширение ``.cfg`` на ``.yml``:"

msgid ""
"ExecStart=/usr/local/sbin/replicatord -c /usr/local/etc/replicatord.yml"
msgstr ""

msgid ""
"Next let’s copy some files from our replicatord repo to other necessary "
"locations:"
msgstr ""
"Затем скопируем некоторые файлы из репозитория replicatord в другие места:"

msgid ""
"cp replicatord /usr/local/sbin/replicatord\n"
"cp replicatord.service /etc/systemd/system"
msgstr ""

msgid ""
"Now let’s enter the MySQL console and create a sample database (depending on"
" your existing installation, you may of course be a user other than root):"
msgstr ""
"Сейчас откроем консоль MySQL и создадим пример базы данных (в зависимости от"
" текущих настроек, разумеется, вы можете не быть пользователем root):"

msgid ""
"mysql -u root -p\n"
"CREATE DATABASE menagerie;\n"
"QUIT"
msgstr ""

msgid ""
"Next we’ll get some sample data from MySQL, which we’ll pull into our root "
"directory, then install from the terminal:"
msgstr ""
"Далее получим образец данных из MySQL, которые поместим в корневую "
"директорию, а затем установим из терминала:"

msgid ""
"cd\n"
"wget http://downloads.mysql.com/docs/menagerie-db.zip\n"
"unzip menagerie-db.zip\n"
"cd menagerie-db\n"
"mysql -u root -p menagerie < cr_pet_tbl.sql\n"
"mysql -u root -p menagerie < load_pet_tbl.sql\n"
"mysql menagerie -u root -p < ins_puff_rec.sql\n"
"mysql menagerie -u root -p < cr_event_tbl.sql"
msgstr ""

msgid ""
"Let’s enter the MySQL console now and massage the data for use with the "
"Tarantool replicator (we are adding an ID, changing a field name to avoid "
"conflict, and cutting down the number of fields; note that with real data, "
"this is the step that will involve the most tweaking):"
msgstr ""
"Откроем MySQL-консоль и обработаем данные для использования с репликатором "
"Tarantool (добавляем идентификатор, меняем имя поля во избежание конфликта"
" и сокращаем количество полей; обратите внимание, что для реальных данных "
"этот шаг потребует большого количества настроек):"

msgid ""
"mysql -u root -p\n"
"USE menagerie;\n"
"ALTER TABLE pet ADD id INT PRIMARY KEY AUTO_INCREMENT FIRST;\n"
"ALTER TABLE pet CHANGE COLUMN 'name' 'name2' VARCHAR(255);\n"
"ALTER TABLE pet DROP sex, DROP birth, DROP death;\n"
"QUIT"
msgstr ""

msgid ""
"Now that we have the sample data set up, we’ll need to edit MySQL’s "
"configuration file for use with the replicator."
msgstr ""
"Сейчас образец данных готов, и нам необходимо отредактировать "
"конфигурационный файл MySQL для использования с репликатором."

msgid ""
"cd\n"
"nano /etc/my.cnf"
msgstr ""

msgid ""
"Note that your ``my.cnf`` for MySQL could be in a slightly different "
"location. Set:"
msgstr ""
"Обратите внимание, что ваш ``my.cnf`` для MySQL может находиться в другом "
"месте. Задайте:"

msgid ""
"[mysqld]\n"
"binlog_format = ROW\n"
"server_id = 1\n"
"log-bin = mysql-bin\n"
"interactive_timeout = 3600\n"
"wait_timeout = 3600\n"
"max_allowed_packet = 32M\n"
"socket = /var/lib/mysql/mysql.sock\n"
"bind-address = 127.0.0.1\n"
"\n"
"[client]\n"
"socket = /var/lib/mysql/mysql.sock"
msgstr ""

msgid "After exiting nano, we’ll restart mysqld:"
msgstr "После выхода из nano, перезапустим mysqld:"

msgid "systemctl restart mysqld"
msgstr ""

msgid ""
"Next, let’s install Tarantool and set up spaces for replication. Go to the "
"`Download page <https://www.tarantool.io/en/download/os-installation/rhel-"
"centos/>`_ and follow the instructions there to install Tarantool."
msgstr ""
"Далее установим Tarantool и настроим спейсы для репликации. Перейдите на "
"`страницу загрузки <https://www.tarantool.io/en/download/os-"
"installation/rhel-centos/>`_ и установите Tarantool, следуя инструкциям."

msgid ""
"Now we will write a standard Tarantool program by editing the Lua example, "
"which comes with Tarantool:"
msgstr ""
"Сейчас напишем стандартную Tarantool-программу путем редактирования Lua-"
"примера, который поставляется вместе с Tarantool:"

msgid ""
"cd\n"
"nano /etc/tarantool/instances.available/example.lua"
msgstr ""

msgid "Replace the entire contents of the file with the following:"
msgstr "Полностью заменим содержимое файла следующим текстом:"

msgid ""
"box.cfg {\n"
"    listen = 3301;\n"
"    memtx_memory = 128 * 1024 * 1024; -- 128Mb\n"
"    memtx_min_tuple_size = 16;\n"
"    memtx_max_tuple_size = 128 * 1024 * 1024; -- 128Mb\n"
"    vinyl_memory = 128 * 1024 * 1024; -- 128Mb\n"
"    vinyl_cache = 128 * 1024 * 1024; -- 128Mb\n"
"    vinyl_max_tuple_size = 128 * 1024 * 1024; -- 128Mb\n"
"    vinyl_write_threads = 2;\n"
"    wal_mode = \"none\";\n"
"    wal_max_size = 256 * 1024 * 1024;\n"
"    checkpoint_interval = 60 * 60; -- one hour\n"
"    checkpoint_count = 6;\n"
"    force_recovery = true;\n"
"\n"
"     -- 1 – SYSERROR\n"
"     -- 2 – ERROR\n"
"     -- 3 – CRITICAL\n"
"     -- 4 – WARNING\n"
"     -- 5 – INFO\n"
"     -- 6 – VERBOSE\n"
"     -- 7 – DEBUG\n"
"     log_level = 7;\n"
"     too_long_threshold = 0.5;\n"
" }\n"
"\n"
"box.schema.user.grant('guest','read,write,execute','universe')\n"
"\n"
"local function bootstrap()\n"
"\n"
"    if not box.space.mysqldaemon then\n"
"        s = box.schema.space.create('mysqldaemon')\n"
"        s:create_index('primary',\n"
"        {type = 'tree', parts = {1, 'unsigned'}, if_not_exists = true})\n"
"    end\n"
"\n"
"    if not box.space.mysqldata then\n"
"        t = box.schema.space.create('mysqldata')\n"
"        t:create_index('primary',\n"
"        {type = 'tree', parts = {1, 'unsigned'}, if_not_exists = true})\n"
"    end\n"
"\n"
"end\n"
"\n"
"bootstrap()"
msgstr ""

msgid ""
"To understand more of what’s happening here, it would be best to have a look"
" back at the earlier `articles "
"<https://dzone.com/articles/tarantool-101-10-steps-for-absolute-beginners-"
"the>`_ in the Tarantool 101 series or use the :ref:`getting-started "
"<getting_started_db>` guide."
msgstr ""
"Чтобы понять, что здесь происходит, лучше всего обратиться к предыдущим "
"`статьям <https://dzone.com/articles/tarantool-101-10-steps-for-absolute-"
"beginners-the>`_ в серии Tarantool 101 или изучить наше :ref:`руководство "
"для начинающих <getting_started_db>`."

msgid ""
"Now we need to create a symlink from ``instances.available`` to a directory "
"named ``instances.enabled`` (similar to NGINX). So in ``/etc/tarantool`` run"
" the following:"
msgstr ""
"Сейчас необходимо создать символическую ссылку из ``instances.available`` "
"(доступные экземпляры) на директорию под названием ``instances.enabled`` "
"(активные экземпляры -- похоже на NGINX). В ``/etc/tarantool`` выполните "
"следующую команду:"

msgid ""
"mkdir instances.enabled\n"
"ln -s /instances.available/example.lua instances.enabled"
msgstr ""

msgid ""
"Next we can start up our Lua program with ``tarantoolctl``, a wrapper for "
"systemd:"
msgstr ""
"Далее мы можем запустить Lua-программу с помощью ``tarantoolctl`` "
"(надстройки для systemd):"

msgid "tarantoolctl start example.lua"
msgstr ""

msgid ""
"Now let’s enter our Tarantool instance, where we can check that our target "
"spaces were successfully created:"
msgstr ""
"Сейчас перейдем на наш экземпляр Tarantool, где можно проверить, что "
"необходимые спейсы были успешно созданы:"

msgid "tarantoolctl enter example.lua"
msgstr ""

msgid "tarantool> box.space._space:select()"
msgstr ""

msgid ""
"At the bottom you will see \"mysqldaemon\" and \"mysqldata\" spaces. Then "
"exit with \"CTRL+C\"."
msgstr ""
"В самом низу вы увидите спейсы \"mysqldaemon\" и \"mysqldata\". Затем "
"выйдите с помощью \"CTRL+C\"."

msgid ""
"Now that we have MySQL and Tarantool set up, we can proceed to configure our"
" replicator. First let’s work with ``replicatord.yml`` in the main "
"``tarantool-mysql-replication`` directory."
msgstr ""
"Сейчас, после настройки MySQL и Tarantool, можно перейти к конфигурации "
"репликатора. Для начала поработаем с ``replicator.yml`` в основной "
"директории ``tarantool-mysql-replication``:"

msgid "nano replicatord.yml"
msgstr ""

msgid ""
"Change the entire file as follows, making sure to add your MySQL password "
"and to set the appropriate user:"
msgstr ""
"Полностью замените содержимое файла на следующее, убедившись, что вы "
"добавили свой пароль для MySQL и указали правильного пользователя:"

msgid ""
"mysql:\n"
"    host: 127.0.0.1\n"
"    port: 3306\n"
"    user: root\n"
"    password:\n"
"    connect_retry: 15 # seconds\n"
"\n"
"tarantool:\n"
"    host: 127.0.0.1:3301\n"
"    binlog_pos_space: 512\n"
"    binlog_pos_key: 0\n"
"    connect_retry: 15 # seconds\n"
"    sync_retry: 1000 # milliseconds\n"
"\n"
"mappings:\n"
"    - database: menagerie\n"
"      table: pet\n"
"      columns: [ id, name2, owner, species ]\n"
"      space: 513\n"
"      key_fields:  [ 0 ]\n"
"      # insert_call: function_name\n"
"      # update_call: function_name\n"
"      # delete_call: function_name"
msgstr ""

msgid ""
"Now we need to copy replicatord.yml to the location where systemd looks for "
"it:"
msgstr ""
"Сейчас необходимо скопировать replicatord.yml в место, где systemd будет "
"искать его:"

msgid "cp replicatord.yml /usr/local/etc/replicatord.yml"
msgstr ""

msgid "Next we can start up the replicator:"
msgstr "Теперь запустим репликатор:"

msgid "systemctl start replicatord"
msgstr ""

msgid ""
"Now we can enter our Tarantool instance and do a select on the “mysqldata” "
"space. We will see the replicated content from MySQL:"
msgstr ""
"Сейчас мы можем перейти на экземпляр Tarantool и выполнить выборку из "
"спейса “mysqldata”. Увидим реплицируемые данные из MySQL:"

msgid ""
"tarantool> box.space.mysqldata:select()\n"
"---\n"
"- - [1, 'Fluffy', 'Harold', 'cat']\n"
"  - [2, 'Claws', 'Gwen', 'cat']\n"
"  - [3, 'Buffy', 'Harold', 'dog']\n"
"  - [4, 'Fang', 'Benny', 'dog']\n"
"  - [5, 'Bowser', 'Diane', 'dog']\n"
"  - [6, 'Chirpy', 'Gwen', 'bird']\n"
"  - [7, 'Whistler', 'Gwen', 'bird']\n"
"  - [8, 'Slim', 'Benny', 'snake']\n"
"  - [9, 'Puffball', 'Diane', 'hamster']"
msgstr ""

msgid ""
"Finally let’s enter a record into MySQL and then go back to Tarantool to "
"make sure it’s replicated. So first we’ll exit our Tarantool instance with "
"``CTRL-C``, and then say:"
msgstr ""
"Наконец, внесем запись в MySQL, а затем вернемся в Tarantool, чтобы "
"убедиться, что она реплицирована. Итак, сначала выйдем из экземпляра "
"Tarantool  с помощью ``CTRL-C``, а затем введем:"

msgid ""
"mysql -u root -p\n"
"USE menagerie;\n"
"INSERT INTO pet(name2, owner, species) VALUES ('Spot', 'Brad', 'dog');\n"
"QUIT"
msgstr ""

msgid "Once back in the terminal enter:"
msgstr "Вернувшись в терминал, введите:"

msgid "tarantool> box.space.mysqldata:select()"
msgstr ""

msgid "You should see the replicated data in Tarantool!"
msgstr "Вы увидите реплицируемые данные в Tarantool!"
